.zig-zag-box {
  --s: 18px; /* control the size of the spikes */
  --w: 350px; /* preferred image width */

  width: round(var(--w), 4 * var(--s));
  aspect-ratio: 1;
  object-fit: cover;
  padding: calc(2 * var(--s));
  box-sizing: border-box;
  background: #0b486b;
  background-repeat: no-repeat;
  --_m: #0000 0 calc(2 * atan(0.5)), #000 0 50%;
  mask:
    repeating-conic-gradient(from atan(2) at 50% var(--s), var(--_m))
      calc(2 * var(--s)) calc(-1 * var(--s)) / calc(4 * var(--s)) 100% intersect,
    repeating-conic-gradient(from atan(-0.5) at var(--s), var(--_m))
      calc(-1 * var(--s)) calc(2 * var(--s)) / 100% calc(4 * var(--s));
}

.zig-zag-box-v1 {
  --s: 60px; /* control the size of the spikes */
  --w: 350px; /* preferred image width */

  width: round(var(--w), var(--s));
  aspect-ratio: 1;
  object-fit: cover;
  padding: calc(0.75 * var(--s));
  box-sizing: border-box;
  background: #0b486b;
  mask:
    conic-gradient(#000 0 0) 50% / calc(100% - var(--s)) calc(100% - var(--s))
      no-repeat,
    repeating-conic-gradient(
        from 45deg,
        #0000 0,
        #000 1deg 89deg,
        #0000 25% 50%
      )
      calc(var(--s) / 2) 0 / var(--s) var(--s);
}

/* progress */

@property --x {
  syntax: "<integer>";
  inherits: true;
  initial-value: 100;
}
@property --y {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}
progress {
  width: 200px;
  height: 40px;
  appearance: none;
  position: relative;
  animation:
    x linear,
    y 2s 0.5s both;
  animation-timeline: --progress, auto;
  timeline-scope: --progress;
  animation-range: entry 100% exit 100%;
  --_c: color-mix(in hsl, #e80e0d, #7ab317 calc(1% * var(--x)));
}

@keyframes x {
  to {
    --x: 0;
  }
}
@keyframes y {
  0% {
    --y: 0;
  }
}
progress::-webkit-progress-bar {
  overflow: auto;
}
progress::-webkit-progress-value {
  anchor-name: --progress;
  view-timeline: --progress inline;
  background: conic-gradient(var(--_c) 0 0) 0 / calc(var(--y) * 100%) 100%
    no-repeat;
}
progress::before {
  --b: 1em; /* triangle base */
  --h: 0.5em; /* triangle height */

  position: absolute;
  position-anchor: --progress;
  position-area: top center;
  justify-self: unsafe start;
  left: calc(100% * var(--y));
  translate: -50% calc(-1.2 * var(--h));
  transform-origin: 50% calc(100% + var(--h));
  content: counter(val) "%";
  counter-reset: val calc(var(--y) * var(--x));
  font-weight: 900;
  font-size: 1.5em;
  text-align: center;
  white-space: nowrap;
  padding: 0.5em;
  border-radius: 0.3em;
  clip-path: polygon(
    0 100%,
    0 0,
    100% 0,
    100% 100%,
    calc(50% + var(--b) / 2) 100%,
    50% calc(100% + var(--h)),
    calc(50% - var(--b) / 2) 100%
  );
  background: var(--_c);
  border-image: conic-gradient(var(--_c) 0 0) fill 0/ 0 calc(
      50% - var(--b) / 2
    ) / 0 0 var(--h) 0;
  animation: rotate 2s 0.5s both cubic-bezier(0.18, 0.4, 0.8, 1.9);
}
@keyframes rotate {
  50% {
    rotate: calc(var(--x) * var(--_i, -0.2deg));
  }
}

progress.bottom::before {
  position-area: bottom center;
  translate: -50% calc(1.2 * var(--h));
  transform-origin: 50% calc(-1 * var(--h));
  --_i: 0.2deg;
  clip-path: polygon(
    0 0,
    0 100%,
    100% 100%,
    100% 0,
    calc(50% + var(--b) / 2) 0,
    50% calc(-1 * var(--h)),
    calc(50% - var(--b) / 2) 0
  );
  border-image: conic-gradient(var(--_c) 0 0) fill 0/ 0 calc(
      50% - var(--b) / 2
    ) / var(--h) 0 0 0;
}
