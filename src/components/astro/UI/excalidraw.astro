---
const { file, style, className } = Astro.props;
---

<style is:inline>
  .container {
    max-width: 100%;
    height: 100vh;
    max-height: 100vh;
    margin: 0;
    padding: 0;
    position: relative;
  }
  .loading {
    position: absolute;
    width: 100vw;
    height: 100vh;
    left: 0;
    top: 0;
    background-color: rgba(0, 0, 0, 0.8);
    display: grid;
    place-items: center;
    font-size: 5em;
    color: rosybrown;
  }
</style>

<div class={"container " + className + " " + file} style={style}>
  <div id={"app"}></div>
  <div class="loading">加载中...</div>
</div>

<script defer src="https://unpkg.com/react@18.2.0/umd/react.development.js"
></script>
<script
  defer
  src="https://unpkg.com/react-dom@18.2.0/umd/react-dom.development.js"
></script>

<script
  defer
  type="text/javascript"
  src="https://unpkg.com/@excalidraw/excalidraw/dist/excalidraw.development.js"
></script>

<script is:inline defer define:vars={{ file }}>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelector("." + file + " .loading").style.display = "none";
    let resFile = file || localStorage.getItem("excalidraw") || "ffmpeg";

    fetch(`/assets/excalidraw/${resFile}.json`).then(res => {
      res.json().then(data => {
        const { convertToExcalidrawElements, Excalidraw, loadLibraryFromBlob } =
          ExcalidrawLib;
        if (!data.elements) return;
        const elements = convertToExcalidrawElements(
          data.elements.filter(item => !item.isDeleted)
        );

        initApp(elements, Excalidraw, data);
      });
    });

    const initApp = (elements, Excalidraw, data) => {
      const App = () => {
        return React.createElement(
          React.Fragment,
          null,
          React.createElement(
            "div",
            {
              style: { height: "100vh" },
            },
            React.createElement(Excalidraw, {
              initialData: {
                elements,
                appState: {
                  ...data.appState,
                },
                scrollToContent: true,
              },
            })
          )
        );
      };

      const excalidrawWrapper = document.querySelector("." + file + " #app");

      excalidrawWrapper.addEventListener("wheel", e => {
        e.stopPropagation();
      });

      const root = ReactDOM.createRoot(excalidrawWrapper);
      root.render(React.createElement(App));
    };
  });
</script>
