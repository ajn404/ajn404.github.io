---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Footer from "@components/astro/UI/Footer.astro";
import LinkButton from "@components/astro/UI/LinkButton.astro";
import Hr from "@components/astro/UI/Hr.astro";
import Card from "@components/react/UI/Card";
import Socials from "@components/astro/UI/Socials.astro";
import getSortedPosts from "@utils/getSortedPosts";
import slugify from "@utils/slugify";
import { SOCIALS } from "@config";
import TextAnimation from "@components/react/d3/textAnimation.tsx";
import Header from "@components/astro/UI/Header.astro";

const posts = await getCollection("blog");
const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
const socialCount = SOCIALS.filter(social => social.active).length;
---

<style is:inline>
  #overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    transition: opacity 0.5s ease;
  }

  #progress {
    width: 0;
    height: 5px;
    background: #fff;
    transition: width 0.5s ease;
  }

  #main-content {
    display: none; /* 初始隐藏内容 */
  }
</style>

<Layout>
  <div id="overlay">
    <div id="progress"></div>
    <div>loading...</div>
  </div>
  <main id="main-content">
    <section id="hero">
      <h1>
        今日方知我为
        <a
          class="inline-block skew-x-12 xing-cao text-skin-gray-light"
          target="_blank"
          href="https://github.com/ajn404">我</a
        >
      </h1>
      <a
        target="_blank"
        href="rss.xml"
        class="rss-link"
        aria-label="rss feed"
        title="RSS Feed"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="rss-icon small-svg">
          <path
            d="M19 20.001C19 11.729 12.271 5 4 5v2c7.168 0 13 5.832 13 13.001h2z"
          ></path>
          <path
            d="M12 20.001h2C14 14.486 9.514 10 4 10v2c4.411 0 8 3.589 8 8.001z"
          ></path>
          <circle cx="6" cy="18" r="2"></circle>
        </svg>
      </a>

      <p>
        记录(<a
          title="何谓下学"
          href="/posts/good-first-blog#%E4%B8%8B%E5%AD%A6"
          class="cursor-pointer">下学</a
        >)个人成长以及知识仓库
        <br />
        <span class="text-sm opacity-50">
          穿插个人的一些技术探索, 奇奇
          <span
            class="cursor-not-allowed hover:scale-[2] relative inline-block bg-transparent"
            >🥸</span
          >
          怪怪
          <span
            class="cursor-not-allowed hover:scale-[2] relative inline-block bg-transparent"
            >🧠</span
          >
          , 可可
          <span
            class="cursor-not-allowed hover:scale-[2] relative inline-block bg-transparent"
            >☄️</span
          >
          爱爱
          <span
            class="cursor-not-allowed hover:scale-[2] relative inline-block bg-transparent"
            >☃️</span
          >
        </span>
      </p>

      {
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="social-links">社交账号:</div>
            <Socials />
          </div>
        )
      }
    </section>
    <Hr />

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>feature</h2>
            <section class="hero-section">
              <div class="card-grid">
                {featuredPosts.map(({ data }) => (
                  <Card
                    client:load
                    client:only="react"
                    href={`posts/${slugify(data)}`}
                    frontmatter={data}
                    secHeading={false}
                  />
                ))}
              </div>
            </section>
          </section>
          <Hr />
        </>
      )
    }

    <section id="recent-posts">
      <h2>最近的文章</h2>
      <section class="hero-section">
        <div class="card-grid">
          {
            sortedPosts
              .slice(0, 8)
              .map(({ data }) => (
                <Card
                  client:load
                  client:only="react"
                  href={`posts/${slugify(data)}`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))
          }
        </div>
      </section>
      <div class="all-posts-btn-wrapper">
        <LinkButton href="posts">
          所有文章
          <svg class="small-svg" xmlns="http://www.w3.org/2000/svg">
            <path
              d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
            ></path>
          </svg>
        </LinkButton>
      </div>
    </section>

    <Header home={true} />
  </main>
  <blockquote class="w-full text-center my-10 font-bold italic text-white">
    <p>
      "The WorldWideWeb (WWW) project aims to allow links to be made to any
      information anywhere."
    </p>
    <cite class="text-sm text-right">
      <a
        target="_blank"
        href="https://www.w3.org/People/Berners-Lee/1991/08/art-6484.txt"
        >Tim Berners-Lee, 1991</a
      >
    </cite>
  </blockquote>
  <Footer />
  <TextAnimation
    text="下学blog made by ajn404"
    stroke="white"
    className="xing-cao absolute -z-10 right-0 opacity-5 text-animation  md:opacity-10"
    client:load
  />
</Layout>

<style>
  #hero {
    @apply pb-6 pt-8;
    transform-style: preserve-3d;
    transform: translateZ(-500px) rotateY(10deg); /* 将背景图向后移动并旋转 */
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
</style>

<script is:inline>
  const overlay = document.getElementById("overlay");
  const progress = document.getElementById("progress");
  const content = document.getElementById("main-content");

  let loadedImages = 0;
  let totalImages = document.images.length;
  const backgroundImages = [];

  // Collect all elements with a background image
  document.querySelectorAll("*").forEach(el => {
    const bgImage = window.getComputedStyle(el).backgroundImage;
    if (bgImage && bgImage !== "none") {
      // Extract the URL from the background-image property
      const urlMatch = bgImage.match(/url\(["']?([^"')]+)["']?\)/);
      if (urlMatch && urlMatch[1]) {
        backgroundImages.push(urlMatch[1]);
      }
    }
  });

  totalImages += backgroundImages.length; // Include background images in the total

  if (totalImages === 0) {
    doneLoading();
  } else {
    // Load standard <img> elements
    for (let img of document.images) {
      img.onload = img.onerror = updateProgress;
    }

    // Load background images
    backgroundImages.forEach(url => {
      const img = new Image();
      img.src = url;
      img.onload = img.onerror = updateProgress;
    });
  }

  function updateProgress() {
    loadedImages++;
    const percentage = Math.floor((loadedImages / totalImages) * 100);
    progress.style.width = percentage + "%";
    if (loadedImages === totalImages) {
      doneLoading();
    }
  }

  function doneLoading() {
    overlay.style.opacity = 0;
    setTimeout(() => {
      overlay.style.display = "none";
      content.style.display = "block"; // Show content
    }, 500);
  }

  // Show content after the DOM is fully loaded (optional safeguard)
  document.addEventListener("DOMContentLoaded", () => {
    content.style.display = "block"; // Show content
  });
</script>
