---
const { file } = Astro.props;
---

<!doctype html>
<html>
  <head>
    <title>Excalidraw in browser</title>
    <meta charset="UTF-8" />
    <style>
      body {
        width: 100vw;
      }
      .container {
        max-width: 100%;
        height: 100vh;
        max-height: 100vh;
        margin: 0;
        padding: 0;
      }
      .loading {
        position: absolute;
        width: 100vw;
        height: 100vh;
        left: 0;
        top: 0;
        background-color: rgba(0, 0, 0, 0.8);
        display: grid;
        place-items: center;
        font-size: 5em;
        color: rosybrown;
      }
    </style>
  </head>

  <body>
    <div class="container">
      <div id="app"></div>
      <div class="loading">加载中...</div>
    </div>
  </body>
</html>

<script defer src="/assets/cdn/react.development.js"></script>
<script defer src="/assets/cdn/react-dom.development.js"></script>

<script defer type="text/javascript" src="/assets/cdn/excalidraw.development.js"
></script>
<script is:inline defer define:vars={{ file }}>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelector(".loading").style.display = "none";
    let resFile = file || localStorage.getItem("excalidraw") || "ffmpeg";

    fetch(`/assets/excalidraw/${resFile}.json`).then(res => {
      res.json().then(data => {
        const { convertToExcalidrawElements, Excalidraw, loadLibraryFromBlob } =
          ExcalidrawLib;
        if (!data.elements) return;
        const elements = convertToExcalidrawElements(
          data.elements.filter(item => !item.isDeleted)
        );

        initApp(elements, Excalidraw, data);
      });
    });

    const initApp = (elements, Excalidraw, data) => {
      const App = () => {
        return React.createElement(
          React.Fragment,
          null,
          React.createElement(
            "div",
            {
              style: { height: "100vh" },
            },
            React.createElement(Excalidraw, {
              initialData: {
                elements,
                appState: {
                  ...data.appState,
                  viewModeEnabled:true
                },
                scrollToContent: true,
              },
            })
          )
        );
      };

      const excalidrawWrapper = document.getElementById("app");
      const root = ReactDOM.createRoot(excalidrawWrapper);
      root.render(React.createElement(App));
    };
  });
</script>
