{"version":3,"mappings":";6jBAUA,MAAMA,EAAyC,CAAC,CAC9C,aAAAC,EAAe,GACf,SAAAC,CACF,IAAM,CACE,MAAAC,EAAWC,SAAyB,IAAI,EACxCC,EAAYD,SAAY,IAAI,EAE5BE,EAAc,CAClB,CAAE,MAAO,QAAS,MAAO,SAAU,EACnC,CAAE,MAAO,aAAc,MAAO,SAAU,EACxC,CAAE,MAAO,aAAc,MAAO,SAAU,EACxC,CAAE,MAAO,UAAW,MAAO,SAAU,CACvC,EAEAC,YAAU,MACW,SAAY,CAE7B,KAAM,CAACC,CAAY,EAAI,MAAM,QAAQ,IAAI,CACvCC,EAAA,WAAO,0BAAgB,MAAAA,EAAA,IACvB,mBAAuC,uBACxC,EAEKC,EAASF,EAAa,QAE5B,GAAIL,EAAS,QAAS,CACpB,MAAMQ,EAAW,CACf,UAAWL,EACX,QAAS,GACT,SAAU,CACR,SAAU,GACV,UAAW,gBACX,QAAS,EACT,cAAe,EACjB,EACA,UAAW,CACT,IAAMM,GAAmB,CACvB,QAAQ,IAAI,QAASA,EAAE,OAAO,IAAI,EACrBC,EAAA,CACf,EACA,OAASD,GAAmB,CAC1B,QAAQ,IAAI,QAASA,EAAE,OAAO,IAAI,EACrBC,EAAA,EAEjB,EACA,aAAeC,GAAiB,CACtBA,EAAA,MAAQA,EAAQ,MAAM,YAAY,CAC5C,EACA,SAAWC,GACOA,EAAI,MAAM,QAAU,EAI7B,GAFE,YAIb,EAEAV,EAAU,QAAU,IAAIK,EAAOP,EAAS,QAASQ,CAAQ,EAErDV,GACQI,EAAA,QAAQ,QAAQJ,CAAY,CACxC,CAEJ,GAEW,EAEJ,IAAM,CACPI,EAAU,SACZA,EAAU,QAAQ,QAAQ,CAE9B,GACC,CAACJ,CAAY,CAAC,EAEjB,MAAMY,EAAe,IAAM,CACrBR,EAAU,SAAWH,GACdA,EAAAG,EAAU,QAAQ,KAAK,CAEpC,EAEA,aACG,MACC,UAAAW,EAAA,IAAC,SACC,IAAKb,EACL,KAAK,OACL,UAAU,WACV,YAAY,YAEhB,CAEJ","names":["TagifyComponent","initialValue","onChange","inputRef","useRef","tagifyRef","suggestions","useEffect","TagifyModule","__vitePreload","Tagify","settings","e","updateParent","tagData","tag","jsx"],"ignoreList":[],"sources":["../../src/components/react/little/tagify.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n// 删除静态导入\n// import Tagify from '@yaireo/tagify';\n// import '@yaireo/tagify/dist/tagify.css';\n\ninterface TagifyProps {\n  initialValue?: string;\n  onChange?: (values: Array<{ value: string }>) => void;\n}\n\nconst TagifyComponent: React.FC<TagifyProps> = ({\n  initialValue = \"\",\n  onChange,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const tagifyRef = useRef<any>(null);\n\n  const suggestions = [\n    { value: \"React\", color: \"#61dafb\" },\n    { value: \"TypeScript\", color: \"#3178c6\" },\n    { value: \"JavaScript\", color: \"#f7df1e\" },\n    { value: \"Node.js\", color: \"#339933\" },\n  ];\n\n  useEffect(() => {\n    const initTagify = async () => {\n      // 动态导入 Tagify\n      const [TagifyModule] = await Promise.all([\n        import(\"@yaireo/tagify\"),\n        import(\"@yaireo/tagify/dist/tagify.css\"),\n      ]);\n\n      const Tagify = TagifyModule.default;\n\n      if (inputRef.current) {\n        const settings = {\n          whitelist: suggestions,\n          maxTags: 10,\n          dropdown: {\n            maxItems: 20,\n            classname: \"tags-dropdown\",\n            enabled: 0,\n            closeOnSelect: false,\n          },\n          callbacks: {\n            add: (e: CustomEvent) => {\n              console.log(\"添加标签:\", e.detail.data);\n              updateParent();\n            },\n            remove: (e: CustomEvent) => {\n              console.log(\"移除标签:\", e.detail.data);\n              updateParent();\n            },\n          },\n          transformTag: (tagData: any) => {\n            tagData.value = tagData.value.toLowerCase();\n          },\n          validate: (tag: any) => {\n            const isValid = tag.value.length >= 2;\n            if (!isValid) {\n              return \"标签至少需要2个字符\";\n            }\n            return true;\n          },\n        };\n\n        tagifyRef.current = new Tagify(inputRef.current, settings);\n\n        if (initialValue) {\n          tagifyRef.current.addTags(initialValue);\n        }\n      }\n    };\n\n    initTagify();\n\n    return () => {\n      if (tagifyRef.current) {\n        tagifyRef.current.destroy();\n      }\n    };\n  }, [initialValue]);\n\n  const updateParent = () => {\n    if (tagifyRef.current && onChange) {\n      onChange(tagifyRef.current.value);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        className=\"bg-white\"\n        placeholder=\"输入标签...\"\n      />\n    </div>\n  );\n};\n\nexport default TagifyComponent;\n"],"file":"static/tagify.ygCwM4LQ.js"}