{"version":3,"file":"StripeMaterialProperty.LTj2XqD1.js","sources":["../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/StripeOrientation.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/StripeMaterialProperty.js"],"sourcesContent":["/**\n * Defined the orientation of stripes in {@link StripeMaterialProperty}.\n *\n * @enum {number}\n */\nconst StripeOrientation = {\n  /**\n   * Horizontal orientation.\n   * @type {number}\n   */\n  HORIZONTAL: 0,\n\n  /**\n   * Vertical orientation.\n   * @type {number}\n   */\n  VERTICAL: 1,\n};\nexport default Object.freeze(StripeOrientation);\n","import Color from \"../Core/Color.js\";\nimport Frozen from \"../Core/Frozen.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\nimport StripeOrientation from \"./StripeOrientation.js\";\n\nconst defaultOrientation = StripeOrientation.HORIZONTAL;\nconst defaultEvenColor = Color.WHITE;\nconst defaultOddColor = Color.BLACK;\nconst defaultOffset = 0;\nconst defaultRepeat = 1;\n\n/**\n * A {@link MaterialProperty} that maps to stripe {@link Material} uniforms.\n * @alias StripeMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|StripeOrientation} [options.orientation=StripeOrientation.HORIZONTAL] A Property specifying the {@link StripeOrientation}.\n * @param {Property|Color} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n * @param {Property|Color} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n * @param {Property|number} [options.offset=0] A numeric Property specifying how far into the pattern to start the material.\n * @param {Property|number} [options.repeat=1] A numeric Property specifying how many times the stripes repeat.\n */\nfunction StripeMaterialProperty(options) {\n  options = options ?? Frozen.EMPTY_OBJECT;\n\n  this._definitionChanged = new Event();\n  this._orientation = undefined;\n  this._orientationSubscription = undefined;\n  this._evenColor = undefined;\n  this._evenColorSubscription = undefined;\n  this._oddColor = undefined;\n  this._oddColorSubscription = undefined;\n  this._offset = undefined;\n  this._offsetSubscription = undefined;\n  this._repeat = undefined;\n  this._repeatSubscription = undefined;\n\n  this.orientation = options.orientation;\n  this.evenColor = options.evenColor;\n  this.oddColor = options.oddColor;\n  this.offset = options.offset;\n  this.repeat = options.repeat;\n}\n\nObject.defineProperties(StripeMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof StripeMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._orientation) && //\n        Property.isConstant(this._evenColor) && //\n        Property.isConstant(this._oddColor) && //\n        Property.isConstant(this._offset) && //\n        Property.isConstant(this._repeat)\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof StripeMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the Property specifying the {@link StripeOrientation}/\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default StripeOrientation.HORIZONTAL\n   */\n  orientation: createPropertyDescriptor(\"orientation\"),\n\n  /**\n   * Gets or sets the Property specifying the first {@link Color}.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  evenColor: createPropertyDescriptor(\"evenColor\"),\n\n  /**\n   * Gets or sets the Property specifying the second {@link Color}.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  oddColor: createPropertyDescriptor(\"oddColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the point into the pattern\n   * to begin drawing; with 0.0 being the beginning of the even color, 1.0 the beginning\n   * of the odd color, 2.0 being the even color again, and any multiple or fractional values\n   * being in between.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  offset: createPropertyDescriptor(\"offset\"),\n\n  /**\n   * Gets or sets the numeric Property specifying how many times the stripes repeat.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  repeat: createPropertyDescriptor(\"repeat\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nStripeMaterialProperty.prototype.getType = function (time) {\n  return \"Stripe\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nStripeMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.horizontal =\n    Property.getValueOrDefault(this._orientation, time, defaultOrientation) ===\n    StripeOrientation.HORIZONTAL;\n  result.evenColor = Property.getValueOrClonedDefault(\n    this._evenColor,\n    time,\n    defaultEvenColor,\n    result.evenColor,\n  );\n  result.oddColor = Property.getValueOrClonedDefault(\n    this._oddColor,\n    time,\n    defaultOddColor,\n    result.oddColor,\n  );\n  result.offset = Property.getValueOrDefault(this._offset, time, defaultOffset);\n  result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nStripeMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof StripeMaterialProperty && //\n      Property.equals(this._orientation, other._orientation) && //\n      Property.equals(this._evenColor, other._evenColor) && //\n      Property.equals(this._oddColor, other._oddColor) && //\n      Property.equals(this._offset, other._offset) && //\n      Property.equals(this._repeat, other._repeat))\n  );\n};\nexport default StripeMaterialProperty;\n"],"names":["StripeOrientation","StripeOrientation$1","defaultOrientation","defaultEvenColor","Color","defaultOddColor","defaultOffset","defaultRepeat","StripeMaterialProperty","options","Frozen","Event","Property","createPropertyDescriptor","time","timeScratch","JulianDate","result","defined","other"],"mappings":"waAKA,MAAMA,EAAoB,CAKxB,WAAY,EAMZ,SAAU,CACZ,EACAC,EAAe,OAAO,OAAOD,CAAiB,ECTxCE,EAAqBF,EAAkB,WACvCG,EAAmBC,EAAM,MACzBC,EAAkBD,EAAM,MACxBE,EAAgB,EAChBC,EAAgB,EActB,SAASC,EAAuBC,EAAS,CACvCA,EAAUA,GAAWC,EAAO,aAE5B,KAAK,mBAAqB,IAAIC,EAC9B,KAAK,aAAe,OACpB,KAAK,yBAA2B,OAChC,KAAK,WAAa,OAClB,KAAK,uBAAyB,OAC9B,KAAK,UAAY,OACjB,KAAK,sBAAwB,OAC7B,KAAK,QAAU,OACf,KAAK,oBAAsB,OAC3B,KAAK,QAAU,OACf,KAAK,oBAAsB,OAE3B,KAAK,YAAcF,EAAQ,YAC3B,KAAK,UAAYA,EAAQ,UACzB,KAAK,SAAWA,EAAQ,SACxB,KAAK,OAASA,EAAQ,OACtB,KAAK,OAASA,EAAQ,MACxB,CAEA,OAAO,iBAAiBD,EAAuB,UAAW,CASxD,WAAY,CACV,IAAK,UAAY,CACf,OACEI,EAAS,WAAW,KAAK,YAAY,GACrCA,EAAS,WAAW,KAAK,UAAU,GACnCA,EAAS,WAAW,KAAK,SAAS,GAClCA,EAAS,WAAW,KAAK,OAAO,GAChCA,EAAS,WAAW,KAAK,OAAO,CAEnC,CACF,EAUD,kBAAmB,CACjB,IAAK,UAAY,CACf,OAAO,KAAK,kBACb,CACF,EAQD,YAAaC,EAAyB,aAAa,EAQnD,UAAWA,EAAyB,WAAW,EAQ/C,SAAUA,EAAyB,UAAU,EAW7C,OAAQA,EAAyB,QAAQ,EAQzC,OAAQA,EAAyB,QAAQ,CAC3C,CAAC,EAQDL,EAAuB,UAAU,QAAU,SAAUM,EAAM,CACzD,MAAO,QACT,EAEA,MAAMC,EAAc,IAAIC,EASxBR,EAAuB,UAAU,SAAW,SAAUM,EAAMG,EAAQ,CAClE,OAAKC,EAAQJ,CAAI,IACfA,EAAOE,EAAW,IAAID,CAAW,GAE9BG,EAAQD,CAAM,IACjBA,EAAS,CAAE,GAEbA,EAAO,WACLL,EAAS,kBAAkB,KAAK,aAAcE,EAAMZ,CAAkB,IACtEF,EAAkB,WACpBiB,EAAO,UAAYL,EAAS,wBAC1B,KAAK,WACLE,EACAX,EACAc,EAAO,SACR,EACDA,EAAO,SAAWL,EAAS,wBACzB,KAAK,UACLE,EACAT,EACAY,EAAO,QACR,EACDA,EAAO,OAASL,EAAS,kBAAkB,KAAK,QAASE,EAAMR,CAAa,EAC5EW,EAAO,OAASL,EAAS,kBAAkB,KAAK,QAASE,EAAMP,CAAa,EACrEU,CACT,EASAT,EAAuB,UAAU,OAAS,SAAUW,EAAO,CACzD,OACE,OAASA,GACRA,aAAiBX,GAChBI,EAAS,OAAO,KAAK,aAAcO,EAAM,YAAY,GACrDP,EAAS,OAAO,KAAK,WAAYO,EAAM,UAAU,GACjDP,EAAS,OAAO,KAAK,UAAWO,EAAM,SAAS,GAC/CP,EAAS,OAAO,KAAK,QAASO,EAAM,OAAO,GAC3CP,EAAS,OAAO,KAAK,QAASO,EAAM,OAAO,CAEjD","x_google_ignoreList":[0,1]}