{"version":3,"file":"hoisted.BDcuX_E8.js","sources":["../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/CheckerboardMaterialProperty.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/CompositeMaterialProperty.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/Core/getFilenameFromUri.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/Core/HermitePolynomialApproximation.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/Core/LagrangePolynomialApproximation.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/Core/Spherical.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/DataSourceClock.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/GridMaterialProperty.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/PolylineArrowMaterialProperty.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/PolylineDashMaterialProperty.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/PolylineOutlineMaterialProperty.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/PositionPropertyArray.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/PropertyArray.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/Rotation.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/TimeIntervalCollectionProperty.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/Scene/SensorVolumePortionToDisplay.js","../../node_modules/.pnpm/@cesium+engine@17.0.0/node_modules/@cesium/engine/Source/DataSources/CzmlDataSource.js","../../src/pages/cesiumPage/carMove.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Color from \"../Core/Color.js\";\nimport Frozen from \"../Core/Frozen.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultEvenColor = Color.WHITE;\nconst defaultOddColor = Color.BLACK;\nconst defaultRepeat = new Cartesian2(2.0, 2.0);\n\n/**\n * A {@link MaterialProperty} that maps to checkerboard {@link Material} uniforms.\n * @alias CheckerboardMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n * @param {Property|Color} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n * @param {Property|Cartesian2} [options.repeat=new Cartesian2(2.0, 2.0)] A {@link Cartesian2} Property specifying how many times the tiles repeat in each direction.\n */\nfunction CheckerboardMaterialProperty(options) {\n  options = options ?? Frozen.EMPTY_OBJECT;\n\n  this._definitionChanged = new Event();\n  this._evenColor = undefined;\n  this._evenColorSubscription = undefined;\n  this._oddColor = undefined;\n  this._oddColorSubscription = undefined;\n  this._repeat = undefined;\n  this._repeatSubscription = undefined;\n\n  this.evenColor = options.evenColor;\n  this.oddColor = options.oddColor;\n  this.repeat = options.repeat;\n}\n\nObject.defineProperties(CheckerboardMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof CheckerboardMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._evenColor) && //\n        Property.isConstant(this._oddColor) && //\n        Property.isConstant(this._repeat)\n      );\n    },\n  },\n\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof CheckerboardMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the Property specifying the first {@link Color}.\n   * @memberof CheckerboardMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  evenColor: createPropertyDescriptor(\"evenColor\"),\n\n  /**\n   * Gets or sets the Property specifying the second {@link Color}.\n   * @memberof CheckerboardMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  oddColor: createPropertyDescriptor(\"oddColor\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying how many times the tiles repeat in each direction.\n   * @memberof CheckerboardMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian2(2.0, 2.0)\n   */\n  repeat: createPropertyDescriptor(\"repeat\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nCheckerboardMaterialProperty.prototype.getType = function (time) {\n  return \"Checkerboard\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCheckerboardMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.lightColor = Property.getValueOrClonedDefault(\n    this._evenColor,\n    time,\n    defaultEvenColor,\n    result.lightColor,\n  );\n  result.darkColor = Property.getValueOrClonedDefault(\n    this._oddColor,\n    time,\n    defaultOddColor,\n    result.darkColor,\n  );\n  result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCheckerboardMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof CheckerboardMaterialProperty && //\n      Property.equals(this._evenColor, other._evenColor) && //\n      Property.equals(this._oddColor, other._oddColor) && //\n      Property.equals(this._repeat, other._repeat))\n  );\n};\nexport default CheckerboardMaterialProperty;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport CompositeProperty from \"./CompositeProperty.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link CompositeProperty} which is also a {@link MaterialProperty}.\n *\n * @alias CompositeMaterialProperty\n * @constructor\n */\nfunction CompositeMaterialProperty() {\n  this._definitionChanged = new Event();\n  this._composite = new CompositeProperty();\n  this._composite.definitionChanged.addEventListener(\n    CompositeMaterialProperty.prototype._raiseDefinitionChanged,\n    this,\n  );\n}\n\nObject.defineProperties(CompositeMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._composite.isConstant;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   */\n  intervals: {\n    get: function () {\n      return this._composite._intervals;\n    },\n  },\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nCompositeMaterialProperty.prototype.getType = function (time) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required\");\n  }\n  //>>includeEnd('debug');\n\n  const innerProperty =\n    this._composite._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getType(time);\n  }\n  return undefined;\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCompositeMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n\n  const innerProperty =\n    this._composite._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getValue(time, result);\n  }\n  return undefined;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCompositeMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof CompositeMaterialProperty && //\n      this._composite.equals(other._composite, Property.equals))\n  );\n};\n\n/**\n * @private\n */\nCompositeMaterialProperty.prototype._raiseDefinitionChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default CompositeMaterialProperty;\n","import Uri from \"urijs\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Given a URI, returns the last segment of the URI, removing any path or query information.\n * @function getFilenameFromUri\n *\n * @param {string} uri The Uri.\n * @returns {string} The last segment of the Uri.\n *\n * @example\n * //fileName will be\"simple.czml\";\n * const fileName = Cesium.getFilenameFromUri('/Gallery/simple.czml?value=true&example=false');\n */\nfunction getFilenameFromUri(uri) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(uri)) {\n    throw new DeveloperError(\"uri is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const uriObject = new Uri(uri);\n  uriObject.normalize();\n  let path = uriObject.path();\n  const index = path.lastIndexOf(\"/\");\n  if (index !== -1) {\n    path = path.substr(index + 1);\n  }\n  return path;\n}\nexport default getFilenameFromUri;\n","import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport CesiumMath from \"./Math.js\";\n\nconst factorial = CesiumMath.factorial;\n\nfunction calculateCoefficientTerm(\n  x,\n  zIndices,\n  xTable,\n  derivOrder,\n  termOrder,\n  reservedIndices,\n) {\n  let result = 0;\n  let reserved;\n  let i;\n  let j;\n\n  if (derivOrder > 0) {\n    for (i = 0; i < termOrder; i++) {\n      reserved = false;\n      for (j = 0; j < reservedIndices.length && !reserved; j++) {\n        if (i === reservedIndices[j]) {\n          reserved = true;\n        }\n      }\n\n      if (!reserved) {\n        reservedIndices.push(i);\n        result += calculateCoefficientTerm(\n          x,\n          zIndices,\n          xTable,\n          derivOrder - 1,\n          termOrder,\n          reservedIndices,\n        );\n        reservedIndices.splice(reservedIndices.length - 1, 1);\n      }\n    }\n\n    return result;\n  }\n\n  result = 1;\n  for (i = 0; i < termOrder; i++) {\n    reserved = false;\n    for (j = 0; j < reservedIndices.length && !reserved; j++) {\n      if (i === reservedIndices[j]) {\n        reserved = true;\n      }\n    }\n\n    if (!reserved) {\n      result *= x - xTable[zIndices[i]];\n    }\n  }\n\n  return result;\n}\n\n/**\n * An {@link InterpolationAlgorithm} for performing Hermite interpolation.\n *\n * @namespace HermitePolynomialApproximation\n */\nconst HermitePolynomialApproximation = {\n  type: \"Hermite\",\n};\n\n/**\n * Given the desired degree, returns the number of data points required for interpolation.\n *\n * @param {number} degree The desired degree of interpolation.\n * @param {number} [inputOrder=0]  The order of the inputs (0 means just the data, 1 means the data and its derivative, etc).\n * @returns {number} The number of required data points needed for the desired degree of interpolation.\n * @exception {DeveloperError} degree must be 0 or greater.\n * @exception {DeveloperError} inputOrder must be 0 or greater.\n */\nHermitePolynomialApproximation.getRequiredDataPoints = function (\n  degree,\n  inputOrder,\n) {\n  inputOrder = inputOrder ?? 0;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(degree)) {\n    throw new DeveloperError(\"degree is required.\");\n  }\n  if (degree < 0) {\n    throw new DeveloperError(\"degree must be 0 or greater.\");\n  }\n  if (inputOrder < 0) {\n    throw new DeveloperError(\"inputOrder must be 0 or greater.\");\n  }\n  //>>includeEnd('debug');\n\n  return Math.max(Math.floor((degree + 1) / (inputOrder + 1)), 2);\n};\n\n/**\n * Interpolates values using Hermite Polynomial Approximation.\n *\n * @param {number} x The independent variable for which the dependent variables will be interpolated.\n * @param {number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {number[]} [result] An existing array into which to store the result.\n * @returns {number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nHermitePolynomialApproximation.interpolateOrderZero = function (\n  x,\n  xTable,\n  yTable,\n  yStride,\n  result,\n) {\n  if (!defined(result)) {\n    result = new Array(yStride);\n  }\n\n  let i;\n  let j;\n  let d;\n  let s;\n  let len;\n  let index;\n  const length = xTable.length;\n  const coefficients = new Array(yStride);\n\n  for (i = 0; i < yStride; i++) {\n    result[i] = 0;\n\n    const l = new Array(length);\n    coefficients[i] = l;\n    for (j = 0; j < length; j++) {\n      l[j] = [];\n    }\n  }\n\n  const zIndicesLength = length,\n    zIndices = new Array(zIndicesLength);\n\n  for (i = 0; i < zIndicesLength; i++) {\n    zIndices[i] = i;\n  }\n\n  let highestNonZeroCoef = length - 1;\n  for (s = 0; s < yStride; s++) {\n    for (j = 0; j < zIndicesLength; j++) {\n      index = zIndices[j] * yStride + s;\n      coefficients[s][0].push(yTable[index]);\n    }\n\n    for (i = 1; i < zIndicesLength; i++) {\n      let nonZeroCoefficients = false;\n      for (j = 0; j < zIndicesLength - i; j++) {\n        const zj = xTable[zIndices[j]];\n        const zn = xTable[zIndices[j + i]];\n\n        let numerator;\n        if (zn - zj <= 0) {\n          index = zIndices[j] * yStride + yStride * i + s;\n          numerator = yTable[index];\n          coefficients[s][i].push(numerator / factorial(i));\n        } else {\n          numerator = coefficients[s][i - 1][j + 1] - coefficients[s][i - 1][j];\n          coefficients[s][i].push(numerator / (zn - zj));\n        }\n        nonZeroCoefficients = nonZeroCoefficients || numerator !== 0;\n      }\n\n      if (!nonZeroCoefficients) {\n        highestNonZeroCoef = i - 1;\n      }\n    }\n  }\n\n  for (d = 0, len = 0; d <= len; d++) {\n    for (i = d; i <= highestNonZeroCoef; i++) {\n      const tempTerm = calculateCoefficientTerm(x, zIndices, xTable, d, i, []);\n      for (s = 0; s < yStride; s++) {\n        const coeff = coefficients[s][i][0];\n        result[s + d * yStride] += coeff * tempTerm;\n      }\n    }\n  }\n\n  return result;\n};\n\nconst arrayScratch = [];\n\n/**\n * Interpolates values using Hermite Polynomial Approximation.\n *\n * @param {number} x The independent variable for which the dependent variables will be interpolated.\n * @param {number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {number} inputOrder The number of derivatives supplied for input.\n * @param {number} outputOrder The number of derivatives desired for output.\n * @param {number[]} [result] An existing array into which to store the result.\n *\n * @returns {number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nHermitePolynomialApproximation.interpolate = function (\n  x,\n  xTable,\n  yTable,\n  yStride,\n  inputOrder,\n  outputOrder,\n  result,\n) {\n  const resultLength = yStride * (outputOrder + 1);\n  if (!defined(result)) {\n    result = new Array(resultLength);\n  }\n  for (let r = 0; r < resultLength; r++) {\n    result[r] = 0;\n  }\n\n  const length = xTable.length;\n  // The zIndices array holds copies of the addresses of the xTable values\n  // in the range we're looking at. Even though this just holds information already\n  // available in xTable this is a much more convenient format.\n  const zIndices = new Array(length * (inputOrder + 1));\n  let i;\n  for (i = 0; i < length; i++) {\n    for (let j = 0; j < inputOrder + 1; j++) {\n      zIndices[i * (inputOrder + 1) + j] = i;\n    }\n  }\n\n  const zIndiceslength = zIndices.length;\n  const coefficients = arrayScratch;\n  const highestNonZeroCoef = fillCoefficientList(\n    coefficients,\n    zIndices,\n    xTable,\n    yTable,\n    yStride,\n    inputOrder,\n  );\n  const reservedIndices = [];\n\n  const tmp = (zIndiceslength * (zIndiceslength + 1)) / 2;\n  const loopStop = Math.min(highestNonZeroCoef, outputOrder);\n  for (let d = 0; d <= loopStop; d++) {\n    for (i = d; i <= highestNonZeroCoef; i++) {\n      reservedIndices.length = 0;\n      const tempTerm = calculateCoefficientTerm(\n        x,\n        zIndices,\n        xTable,\n        d,\n        i,\n        reservedIndices,\n      );\n      const dimTwo = Math.floor((i * (1 - i)) / 2) + zIndiceslength * i;\n\n      for (let s = 0; s < yStride; s++) {\n        const dimOne = Math.floor(s * tmp);\n        const coef = coefficients[dimOne + dimTwo];\n        result[s + d * yStride] += coef * tempTerm;\n      }\n    }\n  }\n\n  return result;\n};\n\nfunction fillCoefficientList(\n  coefficients,\n  zIndices,\n  xTable,\n  yTable,\n  yStride,\n  inputOrder,\n) {\n  let j;\n  let index;\n  let highestNonZero = -1;\n  const zIndiceslength = zIndices.length;\n  const tmp = (zIndiceslength * (zIndiceslength + 1)) / 2;\n\n  for (let s = 0; s < yStride; s++) {\n    const dimOne = Math.floor(s * tmp);\n\n    for (j = 0; j < zIndiceslength; j++) {\n      index = zIndices[j] * yStride * (inputOrder + 1) + s;\n      coefficients[dimOne + j] = yTable[index];\n    }\n\n    for (let i = 1; i < zIndiceslength; i++) {\n      let coefIndex = 0;\n      const dimTwo = Math.floor((i * (1 - i)) / 2) + zIndiceslength * i;\n      let nonZeroCoefficients = false;\n\n      for (j = 0; j < zIndiceslength - i; j++) {\n        const zj = xTable[zIndices[j]];\n        const zn = xTable[zIndices[j + i]];\n\n        let numerator;\n        let coefficient;\n        if (zn - zj <= 0) {\n          index = zIndices[j] * yStride * (inputOrder + 1) + yStride * i + s;\n          numerator = yTable[index];\n          coefficient = numerator / CesiumMath.factorial(i);\n          coefficients[dimOne + dimTwo + coefIndex] = coefficient;\n          coefIndex++;\n        } else {\n          const dimTwoMinusOne =\n            Math.floor(((i - 1) * (2 - i)) / 2) + zIndiceslength * (i - 1);\n          numerator =\n            coefficients[dimOne + dimTwoMinusOne + j + 1] -\n            coefficients[dimOne + dimTwoMinusOne + j];\n          coefficient = numerator / (zn - zj);\n          coefficients[dimOne + dimTwo + coefIndex] = coefficient;\n          coefIndex++;\n        }\n        nonZeroCoefficients = nonZeroCoefficients || numerator !== 0.0;\n      }\n\n      if (nonZeroCoefficients) {\n        highestNonZero = Math.max(highestNonZero, i);\n      }\n    }\n  }\n\n  return highestNonZero;\n}\nexport default HermitePolynomialApproximation;\n","import defined from \"./defined.js\";\n\n/**\n * An {@link InterpolationAlgorithm} for performing Lagrange interpolation.\n *\n * @namespace LagrangePolynomialApproximation\n */\nconst LagrangePolynomialApproximation = {\n  type: \"Lagrange\",\n};\n\n/**\n * Given the desired degree, returns the number of data points required for interpolation.\n *\n * @param {number} degree The desired degree of interpolation.\n * @returns {number} The number of required data points needed for the desired degree of interpolation.\n */\nLagrangePolynomialApproximation.getRequiredDataPoints = function (degree) {\n  return Math.max(degree + 1.0, 2);\n};\n\n/**\n * Interpolates values using Lagrange Polynomial Approximation.\n *\n * @param {number} x The independent variable for which the dependent variables will be interpolated.\n * @param {number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {number[]} [result] An existing array into which to store the result.\n * @returns {number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nLagrangePolynomialApproximation.interpolateOrderZero = function (\n  x,\n  xTable,\n  yTable,\n  yStride,\n  result,\n) {\n  if (!defined(result)) {\n    result = new Array(yStride);\n  }\n\n  let i;\n  let j;\n  const length = xTable.length;\n\n  for (i = 0; i < yStride; i++) {\n    result[i] = 0;\n  }\n\n  for (i = 0; i < length; i++) {\n    let coefficient = 1;\n\n    for (j = 0; j < length; j++) {\n      if (j !== i) {\n        const diffX = xTable[i] - xTable[j];\n        coefficient *= (x - xTable[j]) / diffX;\n      }\n    }\n\n    for (j = 0; j < yStride; j++) {\n      result[j] += coefficient * yTable[i * yStride + j];\n    }\n  }\n\n  return result;\n};\nexport default LagrangePolynomialApproximation;\n","import Check from \"./Check.js\";\nimport defined from \"./defined.js\";\n\n/**\n * A set of curvilinear 3-dimensional coordinates.\n *\n * @alias Spherical\n * @constructor\n *\n * @param {number} [clock=0.0] The angular coordinate lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.\n * @param {number} [cone=0.0] The angular coordinate measured from the positive z-axis and toward the negative z-axis.\n * @param {number} [magnitude=1.0] The linear coordinate measured from the origin.\n */\nfunction Spherical(clock, cone, magnitude) {\n  /**\n   * The clock component.\n   * @type {number}\n   * @default 0.0\n   */\n  this.clock = clock ?? 0.0;\n  /**\n   * The cone component.\n   * @type {number}\n   * @default 0.0\n   */\n  this.cone = cone ?? 0.0;\n  /**\n   * The magnitude component.\n   * @type {number}\n   * @default 1.0\n   */\n  this.magnitude = magnitude ?? 1.0;\n}\n\n/**\n * Converts the provided Cartesian3 into Spherical coordinates.\n *\n * @param {Cartesian3} cartesian3 The Cartesian3 to be converted to Spherical.\n * @param {Spherical} [result] The object in which the result will be stored, if undefined a new instance will be created.\n * @returns {Spherical} The modified result parameter, or a new instance if one was not provided.\n */\nSpherical.fromCartesian3 = function (cartesian3, result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"cartesian3\", cartesian3);\n  //>>includeEnd('debug');\n\n  const x = cartesian3.x;\n  const y = cartesian3.y;\n  const z = cartesian3.z;\n  const radialSquared = x * x + y * y;\n\n  if (!defined(result)) {\n    result = new Spherical();\n  }\n\n  result.clock = Math.atan2(y, x);\n  result.cone = Math.atan2(Math.sqrt(radialSquared), z);\n  result.magnitude = Math.sqrt(radialSquared + z * z);\n  return result;\n};\n\n/**\n * Creates a duplicate of a Spherical.\n *\n * @param {Spherical} spherical The spherical to clone.\n * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n * @returns {Spherical} The modified result parameter or a new instance if result was undefined. (Returns undefined if spherical is undefined)\n */\nSpherical.clone = function (spherical, result) {\n  if (!defined(spherical)) {\n    return undefined;\n  }\n\n  if (!defined(result)) {\n    return new Spherical(spherical.clock, spherical.cone, spherical.magnitude);\n  }\n\n  result.clock = spherical.clock;\n  result.cone = spherical.cone;\n  result.magnitude = spherical.magnitude;\n  return result;\n};\n\n/**\n * Computes the normalized version of the provided spherical.\n *\n * @param {Spherical} spherical The spherical to be normalized.\n * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n * @returns {Spherical} The modified result parameter or a new instance if result was undefined.\n */\nSpherical.normalize = function (spherical, result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"spherical\", spherical);\n  //>>includeEnd('debug');\n\n  if (!defined(result)) {\n    return new Spherical(spherical.clock, spherical.cone, 1.0);\n  }\n\n  result.clock = spherical.clock;\n  result.cone = spherical.cone;\n  result.magnitude = 1.0;\n  return result;\n};\n\n/**\n * Returns true if the first spherical is equal to the second spherical, false otherwise.\n *\n * @param {Spherical} [left] The first Spherical to be compared.\n * @param {Spherical} [right] The second Spherical to be compared.\n * @returns {boolean} true if the first spherical is equal to the second spherical, false otherwise.\n */\nSpherical.equals = function (left, right) {\n  return (\n    left === right ||\n    (defined(left) &&\n      defined(right) &&\n      left.clock === right.clock &&\n      left.cone === right.cone &&\n      left.magnitude === right.magnitude)\n  );\n};\n\n/**\n * Returns true if the first spherical is within the provided epsilon of the second spherical, false otherwise.\n *\n * @param {Spherical} left The first Spherical to be compared.\n * @param {Spherical} right The second Spherical to be compared.\n * @param {number} [epsilon=0.0] The epsilon to compare against.\n * @returns {boolean} true if the first spherical is within the provided epsilon of the second spherical, false otherwise.\n */\nSpherical.equalsEpsilon = function (left, right, epsilon) {\n  epsilon = epsilon ?? 0.0;\n  return (\n    left === right ||\n    (defined(left) &&\n      defined(right) &&\n      Math.abs(left.clock - right.clock) <= epsilon &&\n      Math.abs(left.cone - right.cone) <= epsilon &&\n      Math.abs(left.magnitude - right.magnitude) <= epsilon)\n  );\n};\n\n/**\n * Returns true if this spherical is equal to the provided spherical, false otherwise.\n *\n * @param {Spherical} [other] The Spherical to be compared.\n * @returns {boolean} true if this spherical is equal to the provided spherical, false otherwise.\n */\nSpherical.prototype.equals = function (other) {\n  return Spherical.equals(this, other);\n};\n\n/**\n * Creates a duplicate of this Spherical.\n *\n * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n * @returns {Spherical} The modified result parameter or a new instance if result was undefined.\n */\nSpherical.prototype.clone = function (result) {\n  return Spherical.clone(this, result);\n};\n\n/**\n * Returns true if this spherical is within the provided epsilon of the provided spherical, false otherwise.\n *\n * @param {Spherical} other The Spherical to be compared.\n * @param {number} epsilon The epsilon to compare against.\n * @returns {boolean} true if this spherical is within the provided epsilon of the provided spherical, false otherwise.\n */\nSpherical.prototype.equalsEpsilon = function (other, epsilon) {\n  return Spherical.equalsEpsilon(this, other, epsilon);\n};\n\n/**\n * Returns a string representing this instance in the format (clock, cone, magnitude).\n *\n * @returns {string} A string representing this instance.\n */\nSpherical.prototype.toString = function () {\n  return `(${this.clock}, ${this.cone}, ${this.magnitude})`;\n};\nexport default Spherical;\n","import Clock from \"../Core/Clock.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createRawPropertyDescriptor from \"./createRawPropertyDescriptor.js\";\n\n/**\n * Represents desired clock settings for a particular {@link DataSource}.  These settings may be applied\n * to the {@link Clock} when the DataSource is loaded.\n *\n * @alias DataSourceClock\n * @constructor\n */\nfunction DataSourceClock() {\n  this._definitionChanged = new Event();\n  this._startTime = undefined;\n  this._stopTime = undefined;\n  this._currentTime = undefined;\n  this._clockRange = undefined;\n  this._clockStep = undefined;\n  this._multiplier = undefined;\n}\n\nObject.defineProperties(DataSourceClock.prototype, {\n  /**\n   * Gets the event that is raised whenever a new property is assigned.\n   * @memberof DataSourceClock.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the desired start time of the clock.\n   * See {@link Clock#startTime}.\n   * @memberof DataSourceClock.prototype\n   * @type {JulianDate}\n   */\n  startTime: createRawPropertyDescriptor(\"startTime\"),\n\n  /**\n   * Gets or sets the desired stop time of the clock.\n   * See {@link Clock#stopTime}.\n   * @memberof DataSourceClock.prototype\n   * @type {JulianDate}\n   */\n  stopTime: createRawPropertyDescriptor(\"stopTime\"),\n\n  /**\n   * Gets or sets the desired current time when this data source is loaded.\n   * See {@link Clock#currentTime}.\n   * @memberof DataSourceClock.prototype\n   * @type {JulianDate}\n   */\n  currentTime: createRawPropertyDescriptor(\"currentTime\"),\n\n  /**\n   * Gets or sets the desired clock range setting.\n   * See {@link Clock#clockRange}.\n   * @memberof DataSourceClock.prototype\n   * @type {ClockRange}\n   */\n  clockRange: createRawPropertyDescriptor(\"clockRange\"),\n\n  /**\n   * Gets or sets the desired clock step setting.\n   * See {@link Clock#clockStep}.\n   * @memberof DataSourceClock.prototype\n   * @type {ClockStep}\n   */\n  clockStep: createRawPropertyDescriptor(\"clockStep\"),\n\n  /**\n   * Gets or sets the desired clock multiplier.\n   * See {@link Clock#multiplier}.\n   * @memberof DataSourceClock.prototype\n   * @type {number}\n   */\n  multiplier: createRawPropertyDescriptor(\"multiplier\"),\n});\n\n/**\n * Duplicates a DataSourceClock instance.\n *\n * @param {DataSourceClock} [result] The object onto which to store the result.\n * @returns {DataSourceClock} The modified result parameter or a new instance if one was not provided.\n */\nDataSourceClock.prototype.clone = function (result) {\n  if (!defined(result)) {\n    result = new DataSourceClock();\n  }\n  result.startTime = this.startTime;\n  result.stopTime = this.stopTime;\n  result.currentTime = this.currentTime;\n  result.clockRange = this.clockRange;\n  result.clockStep = this.clockStep;\n  result.multiplier = this.multiplier;\n  return result;\n};\n\n/**\n * Returns true if this DataSourceClock is equivalent to the other\n *\n * @param {DataSourceClock} [other] The other DataSourceClock to compare to.\n * @returns {boolean} <code>true</code> if the DataSourceClocks are equal; otherwise, <code>false</code>.\n */\nDataSourceClock.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (defined(other) &&\n      JulianDate.equals(this.startTime, other.startTime) &&\n      JulianDate.equals(this.stopTime, other.stopTime) &&\n      JulianDate.equals(this.currentTime, other.currentTime) &&\n      this.clockRange === other.clockRange &&\n      this.clockStep === other.clockStep &&\n      this.multiplier === other.multiplier)\n  );\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {DataSourceClock} source The object to be merged into this object.\n */\nDataSourceClock.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.startTime = this.startTime ?? source.startTime;\n  this.stopTime = this.stopTime ?? source.stopTime;\n  this.currentTime = this.currentTime ?? source.currentTime;\n  this.clockRange = this.clockRange ?? source.clockRange;\n  this.clockStep = this.clockStep ?? source.clockStep;\n  this.multiplier = this.multiplier ?? source.multiplier;\n};\n\n/**\n * Gets the value of this clock instance as a {@link Clock} object.\n *\n * @returns {Clock} The modified result parameter or a new instance if one was not provided.\n */\nDataSourceClock.prototype.getValue = function (result) {\n  if (!defined(result)) {\n    result = new Clock();\n  }\n  result.startTime = this.startTime ?? result.startTime;\n  result.stopTime = this.stopTime ?? result.stopTime;\n  result.currentTime = this.currentTime ?? result.currentTime;\n  result.clockRange = this.clockRange ?? result.clockRange;\n  result.multiplier = this.multiplier ?? result.multiplier;\n  result.clockStep = this.clockStep ?? result.clockStep;\n  return result;\n};\nexport default DataSourceClock;\n","import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Color from \"../Core/Color.js\";\nimport Frozen from \"../Core/Frozen.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultColor = Color.WHITE;\nconst defaultCellAlpha = 0.1;\nconst defaultLineCount = new Cartesian2(8, 8);\nconst defaultLineOffset = new Cartesian2(0, 0);\nconst defaultLineThickness = new Cartesian2(1, 1);\n\n/**\n * A {@link MaterialProperty} that maps to grid {@link Material} uniforms.\n * @alias GridMaterialProperty\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.color=Color.WHITE] A Property specifying the grid {@link Color}.\n * @param {Property|number} [options.cellAlpha=0.1] A numeric Property specifying cell alpha values.\n * @param {Property|Cartesian2} [options.lineCount=new Cartesian2(8, 8)] A {@link Cartesian2} Property specifying the number of grid lines along each axis.\n * @param {Property|Cartesian2} [options.lineThickness=new Cartesian2(1.0, 1.0)] A {@link Cartesian2} Property specifying the thickness of grid lines along each axis.\n * @param {Property|Cartesian2} [options.lineOffset=new Cartesian2(0.0, 0.0)] A {@link Cartesian2} Property specifying starting offset of grid lines along each axis.\n *\n * @constructor\n */\nfunction GridMaterialProperty(options) {\n  options = options ?? Frozen.EMPTY_OBJECT;\n\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._cellAlpha = undefined;\n  this._cellAlphaSubscription = undefined;\n  this._lineCount = undefined;\n  this._lineCountSubscription = undefined;\n  this._lineThickness = undefined;\n  this._lineThicknessSubscription = undefined;\n  this._lineOffset = undefined;\n  this._lineOffsetSubscription = undefined;\n\n  this.color = options.color;\n  this.cellAlpha = options.cellAlpha;\n  this.lineCount = options.lineCount;\n  this.lineThickness = options.lineThickness;\n  this.lineOffset = options.lineOffset;\n}\n\nObject.defineProperties(GridMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof GridMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._color) &&\n        Property.isConstant(this._cellAlpha) &&\n        Property.isConstant(this._lineCount) &&\n        Property.isConstant(this._lineThickness) &&\n        Property.isConstant(this._lineOffset)\n      );\n    },\n  },\n\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof GridMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the Property specifying the grid {@link Color}.\n   * @memberof GridMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the numeric Property specifying cell alpha values.\n   * @memberof GridMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 0.1\n   */\n  cellAlpha: createPropertyDescriptor(\"cellAlpha\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the number of grid lines along each axis.\n   * @memberof GridMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian2(8.0, 8.0)\n   */\n  lineCount: createPropertyDescriptor(\"lineCount\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the thickness of grid lines along each axis.\n   * @memberof GridMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian2(1.0, 1.0)\n   */\n  lineThickness: createPropertyDescriptor(\"lineThickness\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the starting offset of grid lines along each axis.\n   * @memberof GridMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian2(0.0, 0.0)\n   */\n  lineOffset: createPropertyDescriptor(\"lineOffset\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nGridMaterialProperty.prototype.getType = function (time) {\n  return \"Grid\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nGridMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    defaultColor,\n    result.color,\n  );\n  result.cellAlpha = Property.getValueOrDefault(\n    this._cellAlpha,\n    time,\n    defaultCellAlpha,\n  );\n  result.lineCount = Property.getValueOrClonedDefault(\n    this._lineCount,\n    time,\n    defaultLineCount,\n    result.lineCount,\n  );\n  result.lineThickness = Property.getValueOrClonedDefault(\n    this._lineThickness,\n    time,\n    defaultLineThickness,\n    result.lineThickness,\n  );\n  result.lineOffset = Property.getValueOrClonedDefault(\n    this._lineOffset,\n    time,\n    defaultLineOffset,\n    result.lineOffset,\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nGridMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof GridMaterialProperty && //\n      Property.equals(this._color, other._color) && //\n      Property.equals(this._cellAlpha, other._cellAlpha) && //\n      Property.equals(this._lineCount, other._lineCount) && //\n      Property.equals(this._lineThickness, other._lineThickness) && //\n      Property.equals(this._lineOffset, other._lineOffset))\n  );\n};\nexport default GridMaterialProperty;\n","import Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link MaterialProperty} that maps to PolylineArrow {@link Material} uniforms.\n *\n * @param {Property|Color} [color=Color.WHITE] The {@link Color} Property to be used.\n *\n * @alias PolylineArrowMaterialProperty\n * @constructor\n */\nfunction PolylineArrowMaterialProperty(color) {\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n\n  this.color = color;\n}\n\nObject.defineProperties(PolylineArrowMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PolylineArrowMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._color);\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PolylineArrowMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the {@link Color} {@link Property}.\n   * @memberof PolylineArrowMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nPolylineArrowMaterialProperty.prototype.getType = function (time) {\n  return \"PolylineArrow\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPolylineArrowMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    Color.WHITE,\n    result.color,\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPolylineArrowMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof PolylineArrowMaterialProperty && //\n      Property.equals(this._color, other._color))\n  );\n};\nexport default PolylineArrowMaterialProperty;\n","import Color from \"../Core/Color.js\";\nimport Frozen from \"../Core/Frozen.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultColor = Color.WHITE;\nconst defaultGapColor = Color.TRANSPARENT;\nconst defaultDashLength = 16.0;\nconst defaultDashPattern = 255.0;\n\n/**\n * A {@link MaterialProperty} that maps to polyline dash {@link Material} uniforms.\n * @alias PolylineDashMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n * @param {Property|Color} [options.gapColor=Color.TRANSPARENT] A Property specifying the {@link Color} of the gaps in the line.\n * @param {Property|number} [options.dashLength=16.0] A numeric Property specifying the length of the dash pattern in pixels.\n * @param {Property|number} [options.dashPattern=255.0] A numeric Property specifying a 16 bit pattern for the dash\n */\nfunction PolylineDashMaterialProperty(options) {\n  options = options ?? Frozen.EMPTY_OBJECT;\n\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._gapColor = undefined;\n  this._gapColorSubscription = undefined;\n  this._dashLength = undefined;\n  this._dashLengthSubscription = undefined;\n  this._dashPattern = undefined;\n  this._dashPatternSubscription = undefined;\n\n  this.color = options.color;\n  this.gapColor = options.gapColor;\n  this.dashLength = options.dashLength;\n  this.dashPattern = options.dashPattern;\n}\n\nObject.defineProperties(PolylineDashMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PolylineDashMaterialProperty.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._color) &&\n        Property.isConstant(this._gapColor) &&\n        Property.isConstant(this._dashLength) &&\n        Property.isConstant(this._dashPattern)\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PolylineDashMaterialProperty.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the line.\n   * @memberof PolylineDashMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the gaps in the line.\n   * @memberof PolylineDashMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  gapColor: createPropertyDescriptor(\"gapColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the length of a dash cycle\n   * @memberof PolylineDashMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  dashLength: createPropertyDescriptor(\"dashLength\"),\n\n  /**\n   * Gets or sets the numeric Property specifying a dash pattern\n   * @memberof PolylineDashMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  dashPattern: createPropertyDescriptor(\"dashPattern\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nPolylineDashMaterialProperty.prototype.getType = function (time) {\n  return \"PolylineDash\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPolylineDashMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    defaultColor,\n    result.color,\n  );\n  result.gapColor = Property.getValueOrClonedDefault(\n    this._gapColor,\n    time,\n    defaultGapColor,\n    result.gapColor,\n  );\n  result.dashLength = Property.getValueOrDefault(\n    this._dashLength,\n    time,\n    defaultDashLength,\n    result.dashLength,\n  );\n  result.dashPattern = Property.getValueOrDefault(\n    this._dashPattern,\n    time,\n    defaultDashPattern,\n    result.dashPattern,\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPolylineDashMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof PolylineDashMaterialProperty &&\n      Property.equals(this._color, other._color) &&\n      Property.equals(this._gapColor, other._gapColor) &&\n      Property.equals(this._dashLength, other._dashLength) &&\n      Property.equals(this._dashPattern, other._dashPattern))\n  );\n};\nexport default PolylineDashMaterialProperty;\n","import Color from \"../Core/Color.js\";\nimport Frozen from \"../Core/Frozen.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultColor = Color.WHITE;\nconst defaultOutlineColor = Color.BLACK;\nconst defaultOutlineWidth = 1.0;\n\n/**\n * A {@link MaterialProperty} that maps to polyline outline {@link Material} uniforms.\n * @alias PolylineOutlineMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n * @param {Property|Color} [options.outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @param {Property|number} [options.outlineWidth=1.0] A numeric Property specifying the width of the outline, in pixels.\n */\nfunction PolylineOutlineMaterialProperty(options) {\n  options = options ?? Frozen.EMPTY_OBJECT;\n\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n\n  this.color = options.color;\n  this.outlineColor = options.outlineColor;\n  this.outlineWidth = options.outlineWidth;\n}\n\nObject.defineProperties(PolylineOutlineMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._color) &&\n        Property.isConstant(this._outlineColor) &&\n        Property.isConstant(this._outlineWidth)\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the line.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nPolylineOutlineMaterialProperty.prototype.getType = function (time) {\n  return \"PolylineOutline\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPolylineOutlineMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    defaultColor,\n    result.color,\n  );\n  result.outlineColor = Property.getValueOrClonedDefault(\n    this._outlineColor,\n    time,\n    defaultOutlineColor,\n    result.outlineColor,\n  );\n  result.outlineWidth = Property.getValueOrDefault(\n    this._outlineWidth,\n    time,\n    defaultOutlineWidth,\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPolylineOutlineMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof PolylineOutlineMaterialProperty && //\n      Property.equals(this._color, other._color) && //\n      Property.equals(this._outlineColor, other._outlineColor) && //\n      Property.equals(this._outlineWidth, other._outlineWidth))\n  );\n};\nexport default PolylineOutlineMaterialProperty;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport EventHelper from \"../Core/EventHelper.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link Property} whose value is an array whose items are the computed value\n * of other PositionProperty instances.\n *\n * @alias PositionPropertyArray\n * @constructor\n *\n * @param {Property[]} [value] An array of Property instances.\n * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n */\nfunction PositionPropertyArray(value, referenceFrame) {\n  this._value = undefined;\n  this._definitionChanged = new Event();\n  this._eventHelper = new EventHelper();\n  this._referenceFrame = referenceFrame ?? ReferenceFrame.FIXED;\n  this.setValue(value);\n}\n\nObject.defineProperties(PositionPropertyArray.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  This property\n   * is considered constant if all property items in the array are constant.\n   * @memberof PositionPropertyArray.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      const value = this._value;\n      if (!defined(value)) {\n        return true;\n      }\n\n      const length = value.length;\n      for (let i = 0; i < length; i++) {\n        if (!Property.isConstant(value[i])) {\n          return false;\n        }\n      }\n      return true;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value or one of the properties in the array also changes.\n   * @memberof PositionPropertyArray.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the reference frame in which the position is defined.\n   * @memberof PositionPropertyArray.prototype\n   * @type {ReferenceFrame}\n   * @default ReferenceFrame.FIXED;\n   */\n  referenceFrame: {\n    get: function () {\n      return this._referenceFrame;\n    },\n  },\n});\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {Cartesian3[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3[]} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPositionPropertyArray.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n};\n\n/**\n * Gets the value of the property at the provided time and in the provided reference frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n * @param {Cartesian3[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3[]} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPositionPropertyArray.prototype.getValueInReferenceFrame = function (\n  time,\n  referenceFrame,\n  result,\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required.\");\n  }\n  if (!defined(referenceFrame)) {\n    throw new DeveloperError(\"referenceFrame is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const value = this._value;\n  if (!defined(value)) {\n    return undefined;\n  }\n\n  const length = value.length;\n  if (!defined(result)) {\n    result = new Array(length);\n  }\n  let i = 0;\n  let x = 0;\n  while (i < length) {\n    const property = value[i];\n    const itemValue = property.getValueInReferenceFrame(\n      time,\n      referenceFrame,\n      result[i],\n    );\n    if (defined(itemValue)) {\n      result[x] = itemValue;\n      x++;\n    }\n    i++;\n  }\n  result.length = x;\n  return result;\n};\n\n/**\n * Sets the value of the property.\n *\n * @param {Property[]} value An array of Property instances.\n */\nPositionPropertyArray.prototype.setValue = function (value) {\n  const eventHelper = this._eventHelper;\n  eventHelper.removeAll();\n\n  if (defined(value)) {\n    this._value = value.slice();\n    const length = value.length;\n    for (let i = 0; i < length; i++) {\n      const property = value[i];\n      if (defined(property)) {\n        eventHelper.add(\n          property.definitionChanged,\n          PositionPropertyArray.prototype._raiseDefinitionChanged,\n          this,\n        );\n      }\n    }\n  } else {\n    this._value = undefined;\n  }\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPositionPropertyArray.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof PositionPropertyArray && //\n      this._referenceFrame === other._referenceFrame && //\n      Property.arrayEquals(this._value, other._value))\n  );\n};\n\nPositionPropertyArray.prototype._raiseDefinitionChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default PositionPropertyArray;\n","import defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport EventHelper from \"../Core/EventHelper.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link Property} whose value is an array whose items are the computed value\n * of other property instances.\n *\n * @alias PropertyArray\n * @constructor\n *\n * @param {Property[]} [value] An array of Property instances.\n */\nfunction PropertyArray(value) {\n  this._value = undefined;\n  this._definitionChanged = new Event();\n  this._eventHelper = new EventHelper();\n  this.setValue(value);\n}\n\nObject.defineProperties(PropertyArray.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  This property\n   * is considered constant if all property items in the array are constant.\n   * @memberof PropertyArray.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      const value = this._value;\n      if (!defined(value)) {\n        return true;\n      }\n      const length = value.length;\n      for (let i = 0; i < length; i++) {\n        if (!Property.isConstant(value[i])) {\n          return false;\n        }\n      }\n      return true;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value or one of the properties in the array also changes.\n   * @memberof PropertyArray.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n});\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {Object[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Object[]} The modified result parameter, which is an array of values produced by evaluating each of the contained properties at the given time or a new instance if the result parameter was not supplied.\n */\nPropertyArray.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n\n  const value = this._value;\n  if (!defined(value)) {\n    return undefined;\n  }\n\n  const length = value.length;\n  if (!defined(result)) {\n    result = new Array(length);\n  }\n  let i = 0;\n  let x = 0;\n  while (i < length) {\n    const property = this._value[i];\n    const itemValue = property.getValue(time, result[i]);\n    if (defined(itemValue)) {\n      result[x] = itemValue;\n      x++;\n    }\n    i++;\n  }\n  result.length = x;\n  return result;\n};\n\n/**\n * Sets the value of the property.\n *\n * @param {Property[]} value An array of Property instances.\n */\nPropertyArray.prototype.setValue = function (value) {\n  const eventHelper = this._eventHelper;\n  eventHelper.removeAll();\n\n  if (defined(value)) {\n    this._value = value.slice();\n    const length = value.length;\n    for (let i = 0; i < length; i++) {\n      const property = value[i];\n      if (defined(property)) {\n        eventHelper.add(\n          property.definitionChanged,\n          PropertyArray.prototype._raiseDefinitionChanged,\n          this,\n        );\n      }\n    }\n  } else {\n    this._value = undefined;\n  }\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPropertyArray.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof PropertyArray && //\n      Property.arrayEquals(this._value, other._value))\n  );\n};\n\nPropertyArray.prototype._raiseDefinitionChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default PropertyArray;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\n\n/**\n * Represents a {@link Packable} number that always interpolates values\n * towards the shortest angle of rotation. This object is never used directly\n * but is instead passed to the constructor of {@link SampledProperty}\n * in order to represent a two-dimensional angle of rotation.\n *\n * @interface Rotation\n *\n *\n * @example\n * const time1 = Cesium.JulianDate.fromIso8601('2010-05-07T00:00:00');\n * const time2 = Cesium.JulianDate.fromIso8601('2010-05-07T00:01:00');\n * const time3 = Cesium.JulianDate.fromIso8601('2010-05-07T00:02:00');\n *\n * const property = new Cesium.SampledProperty(Cesium.Rotation);\n * property.addSample(time1, 0);\n * property.addSample(time3, Cesium.Math.toRadians(350));\n *\n * //Getting the value at time2 will equal 355 degrees instead\n * //of 175 degrees (which is what you get if you construct\n * //a SampledProperty(Number) instead.  Note, the actual\n * //return value is in radians, not degrees.\n * property.getValue(time2);\n *\n * @see PackableForInterpolation\n */\nconst Rotation = {\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {number}\n   */\n  packedLength: 1,\n\n  /**\n   * Stores the provided instance into the provided array.\n   *\n   * @param {Rotation} value The value to pack.\n   * @param {number[]} array The array to pack into.\n   * @param {number} [startingIndex=0] The index into the array at which to start packing the elements.\n   *\n   * @returns {number[]} The array that was packed into\n   */\n  pack: function (value, array, startingIndex) {\n    //>>includeStart('debug', pragmas.debug);\n    if (!defined(value)) {\n      throw new DeveloperError(\"value is required\");\n    }\n\n    if (!defined(array)) {\n      throw new DeveloperError(\"array is required\");\n    }\n    //>>includeEnd('debug');\n\n    startingIndex = startingIndex ?? 0;\n    array[startingIndex] = value;\n\n    return array;\n  },\n\n  /**\n   * Retrieves an instance from a packed array.\n   *\n   * @param {number[]} array The packed array.\n   * @param {number} [startingIndex=0] The starting index of the element to be unpacked.\n   * @param {Rotation} [result] The object into which to store the result.\n   * @returns {Rotation} The modified result parameter or a new Rotation instance if one was not provided.\n   */\n  unpack: function (array, startingIndex, result) {\n    //>>includeStart('debug', pragmas.debug);\n    if (!defined(array)) {\n      throw new DeveloperError(\"array is required\");\n    }\n    //>>includeEnd('debug');\n\n    startingIndex = startingIndex ?? 0;\n    return array[startingIndex];\n  },\n\n  /**\n   * Converts a packed array into a form suitable for interpolation.\n   *\n   * @param {number[]} packedArray The packed array.\n   * @param {number} [startingIndex=0] The index of the first element to be converted.\n   * @param {number} [lastIndex=packedArray.length] The index of the last element to be converted.\n   * @param {number[]} [result] The object into which to store the result.\n   */\n  convertPackedArrayForInterpolation: function (\n    packedArray,\n    startingIndex,\n    lastIndex,\n    result,\n  ) {\n    //>>includeStart('debug', pragmas.debug);\n    if (!defined(packedArray)) {\n      throw new DeveloperError(\"packedArray is required\");\n    }\n    //>>includeEnd('debug');\n\n    if (!defined(result)) {\n      result = [];\n    }\n\n    startingIndex = startingIndex ?? 0;\n    lastIndex = lastIndex ?? packedArray.length;\n\n    let previousValue;\n    for (let i = 0, len = lastIndex - startingIndex + 1; i < len; i++) {\n      const value = packedArray[startingIndex + i];\n      if (i === 0 || Math.abs(previousValue - value) < Math.PI) {\n        result[i] = value;\n      } else {\n        result[i] = value - CesiumMath.TWO_PI;\n      }\n      previousValue = value;\n    }\n  },\n\n  /**\n   * Retrieves an instance from a packed array converted with {@link Rotation.convertPackedArrayForInterpolation}.\n   *\n   * @param {number[]} array The array previously packed for interpolation.\n   * @param {number[]} sourceArray The original packed array.\n   * @param {number} [firstIndex=0] The firstIndex used to convert the array.\n   * @param {number} [lastIndex=packedArray.length] The lastIndex used to convert the array.\n   * @param {Rotation} [result] The object into which to store the result.\n   * @returns {Rotation} The modified result parameter or a new Rotation instance if one was not provided.\n   */\n  unpackInterpolationResult: function (\n    array,\n    sourceArray,\n    firstIndex,\n    lastIndex,\n    result,\n  ) {\n    //>>includeStart('debug', pragmas.debug);\n    if (!defined(array)) {\n      throw new DeveloperError(\"array is required\");\n    }\n    if (!defined(sourceArray)) {\n      throw new DeveloperError(\"sourceArray is required\");\n    }\n    //>>includeEnd('debug');\n\n    result = array[0];\n    if (result < 0) {\n      return result + CesiumMath.TWO_PI;\n    }\n    return result;\n  },\n};\nexport default Rotation;\n","import defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link Property} which is defined by a {@link TimeIntervalCollection}, where the\n * data property of each {@link TimeInterval} represents the value at time.\n *\n * @alias TimeIntervalCollectionProperty\n * @constructor\n *\n * @example\n * //Create a Cartesian2 interval property which contains data on August 1st, 2012\n * //and uses a different value every 6 hours.\n * const composite = new Cesium.TimeIntervalCollectionProperty();\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T00:00:00.00Z/2012-08-01T06:00:00.00Z',\n *     isStartIncluded : true,\n *     isStopIncluded : false,\n *     data : new Cesium.Cartesian2(2.0, 3.4)\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T06:00:00.00Z/2012-08-01T12:00:00.00Z',\n *     isStartIncluded : true,\n *     isStopIncluded : false,\n *     data : new Cesium.Cartesian2(12.0, 2.7)\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T12:00:00.00Z/2012-08-01T18:00:00.00Z',\n *     isStartIncluded : true,\n *     isStopIncluded : false,\n *     data : new Cesium.Cartesian2(5.0, 12.4)\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T18:00:00.00Z/2012-08-02T00:00:00.00Z',\n *     isStartIncluded : true,\n *     isStopIncluded : true,\n *     data : new Cesium.Cartesian2(85.0, 4.1)\n * }));\n */\nfunction TimeIntervalCollectionProperty() {\n  this._definitionChanged = new Event();\n  this._intervals = new TimeIntervalCollection();\n  this._intervals.changedEvent.addEventListener(\n    TimeIntervalCollectionProperty.prototype._intervalsChanged,\n    this,\n  );\n}\n\nObject.defineProperties(TimeIntervalCollectionProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof TimeIntervalCollectionProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._intervals.isEmpty;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof TimeIntervalCollectionProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof TimeIntervalCollectionProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   * @readonly\n   */\n  intervals: {\n    get: function () {\n      return this._intervals;\n    },\n  },\n});\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nTimeIntervalCollectionProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n\n  const value = this._intervals.findDataForIntervalContainingDate(time);\n  if (defined(value) && typeof value.clone === \"function\") {\n    return value.clone(result);\n  }\n  return value;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nTimeIntervalCollectionProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof TimeIntervalCollectionProperty && //\n      this._intervals.equals(other._intervals, Property.equals))\n  );\n};\n\n/**\n * @private\n */\nTimeIntervalCollectionProperty.prototype._intervalsChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default TimeIntervalCollectionProperty;\n","import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * Constants used to indicated what part of the sensor volume to display.\n *\n * @enum {Number}\n */\nconst SensorVolumePortionToDisplay = {\n  /**\n   * 0x0000.  Display the complete sensor volume.\n   *\n   * @type {Number}\n   * @constant\n   */\n  COMPLETE: 0x0000,\n  /**\n   * 0x0001.  Display the portion of the sensor volume that lies below the true horizon of the ellipsoid.\n   *\n   * @type {Number}\n   * @constant\n   */\n  BELOW_ELLIPSOID_HORIZON: 0x0001,\n  /**\n   * 0x0002.  Display the portion of the sensor volume that lies above the true horizon of the ellipsoid.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ABOVE_ELLIPSOID_HORIZON: 0x0002,\n};\n\n/**\n * Validates that the provided value is a valid {@link SensorVolumePortionToDisplay} enumeration value.\n *\n * @param {SensorVolumePortionToDisplay} portionToDisplay The value to validate.\n *\n * @returns {Boolean} <code>true</code> if the provided value is a valid enumeration value; otherwise, <code>false</code>.\n */\nSensorVolumePortionToDisplay.validate = function (portionToDisplay) {\n  return (\n    portionToDisplay === SensorVolumePortionToDisplay.COMPLETE ||\n    portionToDisplay === SensorVolumePortionToDisplay.BELOW_ELLIPSOID_HORIZON ||\n    portionToDisplay === SensorVolumePortionToDisplay.ABOVE_ELLIPSOID_HORIZON\n  );\n};\n\n/**\n * Converts the provided value to its corresponding enumeration string.\n *\n * @param {SensorVolumePortionToDisplay} portionToDisplay The value to be converted to its corresponding enumeration string.\n *\n * @returns {String} The enumeration string corresponding to the value.\n */\nSensorVolumePortionToDisplay.toString = function (portionToDisplay) {\n  switch (portionToDisplay) {\n    case SensorVolumePortionToDisplay.COMPLETE:\n      return \"COMPLETE\";\n    case SensorVolumePortionToDisplay.BELOW_ELLIPSOID_HORIZON:\n      return \"BELOW_ELLIPSOID_HORIZON\";\n    case SensorVolumePortionToDisplay.ABOVE_ELLIPSOID_HORIZON:\n      return \"ABOVE_ELLIPSOID_HORIZON\";\n    default:\n      throw new DeveloperError(\n        \"SensorVolumePortionToDisplay value is not valid and cannot be converted to a String.\",\n      );\n  }\n};\n\nexport default SensorVolumePortionToDisplay;\n","import ArcType from \"../Core/ArcType.js\";\nimport BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport ClockRange from \"../Core/ClockRange.js\";\nimport ClockStep from \"../Core/ClockStep.js\";\nimport Color from \"../Core/Color.js\";\nimport CornerType from \"../Core/CornerType.js\";\nimport Credit from \"../Core/Credit.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport Frozen from \"../Core/Frozen.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport Event from \"../Core/Event.js\";\nimport ExtrapolationType from \"../Core/ExtrapolationType.js\";\nimport getFilenameFromUri from \"../Core/getFilenameFromUri.js\";\nimport HermitePolynomialApproximation from \"../Core/HermitePolynomialApproximation.js\";\nimport Iso8601 from \"../Core/Iso8601.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport LagrangePolynomialApproximation from \"../Core/LagrangePolynomialApproximation.js\";\nimport LinearApproximation from \"../Core/LinearApproximation.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport NearFarScalar from \"../Core/NearFarScalar.js\";\nimport PolygonHierarchy from \"../Core/PolygonHierarchy.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport Resource from \"../Core/Resource.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport Spherical from \"../Core/Spherical.js\";\nimport TimeInterval from \"../Core/TimeInterval.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport ClassificationType from \"../Scene/ClassificationType.js\";\nimport ColorBlendMode from \"../Scene/ColorBlendMode.js\";\nimport HeightReference from \"../Scene/HeightReference.js\";\nimport HorizontalOrigin from \"../Scene/HorizontalOrigin.js\";\nimport LabelStyle from \"../Scene/LabelStyle.js\";\nimport ShadowMode from \"../Scene/ShadowMode.js\";\nimport VerticalOrigin from \"../Scene/VerticalOrigin.js\";\nimport Uri from \"urijs\";\nimport BillboardGraphics from \"./BillboardGraphics.js\";\nimport BoxGraphics from \"./BoxGraphics.js\";\nimport CallbackProperty from \"./CallbackProperty.js\";\nimport CheckerboardMaterialProperty from \"./CheckerboardMaterialProperty.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport CompositeMaterialProperty from \"./CompositeMaterialProperty.js\";\nimport CompositePositionProperty from \"./CompositePositionProperty.js\";\nimport CompositeProperty from \"./CompositeProperty.js\";\nimport ConstantPositionProperty from \"./ConstantPositionProperty.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\nimport CorridorGraphics from \"./CorridorGraphics.js\";\nimport CylinderGraphics from \"./CylinderGraphics.js\";\nimport DataSource from \"./DataSource.js\";\nimport DataSourceClock from \"./DataSourceClock.js\";\nimport EllipseGraphics from \"./EllipseGraphics.js\";\nimport EllipsoidGraphics from \"./EllipsoidGraphics.js\";\nimport EntityCluster from \"./EntityCluster.js\";\nimport EntityCollection from \"./EntityCollection.js\";\nimport GridMaterialProperty from \"./GridMaterialProperty.js\";\nimport ImageMaterialProperty from \"./ImageMaterialProperty.js\";\nimport LabelGraphics from \"./LabelGraphics.js\";\nimport ModelGraphics from \"./ModelGraphics.js\";\nimport NodeTransformationProperty from \"./NodeTransformationProperty.js\";\nimport PathGraphics from \"./PathGraphics.js\";\nimport PointGraphics from \"./PointGraphics.js\";\nimport PolygonGraphics from \"./PolygonGraphics.js\";\nimport PolylineArrowMaterialProperty from \"./PolylineArrowMaterialProperty.js\";\nimport PolylineDashMaterialProperty from \"./PolylineDashMaterialProperty.js\";\nimport PolylineGlowMaterialProperty from \"./PolylineGlowMaterialProperty.js\";\nimport PolylineGraphics from \"./PolylineGraphics.js\";\nimport PolylineOutlineMaterialProperty from \"./PolylineOutlineMaterialProperty.js\";\nimport PolylineVolumeGraphics from \"./PolylineVolumeGraphics.js\";\nimport PositionPropertyArray from \"./PositionPropertyArray.js\";\nimport Property from \"./Property.js\";\nimport PropertyArray from \"./PropertyArray.js\";\nimport PropertyBag from \"./PropertyBag.js\";\nimport RectangleGraphics from \"./RectangleGraphics.js\";\nimport ReferenceProperty from \"./ReferenceProperty.js\";\nimport Rotation from \"./Rotation.js\";\nimport SampledPositionProperty from \"./SampledPositionProperty.js\";\nimport SampledProperty from \"./SampledProperty.js\";\nimport StripeMaterialProperty from \"./StripeMaterialProperty.js\";\nimport StripeOrientation from \"./StripeOrientation.js\";\nimport TimeIntervalCollectionPositionProperty from \"./TimeIntervalCollectionPositionProperty.js\";\nimport TimeIntervalCollectionProperty from \"./TimeIntervalCollectionProperty.js\";\nimport VelocityOrientationProperty from \"./VelocityOrientationProperty.js\";\nimport VelocityVectorProperty from \"./VelocityVectorProperty.js\";\nimport WallGraphics from \"./WallGraphics.js\";\nimport Cesium3DTilesetGraphics from \"./Cesium3DTilesetGraphics.js\";\nimport SensorVolumePortionToDisplay from \"../Scene/SensorVolumePortionToDisplay.js\";\n\n// A marker type to distinguish CZML properties where we need to end up with a unit vector.\n// The data is still loaded into Cartesian3 objects but they are normalized.\nfunction UnitCartesian3() {}\nUnitCartesian3.packedLength = Cartesian3.packedLength;\nUnitCartesian3.unpack = Cartesian3.unpack;\nUnitCartesian3.pack = Cartesian3.pack;\n\n// As a side note, for the purposes of CZML, Quaternion always indicates a unit quaternion.\n\nlet currentId;\n\nfunction createReferenceProperty(entityCollection, referenceString) {\n  if (referenceString[0] === \"#\") {\n    referenceString = currentId + referenceString;\n  }\n  return ReferenceProperty.fromString(entityCollection, referenceString);\n}\n\nfunction createSpecializedProperty(type, entityCollection, packetData) {\n  if (defined(packetData.reference)) {\n    return createReferenceProperty(entityCollection, packetData.reference);\n  }\n\n  if (defined(packetData.velocityReference)) {\n    const referenceProperty = createReferenceProperty(\n      entityCollection,\n      packetData.velocityReference,\n    );\n    switch (type) {\n      case Cartesian3:\n      case UnitCartesian3:\n        return new VelocityVectorProperty(\n          referenceProperty,\n          type === UnitCartesian3,\n        );\n      case Quaternion:\n        return new VelocityOrientationProperty(referenceProperty);\n    }\n  }\n\n  throw new RuntimeError(`${JSON.stringify(packetData)} is not valid CZML.`);\n}\n\nfunction createAdapterProperty(property, adapterFunction) {\n  return new CallbackProperty(function (time, result) {\n    return adapterFunction(property.getValue(time, result));\n  }, property.isConstant);\n}\n\nconst scratchCartesian = new Cartesian3();\nconst scratchSpherical = new Spherical();\nconst scratchCartographic = new Cartographic();\nconst scratchTimeInterval = new TimeInterval();\nconst scratchQuaternion = new Quaternion();\n\nfunction unwrapColorInterval(czmlInterval) {\n  let rgbaf = czmlInterval.rgbaf;\n  if (defined(rgbaf)) {\n    return rgbaf;\n  }\n\n  const rgba = czmlInterval.rgba;\n  if (!defined(rgba)) {\n    return undefined;\n  }\n\n  const length = rgba.length;\n  if (length === Color.packedLength) {\n    return [\n      Color.byteToFloat(rgba[0]),\n      Color.byteToFloat(rgba[1]),\n      Color.byteToFloat(rgba[2]),\n      Color.byteToFloat(rgba[3]),\n    ];\n  }\n\n  rgbaf = new Array(length);\n  for (let i = 0; i < length; i += 5) {\n    rgbaf[i] = rgba[i];\n    rgbaf[i + 1] = Color.byteToFloat(rgba[i + 1]);\n    rgbaf[i + 2] = Color.byteToFloat(rgba[i + 2]);\n    rgbaf[i + 3] = Color.byteToFloat(rgba[i + 3]);\n    rgbaf[i + 4] = Color.byteToFloat(rgba[i + 4]);\n  }\n  return rgbaf;\n}\n\nfunction unwrapUriInterval(czmlInterval, sourceUri) {\n  const uri = czmlInterval.uri ?? czmlInterval;\n  if (defined(sourceUri)) {\n    return sourceUri.getDerivedResource({\n      url: uri,\n    });\n  }\n\n  return Resource.createIfNeeded(uri);\n}\n\nfunction unwrapRectangleInterval(czmlInterval) {\n  let wsen = czmlInterval.wsen;\n  if (defined(wsen)) {\n    return wsen;\n  }\n\n  const wsenDegrees = czmlInterval.wsenDegrees;\n  if (!defined(wsenDegrees)) {\n    return undefined;\n  }\n\n  const length = wsenDegrees.length;\n  if (length === Rectangle.packedLength) {\n    return [\n      CesiumMath.toRadians(wsenDegrees[0]),\n      CesiumMath.toRadians(wsenDegrees[1]),\n      CesiumMath.toRadians(wsenDegrees[2]),\n      CesiumMath.toRadians(wsenDegrees[3]),\n    ];\n  }\n\n  wsen = new Array(length);\n  for (let i = 0; i < length; i += 5) {\n    wsen[i] = wsenDegrees[i];\n    wsen[i + 1] = CesiumMath.toRadians(wsenDegrees[i + 1]);\n    wsen[i + 2] = CesiumMath.toRadians(wsenDegrees[i + 2]);\n    wsen[i + 3] = CesiumMath.toRadians(wsenDegrees[i + 3]);\n    wsen[i + 4] = CesiumMath.toRadians(wsenDegrees[i + 4]);\n  }\n  return wsen;\n}\n\nfunction convertUnitSphericalToCartesian(unitSpherical) {\n  const length = unitSpherical.length;\n  scratchSpherical.magnitude = 1.0;\n  if (length === 2) {\n    scratchSpherical.clock = unitSpherical[0];\n    scratchSpherical.cone = unitSpherical[1];\n    Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n    return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n  }\n\n  const result = new Array((length / 3) * 4);\n  for (let i = 0, j = 0; i < length; i += 3, j += 4) {\n    result[j] = unitSpherical[i];\n\n    scratchSpherical.clock = unitSpherical[i + 1];\n    scratchSpherical.cone = unitSpherical[i + 2];\n    Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n\n    result[j + 1] = scratchCartesian.x;\n    result[j + 2] = scratchCartesian.y;\n    result[j + 3] = scratchCartesian.z;\n  }\n  return result;\n}\n\nfunction convertSphericalToCartesian(spherical) {\n  const length = spherical.length;\n  if (length === 3) {\n    scratchSpherical.clock = spherical[0];\n    scratchSpherical.cone = spherical[1];\n    scratchSpherical.magnitude = spherical[2];\n    Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n    return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n  }\n\n  const result = new Array(length);\n  for (let i = 0; i < length; i += 4) {\n    result[i] = spherical[i];\n\n    scratchSpherical.clock = spherical[i + 1];\n    scratchSpherical.cone = spherical[i + 2];\n    scratchSpherical.magnitude = spherical[i + 3];\n    Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n\n    result[i + 1] = scratchCartesian.x;\n    result[i + 2] = scratchCartesian.y;\n    result[i + 3] = scratchCartesian.z;\n  }\n  return result;\n}\n\nfunction convertCartographicRadiansToCartesian(cartographicRadians) {\n  const length = cartographicRadians.length;\n  if (length === 3) {\n    scratchCartographic.longitude = cartographicRadians[0];\n    scratchCartographic.latitude = cartographicRadians[1];\n    scratchCartographic.height = cartographicRadians[2];\n    Ellipsoid.default.cartographicToCartesian(\n      scratchCartographic,\n      scratchCartesian,\n    );\n    return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n  }\n\n  const result = new Array(length);\n  for (let i = 0; i < length; i += 4) {\n    result[i] = cartographicRadians[i];\n\n    scratchCartographic.longitude = cartographicRadians[i + 1];\n    scratchCartographic.latitude = cartographicRadians[i + 2];\n    scratchCartographic.height = cartographicRadians[i + 3];\n    Ellipsoid.default.cartographicToCartesian(\n      scratchCartographic,\n      scratchCartesian,\n    );\n\n    result[i + 1] = scratchCartesian.x;\n    result[i + 2] = scratchCartesian.y;\n    result[i + 3] = scratchCartesian.z;\n  }\n  return result;\n}\n\nfunction convertCartographicDegreesToCartesian(cartographicDegrees) {\n  const length = cartographicDegrees.length;\n  if (length === 3) {\n    scratchCartographic.longitude = CesiumMath.toRadians(\n      cartographicDegrees[0],\n    );\n    scratchCartographic.latitude = CesiumMath.toRadians(cartographicDegrees[1]);\n    scratchCartographic.height = cartographicDegrees[2];\n    Ellipsoid.default.cartographicToCartesian(\n      scratchCartographic,\n      scratchCartesian,\n    );\n    return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n  }\n\n  const result = new Array(length);\n  for (let i = 0; i < length; i += 4) {\n    result[i] = cartographicDegrees[i];\n\n    scratchCartographic.longitude = CesiumMath.toRadians(\n      cartographicDegrees[i + 1],\n    );\n    scratchCartographic.latitude = CesiumMath.toRadians(\n      cartographicDegrees[i + 2],\n    );\n    scratchCartographic.height = cartographicDegrees[i + 3];\n    Ellipsoid.default.cartographicToCartesian(\n      scratchCartographic,\n      scratchCartesian,\n    );\n\n    result[i + 1] = scratchCartesian.x;\n    result[i + 2] = scratchCartesian.y;\n    result[i + 3] = scratchCartesian.z;\n  }\n  return result;\n}\n\nfunction unwrapCartesianInterval(czmlInterval) {\n  const cartesian = czmlInterval.cartesian;\n  if (defined(cartesian)) {\n    return cartesian;\n  }\n\n  const cartesianVelocity = czmlInterval.cartesianVelocity;\n  if (defined(cartesianVelocity)) {\n    return cartesianVelocity;\n  }\n\n  const unitCartesian = czmlInterval.unitCartesian;\n  if (defined(unitCartesian)) {\n    return unitCartesian;\n  }\n\n  const unitSpherical = czmlInterval.unitSpherical;\n  if (defined(unitSpherical)) {\n    return convertUnitSphericalToCartesian(unitSpherical);\n  }\n\n  const spherical = czmlInterval.spherical;\n  if (defined(spherical)) {\n    return convertSphericalToCartesian(spherical);\n  }\n\n  const cartographicRadians = czmlInterval.cartographicRadians;\n  if (defined(cartographicRadians)) {\n    return convertCartographicRadiansToCartesian(cartographicRadians);\n  }\n\n  const cartographicDegrees = czmlInterval.cartographicDegrees;\n  if (defined(cartographicDegrees)) {\n    return convertCartographicDegreesToCartesian(cartographicDegrees);\n  }\n\n  throw new RuntimeError(\n    `${JSON.stringify(czmlInterval)} is not a valid CZML interval.`,\n  );\n}\n\nfunction normalizePackedCartesianArray(array, startingIndex) {\n  Cartesian3.unpack(array, startingIndex, scratchCartesian);\n  Cartesian3.normalize(scratchCartesian, scratchCartesian);\n  Cartesian3.pack(scratchCartesian, array, startingIndex);\n}\n\nfunction unwrapUnitCartesianInterval(czmlInterval) {\n  const cartesian = unwrapCartesianInterval(czmlInterval);\n  if (cartesian.length === 3) {\n    normalizePackedCartesianArray(cartesian, 0);\n    return cartesian;\n  }\n\n  for (let i = 1; i < cartesian.length; i += 4) {\n    normalizePackedCartesianArray(cartesian, i);\n  }\n\n  return cartesian;\n}\n\nfunction normalizePackedQuaternionArray(array, startingIndex) {\n  Quaternion.unpack(array, startingIndex, scratchQuaternion);\n  Quaternion.normalize(scratchQuaternion, scratchQuaternion);\n  Quaternion.pack(scratchQuaternion, array, startingIndex);\n}\n\nfunction unwrapQuaternionInterval(czmlInterval) {\n  const unitQuaternion = czmlInterval.unitQuaternion;\n  if (defined(unitQuaternion)) {\n    if (unitQuaternion.length === 4) {\n      normalizePackedQuaternionArray(unitQuaternion, 0);\n      return unitQuaternion;\n    }\n\n    for (let i = 1; i < unitQuaternion.length; i += 5) {\n      normalizePackedQuaternionArray(unitQuaternion, i);\n    }\n  }\n  return unitQuaternion;\n}\n\nfunction getPropertyType(czmlInterval) {\n  // The associations in this function need to be kept in sync with the\n  // associations in unwrapInterval.\n\n  // Intentionally omitted due to conficts in CZML property names:\n  // * Image (conflicts with Uri)\n  // * Rotation (conflicts with Number)\n  //\n  // cartesianVelocity is also omitted due to incomplete support for\n  // derivative information in CZML properties.\n  // (Currently cartesianVelocity is hacked directly into the position processing code)\n  if (typeof czmlInterval === \"boolean\") {\n    return Boolean;\n  } else if (typeof czmlInterval === \"number\") {\n    return Number;\n  } else if (typeof czmlInterval === \"string\") {\n    return String;\n  } else if (czmlInterval.hasOwnProperty(\"array\")) {\n    return Array;\n  } else if (czmlInterval.hasOwnProperty(\"boolean\")) {\n    return Boolean;\n  } else if (czmlInterval.hasOwnProperty(\"boundingRectangle\")) {\n    return BoundingRectangle;\n  } else if (czmlInterval.hasOwnProperty(\"cartesian2\")) {\n    return Cartesian2;\n  } else if (\n    czmlInterval.hasOwnProperty(\"cartesian\") ||\n    czmlInterval.hasOwnProperty(\"spherical\") ||\n    czmlInterval.hasOwnProperty(\"cartographicRadians\") ||\n    czmlInterval.hasOwnProperty(\"cartographicDegrees\")\n  ) {\n    return Cartesian3;\n  } else if (\n    czmlInterval.hasOwnProperty(\"unitCartesian\") ||\n    czmlInterval.hasOwnProperty(\"unitSpherical\")\n  ) {\n    return UnitCartesian3;\n  } else if (\n    czmlInterval.hasOwnProperty(\"rgba\") ||\n    czmlInterval.hasOwnProperty(\"rgbaf\")\n  ) {\n    return Color;\n  } else if (czmlInterval.hasOwnProperty(\"arcType\")) {\n    return ArcType;\n  } else if (czmlInterval.hasOwnProperty(\"classificationType\")) {\n    return ClassificationType;\n  } else if (czmlInterval.hasOwnProperty(\"colorBlendMode\")) {\n    return ColorBlendMode;\n  } else if (czmlInterval.hasOwnProperty(\"cornerType\")) {\n    return CornerType;\n  } else if (czmlInterval.hasOwnProperty(\"heightReference\")) {\n    return HeightReference;\n  } else if (czmlInterval.hasOwnProperty(\"horizontalOrigin\")) {\n    return HorizontalOrigin;\n  } else if (czmlInterval.hasOwnProperty(\"date\")) {\n    return JulianDate;\n  } else if (czmlInterval.hasOwnProperty(\"labelStyle\")) {\n    return LabelStyle;\n  } else if (czmlInterval.hasOwnProperty(\"number\")) {\n    return Number;\n  } else if (czmlInterval.hasOwnProperty(\"nearFarScalar\")) {\n    return NearFarScalar;\n  } else if (czmlInterval.hasOwnProperty(\"distanceDisplayCondition\")) {\n    return DistanceDisplayCondition;\n  } else if (\n    czmlInterval.hasOwnProperty(\"object\") ||\n    czmlInterval.hasOwnProperty(\"value\")\n  ) {\n    return Object;\n  } else if (czmlInterval.hasOwnProperty(\"unitQuaternion\")) {\n    return Quaternion;\n  } else if (czmlInterval.hasOwnProperty(\"shadowMode\")) {\n    return ShadowMode;\n  } else if (czmlInterval.hasOwnProperty(\"string\")) {\n    return String;\n  } else if (czmlInterval.hasOwnProperty(\"stripeOrientation\")) {\n    return StripeOrientation;\n  } else if (\n    czmlInterval.hasOwnProperty(\"wsen\") ||\n    czmlInterval.hasOwnProperty(\"wsenDegrees\")\n  ) {\n    return Rectangle;\n  } else if (czmlInterval.hasOwnProperty(\"uri\")) {\n    return Uri;\n  } else if (czmlInterval.hasOwnProperty(\"verticalOrigin\")) {\n    return VerticalOrigin;\n  }\n  // fallback case\n  return Object;\n}\n\nfunction unwrapInterval(type, czmlInterval, sourceUri) {\n  // The associations in this function need to be kept in sync with the\n  // associations in getPropertyType\n  switch (type) {\n    case ArcType:\n      return ArcType[czmlInterval.arcType ?? czmlInterval];\n    case Array:\n      return czmlInterval.array;\n    case Boolean:\n      return czmlInterval[\"boolean\"] ?? czmlInterval;\n    case BoundingRectangle:\n      return czmlInterval.boundingRectangle;\n    case Cartesian2:\n      return czmlInterval.cartesian2;\n    case Cartesian3:\n      return unwrapCartesianInterval(czmlInterval);\n    case UnitCartesian3:\n      return unwrapUnitCartesianInterval(czmlInterval);\n    case Color:\n      return unwrapColorInterval(czmlInterval);\n    case ClassificationType:\n      return ClassificationType[\n        czmlInterval.classificationType ?? czmlInterval\n      ];\n    case ColorBlendMode:\n      return ColorBlendMode[czmlInterval.colorBlendMode ?? czmlInterval];\n    case CornerType:\n      return CornerType[czmlInterval.cornerType ?? czmlInterval];\n    case HeightReference:\n      return HeightReference[czmlInterval.heightReference ?? czmlInterval];\n    case HorizontalOrigin:\n      return HorizontalOrigin[czmlInterval.horizontalOrigin ?? czmlInterval];\n    case Image:\n      return unwrapUriInterval(czmlInterval, sourceUri);\n    case JulianDate:\n      return JulianDate.fromIso8601(czmlInterval.date ?? czmlInterval);\n    case LabelStyle:\n      return LabelStyle[czmlInterval.labelStyle ?? czmlInterval];\n    case Number:\n      return czmlInterval.number ?? czmlInterval;\n    case NearFarScalar:\n      return czmlInterval.nearFarScalar;\n    case DistanceDisplayCondition:\n      return czmlInterval.distanceDisplayCondition;\n    case Object:\n      return czmlInterval.object ?? czmlInterval.value ?? czmlInterval;\n    case Quaternion:\n      return unwrapQuaternionInterval(czmlInterval);\n    case Rotation:\n      return czmlInterval.number ?? czmlInterval;\n    case SensorVolumePortionToDisplay:\n      return SensorVolumePortionToDisplay[\n        czmlInterval.portionToDisplay ?? czmlInterval\n      ];\n    case ShadowMode:\n      return ShadowMode[\n        czmlInterval.shadowMode ?? czmlInterval.shadows ?? czmlInterval\n      ];\n    case String:\n      return czmlInterval.string ?? czmlInterval;\n    case StripeOrientation:\n      return StripeOrientation[czmlInterval.stripeOrientation ?? czmlInterval];\n    case Rectangle:\n      return unwrapRectangleInterval(czmlInterval);\n    case Uri:\n      return unwrapUriInterval(czmlInterval, sourceUri);\n    case VerticalOrigin:\n      return VerticalOrigin[czmlInterval.verticalOrigin ?? czmlInterval];\n    default:\n      throw new RuntimeError(`Unknown CzmlDataSource interval type: ${type}`);\n  }\n}\n\nconst interpolators = {\n  HERMITE: HermitePolynomialApproximation,\n  LAGRANGE: LagrangePolynomialApproximation,\n  LINEAR: LinearApproximation,\n};\n\nfunction updateInterpolationSettings(packetData, property) {\n  const interpolationAlgorithm = packetData.interpolationAlgorithm;\n  const interpolationDegree = packetData.interpolationDegree;\n  if (defined(interpolationAlgorithm) || defined(interpolationDegree)) {\n    property.setInterpolationOptions({\n      interpolationAlgorithm: interpolators[interpolationAlgorithm],\n      interpolationDegree: interpolationDegree,\n    });\n  }\n\n  const forwardExtrapolationType = packetData.forwardExtrapolationType;\n  if (defined(forwardExtrapolationType)) {\n    property.forwardExtrapolationType =\n      ExtrapolationType[forwardExtrapolationType];\n  }\n\n  const forwardExtrapolationDuration = packetData.forwardExtrapolationDuration;\n  if (defined(forwardExtrapolationDuration)) {\n    property.forwardExtrapolationDuration = forwardExtrapolationDuration;\n  }\n\n  const backwardExtrapolationType = packetData.backwardExtrapolationType;\n  if (defined(backwardExtrapolationType)) {\n    property.backwardExtrapolationType =\n      ExtrapolationType[backwardExtrapolationType];\n  }\n\n  const backwardExtrapolationDuration =\n    packetData.backwardExtrapolationDuration;\n  if (defined(backwardExtrapolationDuration)) {\n    property.backwardExtrapolationDuration = backwardExtrapolationDuration;\n  }\n}\n\nconst iso8601Scratch = {\n  iso8601: undefined,\n};\n\nfunction intervalFromString(intervalString) {\n  if (!defined(intervalString)) {\n    return undefined;\n  }\n  iso8601Scratch.iso8601 = intervalString;\n  return TimeInterval.fromIso8601(iso8601Scratch);\n}\n\nfunction wrapPropertyInInfiniteInterval(property) {\n  const interval = Iso8601.MAXIMUM_INTERVAL.clone();\n  interval.data = property;\n  return interval;\n}\n\nfunction convertPropertyToComposite(property) {\n  // Create the composite and add the old property, wrapped in an infinite interval.\n  const composite = new CompositeProperty();\n  composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n  return composite;\n}\n\nfunction convertPositionPropertyToComposite(property) {\n  // Create the composite and add the old property, wrapped in an infinite interval.\n  const composite = new CompositePositionProperty(property.referenceFrame);\n  composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n  return composite;\n}\n\nfunction processProperty(\n  type,\n  object,\n  propertyName,\n  packetData,\n  constrainedInterval,\n  sourceUri,\n  entityCollection,\n) {\n  let combinedInterval = intervalFromString(packetData.interval);\n  if (defined(constrainedInterval)) {\n    if (defined(combinedInterval)) {\n      combinedInterval = TimeInterval.intersect(\n        combinedInterval,\n        constrainedInterval,\n        scratchTimeInterval,\n      );\n    } else {\n      combinedInterval = constrainedInterval;\n    }\n  }\n\n  let packedLength;\n  let unwrappedInterval;\n  let unwrappedIntervalLength;\n\n  // CZML properties can be defined in many ways.  Most ways represent a structure for\n  // encoding a single value (number, string, cartesian, etc.)  Regardless of the value type,\n  // if it encodes a single value it will get loaded into a ConstantProperty eventually.\n  // Alternatively, there are ways of defining a property that require specialized\n  // client-side representation. Currently, these are ReferenceProperty,\n  // and client-side velocity computation properties such as VelocityVectorProperty.\n  const isValue =\n    !defined(packetData.reference) && !defined(packetData.velocityReference);\n  const hasInterval =\n    defined(combinedInterval) &&\n    !combinedInterval.equals(Iso8601.MAXIMUM_INTERVAL);\n\n  if (packetData.delete === true) {\n    // If deleting this property for all time, we can simply set to undefined and return.\n    if (!hasInterval) {\n      object[propertyName] = undefined;\n      return;\n    }\n\n    // Deleting depends on the type of property we have.\n    return removePropertyData(object[propertyName], combinedInterval);\n  }\n\n  let isSampled = false;\n\n  if (isValue) {\n    unwrappedInterval = unwrapInterval(type, packetData, sourceUri);\n    if (!defined(unwrappedInterval)) {\n      // not a known value type, bail\n      return;\n    }\n    packedLength = type.packedLength ?? 1;\n    unwrappedIntervalLength = unwrappedInterval.length ?? 1;\n    isSampled =\n      !defined(packetData.array) &&\n      typeof unwrappedInterval !== \"string\" &&\n      unwrappedIntervalLength > packedLength &&\n      type !== Object;\n  }\n\n  // Rotation is a special case because it represents a native type (Number)\n  // and therefore does not need to be unpacked when loaded as a constant value.\n  const needsUnpacking = typeof type.unpack === \"function\" && type !== Rotation;\n\n  // Any time a constant value is assigned, it completely blows away anything else.\n  if (!isSampled && !hasInterval) {\n    if (isValue) {\n      object[propertyName] = new ConstantProperty(\n        needsUnpacking ? type.unpack(unwrappedInterval, 0) : unwrappedInterval,\n      );\n    } else {\n      object[propertyName] = createSpecializedProperty(\n        type,\n        entityCollection,\n        packetData,\n      );\n    }\n    return;\n  }\n\n  let property = object[propertyName];\n\n  let epoch;\n  const packetEpoch = packetData.epoch;\n  if (defined(packetEpoch)) {\n    epoch = JulianDate.fromIso8601(packetEpoch);\n  }\n\n  // Without an interval, any sampled value is infinite, meaning it completely\n  // replaces any non-sampled property that may exist.\n  if (isSampled && !hasInterval) {\n    if (!(property instanceof SampledProperty)) {\n      object[propertyName] = property = new SampledProperty(type);\n    }\n    property.addSamplesPackedArray(unwrappedInterval, epoch);\n    updateInterpolationSettings(packetData, property);\n    return;\n  }\n\n  let interval;\n\n  // A constant value with an interval is normally part of a TimeIntervalCollection,\n  // However, if the current property is not a time-interval collection, we need\n  // to turn it into a Composite, preserving the old data with the new interval.\n  if (!isSampled && hasInterval) {\n    // Create a new interval for the constant value.\n    combinedInterval = combinedInterval.clone();\n    if (isValue) {\n      combinedInterval.data = needsUnpacking\n        ? type.unpack(unwrappedInterval, 0)\n        : unwrappedInterval;\n    } else {\n      combinedInterval.data = createSpecializedProperty(\n        type,\n        entityCollection,\n        packetData,\n      );\n    }\n\n    // If no property exists, simply use a new interval collection\n    if (!defined(property)) {\n      object[propertyName] = property = isValue\n        ? new TimeIntervalCollectionProperty()\n        : new CompositeProperty();\n    }\n\n    if (isValue && property instanceof TimeIntervalCollectionProperty) {\n      // If we created a collection, or it already was one, use it.\n      property.intervals.addInterval(combinedInterval);\n    } else if (property instanceof CompositeProperty) {\n      // If the collection was already a CompositeProperty, use it.\n      if (isValue) {\n        combinedInterval.data = new ConstantProperty(combinedInterval.data);\n      }\n      property.intervals.addInterval(combinedInterval);\n    } else {\n      // Otherwise, create a CompositeProperty but preserve the existing data.\n      object[propertyName] = property = convertPropertyToComposite(property);\n\n      // Change the new data to a ConstantProperty and add it.\n      if (isValue) {\n        combinedInterval.data = new ConstantProperty(combinedInterval.data);\n      }\n      property.intervals.addInterval(combinedInterval);\n    }\n\n    return;\n  }\n\n  // isSampled && hasInterval\n  if (!defined(property)) {\n    object[propertyName] = property = new CompositeProperty();\n  }\n\n  // Create a CompositeProperty but preserve the existing data.\n  if (!(property instanceof CompositeProperty)) {\n    object[propertyName] = property = convertPropertyToComposite(property);\n  }\n\n  // Check if the interval already exists in the composite.\n  const intervals = property.intervals;\n  interval = intervals.findInterval(combinedInterval);\n  if (!defined(interval) || !(interval.data instanceof SampledProperty)) {\n    // If not, create a SampledProperty for it.\n    interval = combinedInterval.clone();\n    interval.data = new SampledProperty(type);\n    intervals.addInterval(interval);\n  }\n  interval.data.addSamplesPackedArray(unwrappedInterval, epoch);\n  updateInterpolationSettings(packetData, interval.data);\n}\n\nfunction removePropertyData(property, interval) {\n  if (property instanceof SampledProperty) {\n    property.removeSamples(interval);\n    return;\n  } else if (property instanceof TimeIntervalCollectionProperty) {\n    property.intervals.removeInterval(interval);\n    return;\n  } else if (property instanceof CompositeProperty) {\n    const intervals = property.intervals;\n    for (let i = 0; i < intervals.length; ++i) {\n      const intersection = TimeInterval.intersect(\n        intervals.get(i),\n        interval,\n        scratchTimeInterval,\n      );\n      if (!intersection.isEmpty) {\n        // remove data from the contained properties\n        removePropertyData(intersection.data, interval);\n      }\n    }\n    // remove the intervals from the composite\n    intervals.removeInterval(interval);\n    return;\n  }\n}\n\nfunction processPacketData(\n  type,\n  object,\n  propertyName,\n  packetData,\n  interval,\n  sourceUri,\n  entityCollection,\n) {\n  if (!defined(packetData)) {\n    return;\n  }\n\n  if (Array.isArray(packetData)) {\n    for (let i = 0, len = packetData.length; i < len; ++i) {\n      processProperty(\n        type,\n        object,\n        propertyName,\n        packetData[i],\n        interval,\n        sourceUri,\n        entityCollection,\n      );\n    }\n  } else {\n    processProperty(\n      type,\n      object,\n      propertyName,\n      packetData,\n      interval,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processPositionProperty(\n  object,\n  propertyName,\n  packetData,\n  constrainedInterval,\n  sourceUri,\n  entityCollection,\n) {\n  let combinedInterval = intervalFromString(packetData.interval);\n  if (defined(constrainedInterval)) {\n    if (defined(combinedInterval)) {\n      combinedInterval = TimeInterval.intersect(\n        combinedInterval,\n        constrainedInterval,\n        scratchTimeInterval,\n      );\n    } else {\n      combinedInterval = constrainedInterval;\n    }\n  }\n\n  const numberOfDerivatives = defined(packetData.cartesianVelocity) ? 1 : 0;\n  const packedLength = Cartesian3.packedLength * (numberOfDerivatives + 1);\n  let unwrappedInterval;\n  let unwrappedIntervalLength;\n  const isValue = !defined(packetData.reference);\n  const hasInterval =\n    defined(combinedInterval) &&\n    !combinedInterval.equals(Iso8601.MAXIMUM_INTERVAL);\n\n  if (packetData.delete === true) {\n    // If deleting this property for all time, we can simply set to undefined and return.\n    if (!hasInterval) {\n      object[propertyName] = undefined;\n      return;\n    }\n\n    // Deleting depends on the type of property we have.\n    return removePositionPropertyData(object[propertyName], combinedInterval);\n  }\n\n  let referenceFrame;\n  let isSampled = false;\n\n  if (isValue) {\n    if (defined(packetData.referenceFrame)) {\n      referenceFrame = ReferenceFrame[packetData.referenceFrame];\n    }\n    referenceFrame = referenceFrame ?? ReferenceFrame.FIXED;\n    unwrappedInterval = unwrapCartesianInterval(packetData);\n    unwrappedIntervalLength = unwrappedInterval.length ?? 1;\n    isSampled = unwrappedIntervalLength > packedLength;\n  }\n\n  // Any time a constant value is assigned, it completely blows away anything else.\n  if (!isSampled && !hasInterval) {\n    if (isValue) {\n      object[propertyName] = new ConstantPositionProperty(\n        Cartesian3.unpack(unwrappedInterval),\n        referenceFrame,\n      );\n    } else {\n      object[propertyName] = createReferenceProperty(\n        entityCollection,\n        packetData.reference,\n      );\n    }\n    return;\n  }\n\n  let property = object[propertyName];\n\n  let epoch;\n  const packetEpoch = packetData.epoch;\n  if (defined(packetEpoch)) {\n    epoch = JulianDate.fromIso8601(packetEpoch);\n  }\n\n  // Without an interval, any sampled value is infinite, meaning it completely\n  // replaces any non-sampled property that may exist.\n  if (isSampled && !hasInterval) {\n    if (\n      !(property instanceof SampledPositionProperty) ||\n      (defined(referenceFrame) && property.referenceFrame !== referenceFrame)\n    ) {\n      object[propertyName] = property = new SampledPositionProperty(\n        referenceFrame,\n        numberOfDerivatives,\n      );\n    }\n    property.addSamplesPackedArray(unwrappedInterval, epoch);\n    updateInterpolationSettings(packetData, property);\n    return;\n  }\n\n  let interval;\n\n  // A constant value with an interval is normally part of a TimeIntervalCollection,\n  // However, if the current property is not a time-interval collection, we need\n  // to turn it into a Composite, preserving the old data with the new interval.\n  if (!isSampled && hasInterval) {\n    // Create a new interval for the constant value.\n    combinedInterval = combinedInterval.clone();\n    if (isValue) {\n      combinedInterval.data = Cartesian3.unpack(unwrappedInterval);\n    } else {\n      combinedInterval.data = createReferenceProperty(\n        entityCollection,\n        packetData.reference,\n      );\n    }\n\n    // If no property exists, simply use a new interval collection\n    if (!defined(property)) {\n      if (isValue) {\n        property = new TimeIntervalCollectionPositionProperty(referenceFrame);\n      } else {\n        property = new CompositePositionProperty(referenceFrame);\n      }\n      object[propertyName] = property;\n    }\n\n    if (\n      isValue &&\n      property instanceof TimeIntervalCollectionPositionProperty &&\n      defined(referenceFrame) &&\n      property.referenceFrame === referenceFrame\n    ) {\n      // If we create a collection, or it already existed, use it.\n      property.intervals.addInterval(combinedInterval);\n    } else if (property instanceof CompositePositionProperty) {\n      // If the collection was already a CompositePositionProperty, use it.\n      if (isValue) {\n        combinedInterval.data = new ConstantPositionProperty(\n          combinedInterval.data,\n          referenceFrame,\n        );\n      }\n      property.intervals.addInterval(combinedInterval);\n    } else {\n      // Otherwise, create a CompositePositionProperty but preserve the existing data.\n      object[propertyName] = property =\n        convertPositionPropertyToComposite(property);\n\n      // Change the new data to a ConstantPositionProperty and add it.\n      if (isValue) {\n        combinedInterval.data = new ConstantPositionProperty(\n          combinedInterval.data,\n          referenceFrame,\n        );\n      }\n      property.intervals.addInterval(combinedInterval);\n    }\n\n    return;\n  }\n\n  // isSampled && hasInterval\n  if (!defined(property)) {\n    object[propertyName] = property = new CompositePositionProperty(\n      referenceFrame,\n    );\n  } else if (!(property instanceof CompositePositionProperty)) {\n    // Create a CompositeProperty but preserve the existing data.\n    object[propertyName] = property =\n      convertPositionPropertyToComposite(property);\n  }\n\n  // Check if the interval already exists in the composite.\n  const intervals = property.intervals;\n  interval = intervals.findInterval(combinedInterval);\n  if (\n    !defined(interval) ||\n    !(interval.data instanceof SampledPositionProperty) ||\n    (defined(referenceFrame) && interval.data.referenceFrame !== referenceFrame)\n  ) {\n    // If not, create a SampledPositionProperty for it.\n    interval = combinedInterval.clone();\n    interval.data = new SampledPositionProperty(\n      referenceFrame,\n      numberOfDerivatives,\n    );\n    intervals.addInterval(interval);\n  }\n  interval.data.addSamplesPackedArray(unwrappedInterval, epoch);\n  updateInterpolationSettings(packetData, interval.data);\n}\n\nfunction removePositionPropertyData(property, interval) {\n  if (property instanceof SampledPositionProperty) {\n    property.removeSamples(interval);\n    return;\n  } else if (property instanceof TimeIntervalCollectionPositionProperty) {\n    property.intervals.removeInterval(interval);\n    return;\n  } else if (property instanceof CompositePositionProperty) {\n    const intervals = property.intervals;\n    for (let i = 0; i < intervals.length; ++i) {\n      const intersection = TimeInterval.intersect(\n        intervals.get(i),\n        interval,\n        scratchTimeInterval,\n      );\n      if (!intersection.isEmpty) {\n        // remove data from the contained properties\n        removePositionPropertyData(intersection.data, interval);\n      }\n    }\n    // remove the intervals from the composite\n    intervals.removeInterval(interval);\n    return;\n  }\n}\n\nfunction processPositionPacketData(\n  object,\n  propertyName,\n  packetData,\n  interval,\n  sourceUri,\n  entityCollection,\n) {\n  if (!defined(packetData)) {\n    return;\n  }\n\n  if (Array.isArray(packetData)) {\n    for (let i = 0, len = packetData.length; i < len; ++i) {\n      processPositionProperty(\n        object,\n        propertyName,\n        packetData[i],\n        interval,\n        sourceUri,\n        entityCollection,\n      );\n    }\n  } else {\n    processPositionProperty(\n      object,\n      propertyName,\n      packetData,\n      interval,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processShapePacketData(\n  object,\n  propertyName,\n  packetData,\n  entityCollection,\n) {\n  if (defined(packetData.references)) {\n    processReferencesArrayPacketData(\n      object,\n      propertyName,\n      packetData.references,\n      packetData.interval,\n      entityCollection,\n      PropertyArray,\n      CompositeProperty,\n    );\n  } else {\n    if (defined(packetData.cartesian2)) {\n      packetData.array = Cartesian2.unpackArray(packetData.cartesian2);\n    } else if (defined(packetData.cartesian)) {\n      // for backwards compatibility, also accept `cartesian`\n      packetData.array = Cartesian2.unpackArray(packetData.cartesian);\n    }\n\n    if (defined(packetData.array)) {\n      processPacketData(\n        Array,\n        object,\n        propertyName,\n        packetData,\n        undefined,\n        undefined,\n        entityCollection,\n      );\n    }\n  }\n}\n\nfunction processMaterialProperty(\n  object,\n  propertyName,\n  packetData,\n  constrainedInterval,\n  sourceUri,\n  entityCollection,\n) {\n  let combinedInterval = intervalFromString(packetData.interval);\n  if (defined(constrainedInterval)) {\n    if (defined(combinedInterval)) {\n      combinedInterval = TimeInterval.intersect(\n        combinedInterval,\n        constrainedInterval,\n        scratchTimeInterval,\n      );\n    } else {\n      combinedInterval = constrainedInterval;\n    }\n  }\n\n  let property = object[propertyName];\n  let existingMaterial;\n  let existingInterval;\n\n  if (defined(combinedInterval)) {\n    if (!(property instanceof CompositeMaterialProperty)) {\n      property = new CompositeMaterialProperty();\n      object[propertyName] = property;\n    }\n    //See if we already have data at that interval.\n    const thisIntervals = property.intervals;\n    existingInterval = thisIntervals.findInterval({\n      start: combinedInterval.start,\n      stop: combinedInterval.stop,\n    });\n    if (defined(existingInterval)) {\n      //We have an interval, but we need to make sure the\n      //new data is the same type of material as the old data.\n      existingMaterial = existingInterval.data;\n    } else {\n      //If not, create it.\n      existingInterval = combinedInterval.clone();\n      thisIntervals.addInterval(existingInterval);\n    }\n  } else {\n    existingMaterial = property;\n  }\n\n  let materialData;\n  if (defined(packetData.solidColor)) {\n    if (!(existingMaterial instanceof ColorMaterialProperty)) {\n      existingMaterial = new ColorMaterialProperty();\n    }\n    materialData = packetData.solidColor;\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"color\",\n      materialData.color,\n      undefined,\n      undefined,\n      entityCollection,\n    );\n  } else if (defined(packetData.grid)) {\n    if (!(existingMaterial instanceof GridMaterialProperty)) {\n      existingMaterial = new GridMaterialProperty();\n    }\n    materialData = packetData.grid;\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"color\",\n      materialData.color,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Number,\n      existingMaterial,\n      \"cellAlpha\",\n      materialData.cellAlpha,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Cartesian2,\n      existingMaterial,\n      \"lineCount\",\n      materialData.lineCount,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Cartesian2,\n      existingMaterial,\n      \"lineThickness\",\n      materialData.lineThickness,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Cartesian2,\n      existingMaterial,\n      \"lineOffset\",\n      materialData.lineOffset,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  } else if (defined(packetData.image)) {\n    if (!(existingMaterial instanceof ImageMaterialProperty)) {\n      existingMaterial = new ImageMaterialProperty();\n    }\n    materialData = packetData.image;\n    processPacketData(\n      Image,\n      existingMaterial,\n      \"image\",\n      materialData.image,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Cartesian2,\n      existingMaterial,\n      \"repeat\",\n      materialData.repeat,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"color\",\n      materialData.color,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Boolean,\n      existingMaterial,\n      \"transparent\",\n      materialData.transparent,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  } else if (defined(packetData.stripe)) {\n    if (!(existingMaterial instanceof StripeMaterialProperty)) {\n      existingMaterial = new StripeMaterialProperty();\n    }\n    materialData = packetData.stripe;\n    processPacketData(\n      StripeOrientation,\n      existingMaterial,\n      \"orientation\",\n      materialData.orientation,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"evenColor\",\n      materialData.evenColor,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"oddColor\",\n      materialData.oddColor,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Number,\n      existingMaterial,\n      \"offset\",\n      materialData.offset,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Number,\n      existingMaterial,\n      \"repeat\",\n      materialData.repeat,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  } else if (defined(packetData.polylineOutline)) {\n    if (!(existingMaterial instanceof PolylineOutlineMaterialProperty)) {\n      existingMaterial = new PolylineOutlineMaterialProperty();\n    }\n    materialData = packetData.polylineOutline;\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"color\",\n      materialData.color,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"outlineColor\",\n      materialData.outlineColor,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Number,\n      existingMaterial,\n      \"outlineWidth\",\n      materialData.outlineWidth,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  } else if (defined(packetData.polylineGlow)) {\n    if (!(existingMaterial instanceof PolylineGlowMaterialProperty)) {\n      existingMaterial = new PolylineGlowMaterialProperty();\n    }\n    materialData = packetData.polylineGlow;\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"color\",\n      materialData.color,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Number,\n      existingMaterial,\n      \"glowPower\",\n      materialData.glowPower,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Number,\n      existingMaterial,\n      \"taperPower\",\n      materialData.taperPower,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  } else if (defined(packetData.polylineArrow)) {\n    if (!(existingMaterial instanceof PolylineArrowMaterialProperty)) {\n      existingMaterial = new PolylineArrowMaterialProperty();\n    }\n    materialData = packetData.polylineArrow;\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"color\",\n      materialData.color,\n      undefined,\n      undefined,\n      entityCollection,\n    );\n  } else if (defined(packetData.polylineDash)) {\n    if (!(existingMaterial instanceof PolylineDashMaterialProperty)) {\n      existingMaterial = new PolylineDashMaterialProperty();\n    }\n    materialData = packetData.polylineDash;\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"color\",\n      materialData.color,\n      undefined,\n      undefined,\n      entityCollection,\n    );\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"gapColor\",\n      materialData.gapColor,\n      undefined,\n      undefined,\n      entityCollection,\n    );\n    processPacketData(\n      Number,\n      existingMaterial,\n      \"dashLength\",\n      materialData.dashLength,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Number,\n      existingMaterial,\n      \"dashPattern\",\n      materialData.dashPattern,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  } else if (defined(packetData.checkerboard)) {\n    if (!(existingMaterial instanceof CheckerboardMaterialProperty)) {\n      existingMaterial = new CheckerboardMaterialProperty();\n    }\n    materialData = packetData.checkerboard;\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"evenColor\",\n      materialData.evenColor,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Color,\n      existingMaterial,\n      \"oddColor\",\n      materialData.oddColor,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Cartesian2,\n      existingMaterial,\n      \"repeat\",\n      materialData.repeat,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  }\n\n  if (defined(existingInterval)) {\n    existingInterval.data = existingMaterial;\n  } else {\n    object[propertyName] = existingMaterial;\n  }\n}\n\nfunction processMaterialPacketData(\n  object,\n  propertyName,\n  packetData,\n  interval,\n  sourceUri,\n  entityCollection,\n) {\n  if (!defined(packetData)) {\n    return;\n  }\n\n  if (Array.isArray(packetData)) {\n    for (let i = 0, len = packetData.length; i < len; ++i) {\n      processMaterialProperty(\n        object,\n        propertyName,\n        packetData[i],\n        interval,\n        sourceUri,\n        entityCollection,\n      );\n    }\n  } else {\n    processMaterialProperty(\n      object,\n      propertyName,\n      packetData,\n      interval,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processName(entity, packet, entityCollection, sourceUri) {\n  const nameData = packet.name;\n  if (defined(nameData)) {\n    entity.name = packet.name;\n  }\n}\n\nfunction processDescription(entity, packet, entityCollection, sourceUri) {\n  const descriptionData = packet.description;\n  if (defined(descriptionData)) {\n    processPacketData(\n      String,\n      entity,\n      \"description\",\n      descriptionData,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processPosition(entity, packet, entityCollection, sourceUri) {\n  const positionData = packet.position;\n  if (defined(positionData)) {\n    processPositionPacketData(\n      entity,\n      \"position\",\n      positionData,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processViewFrom(entity, packet, entityCollection, sourceUri) {\n  const viewFromData = packet.viewFrom;\n  if (defined(viewFromData)) {\n    processPacketData(\n      Cartesian3,\n      entity,\n      \"viewFrom\",\n      viewFromData,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processOrientation(entity, packet, entityCollection, sourceUri) {\n  const orientationData = packet.orientation;\n  if (defined(orientationData)) {\n    processPacketData(\n      Quaternion,\n      entity,\n      \"orientation\",\n      orientationData,\n      undefined,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processProperties(entity, packet, entityCollection, sourceUri) {\n  const propertiesData = packet.properties;\n  if (defined(propertiesData)) {\n    if (!defined(entity.properties)) {\n      entity.properties = new PropertyBag();\n    }\n\n    // We cannot simply call processPacketData(entity, 'properties', propertyData, undefined, sourceUri, entityCollection)\n    // because each property of \"properties\" may vary separately.\n    // The properties will be accessible as entity.properties.myprop.getValue(time).\n\n    for (const key in propertiesData) {\n      if (propertiesData.hasOwnProperty(key)) {\n        if (!entity.properties.hasProperty(key)) {\n          entity.properties.addProperty(key);\n        }\n\n        const propertyData = propertiesData[key];\n        if (Array.isArray(propertyData)) {\n          for (let i = 0, len = propertyData.length; i < len; ++i) {\n            processProperty(\n              getPropertyType(propertyData[i]),\n              entity.properties,\n              key,\n              propertyData[i],\n              undefined,\n              sourceUri,\n              entityCollection,\n            );\n          }\n        } else {\n          processProperty(\n            getPropertyType(propertyData),\n            entity.properties,\n            key,\n            propertyData,\n            undefined,\n            sourceUri,\n            entityCollection,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction processReferencesArrayPacketData(\n  object,\n  propertyName,\n  references,\n  interval,\n  entityCollection,\n  PropertyArrayType,\n  CompositePropertyArrayType,\n) {\n  const properties = references.map(function (reference) {\n    return createReferenceProperty(entityCollection, reference);\n  });\n\n  if (defined(interval)) {\n    interval = intervalFromString(interval);\n    let property = object[propertyName];\n    if (!(property instanceof CompositePropertyArrayType)) {\n      // If the property was not already a CompositeProperty,\n      // create a CompositeProperty but preserve the existing data.\n\n      // Create the composite and add the old property, wrapped in an infinite interval.\n      const composite = new CompositePropertyArrayType();\n      composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n\n      object[propertyName] = property = composite;\n    }\n\n    interval.data = new PropertyArrayType(properties);\n    property.intervals.addInterval(interval);\n  } else {\n    object[propertyName] = new PropertyArrayType(properties);\n  }\n}\n\nfunction processArrayPacketData(\n  object,\n  propertyName,\n  packetData,\n  entityCollection,\n) {\n  const references = packetData.references;\n  if (defined(references)) {\n    processReferencesArrayPacketData(\n      object,\n      propertyName,\n      references,\n      packetData.interval,\n      entityCollection,\n      PropertyArray,\n      CompositeProperty,\n    );\n  } else {\n    processPacketData(\n      Array,\n      object,\n      propertyName,\n      packetData,\n      undefined,\n      undefined,\n      entityCollection,\n    );\n  }\n}\n\nfunction processArray(object, propertyName, packetData, entityCollection) {\n  if (!defined(packetData)) {\n    return;\n  }\n\n  if (Array.isArray(packetData)) {\n    for (let i = 0, length = packetData.length; i < length; ++i) {\n      processArrayPacketData(\n        object,\n        propertyName,\n        packetData[i],\n        entityCollection,\n      );\n    }\n  } else {\n    processArrayPacketData(object, propertyName, packetData, entityCollection);\n  }\n}\n\nfunction processPositionArrayPacketData(\n  object,\n  propertyName,\n  packetData,\n  entityCollection,\n) {\n  const references = packetData.references;\n  if (defined(references)) {\n    processReferencesArrayPacketData(\n      object,\n      propertyName,\n      references,\n      packetData.interval,\n      entityCollection,\n      PositionPropertyArray,\n      CompositePositionProperty,\n    );\n  } else {\n    if (defined(packetData.cartesian)) {\n      packetData.array = Cartesian3.unpackArray(packetData.cartesian);\n    } else if (defined(packetData.cartographicRadians)) {\n      packetData.array = Cartesian3.fromRadiansArrayHeights(\n        packetData.cartographicRadians,\n        Ellipsoid.default,\n      );\n    } else if (defined(packetData.cartographicDegrees)) {\n      packetData.array = Cartesian3.fromDegreesArrayHeights(\n        packetData.cartographicDegrees,\n        Ellipsoid.default,\n      );\n    }\n\n    if (defined(packetData.array)) {\n      processPacketData(\n        Array,\n        object,\n        propertyName,\n        packetData,\n        undefined,\n        undefined,\n        entityCollection,\n      );\n    }\n  }\n}\n\nfunction processPositionArray(\n  object,\n  propertyName,\n  packetData,\n  entityCollection,\n) {\n  if (!defined(packetData)) {\n    return;\n  }\n\n  if (Array.isArray(packetData)) {\n    for (let i = 0, length = packetData.length; i < length; ++i) {\n      processPositionArrayPacketData(\n        object,\n        propertyName,\n        packetData[i],\n        entityCollection,\n      );\n    }\n  } else {\n    processPositionArrayPacketData(\n      object,\n      propertyName,\n      packetData,\n      entityCollection,\n    );\n  }\n}\n\nfunction unpackCartesianArray(array) {\n  return Cartesian3.unpackArray(array);\n}\n\nfunction unpackCartographicRadiansArray(array) {\n  return Cartesian3.fromRadiansArrayHeights(array, Ellipsoid.default);\n}\n\nfunction unpackCartographicDegreesArray(array) {\n  return Cartesian3.fromDegreesArrayHeights(array, Ellipsoid.default);\n}\n\nfunction processPositionArrayOfArraysPacketData(\n  object,\n  propertyName,\n  packetData,\n  entityCollection,\n) {\n  const references = packetData.references;\n  if (defined(references)) {\n    const properties = references.map(function (referenceArray) {\n      const tempObj = {};\n      processReferencesArrayPacketData(\n        tempObj,\n        \"positions\",\n        referenceArray,\n        packetData.interval,\n        entityCollection,\n        PositionPropertyArray,\n        CompositePositionProperty,\n      );\n      return tempObj.positions;\n    });\n    object[propertyName] = new PositionPropertyArray(properties);\n  } else {\n    if (defined(packetData.cartesian)) {\n      packetData.array = packetData.cartesian.map(unpackCartesianArray);\n    } else if (defined(packetData.cartographicRadians)) {\n      packetData.array = packetData.cartographicRadians.map(\n        unpackCartographicRadiansArray,\n      );\n    } else if (defined(packetData.cartographicDegrees)) {\n      packetData.array = packetData.cartographicDegrees.map(\n        unpackCartographicDegreesArray,\n      );\n    }\n\n    if (defined(packetData.array)) {\n      processPacketData(\n        Array,\n        object,\n        propertyName,\n        packetData,\n        undefined,\n        undefined,\n        entityCollection,\n      );\n    }\n  }\n}\n\nfunction processPositionArrayOfArrays(\n  object,\n  propertyName,\n  packetData,\n  entityCollection,\n) {\n  if (!defined(packetData)) {\n    return;\n  }\n\n  if (Array.isArray(packetData)) {\n    for (let i = 0, length = packetData.length; i < length; ++i) {\n      processPositionArrayOfArraysPacketData(\n        object,\n        propertyName,\n        packetData[i],\n        entityCollection,\n      );\n    }\n  } else {\n    processPositionArrayOfArraysPacketData(\n      object,\n      propertyName,\n      packetData,\n      entityCollection,\n    );\n  }\n}\n\nfunction processShape(object, propertyName, packetData, entityCollection) {\n  if (!defined(packetData)) {\n    return;\n  }\n\n  if (Array.isArray(packetData)) {\n    for (let i = 0, length = packetData.length; i < length; i++) {\n      processShapePacketData(\n        object,\n        propertyName,\n        packetData[i],\n        entityCollection,\n      );\n    }\n  } else {\n    processShapePacketData(object, propertyName, packetData, entityCollection);\n  }\n}\n\nfunction processAvailability(entity, packet, entityCollection, sourceUri) {\n  const packetData = packet.availability;\n  if (!defined(packetData)) {\n    return;\n  }\n\n  let intervals;\n  if (Array.isArray(packetData)) {\n    for (let i = 0, len = packetData.length; i < len; ++i) {\n      if (!defined(intervals)) {\n        intervals = new TimeIntervalCollection();\n      }\n      intervals.addInterval(intervalFromString(packetData[i]));\n    }\n  } else {\n    intervals = new TimeIntervalCollection();\n    intervals.addInterval(intervalFromString(packetData));\n  }\n  entity.availability = intervals;\n}\n\nfunction processAlignedAxis(\n  billboard,\n  packetData,\n  interval,\n  sourceUri,\n  entityCollection,\n) {\n  if (!defined(packetData)) {\n    return;\n  }\n\n  processPacketData(\n    UnitCartesian3,\n    billboard,\n    \"alignedAxis\",\n    packetData,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processBillboard(entity, packet, entityCollection, sourceUri) {\n  const billboardData = packet.billboard;\n  if (!defined(billboardData)) {\n    return;\n  }\n\n  const interval = intervalFromString(billboardData.interval);\n  let billboard = entity.billboard;\n  if (!defined(billboard)) {\n    entity.billboard = billboard = new BillboardGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    billboard,\n    \"show\",\n    billboardData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Image,\n    billboard,\n    \"image\",\n    billboardData.image,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    billboard,\n    \"scale\",\n    billboardData.scale,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Cartesian2,\n    billboard,\n    \"pixelOffset\",\n    billboardData.pixelOffset,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Cartesian3,\n    billboard,\n    \"eyeOffset\",\n    billboardData.eyeOffset,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HorizontalOrigin,\n    billboard,\n    \"horizontalOrigin\",\n    billboardData.horizontalOrigin,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    VerticalOrigin,\n    billboard,\n    \"verticalOrigin\",\n    billboardData.verticalOrigin,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    billboard,\n    \"heightReference\",\n    billboardData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    billboard,\n    \"color\",\n    billboardData.color,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Rotation,\n    billboard,\n    \"rotation\",\n    billboardData.rotation,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processAlignedAxis(\n    billboard,\n    billboardData.alignedAxis,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    billboard,\n    \"sizeInMeters\",\n    billboardData.sizeInMeters,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    billboard,\n    \"width\",\n    billboardData.width,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    billboard,\n    \"height\",\n    billboardData.height,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    NearFarScalar,\n    billboard,\n    \"scaleByDistance\",\n    billboardData.scaleByDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    NearFarScalar,\n    billboard,\n    \"translucencyByDistance\",\n    billboardData.translucencyByDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    NearFarScalar,\n    billboard,\n    \"pixelOffsetScaleByDistance\",\n    billboardData.pixelOffsetScaleByDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    BoundingRectangle,\n    billboard,\n    \"imageSubRegion\",\n    billboardData.imageSubRegion,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    billboard,\n    \"distanceDisplayCondition\",\n    billboardData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    billboard,\n    \"disableDepthTestDistance\",\n    billboardData.disableDepthTestDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processBox(entity, packet, entityCollection, sourceUri) {\n  const boxData = packet.box;\n  if (!defined(boxData)) {\n    return;\n  }\n\n  const interval = intervalFromString(boxData.interval);\n  let box = entity.box;\n  if (!defined(box)) {\n    entity.box = box = new BoxGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    box,\n    \"show\",\n    boxData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Cartesian3,\n    box,\n    \"dimensions\",\n    boxData.dimensions,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    box,\n    \"heightReference\",\n    boxData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    box,\n    \"fill\",\n    boxData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    box,\n    \"material\",\n    boxData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    box,\n    \"outline\",\n    boxData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    box,\n    \"outlineColor\",\n    boxData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    box,\n    \"outlineWidth\",\n    boxData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    box,\n    \"shadows\",\n    boxData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    box,\n    \"distanceDisplayCondition\",\n    boxData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processCorridor(entity, packet, entityCollection, sourceUri) {\n  const corridorData = packet.corridor;\n  if (!defined(corridorData)) {\n    return;\n  }\n\n  const interval = intervalFromString(corridorData.interval);\n  let corridor = entity.corridor;\n  if (!defined(corridor)) {\n    entity.corridor = corridor = new CorridorGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    corridor,\n    \"show\",\n    corridorData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPositionArray(\n    corridor,\n    \"positions\",\n    corridorData.positions,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    corridor,\n    \"width\",\n    corridorData.width,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    corridor,\n    \"height\",\n    corridorData.height,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    corridor,\n    \"heightReference\",\n    corridorData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    corridor,\n    \"extrudedHeight\",\n    corridorData.extrudedHeight,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    corridor,\n    \"extrudedHeightReference\",\n    corridorData.extrudedHeightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    CornerType,\n    corridor,\n    \"cornerType\",\n    corridorData.cornerType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    corridor,\n    \"granularity\",\n    corridorData.granularity,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    corridor,\n    \"fill\",\n    corridorData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    corridor,\n    \"material\",\n    corridorData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    corridor,\n    \"outline\",\n    corridorData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    corridor,\n    \"outlineColor\",\n    corridorData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    corridor,\n    \"outlineWidth\",\n    corridorData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    corridor,\n    \"shadows\",\n    corridorData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    corridor,\n    \"distanceDisplayCondition\",\n    corridorData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ClassificationType,\n    corridor,\n    \"classificationType\",\n    corridorData.classificationType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    corridor,\n    \"zIndex\",\n    corridorData.zIndex,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processCylinder(entity, packet, entityCollection, sourceUri) {\n  const cylinderData = packet.cylinder;\n  if (!defined(cylinderData)) {\n    return;\n  }\n\n  const interval = intervalFromString(cylinderData.interval);\n  let cylinder = entity.cylinder;\n  if (!defined(cylinder)) {\n    entity.cylinder = cylinder = new CylinderGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    cylinder,\n    \"show\",\n    cylinderData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    cylinder,\n    \"length\",\n    cylinderData.length,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    cylinder,\n    \"topRadius\",\n    cylinderData.topRadius,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    cylinder,\n    \"bottomRadius\",\n    cylinderData.bottomRadius,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    cylinder,\n    \"heightReference\",\n    cylinderData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    cylinder,\n    \"fill\",\n    cylinderData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    cylinder,\n    \"material\",\n    cylinderData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    cylinder,\n    \"outline\",\n    cylinderData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    cylinder,\n    \"outlineColor\",\n    cylinderData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    cylinder,\n    \"outlineWidth\",\n    cylinderData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    cylinder,\n    \"numberOfVerticalLines\",\n    cylinderData.numberOfVerticalLines,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    cylinder,\n    \"slices\",\n    cylinderData.slices,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    cylinder,\n    \"shadows\",\n    cylinderData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    cylinder,\n    \"distanceDisplayCondition\",\n    cylinderData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processDocument(packet, dataSource) {\n  const version = packet.version;\n  if (defined(version)) {\n    if (typeof version === \"string\") {\n      const tokens = version.split(\".\");\n      if (tokens.length === 2) {\n        if (tokens[0] !== \"1\") {\n          throw new RuntimeError(\"Cesium only supports CZML version 1.\");\n        }\n        dataSource._version = version;\n      }\n    }\n  }\n\n  if (!defined(dataSource._version)) {\n    throw new RuntimeError(\n      \"CZML version information invalid.  It is expected to be a property on the document object in the <Major>.<Minor> version format.\",\n    );\n  }\n\n  const documentPacket = dataSource._documentPacket;\n\n  if (defined(packet.name)) {\n    documentPacket.name = packet.name;\n  }\n\n  const clockPacket = packet.clock;\n  if (defined(clockPacket)) {\n    const clock = documentPacket.clock;\n    if (!defined(clock)) {\n      documentPacket.clock = {\n        interval: clockPacket.interval,\n        currentTime: clockPacket.currentTime,\n        range: clockPacket.range,\n        step: clockPacket.step,\n        multiplier: clockPacket.multiplier,\n      };\n    } else {\n      clock.interval = clockPacket.interval ?? clock.interval;\n      clock.currentTime = clockPacket.currentTime ?? clock.currentTime;\n      clock.range = clockPacket.range ?? clock.range;\n      clock.step = clockPacket.step ?? clock.step;\n      clock.multiplier = clockPacket.multiplier ?? clock.multiplier;\n    }\n  }\n}\n\nfunction processEllipse(entity, packet, entityCollection, sourceUri) {\n  const ellipseData = packet.ellipse;\n  if (!defined(ellipseData)) {\n    return;\n  }\n\n  const interval = intervalFromString(ellipseData.interval);\n  let ellipse = entity.ellipse;\n  if (!defined(ellipse)) {\n    entity.ellipse = ellipse = new EllipseGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    ellipse,\n    \"show\",\n    ellipseData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipse,\n    \"semiMajorAxis\",\n    ellipseData.semiMajorAxis,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipse,\n    \"semiMinorAxis\",\n    ellipseData.semiMinorAxis,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipse,\n    \"height\",\n    ellipseData.height,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    ellipse,\n    \"heightReference\",\n    ellipseData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipse,\n    \"extrudedHeight\",\n    ellipseData.extrudedHeight,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    ellipse,\n    \"extrudedHeightReference\",\n    ellipseData.extrudedHeightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Rotation,\n    ellipse,\n    \"rotation\",\n    ellipseData.rotation,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Rotation,\n    ellipse,\n    \"stRotation\",\n    ellipseData.stRotation,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipse,\n    \"granularity\",\n    ellipseData.granularity,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    ellipse,\n    \"fill\",\n    ellipseData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    ellipse,\n    \"material\",\n    ellipseData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    ellipse,\n    \"outline\",\n    ellipseData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    ellipse,\n    \"outlineColor\",\n    ellipseData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipse,\n    \"outlineWidth\",\n    ellipseData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipse,\n    \"numberOfVerticalLines\",\n    ellipseData.numberOfVerticalLines,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    ellipse,\n    \"shadows\",\n    ellipseData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    ellipse,\n    \"distanceDisplayCondition\",\n    ellipseData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ClassificationType,\n    ellipse,\n    \"classificationType\",\n    ellipseData.classificationType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipse,\n    \"zIndex\",\n    ellipseData.zIndex,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processEllipsoid(entity, packet, entityCollection, sourceUri) {\n  const ellipsoidData = packet.ellipsoid;\n  if (!defined(ellipsoidData)) {\n    return;\n  }\n\n  const interval = intervalFromString(ellipsoidData.interval);\n  let ellipsoid = entity.ellipsoid;\n  if (!defined(ellipsoid)) {\n    entity.ellipsoid = ellipsoid = new EllipsoidGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    ellipsoid,\n    \"show\",\n    ellipsoidData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Cartesian3,\n    ellipsoid,\n    \"radii\",\n    ellipsoidData.radii,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Cartesian3,\n    ellipsoid,\n    \"innerRadii\",\n    ellipsoidData.innerRadii,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipsoid,\n    \"minimumClock\",\n    ellipsoidData.minimumClock,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipsoid,\n    \"maximumClock\",\n    ellipsoidData.maximumClock,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipsoid,\n    \"minimumCone\",\n    ellipsoidData.minimumCone,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipsoid,\n    \"maximumCone\",\n    ellipsoidData.maximumCone,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    ellipsoid,\n    \"heightReference\",\n    ellipsoidData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    ellipsoid,\n    \"fill\",\n    ellipsoidData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    ellipsoid,\n    \"material\",\n    ellipsoidData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    ellipsoid,\n    \"outline\",\n    ellipsoidData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    ellipsoid,\n    \"outlineColor\",\n    ellipsoidData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipsoid,\n    \"outlineWidth\",\n    ellipsoidData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipsoid,\n    \"stackPartitions\",\n    ellipsoidData.stackPartitions,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipsoid,\n    \"slicePartitions\",\n    ellipsoidData.slicePartitions,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    ellipsoid,\n    \"subdivisions\",\n    ellipsoidData.subdivisions,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    ellipsoid,\n    \"shadows\",\n    ellipsoidData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    ellipsoid,\n    \"distanceDisplayCondition\",\n    ellipsoidData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processLabel(entity, packet, entityCollection, sourceUri) {\n  const labelData = packet.label;\n  if (!defined(labelData)) {\n    return;\n  }\n\n  const interval = intervalFromString(labelData.interval);\n  let label = entity.label;\n  if (!defined(label)) {\n    entity.label = label = new LabelGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    label,\n    \"show\",\n    labelData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    String,\n    label,\n    \"text\",\n    labelData.text,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    String,\n    label,\n    \"font\",\n    labelData.font,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    LabelStyle,\n    label,\n    \"style\",\n    labelData.style,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    label,\n    \"scale\",\n    labelData.scale,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    label,\n    \"showBackground\",\n    labelData.showBackground,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    label,\n    \"backgroundColor\",\n    labelData.backgroundColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Cartesian2,\n    label,\n    \"backgroundPadding\",\n    labelData.backgroundPadding,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Cartesian2,\n    label,\n    \"pixelOffset\",\n    labelData.pixelOffset,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Cartesian3,\n    label,\n    \"eyeOffset\",\n    labelData.eyeOffset,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HorizontalOrigin,\n    label,\n    \"horizontalOrigin\",\n    labelData.horizontalOrigin,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    VerticalOrigin,\n    label,\n    \"verticalOrigin\",\n    labelData.verticalOrigin,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    label,\n    \"heightReference\",\n    labelData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    label,\n    \"fillColor\",\n    labelData.fillColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    label,\n    \"outlineColor\",\n    labelData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    label,\n    \"outlineWidth\",\n    labelData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    NearFarScalar,\n    label,\n    \"translucencyByDistance\",\n    labelData.translucencyByDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    NearFarScalar,\n    label,\n    \"pixelOffsetScaleByDistance\",\n    labelData.pixelOffsetScaleByDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    NearFarScalar,\n    label,\n    \"scaleByDistance\",\n    labelData.scaleByDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    label,\n    \"distanceDisplayCondition\",\n    labelData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    label,\n    \"disableDepthTestDistance\",\n    labelData.disableDepthTestDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processModel(entity, packet, entityCollection, sourceUri) {\n  const modelData = packet.model;\n  if (!defined(modelData)) {\n    return;\n  }\n\n  const interval = intervalFromString(modelData.interval);\n  let model = entity.model;\n  if (!defined(model)) {\n    entity.model = model = new ModelGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    model,\n    \"show\",\n    modelData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Uri,\n    model,\n    \"uri\",\n    modelData.gltf,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    model,\n    \"scale\",\n    modelData.scale,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    model,\n    \"minimumPixelSize\",\n    modelData.minimumPixelSize,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    model,\n    \"maximumScale\",\n    modelData.maximumScale,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    model,\n    \"incrementallyLoadTextures\",\n    modelData.incrementallyLoadTextures,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    model,\n    \"runAnimations\",\n    modelData.runAnimations,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    model,\n    \"clampAnimations\",\n    modelData.clampAnimations,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    model,\n    \"shadows\",\n    modelData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    model,\n    \"heightReference\",\n    modelData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    model,\n    \"silhouetteColor\",\n    modelData.silhouetteColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    model,\n    \"silhouetteSize\",\n    modelData.silhouetteSize,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    model,\n    \"color\",\n    modelData.color,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ColorBlendMode,\n    model,\n    \"colorBlendMode\",\n    modelData.colorBlendMode,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    model,\n    \"colorBlendAmount\",\n    modelData.colorBlendAmount,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    model,\n    \"distanceDisplayCondition\",\n    modelData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n\n  let i, len;\n  const nodeTransformationsData = modelData.nodeTransformations;\n  if (defined(nodeTransformationsData)) {\n    if (Array.isArray(nodeTransformationsData)) {\n      for (i = 0, len = nodeTransformationsData.length; i < len; ++i) {\n        processNodeTransformations(\n          model,\n          nodeTransformationsData[i],\n          interval,\n          sourceUri,\n          entityCollection,\n        );\n      }\n    } else {\n      processNodeTransformations(\n        model,\n        nodeTransformationsData,\n        interval,\n        sourceUri,\n        entityCollection,\n      );\n    }\n  }\n\n  const articulationsData = modelData.articulations;\n  if (defined(articulationsData)) {\n    if (Array.isArray(articulationsData)) {\n      for (i = 0, len = articulationsData.length; i < len; ++i) {\n        processArticulations(\n          model,\n          articulationsData[i],\n          interval,\n          sourceUri,\n          entityCollection,\n        );\n      }\n    } else {\n      processArticulations(\n        model,\n        articulationsData,\n        interval,\n        sourceUri,\n        entityCollection,\n      );\n    }\n  }\n}\n\nfunction processNodeTransformations(\n  model,\n  nodeTransformationsData,\n  constrainedInterval,\n  sourceUri,\n  entityCollection,\n) {\n  let combinedInterval = intervalFromString(nodeTransformationsData.interval);\n  if (defined(constrainedInterval)) {\n    if (defined(combinedInterval)) {\n      combinedInterval = TimeInterval.intersect(\n        combinedInterval,\n        constrainedInterval,\n        scratchTimeInterval,\n      );\n    } else {\n      combinedInterval = constrainedInterval;\n    }\n  }\n\n  let nodeTransformations = model.nodeTransformations;\n  const nodeNames = Object.keys(nodeTransformationsData);\n  for (let i = 0, len = nodeNames.length; i < len; ++i) {\n    const nodeName = nodeNames[i];\n    if (nodeName === \"interval\") {\n      continue;\n    }\n\n    const nodeTransformationData = nodeTransformationsData[nodeName];\n    if (!defined(nodeTransformationData)) {\n      continue;\n    }\n\n    if (!defined(nodeTransformations)) {\n      model.nodeTransformations = nodeTransformations = new PropertyBag();\n    }\n\n    if (!nodeTransformations.hasProperty(nodeName)) {\n      nodeTransformations.addProperty(nodeName);\n    }\n\n    let nodeTransformation = nodeTransformations[nodeName];\n    if (!defined(nodeTransformation)) {\n      nodeTransformations[nodeName] = nodeTransformation =\n        new NodeTransformationProperty();\n    }\n\n    processPacketData(\n      Cartesian3,\n      nodeTransformation,\n      \"translation\",\n      nodeTransformationData.translation,\n      combinedInterval,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Quaternion,\n      nodeTransformation,\n      \"rotation\",\n      nodeTransformationData.rotation,\n      combinedInterval,\n      sourceUri,\n      entityCollection,\n    );\n    processPacketData(\n      Cartesian3,\n      nodeTransformation,\n      \"scale\",\n      nodeTransformationData.scale,\n      combinedInterval,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processArticulations(\n  model,\n  articulationsData,\n  constrainedInterval,\n  sourceUri,\n  entityCollection,\n) {\n  let combinedInterval = intervalFromString(articulationsData.interval);\n  if (defined(constrainedInterval)) {\n    if (defined(combinedInterval)) {\n      combinedInterval = TimeInterval.intersect(\n        combinedInterval,\n        constrainedInterval,\n        scratchTimeInterval,\n      );\n    } else {\n      combinedInterval = constrainedInterval;\n    }\n  }\n\n  let articulations = model.articulations;\n  const keys = Object.keys(articulationsData);\n  for (let i = 0, len = keys.length; i < len; ++i) {\n    const key = keys[i];\n    if (key === \"interval\") {\n      continue;\n    }\n\n    const articulationStageData = articulationsData[key];\n    if (!defined(articulationStageData)) {\n      continue;\n    }\n\n    if (!defined(articulations)) {\n      model.articulations = articulations = new PropertyBag();\n    }\n\n    if (!articulations.hasProperty(key)) {\n      articulations.addProperty(key);\n    }\n\n    processPacketData(\n      Number,\n      articulations,\n      key,\n      articulationStageData,\n      combinedInterval,\n      sourceUri,\n      entityCollection,\n    );\n  }\n}\n\nfunction processPath(entity, packet, entityCollection, sourceUri) {\n  const pathData = packet.path;\n  if (!defined(pathData)) {\n    return;\n  }\n\n  const interval = intervalFromString(pathData.interval);\n  let path = entity.path;\n  if (!defined(path)) {\n    entity.path = path = new PathGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    path,\n    \"show\",\n    pathData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    path,\n    \"leadTime\",\n    pathData.leadTime,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    path,\n    \"trailTime\",\n    pathData.trailTime,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    path,\n    \"width\",\n    pathData.width,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    path,\n    \"resolution\",\n    pathData.resolution,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    path,\n    \"material\",\n    pathData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    path,\n    \"distanceDisplayCondition\",\n    pathData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processPoint(entity, packet, entityCollection, sourceUri) {\n  const pointData = packet.point;\n  if (!defined(pointData)) {\n    return;\n  }\n\n  const interval = intervalFromString(pointData.interval);\n  let point = entity.point;\n  if (!defined(point)) {\n    entity.point = point = new PointGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    point,\n    \"show\",\n    pointData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    point,\n    \"pixelSize\",\n    pointData.pixelSize,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    point,\n    \"heightReference\",\n    pointData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    point,\n    \"color\",\n    pointData.color,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    point,\n    \"outlineColor\",\n    pointData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    point,\n    \"outlineWidth\",\n    pointData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    NearFarScalar,\n    point,\n    \"scaleByDistance\",\n    pointData.scaleByDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    NearFarScalar,\n    point,\n    \"translucencyByDistance\",\n    pointData.translucencyByDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    point,\n    \"distanceDisplayCondition\",\n    pointData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    point,\n    \"disableDepthTestDistance\",\n    pointData.disableDepthTestDistance,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction PolygonHierarchyProperty(polygon) {\n  this.polygon = polygon;\n  this._definitionChanged = new Event();\n}\n\nObject.defineProperties(PolygonHierarchyProperty.prototype, {\n  isConstant: {\n    get: function () {\n      const positions = this.polygon._positions;\n      const holes = this.polygon._holes;\n      return (\n        (!defined(positions) || positions.isConstant) &&\n        (!defined(holes) || holes.isConstant)\n      );\n    },\n  },\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n});\n\nPolygonHierarchyProperty.prototype.getValue = function (time, result) {\n  let positions;\n  if (defined(this.polygon._positions)) {\n    positions = this.polygon._positions.getValue(time);\n  }\n\n  let holes;\n  if (defined(this.polygon._holes)) {\n    holes = this.polygon._holes.getValue(time);\n    if (defined(holes)) {\n      holes = holes.map(function (holePositions) {\n        return new PolygonHierarchy(holePositions);\n      });\n    }\n  }\n\n  if (!defined(result)) {\n    return new PolygonHierarchy(positions, holes);\n  }\n\n  result.positions = positions;\n  result.holes = holes;\n  return result;\n};\n\nPolygonHierarchyProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof PolygonHierarchyProperty &&\n      Property.equals(this.polygon._positions, other.polygon._positions) &&\n      Property.equals(this.polygon._holes, other.polygon._holes))\n  );\n};\n\nfunction processPolygon(entity, packet, entityCollection, sourceUri) {\n  const polygonData = packet.polygon;\n  if (!defined(polygonData)) {\n    return;\n  }\n\n  const interval = intervalFromString(polygonData.interval);\n  let polygon = entity.polygon;\n  if (!defined(polygon)) {\n    entity.polygon = polygon = new PolygonGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    polygon,\n    \"show\",\n    polygonData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n\n  // adapt 'position' property producing Cartesian[]\n  // and 'holes' property producing Cartesian[][]\n  // to a single property producing PolygonHierarchy\n  processPositionArray(\n    polygon,\n    \"_positions\",\n    polygonData.positions,\n    entityCollection,\n  );\n  processPositionArrayOfArrays(\n    polygon,\n    \"_holes\",\n    polygonData.holes,\n    entityCollection,\n  );\n  if (defined(polygon._positions) || defined(polygon._holes)) {\n    polygon.hierarchy = new PolygonHierarchyProperty(polygon);\n  }\n\n  processPacketData(\n    Number,\n    polygon,\n    \"height\",\n    polygonData.height,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    polygon,\n    \"heightReference\",\n    polygonData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polygon,\n    \"extrudedHeight\",\n    polygonData.extrudedHeight,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    polygon,\n    \"extrudedHeightReference\",\n    polygonData.extrudedHeightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Rotation,\n    polygon,\n    \"stRotation\",\n    polygonData.stRotation,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polygon,\n    \"granularity\",\n    polygonData.granularity,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polygon,\n    \"fill\",\n    polygonData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    polygon,\n    \"material\",\n    polygonData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polygon,\n    \"outline\",\n    polygonData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    polygon,\n    \"outlineColor\",\n    polygonData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polygon,\n    \"outlineWidth\",\n    polygonData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polygon,\n    \"perPositionHeight\",\n    polygonData.perPositionHeight,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polygon,\n    \"closeTop\",\n    polygonData.closeTop,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polygon,\n    \"closeBottom\",\n    polygonData.closeBottom,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ArcType,\n    polygon,\n    \"arcType\",\n    polygonData.arcType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    polygon,\n    \"shadows\",\n    polygonData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    polygon,\n    \"distanceDisplayCondition\",\n    polygonData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ClassificationType,\n    polygon,\n    \"classificationType\",\n    polygonData.classificationType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polygon,\n    \"zIndex\",\n    polygonData.zIndex,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction adaptFollowSurfaceToArcType(followSurface) {\n  return followSurface ? ArcType.GEODESIC : ArcType.NONE;\n}\n\nfunction processPolyline(entity, packet, entityCollection, sourceUri) {\n  const polylineData = packet.polyline;\n  if (!defined(polylineData)) {\n    return;\n  }\n\n  const interval = intervalFromString(polylineData.interval);\n  let polyline = entity.polyline;\n  if (!defined(polyline)) {\n    entity.polyline = polyline = new PolylineGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    polyline,\n    \"show\",\n    polylineData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPositionArray(\n    polyline,\n    \"positions\",\n    polylineData.positions,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polyline,\n    \"width\",\n    polylineData.width,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polyline,\n    \"granularity\",\n    polylineData.granularity,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    polyline,\n    \"material\",\n    polylineData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    polyline,\n    \"depthFailMaterial\",\n    polylineData.depthFailMaterial,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ArcType,\n    polyline,\n    \"arcType\",\n    polylineData.arcType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polyline,\n    \"clampToGround\",\n    polylineData.clampToGround,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    polyline,\n    \"shadows\",\n    polylineData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    polyline,\n    \"distanceDisplayCondition\",\n    polylineData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ClassificationType,\n    polyline,\n    \"classificationType\",\n    polylineData.classificationType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polyline,\n    \"zIndex\",\n    polylineData.zIndex,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n\n  // for backwards compatibility, adapt CZML followSurface to arcType.\n  if (defined(polylineData.followSurface) && !defined(polylineData.arcType)) {\n    const tempObj = {};\n    processPacketData(\n      Boolean,\n      tempObj,\n      \"followSurface\",\n      polylineData.followSurface,\n      interval,\n      sourceUri,\n      entityCollection,\n    );\n    polyline.arcType = createAdapterProperty(\n      tempObj.followSurface,\n      adaptFollowSurfaceToArcType,\n    );\n  }\n}\n\nfunction processPolylineVolume(entity, packet, entityCollection, sourceUri) {\n  const polylineVolumeData = packet.polylineVolume;\n  if (!defined(polylineVolumeData)) {\n    return;\n  }\n\n  const interval = intervalFromString(polylineVolumeData.interval);\n  let polylineVolume = entity.polylineVolume;\n  if (!defined(polylineVolume)) {\n    entity.polylineVolume = polylineVolume = new PolylineVolumeGraphics();\n  }\n\n  processPositionArray(\n    polylineVolume,\n    \"positions\",\n    polylineVolumeData.positions,\n    entityCollection,\n  );\n  processShape(\n    polylineVolume,\n    \"shape\",\n    polylineVolumeData.shape,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polylineVolume,\n    \"show\",\n    polylineVolumeData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    CornerType,\n    polylineVolume,\n    \"cornerType\",\n    polylineVolumeData.cornerType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polylineVolume,\n    \"fill\",\n    polylineVolumeData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    polylineVolume,\n    \"material\",\n    polylineVolumeData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    polylineVolume,\n    \"outline\",\n    polylineVolumeData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    polylineVolume,\n    \"outlineColor\",\n    polylineVolumeData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polylineVolume,\n    \"outlineWidth\",\n    polylineVolumeData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    polylineVolume,\n    \"granularity\",\n    polylineVolumeData.granularity,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    polylineVolume,\n    \"shadows\",\n    polylineVolumeData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    polylineVolume,\n    \"distanceDisplayCondition\",\n    polylineVolumeData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processRectangle(entity, packet, entityCollection, sourceUri) {\n  const rectangleData = packet.rectangle;\n  if (!defined(rectangleData)) {\n    return;\n  }\n\n  const interval = intervalFromString(rectangleData.interval);\n  let rectangle = entity.rectangle;\n  if (!defined(rectangle)) {\n    entity.rectangle = rectangle = new RectangleGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    rectangle,\n    \"show\",\n    rectangleData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Rectangle,\n    rectangle,\n    \"coordinates\",\n    rectangleData.coordinates,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    rectangle,\n    \"height\",\n    rectangleData.height,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    rectangle,\n    \"heightReference\",\n    rectangleData.heightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    rectangle,\n    \"extrudedHeight\",\n    rectangleData.extrudedHeight,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    HeightReference,\n    rectangle,\n    \"extrudedHeightReference\",\n    rectangleData.extrudedHeightReference,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Rotation,\n    rectangle,\n    \"rotation\",\n    rectangleData.rotation,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Rotation,\n    rectangle,\n    \"stRotation\",\n    rectangleData.stRotation,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    rectangle,\n    \"granularity\",\n    rectangleData.granularity,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    rectangle,\n    \"fill\",\n    rectangleData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    rectangle,\n    \"material\",\n    rectangleData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    rectangle,\n    \"outline\",\n    rectangleData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    rectangle,\n    \"outlineColor\",\n    rectangleData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    rectangle,\n    \"outlineWidth\",\n    rectangleData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    rectangle,\n    \"shadows\",\n    rectangleData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    rectangle,\n    \"distanceDisplayCondition\",\n    rectangleData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ClassificationType,\n    rectangle,\n    \"classificationType\",\n    rectangleData.classificationType,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    rectangle,\n    \"zIndex\",\n    rectangleData.zIndex,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processTileset(entity, packet, entityCollection, sourceUri) {\n  const tilesetData = packet.tileset;\n  if (!defined(tilesetData)) {\n    return;\n  }\n\n  const interval = intervalFromString(tilesetData.interval);\n  let tileset = entity.tileset;\n  if (!defined(tileset)) {\n    entity.tileset = tileset = new Cesium3DTilesetGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    tileset,\n    \"show\",\n    tilesetData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Uri,\n    tileset,\n    \"uri\",\n    tilesetData.uri,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    tileset,\n    \"maximumScreenSpaceError\",\n    tilesetData.maximumScreenSpaceError,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processWall(entity, packet, entityCollection, sourceUri) {\n  const wallData = packet.wall;\n  if (!defined(wallData)) {\n    return;\n  }\n\n  const interval = intervalFromString(wallData.interval);\n  let wall = entity.wall;\n  if (!defined(wall)) {\n    entity.wall = wall = new WallGraphics();\n  }\n\n  processPacketData(\n    Boolean,\n    wall,\n    \"show\",\n    wallData.show,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPositionArray(wall, \"positions\", wallData.positions, entityCollection);\n  processArray(\n    wall,\n    \"minimumHeights\",\n    wallData.minimumHeights,\n    entityCollection,\n  );\n  processArray(\n    wall,\n    \"maximumHeights\",\n    wallData.maximumHeights,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    wall,\n    \"granularity\",\n    wallData.granularity,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    wall,\n    \"fill\",\n    wallData.fill,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processMaterialPacketData(\n    wall,\n    \"material\",\n    wallData.material,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Boolean,\n    wall,\n    \"outline\",\n    wallData.outline,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Color,\n    wall,\n    \"outlineColor\",\n    wallData.outlineColor,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    Number,\n    wall,\n    \"outlineWidth\",\n    wallData.outlineWidth,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    ShadowMode,\n    wall,\n    \"shadows\",\n    wallData.shadows,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n  processPacketData(\n    DistanceDisplayCondition,\n    wall,\n    \"distanceDisplayCondition\",\n    wallData.distanceDisplayCondition,\n    interval,\n    sourceUri,\n    entityCollection,\n  );\n}\n\nfunction processCzmlPacket(\n  packet,\n  entityCollection,\n  updaterFunctions,\n  sourceUri,\n  dataSource,\n) {\n  let objectId = packet.id;\n  if (!defined(objectId)) {\n    objectId = createGuid();\n  }\n\n  currentId = objectId;\n\n  if (!defined(dataSource._version) && objectId !== \"document\") {\n    throw new RuntimeError(\n      \"The first CZML packet is required to be the document object.\",\n    );\n  }\n\n  if (packet[\"delete\"] === true) {\n    entityCollection.removeById(objectId);\n  } else if (objectId === \"document\") {\n    processDocument(packet, dataSource);\n  } else {\n    const entity = entityCollection.getOrCreateEntity(objectId);\n\n    const parentId = packet.parent;\n    if (defined(parentId)) {\n      entity.parent = entityCollection.getOrCreateEntity(parentId);\n    }\n\n    for (let i = updaterFunctions.length - 1; i > -1; i--) {\n      updaterFunctions[i](entity, packet, entityCollection, sourceUri);\n    }\n  }\n\n  currentId = undefined;\n}\n\nfunction updateClock(dataSource) {\n  let clock;\n  const clockPacket = dataSource._documentPacket.clock;\n  if (!defined(clockPacket)) {\n    if (!defined(dataSource._clock)) {\n      const availability = dataSource._entityCollection.computeAvailability();\n      if (!availability.start.equals(Iso8601.MINIMUM_VALUE)) {\n        const startTime = availability.start;\n        const stopTime = availability.stop;\n        const totalSeconds = JulianDate.secondsDifference(stopTime, startTime);\n        const multiplier = Math.round(totalSeconds / 120.0);\n\n        clock = new DataSourceClock();\n        clock.startTime = JulianDate.clone(startTime);\n        clock.stopTime = JulianDate.clone(stopTime);\n        clock.clockRange = ClockRange.LOOP_STOP;\n        clock.multiplier = multiplier;\n        clock.currentTime = JulianDate.clone(startTime);\n        clock.clockStep = ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n        dataSource._clock = clock;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if (defined(dataSource._clock)) {\n    clock = dataSource._clock.clone();\n  } else {\n    clock = new DataSourceClock();\n    clock.startTime = Iso8601.MINIMUM_VALUE.clone();\n    clock.stopTime = Iso8601.MAXIMUM_VALUE.clone();\n    clock.currentTime = Iso8601.MINIMUM_VALUE.clone();\n    clock.clockRange = ClockRange.LOOP_STOP;\n    clock.clockStep = ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n    clock.multiplier = 1.0;\n  }\n\n  const interval = intervalFromString(clockPacket.interval);\n  if (defined(interval)) {\n    clock.startTime = interval.start;\n    clock.stopTime = interval.stop;\n  }\n\n  if (defined(clockPacket.currentTime)) {\n    clock.currentTime = JulianDate.fromIso8601(clockPacket.currentTime);\n  }\n  if (defined(clockPacket.range)) {\n    clock.clockRange = ClockRange[clockPacket.range] ?? ClockRange.LOOP_STOP;\n  }\n  if (defined(clockPacket.step)) {\n    clock.clockStep =\n      ClockStep[clockPacket.step] ?? ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n  }\n  if (defined(clockPacket.multiplier)) {\n    clock.multiplier = clockPacket.multiplier;\n  }\n\n  if (!clock.equals(dataSource._clock)) {\n    dataSource._clock = clock.clone(dataSource._clock);\n    return true;\n  }\n\n  return false;\n}\n\nfunction load(dataSource, czml, options, clear) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(czml)) {\n    throw new DeveloperError(\"czml is required.\");\n  }\n  //>>includeEnd('debug');\n\n  options = options ?? Frozen.EMPTY_OBJECT;\n\n  let promise = czml;\n  let sourceUri = options.sourceUri;\n\n  // User specified credit\n  let credit = options.credit;\n  if (typeof credit === \"string\") {\n    credit = new Credit(credit);\n  }\n  dataSource._credit = credit;\n\n  // If the czml is a URL\n  if (typeof czml === \"string\" || czml instanceof Resource) {\n    czml = Resource.createIfNeeded(czml);\n    promise = czml.fetchJson();\n    sourceUri = sourceUri ?? czml.clone();\n\n    // Add resource credits to our list of credits to display\n    const resourceCredits = dataSource._resourceCredits;\n    const credits = czml.credits;\n    if (defined(credits)) {\n      const length = credits.length;\n      for (let i = 0; i < length; i++) {\n        resourceCredits.push(credits[i]);\n      }\n    }\n  }\n\n  sourceUri = Resource.createIfNeeded(sourceUri);\n\n  DataSource.setLoading(dataSource, true);\n\n  return Promise.resolve(promise)\n    .then(function (czml) {\n      return loadCzml(dataSource, czml, sourceUri, clear);\n    })\n    .catch(function (error) {\n      DataSource.setLoading(dataSource, false);\n      dataSource._error.raiseEvent(dataSource, error);\n      console.log(error);\n      return Promise.reject(error);\n    });\n}\n\nfunction loadCzml(dataSource, czml, sourceUri, clear) {\n  DataSource.setLoading(dataSource, true);\n  const entityCollection = dataSource._entityCollection;\n\n  if (clear) {\n    dataSource._version = undefined;\n    dataSource._documentPacket = new DocumentPacket();\n    entityCollection.removeAll();\n  }\n\n  CzmlDataSource._processCzml(\n    czml,\n    entityCollection,\n    sourceUri,\n    undefined,\n    dataSource,\n  );\n\n  let raiseChangedEvent = updateClock(dataSource);\n\n  const documentPacket = dataSource._documentPacket;\n  if (\n    defined(documentPacket.name) &&\n    dataSource._name !== documentPacket.name\n  ) {\n    dataSource._name = documentPacket.name;\n    raiseChangedEvent = true;\n  } else if (!defined(dataSource._name) && defined(sourceUri)) {\n    dataSource._name = getFilenameFromUri(sourceUri.getUrlComponent());\n    raiseChangedEvent = true;\n  }\n\n  DataSource.setLoading(dataSource, false);\n  if (raiseChangedEvent) {\n    dataSource._changed.raiseEvent(dataSource);\n  }\n\n  return dataSource;\n}\n\nfunction DocumentPacket() {\n  this.name = undefined;\n  this.clock = undefined;\n}\n\n/**\n * @typedef {object} CzmlDataSource.LoadOptions\n *\n * Initialization options for the <code>load</code> method.\n *\n * @property {Resource|string} [sourceUri] Overrides the url to use for resolving relative links.\n * @property {Credit|string} [credit] A credit for the data source, which is displayed on the canvas.\n */\n\n/**\n * A {@link DataSource} which processes {@link https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Guide|CZML}.\n * @alias CzmlDataSource\n * @constructor\n *\n * @param {string} [name] An optional name for the data source.  This value will be overwritten if a loaded document contains a name.\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=CZML.html|Cesium Sandcastle CZML Demo}\n */\nfunction CzmlDataSource(name) {\n  this._name = name;\n  this._changed = new Event();\n  this._error = new Event();\n  this._isLoading = false;\n  this._loading = new Event();\n  this._clock = undefined;\n  this._documentPacket = new DocumentPacket();\n  this._version = undefined;\n  this._entityCollection = new EntityCollection(this);\n  this._entityCluster = new EntityCluster();\n  this._credit = undefined;\n  this._resourceCredits = [];\n}\n\n/**\n * Creates a Promise to a new instance loaded with the provided CZML data.\n *\n * @param {Resource|string|object} czml A url or CZML object to be processed.\n * @param {CzmlDataSource.LoadOptions} [options] An object specifying configuration options\n *\n * @returns {Promise<CzmlDataSource>} A promise that resolves to the new instance once the data is processed.\n */\nCzmlDataSource.load = function (czml, options) {\n  return new CzmlDataSource().load(czml, options);\n};\n\nObject.defineProperties(CzmlDataSource.prototype, {\n  /**\n   * Gets a human-readable name for this instance.\n   * @memberof CzmlDataSource.prototype\n   * @type {string}\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n  /**\n   * Gets the clock settings defined by the loaded CZML.  If no clock is explicitly\n   * defined in the CZML, the combined availability of all objects is returned.  If\n   * only static data exists, this value is undefined.\n   * @memberof CzmlDataSource.prototype\n   * @type {DataSourceClock}\n   */\n  clock: {\n    get: function () {\n      return this._clock;\n    },\n  },\n  /**\n   * Gets the collection of {@link Entity} instances.\n   * @memberof CzmlDataSource.prototype\n   * @type {EntityCollection}\n   */\n  entities: {\n    get: function () {\n      return this._entityCollection;\n    },\n  },\n  /**\n   * Gets a value indicating if the data source is currently loading data.\n   * @memberof CzmlDataSource.prototype\n   * @type {boolean}\n   */\n  isLoading: {\n    get: function () {\n      return this._isLoading;\n    },\n  },\n  /**\n   * Gets an event that will be raised when the underlying data changes.\n   * @memberof CzmlDataSource.prototype\n   * @type {Event}\n   */\n  changedEvent: {\n    get: function () {\n      return this._changed;\n    },\n  },\n  /**\n   * Gets an event that will be raised if an error is encountered during processing.\n   * @memberof CzmlDataSource.prototype\n   * @type {Event}\n   */\n  errorEvent: {\n    get: function () {\n      return this._error;\n    },\n  },\n  /**\n   * Gets an event that will be raised when the data source either starts or stops loading.\n   * @memberof CzmlDataSource.prototype\n   * @type {Event}\n   */\n  loadingEvent: {\n    get: function () {\n      return this._loading;\n    },\n  },\n  /**\n   * Gets whether or not this data source should be displayed.\n   * @memberof CzmlDataSource.prototype\n   * @type {boolean}\n   */\n  show: {\n    get: function () {\n      return this._entityCollection.show;\n    },\n    set: function (value) {\n      this._entityCollection.show = value;\n    },\n  },\n\n  /**\n   * Gets or sets the clustering options for this data source. This object can be shared between multiple data sources.\n   *\n   * @memberof CzmlDataSource.prototype\n   * @type {EntityCluster}\n   */\n  clustering: {\n    get: function () {\n      return this._entityCluster;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (!defined(value)) {\n        throw new DeveloperError(\"value must be defined.\");\n      }\n      //>>includeEnd('debug');\n      this._entityCluster = value;\n    },\n  },\n  /**\n   * Gets the credit that will be displayed for the data source\n   * @memberof CzmlDataSource.prototype\n   * @type {Credit}\n   */\n  credit: {\n    get: function () {\n      return this._credit;\n    },\n  },\n});\n\n/**\n * @callback CzmlDataSource.UpdaterFunction\n *\n * A CZML processing function that adds or updates entities in the provided\n * collection based on the provided CZML packet.\n *\n * @param {Entity} entity\n * @param {object} packet\n * @param {EntityCollection} entityCollection\n * @param {string} sourceUri\n */\n\n/**\n * Gets the array of CZML processing functions.\n * @memberof CzmlDataSource\n * @type {CzmlDataSource.UpdaterFunction[]}\n */\nCzmlDataSource.updaters = [\n  processBillboard,\n  processBox,\n  processCorridor,\n  processCylinder,\n  processEllipse,\n  processEllipsoid,\n  processLabel,\n  processModel,\n  processName,\n  processDescription,\n  processPath,\n  processPoint,\n  processPolygon,\n  processPolyline,\n  processPolylineVolume,\n  processProperties,\n  processRectangle,\n  processPosition,\n  processTileset,\n  processViewFrom,\n  processWall,\n  processOrientation,\n  processAvailability,\n];\n\n/**\n * Add the provided updater to the list of updaters if not already included\n * @private\n * @param {CzmlDataSource.UpdaterFunction} updater\n */\nCzmlDataSource.registerUpdater = function (updater) {\n  if (!CzmlDataSource.updaters.includes(updater)) {\n    CzmlDataSource.updaters.push(updater);\n  }\n};\n\n/**\n * Remove the provided updater from the list of updaters if already included\n * @private\n * @param {CzmlDataSource.UpdaterFunction} updater\n */\nCzmlDataSource.unregisterUpdater = function (updater) {\n  if (CzmlDataSource.updaters.includes(updater)) {\n    const index = CzmlDataSource.updaters.indexOf(updater);\n    CzmlDataSource.updaters.splice(index, 1);\n  }\n};\n\n/**\n * Processes the provided url or CZML object without clearing any existing data.\n *\n * @param {Resource|string|object} czml A url or CZML object to be processed.\n * @param {CzmlDataSource.LoadOptions} [options] An object specifying configuration options\n *\n * @returns {Promise<CzmlDataSource>} A promise that resolves to this instances once the data is processed.\n */\nCzmlDataSource.prototype.process = function (czml, options) {\n  return load(this, czml, options, false);\n};\n\n/**\n * Loads the provided url or CZML object, replacing any existing data.\n *\n * @param {Resource|string|object} czml A url or CZML object to be processed.\n * @param {CzmlDataSource.LoadOptions} [options] An object specifying configuration options\n *\n * @returns {Promise<CzmlDataSource>} A promise that resolves to this instances once the data is processed.\n */\nCzmlDataSource.prototype.load = function (czml, options) {\n  return load(this, czml, options, true);\n};\n\n/**\n * Updates the data source to the provided time.  This function is optional and\n * is not required to be implemented.  It is provided for data sources which\n * retrieve data based on the current animation time or scene state.\n * If implemented, update will be called by {@link DataSourceDisplay} once a frame.\n *\n * @param {JulianDate} time The simulation time.\n * @returns {boolean} True if this data source is ready to be displayed at the provided time, false otherwise.\n */\nCzmlDataSource.prototype.update = function (time) {\n  return true;\n};\n\n/**\n * A helper function used by custom CZML updater functions\n * which creates or updates a {@link Property} from a CZML packet.\n * @function\n *\n * @param {Function} type The constructor function for the property being processed.\n * @param {object} object The object on which the property will be added or updated.\n * @param {string} propertyName The name of the property on the object.\n * @param {object} packetData The CZML packet being processed.\n * @param {TimeInterval} interval A constraining interval for which the data is valid.\n * @param {string} sourceUri The originating uri of the data being processed.\n * @param {EntityCollection} entityCollection The collection being processsed.\n */\nCzmlDataSource.processPacketData = processPacketData;\n\n/**\n * A helper function used by custom CZML updater functions\n * which creates or updates a {@link PositionProperty} from a CZML packet.\n * @function\n *\n * @param {object} object The object on which the property will be added or updated.\n * @param {string} propertyName The name of the property on the object.\n * @param {object} packetData The CZML packet being processed.\n * @param {TimeInterval} interval A constraining interval for which the data is valid.\n * @param {string} sourceUri The originating uri of the data being processed.\n * @param {EntityCollection} entityCollection The collection being processsed.\n */\nCzmlDataSource.processPositionPacketData = processPositionPacketData;\n\n/**\n * A helper function used by custom CZML updater functions\n * which creates or updates a {@link MaterialProperty} from a CZML packet.\n * @function\n *\n * @param {object} object The object on which the property will be added or updated.\n * @param {string} propertyName The name of the property on the object.\n * @param {object} packetData The CZML packet being processed.\n * @param {TimeInterval} interval A constraining interval for which the data is valid.\n * @param {string} sourceUri The originating uri of the data being processed.\n * @param {EntityCollection} entityCollection The collection being processsed.\n */\nCzmlDataSource.processMaterialPacketData = processMaterialPacketData;\n\nCzmlDataSource._processCzml = function (\n  czml,\n  entityCollection,\n  sourceUri,\n  updaterFunctions,\n  dataSource,\n) {\n  updaterFunctions = updaterFunctions ?? CzmlDataSource.updaters;\n\n  if (Array.isArray(czml)) {\n    for (let i = 0, len = czml.length; i < len; ++i) {\n      processCzmlPacket(\n        czml[i],\n        entityCollection,\n        updaterFunctions,\n        sourceUri,\n        dataSource,\n      );\n    }\n  } else {\n    processCzmlPacket(\n      czml,\n      entityCollection,\n      updaterFunctions,\n      sourceUri,\n      dataSource,\n    );\n  }\n};\nexport default CzmlDataSource;\n","    import * as Cesium from \"cesium\";\n    import \"cesium/Build/Cesium/Widgets/widgets.css\";\n    const token = `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwOWRkMzFlYS0yMDVhLTRkNzYtYWJmMC1hMmE1NjljN2MyNjMiLCJpZCI6NzMzNDQsImlhdCI6MTYzNjgxNDEzNX0.Q2MfD_lkQgsJ-R3NPfYjS9QA9q_j4Py8DktYKsPmZNg`;\n    Cesium.Ion.defaultAccessToken = token;\n    const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n      shouldAnimate: true,\n      scene3DOnly: true,\n      maximumRenderTimeChange: Infinity,\n      sceneModePicker: false,\n      baseLayerPicker: false,\n      animation: false,\n      timeline: false,\n      requestRenderMode: true,\n      homeButton: false,\n      fullscreenButton: false,\n      geocoder: false,\n      infoBox: false,\n      selectionIndicator: false,\n      navigationHelpButton: false,\n      vrButton: false,\n      sceneMode: Cesium.SceneMode.SCENE3D,\n    });\n    //@ts-ignore\n    viewer._cesiumWidget._creditContainer.parentNode.removeChild(\n      //@ts-ignore\n      viewer._cesiumWidget._creditContainer\n    );\n    let entity;\n\n    const partsToLoad = [\n      {\n        url: \"/assets/models/gltf/MultipartVehicle_part1.czml\",\n        range: [0, 1500],\n        requested: false,\n        loaded: false,\n      },\n      {\n        url: \"/assets/models/gltf/MultipartVehicle_part2.czml\",\n        range: [1500, 3000],\n        requested: false,\n        loaded: false,\n      },\n      {\n        url: \"/assets/models/gltf/MultipartVehicle_part3.czml\",\n        range: [3000, 4500],\n        requested: false,\n        loaded: false,\n      },\n    ];\n\n    const dataSource = new Cesium.CzmlDataSource();\n    viewer.dataSources.add(dataSource);\n    // const part = partsToLoad[0];\n\n    const procesPart = part => {\n      dataSource.process(part.url).then(function () {\n        part.loaded = true;\n        if (!viewer.trackedEntity) {\n          viewer.trackedEntity = entity =\n            dataSource.entities.getById(\"Vehicle\");\n        }\n      });\n    };\n    const preloadTimeInSeconds = 100;\n    viewer.clock.onTick.addEventListener(function (clock) {\n      // This example uses time offsets from the start to identify which parts need loading.\n      const timeOffset = Cesium.JulianDate.secondsDifference(\n        clock.currentTime,\n        clock.startTime\n      );\n\n      // Filter the list of parts to just the ones that need loading right now.\n      // Then, process each part that needs loading.\n      partsToLoad\n        .filter(function (part) {\n          return (\n            !part.requested &&\n            timeOffset >= part.range[0] - preloadTimeInSeconds &&\n            timeOffset <= part.range[1]\n          );\n        })\n        .forEach(function (part) {\n          procesPart(part);\n        });\n    });\n  \n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["defaultEvenColor","Color","defaultOddColor","defaultRepeat","Cartesian2","CheckerboardMaterialProperty","options","Frozen","Event","Property","createPropertyDescriptor","time","timeScratch","JulianDate","result","defined","other","CompositeMaterialProperty","CompositeProperty","DeveloperError","innerProperty","getFilenameFromUri","uri","uriObject","Uri","path","index","factorial","CesiumMath","calculateCoefficientTerm","x","zIndices","xTable","derivOrder","termOrder","reservedIndices","reserved","i","j","HermitePolynomialApproximation","degree","inputOrder","yTable","yStride","s","len","length","coefficients","l","zIndicesLength","highestNonZeroCoef","nonZeroCoefficients","zj","zn","numerator","tempTerm","coeff","arrayScratch","outputOrder","resultLength","r","zIndiceslength","fillCoefficientList","tmp","loopStop","d","dimTwo","dimOne","coef","highestNonZero","coefIndex","coefficient","dimTwoMinusOne","LagrangePolynomialApproximation","diffX","Spherical","clock","cone","magnitude","cartesian3","Check","y","z","radialSquared","spherical","left","right","epsilon","DataSourceClock","createRawPropertyDescriptor","source","Clock","defaultColor","defaultCellAlpha","defaultLineCount","defaultLineOffset","defaultLineThickness","GridMaterialProperty","PolylineArrowMaterialProperty","color","defaultGapColor","defaultDashLength","defaultDashPattern","PolylineDashMaterialProperty","defaultOutlineColor","defaultOutlineWidth","PolylineOutlineMaterialProperty","PositionPropertyArray","value","referenceFrame","EventHelper","ReferenceFrame","itemValue","eventHelper","property","PropertyArray","Rotation","array","startingIndex","packedArray","lastIndex","previousValue","sourceArray","firstIndex","TimeIntervalCollectionProperty","TimeIntervalCollection","SensorVolumePortionToDisplay","portionToDisplay","UnitCartesian3","Cartesian3","currentId","createReferenceProperty","entityCollection","referenceString","ReferenceProperty","createSpecializedProperty","type","packetData","referenceProperty","VelocityVectorProperty","Quaternion","VelocityOrientationProperty","RuntimeError","createAdapterProperty","adapterFunction","CallbackProperty","scratchCartesian","scratchSpherical","scratchCartographic","Cartographic","scratchTimeInterval","TimeInterval","scratchQuaternion","unwrapColorInterval","czmlInterval","rgbaf","rgba","unwrapUriInterval","sourceUri","Resource","unwrapRectangleInterval","wsen","wsenDegrees","Rectangle","convertUnitSphericalToCartesian","unitSpherical","convertSphericalToCartesian","convertCartographicRadiansToCartesian","cartographicRadians","Ellipsoid","convertCartographicDegreesToCartesian","cartographicDegrees","unwrapCartesianInterval","cartesian","cartesianVelocity","unitCartesian","normalizePackedCartesianArray","unwrapUnitCartesianInterval","normalizePackedQuaternionArray","unwrapQuaternionInterval","unitQuaternion","getPropertyType","BoundingRectangle","ArcType","ClassificationType","ColorBlendMode","CornerType","HeightReference","HorizontalOrigin","LabelStyle","NearFarScalar","DistanceDisplayCondition","ShadowMode","StripeOrientation","VerticalOrigin","unwrapInterval","interpolators","LinearApproximation","updateInterpolationSettings","interpolationAlgorithm","interpolationDegree","forwardExtrapolationType","ExtrapolationType","forwardExtrapolationDuration","backwardExtrapolationType","backwardExtrapolationDuration","iso8601Scratch","intervalFromString","intervalString","wrapPropertyInInfiniteInterval","interval","Iso8601","convertPropertyToComposite","composite","convertPositionPropertyToComposite","CompositePositionProperty","processProperty","object","propertyName","constrainedInterval","combinedInterval","packedLength","unwrappedInterval","unwrappedIntervalLength","isValue","hasInterval","removePropertyData","isSampled","needsUnpacking","ConstantProperty","epoch","packetEpoch","SampledProperty","intervals","intersection","processPacketData","processPositionProperty","numberOfDerivatives","removePositionPropertyData","ConstantPositionProperty","SampledPositionProperty","TimeIntervalCollectionPositionProperty","processPositionPacketData","processShapePacketData","processReferencesArrayPacketData","processMaterialProperty","existingMaterial","existingInterval","thisIntervals","materialData","ColorMaterialProperty","ImageMaterialProperty","StripeMaterialProperty","PolylineGlowMaterialProperty","processMaterialPacketData","processName","entity","packet","nameData","processDescription","descriptionData","processPosition","positionData","processViewFrom","viewFromData","processOrientation","orientationData","processProperties","propertiesData","PropertyBag","key","propertyData","references","PropertyArrayType","CompositePropertyArrayType","properties","reference","processArrayPacketData","processArray","processPositionArrayPacketData","processPositionArray","unpackCartesianArray","unpackCartographicRadiansArray","unpackCartographicDegreesArray","processPositionArrayOfArraysPacketData","referenceArray","tempObj","processPositionArrayOfArrays","processShape","processAvailability","processAlignedAxis","billboard","processBillboard","billboardData","BillboardGraphics","processBox","boxData","box","BoxGraphics","processCorridor","corridorData","corridor","CorridorGraphics","processCylinder","cylinderData","cylinder","CylinderGraphics","processDocument","dataSource","version","tokens","documentPacket","clockPacket","processEllipse","ellipseData","ellipse","EllipseGraphics","processEllipsoid","ellipsoidData","ellipsoid","EllipsoidGraphics","processLabel","labelData","label","LabelGraphics","processModel","modelData","model","ModelGraphics","nodeTransformationsData","processNodeTransformations","articulationsData","processArticulations","nodeTransformations","nodeNames","nodeName","nodeTransformationData","nodeTransformation","NodeTransformationProperty","articulations","keys","articulationStageData","processPath","pathData","PathGraphics","processPoint","pointData","point","PointGraphics","PolygonHierarchyProperty","polygon","positions","holes","holePositions","PolygonHierarchy","processPolygon","polygonData","PolygonGraphics","adaptFollowSurfaceToArcType","followSurface","processPolyline","polylineData","polyline","PolylineGraphics","processPolylineVolume","polylineVolumeData","polylineVolume","PolylineVolumeGraphics","processRectangle","rectangleData","rectangle","RectangleGraphics","processTileset","tilesetData","tileset","Cesium3DTilesetGraphics","processWall","wallData","wall","WallGraphics","processCzmlPacket","updaterFunctions","objectId","createGuid","parentId","updateClock","availability","startTime","stopTime","totalSeconds","multiplier","ClockRange","ClockStep","load","czml","clear","promise","credit","Credit","resourceCredits","credits","DataSource","loadCzml","error","DocumentPacket","CzmlDataSource","raiseChangedEvent","name","EntityCollection","EntityCluster","updater","token","Cesium.Ion","viewer","Cesium.Viewer","Cesium.SceneMode","partsToLoad","Cesium.CzmlDataSource","procesPart","part","preloadTimeInSeconds","timeOffset","Cesium.JulianDate"],"mappings":"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GAC5B6G,aAA4BM,KAChCN,EAAmB,IAAIM,IAEzBH,EAAehH,EAAW,OAC1BkG,EACE1C,GACAqD,EACA,cACAG,EAAa,YACb,OACA3F,EACA1B,CACD,EACDuG,EACE1O,EACAqP,EACA,YACAG,EAAa,UACb,OACA3F,EACA1B,CACD,EACDuG,EACE1O,EACAqP,EACA,WACAG,EAAa,SACb,OACA3F,EACA1B,CACD,EACDuG,EACE,OACAW,EACA,SACAG,EAAa,OACb,OACA3F,EACA1B,CACD,EACDuG,EACE,OACAW,EACA,SACAG,EAAa,OACb,OACA3F,EACA1B,CACD,GACQrH,EAAQ0H,EAAW,eAAe,GACrC6G,aAA4B5I,KAChC4I,EAAmB,IAAI5I,IAEzB+I,EAAehH,EAAW,gBAC1BkG,EACE1O,EACAqP,EACA,QACAG,EAAa,MACb,OACA3F,EACA1B,CACD,EACDuG,EACE1O,EACAqP,EACA,eACAG,EAAa,aACb,OACA3F,EACA1B,CACD,EACDuG,EACE,OACAW,EACA,eACAG,EAAa,aACb,OACA3F,EACA1B,CACD,GACQrH,EAAQ0H,EAAW,YAAY,GAClC6G,aAA4BO,KAChCP,EAAmB,IAAIO,IAEzBJ,EAAehH,EAAW,aAC1BkG,EACE1O,EACAqP,EACA,QACAG,EAAa,MACb,OACA3F,EACA1B,CACD,EACDuG,EACE,OACAW,EACA,YACAG,EAAa,UACb,OACA3F,EACA1B,CACD,EACDuG,EACE,OACAW,EACA,aACAG,EAAa,WACb,OACA3F,EACA1B,CACD,GACQrH,EAAQ0H,EAAW,aAAa,GACnC6G,aAA4BpJ,KAChCoJ,EAAmB,IAAIpJ,IAEzBuJ,EAAehH,EAAW,cAC1BkG,EACE1O,EACAqP,EACA,QACAG,EAAa,MACb,OACA,OACArH,CACD,GACQrH,EAAQ0H,EAAW,YAAY,GAClC6G,aAA4B/I,KAChC+I,EAAmB,IAAI/I,IAEzBkJ,EAAehH,EAAW,aAC1BkG,EACE1O,EACAqP,EACA,QACAG,EAAa,MACb,OACA,OACArH,CACD,EACDuG,EACE1O,EACAqP,EACA,WACAG,EAAa,SACb,OACA,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uG,EACE/C,GACAuG,EACA,mBACAE,EAAc,iBACdnF,EACApD,EACA1B,CACD,EACDuG,EACEzC,GACAiG,EACA,iBACAE,EAAc,eACdnF,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAwG,EACA,kBACAE,EAAc,gBACdnF,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAkS,EACA,QACAE,EAAc,MACdnF,EACApD,EACA1B,CACD,EACDuG,EACEvH,GACA+K,EACA,WACAE,EAAc,SACdnF,EACApD,EACA1B,CACD,EACD8J,GACEC,EACAE,EAAc,YACdnF,EACApD,EACA1B,CACD,EACDuG,EACE,QACAwD,EACA,eACAE,EAAc,aACdnF,EACApD,EACA1B,CACD,EACDuG,EACE,OACAwD,EACA,QACAE,EAAc,MACdnF,EACApD,EACA1B,CACD,EACDuG,EACE,OACAwD,EACA,SACAE,EAAc,OACdnF,EACApD,EACA1B,CACD,EACDuG,EACE7C,EACAqG,EACA,kBACAE,EAAc,gBACdnF,EACApD,EACA1B,CACD,EACDuG,EACE7C,EACAqG,EACA,yBACAE,EAAc,uBACdnF,EACApD,EACA1B,CACD,EACDuG,EACE7C,EACAqG,EACA,6BACAE,EAAc,2BACdnF,EACApD,EACA1B,CACD,EACDuG,EACErD,GACA6G,EACA,iBACAE,EAAc,eACdnF,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACAoG,EACA,2BACAE,EAAc,yBACdnF,EACApD,EACA1B,CACD,EACDuG,EACE,OACAwD,EACA,2BACAE,EAAc,yBACdnF,EACApD,EACA1B,CACD,CACH,CAEA,SAASmK,GAAWvC,EAAQC,EAAQ7H,EAAkB0B,EAAW,CAC/D,MAAM0I,EAAUvC,EAAO,IACvB,GAAI,CAAClP,EAAQyR,CAAO,EAClB,OAGF,MAAMtF,EAAWH,EAAmByF,EAAQ,QAAQ,EACpD,IAAIC,EAAMzC,EAAO,IACZjP,EAAQ0R,CAAG,IACdzC,EAAO,IAAMyC,EAAM,IAAIC,IAGzB/D,EACE,QACA8D,EACA,OACAD,EAAQ,KACRtF,EACApD,EACA1B,CACD,EACDuG,EACE1G,EACAwK,EACA,aACAD,EAAQ,WACRtF,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACA8G,EACA,kBACAD,EAAQ,gBACRtF,EACApD,EACA1B,CACD,EACDuG,EACE,QACA8D,EACA,OACAD,EAAQ,KACRtF,EACApD,EACA1B,CACD,EACD0H,EACE2C,EACA,WACAD,EAAQ,SACRtF,EACApD,EACA1B,CACD,EACDuG,EACE,QACA8D,EACA,UACAD,EAAQ,QACRtF,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAwS,EACA,eACAD,EAAQ,aACRtF,EACApD,EACA1B,CACD,EACDuG,EACE,OACA8D,EACA,eACAD,EAAQ,aACRtF,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACAyG,EACA,UACAD,EAAQ,QACRtF,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACA0G,EACA,2BACAD,EAAQ,yBACRtF,EACApD,EACA1B,CACD,CACH,CAEA,SAASuK,GAAgB3C,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACpE,MAAM8I,EAAe3C,EAAO,SAC5B,GAAI,CAAClP,EAAQ6R,CAAY,EACvB,OAGF,MAAM1F,EAAWH,EAAmB6F,EAAa,QAAQ,EACzD,IAAIC,EAAW7C,EAAO,SACjBjP,EAAQ8R,CAAQ,IACnB7C,EAAO,SAAW6C,EAAW,IAAIC,IAGnCnE,EACE,QACAkE,EACA,OACAD,EAAa,KACb1F,EACApD,EACA1B,CACD,EACDoJ,GACEqB,EACA,YACAD,EAAa,UACbxK,CACD,EACDuG,EACE,OACAkE,EACA,QACAD,EAAa,MACb1F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAkE,EACA,SACAD,EAAa,OACb1F,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAkH,EACA,kBACAD,EAAa,gBACb1F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAkE,EACA,iBACAD,EAAa,eACb1F,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAkH,EACA,0BACAD,EAAa,wBACb1F,EACApD,EACA1B,CACD,EACDuG,EACEjD,GACAmH,EACA,aACAD,EAAa,WACb1F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAkE,EACA,cACAD,EAAa,YACb1F,EACApD,EACA1B,CACD,EACDuG,EACE,QACAkE,EACA,OACAD,EAAa,KACb1F,EACApD,EACA1B,CACD,EACD0H,EACE+C,EACA,WACAD,EAAa,SACb1F,EACApD,EACA1B,CACD,EACDuG,EACE,QACAkE,EACA,UACAD,EAAa,QACb1F,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACA4S,EACA,eACAD,EAAa,aACb1F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAkE,EACA,eACAD,EAAa,aACb1F,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACA6G,EACA,UACAD,EAAa,QACb1F,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACA8G,EACA,2BACAD,EAAa,yBACb1F,EACApD,EACA1B,CACD,EACDuG,EACEnD,EACAqH,EACA,qBACAD,EAAa,mBACb1F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAkE,EACA,SACAD,EAAa,OACb1F,EACApD,EACA1B,CACD,CACH,CAEA,SAAS2K,GAAgB/C,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACpE,MAAMkJ,EAAe/C,EAAO,SAC5B,GAAI,CAAClP,EAAQiS,CAAY,EACvB,OAGF,MAAM9F,EAAWH,EAAmBiG,EAAa,QAAQ,EACzD,IAAIC,EAAWjD,EAAO,SACjBjP,EAAQkS,CAAQ,IACnBjD,EAAO,SAAWiD,EAAW,IAAIC,IAGnCvE,EACE,QACAsE,EACA,OACAD,EAAa,KACb9F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAsE,EACA,SACAD,EAAa,OACb9F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAsE,EACA,YACAD,EAAa,UACb9F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAsE,EACA,eACAD,EAAa,aACb9F,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAsH,EACA,kBACAD,EAAa,gBACb9F,EACApD,EACA1B,CACD,EACDuG,EACE,QACAsE,EACA,OACAD,EAAa,KACb9F,EACApD,EACA1B,CACD,EACD0H,EACEmD,EACA,WACAD,EAAa,SACb9F,EACApD,EACA1B,CACD,EACDuG,EACE,QACAsE,EACA,UACAD,EAAa,QACb9F,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAgT,EACA,eACAD,EAAa,aACb9F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAsE,EACA,eACAD,EAAa,aACb9F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAsE,EACA,wBACAD,EAAa,sBACb9F,EACApD,EACA1B,CACD,EACDuG,EACE,OACAsE,EACA,SACAD,EAAa,OACb9F,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACAiH,EACA,UACAD,EAAa,QACb9F,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACAkH,EACA,2BACAD,EAAa,yBACb9F,EACApD,EACA1B,CACD,CACH,CAEA,SAAS+K,GAAgBlD,EAAQmD,EAAY,CAC3C,MAAMC,EAAUpD,EAAO,QACvB,GAAIlP,EAAQsS,CAAO,GACb,OAAOA,GAAY,SAAU,CAC/B,MAAMC,EAASD,EAAQ,MAAM,GAAG,EAChC,GAAIC,EAAO,SAAW,EAAG,CACvB,GAAIA,EAAO,CAAC,IAAM,IAChB,MAAM,IAAIxK,GAAa,sCAAsC,EAE/DsK,EAAW,SAAWC,CAC9B,CACA,CAGE,GAAI,CAACtS,EAAQqS,EAAW,QAAQ,EAC9B,MAAM,IAAItK,GACR,kIACD,EAGH,MAAMyK,EAAiBH,EAAW,gBAE9BrS,EAAQkP,EAAO,IAAI,IACrBsD,EAAe,KAAOtD,EAAO,MAG/B,MAAMuD,EAAcvD,EAAO,MAC3B,GAAIlP,EAAQyS,CAAW,EAAG,CACxB,MAAM5O,EAAQ2O,EAAe,MACxBxS,EAAQ6D,CAAK,GAShBA,EAAM,SAAW4O,EAAY,UAAY5O,EAAM,SAC/CA,EAAM,YAAc4O,EAAY,aAAe5O,EAAM,YACrDA,EAAM,MAAQ4O,EAAY,OAAS5O,EAAM,MACzCA,EAAM,KAAO4O,EAAY,MAAQ5O,EAAM,KACvCA,EAAM,WAAa4O,EAAY,YAAc5O,EAAM,YAZnD2O,EAAe,MAAQ,CACrB,SAAUC,EAAY,SACtB,YAAaA,EAAY,YACzB,MAAOA,EAAY,MACnB,KAAMA,EAAY,KAClB,WAAYA,EAAY,UACzB,CAQP,CACA,CAEA,SAASC,GAAezD,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACnE,MAAM4J,EAAczD,EAAO,QAC3B,GAAI,CAAClP,EAAQ2S,CAAW,EACtB,OAGF,MAAMxG,EAAWH,EAAmB2G,EAAY,QAAQ,EACxD,IAAIC,EAAU3D,EAAO,QAChBjP,EAAQ4S,CAAO,IAClB3D,EAAO,QAAU2D,EAAU,IAAIC,IAGjCjF,EACE,QACAgF,EACA,OACAD,EAAY,KACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgF,EACA,gBACAD,EAAY,cACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgF,EACA,gBACAD,EAAY,cACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgF,EACA,SACAD,EAAY,OACZxG,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAgI,EACA,kBACAD,EAAY,gBACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgF,EACA,iBACAD,EAAY,eACZxG,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAgI,EACA,0BACAD,EAAY,wBACZxG,EACApD,EACA1B,CACD,EACDuG,EACEvH,GACAuM,EACA,WACAD,EAAY,SACZxG,EACApD,EACA1B,CACD,EACDuG,EACEvH,GACAuM,EACA,aACAD,EAAY,WACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgF,EACA,cACAD,EAAY,YACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,QACAgF,EACA,OACAD,EAAY,KACZxG,EACApD,EACA1B,CACD,EACD0H,EACE6D,EACA,WACAD,EAAY,SACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,QACAgF,EACA,UACAD,EAAY,QACZxG,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACA0T,EACA,eACAD,EAAY,aACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgF,EACA,eACAD,EAAY,aACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgF,EACA,wBACAD,EAAY,sBACZxG,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACA2H,EACA,UACAD,EAAY,QACZxG,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACA4H,EACA,2BACAD,EAAY,yBACZxG,EACApD,EACA1B,CACD,EACDuG,EACEnD,EACAmI,EACA,qBACAD,EAAY,mBACZxG,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgF,EACA,SACAD,EAAY,OACZxG,EACApD,EACA1B,CACD,CACH,CAEA,SAASyL,GAAiB7D,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACrE,MAAMgK,EAAgB7D,EAAO,UAC7B,GAAI,CAAClP,EAAQ+S,CAAa,EACxB,OAGF,MAAM5G,EAAWH,EAAmB+G,EAAc,QAAQ,EAC1D,IAAIC,EAAY/D,EAAO,UAClBjP,EAAQgT,CAAS,IACpB/D,EAAO,UAAY+D,EAAY,IAAIC,IAGrCrF,EACE,QACAoF,EACA,OACAD,EAAc,KACd5G,EACApD,EACA1B,CACD,EACDuG,EACE1G,EACA8L,EACA,QACAD,EAAc,MACd5G,EACApD,EACA1B,CACD,EACDuG,EACE1G,EACA8L,EACA,aACAD,EAAc,WACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,OACAoF,EACA,eACAD,EAAc,aACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,OACAoF,EACA,eACAD,EAAc,aACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,OACAoF,EACA,cACAD,EAAc,YACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,OACAoF,EACA,cACAD,EAAc,YACd5G,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAoI,EACA,kBACAD,EAAc,gBACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,QACAoF,EACA,OACAD,EAAc,KACd5G,EACApD,EACA1B,CACD,EACD0H,EACEiE,EACA,WACAD,EAAc,SACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,QACAoF,EACA,UACAD,EAAc,QACd5G,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACA8T,EACA,eACAD,EAAc,aACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,OACAoF,EACA,eACAD,EAAc,aACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,OACAoF,EACA,kBACAD,EAAc,gBACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,OACAoF,EACA,kBACAD,EAAc,gBACd5G,EACApD,EACA1B,CACD,EACDuG,EACE,OACAoF,EACA,eACAD,EAAc,aACd5G,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACA+H,EACA,UACAD,EAAc,QACd5G,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACAgI,EACA,2BACAD,EAAc,yBACd5G,EACApD,EACA1B,CACD,CACH,CAEA,SAAS6L,GAAajE,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACjE,MAAMoK,EAAYjE,EAAO,MACzB,GAAI,CAAClP,EAAQmT,CAAS,EACpB,OAGF,MAAMhH,EAAWH,EAAmBmH,EAAU,QAAQ,EACtD,IAAIC,EAAQnE,EAAO,MACdjP,EAAQoT,CAAK,IAChBnE,EAAO,MAAQmE,EAAQ,IAAIC,IAG7BzF,EACE,QACAwF,EACA,OACAD,EAAU,KACVhH,EACApD,EACA1B,CACD,EACDuG,EACE,OACAwF,EACA,OACAD,EAAU,KACVhH,EACApD,EACA1B,CACD,EACDuG,EACE,OACAwF,EACA,OACAD,EAAU,KACVhH,EACApD,EACA1B,CACD,EACDuG,EACE9C,GACAsI,EACA,QACAD,EAAU,MACVhH,EACApD,EACA1B,CACD,EACDuG,EACE,OACAwF,EACA,QACAD,EAAU,MACVhH,EACApD,EACA1B,CACD,EACDuG,EACE,QACAwF,EACA,iBACAD,EAAU,eACVhH,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAkU,EACA,kBACAD,EAAU,gBACVhH,EACApD,EACA1B,CACD,EACDuG,EACEvO,EACA+T,EACA,oBACAD,EAAU,kBACVhH,EACApD,EACA1B,CACD,EACDuG,EACEvO,EACA+T,EACA,cACAD,EAAU,YACVhH,EACApD,EACA1B,CACD,EACDuG,EACE1G,EACAkM,EACA,YACAD,EAAU,UACVhH,EACApD,EACA1B,CACD,EACDuG,EACE/C,GACAuI,EACA,mBACAD,EAAU,iBACVhH,EACApD,EACA1B,CACD,EACDuG,EACEzC,GACAiI,EACA,iBACAD,EAAU,eACVhH,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAwI,EACA,kBACAD,EAAU,gBACVhH,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAkU,EACA,YACAD,EAAU,UACVhH,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAkU,EACA,eACAD,EAAU,aACVhH,EACApD,EACA1B,CACD,EACDuG,EACE,OACAwF,EACA,eACAD,EAAU,aACVhH,EACApD,EACA1B,CACD,EACDuG,EACE7C,EACAqI,EACA,yBACAD,EAAU,uBACVhH,EACApD,EACA1B,CACD,EACDuG,EACE7C,EACAqI,EACA,6BACAD,EAAU,2BACVhH,EACApD,EACA1B,CACD,EACDuG,EACE7C,EACAqI,EACA,kBACAD,EAAU,gBACVhH,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACAoI,EACA,2BACAD,EAAU,yBACVhH,EACApD,EACA1B,CACD,EACDuG,EACE,OACAwF,EACA,2BACAD,EAAU,yBACVhH,EACApD,EACA1B,CACD,CACH,CAEA,SAASiM,GAAarE,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACjE,MAAMwK,EAAYrE,EAAO,MACzB,GAAI,CAAClP,EAAQuT,CAAS,EACpB,OAGF,MAAMpH,EAAWH,EAAmBuH,EAAU,QAAQ,EACtD,IAAIC,EAAQvE,EAAO,MACdjP,EAAQwT,CAAK,IAChBvE,EAAO,MAAQuE,EAAQ,IAAIC,IAG7B7F,EACE,QACA4F,EACA,OACAD,EAAU,KACVpH,EACApD,EACA1B,CACD,EACDuG,EACEnN,GACA+S,EACA,MACAD,EAAU,KACVpH,EACApD,EACA1B,CACD,EACDuG,EACE,OACA4F,EACA,QACAD,EAAU,MACVpH,EACApD,EACA1B,CACD,EACDuG,EACE,OACA4F,EACA,mBACAD,EAAU,iBACVpH,EACApD,EACA1B,CACD,EACDuG,EACE,OACA4F,EACA,eACAD,EAAU,aACVpH,EACApD,EACA1B,CACD,EACDuG,EACE,QACA4F,EACA,4BACAD,EAAU,0BACVpH,EACApD,EACA1B,CACD,EACDuG,EACE,QACA4F,EACA,gBACAD,EAAU,cACVpH,EACApD,EACA1B,CACD,EACDuG,EACE,QACA4F,EACA,kBACAD,EAAU,gBACVpH,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACAuI,EACA,UACAD,EAAU,QACVpH,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACA4I,EACA,kBACAD,EAAU,gBACVpH,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAsU,EACA,kBACAD,EAAU,gBACVpH,EACApD,EACA1B,CACD,EACDuG,EACE,OACA4F,EACA,iBACAD,EAAU,eACVpH,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAsU,EACA,QACAD,EAAU,MACVpH,EACApD,EACA1B,CACD,EACDuG,EACElD,GACA8I,EACA,iBACAD,EAAU,eACVpH,EACApD,EACA1B,CACD,EACDuG,EACE,OACA4F,EACA,mBACAD,EAAU,iBACVpH,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACAwI,EACA,2BACAD,EAAU,yBACVpH,EACApD,EACA1B,CACD,EAED,IAAI/F,EAAGQ,EACP,MAAM4R,EAA0BH,EAAU,oBAC1C,GAAIvT,EAAQ0T,CAAuB,EACjC,GAAI,MAAM,QAAQA,CAAuB,EACvC,IAAKpS,EAAI,EAAGQ,EAAM4R,EAAwB,OAAQpS,EAAIQ,EAAK,EAAER,EAC3DqS,GACEH,EACAE,EAAwBpS,CAAC,EACzB6K,EACApD,EACA1B,CACD,OAGHsM,GACEH,EACAE,EACAvH,EA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AM4L,EAAYzF,EAAO,MACzB,GAAI,CAAClP,EAAQ2U,CAAS,EACpB,OAGF,MAAMxI,EAAWH,EAAmB2I,EAAU,QAAQ,EACtD,IAAIC,EAAQ3F,EAAO,MACdjP,EAAQ4U,CAAK,IAChB3F,EAAO,MAAQ2F,EAAQ,IAAIC,IAG7BjH,EACE,QACAgH,EACA,OACAD,EAAU,KACVxI,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgH,EACA,YACAD,EAAU,UACVxI,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAgK,EACA,kBACAD,EAAU,gBACVxI,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACA0V,EACA,QACAD,EAAU,MACVxI,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACA0V,EACA,eACAD,EAAU,aACVxI,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgH,EACA,eACAD,EAAU,aACVxI,EACApD,EACA1B,CACD,EACDuG,EACE7C,EACA6J,EACA,kBACAD,EAAU,gBACVxI,EACApD,EACA1B,CACD,EACDuG,EACE7C,EACA6J,EACA,yBACAD,EAAU,uBACVxI,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACA4J,EACA,2BACAD,EAAU,yBACVxI,EACApD,EACA1B,CACD,EACDuG,EACE,OACAgH,EACA,2BACAD,EAAU,yBACVxI,EACApD,EACA1B,CACD,CACH,CAEA,SAASyN,GAAyBC,EAAS,CACzC,KAAK,QAAUA,EACf,KAAK,mBAAqB,IAAItV,CAChC,CAEA,OAAO,iBAAiBqV,GAAyB,UAAW,CAC1D,WAAY,CACV,IAAK,UAAY,CACf,MAAME,EAAY,KAAK,QAAQ,WACzBC,EAAQ,KAAK,QAAQ,OAC3B,OACG,CAACjV,EAAQgV,CAAS,GAAKA,EAAU,cACjC,CAAChV,EAAQiV,CAAK,GAAKA,EAAM,WAE7B,CACF,EACD,kBAAmB,CACjB,IAAK,UAAY,CACf,OAAO,KAAK,kBACb,CACF,CACH,CAAC,EAEDH,GAAyB,UAAU,SAAW,SAAUlV,EAAMG,EAAQ,CACpE,IAAIiV,EACAhV,EAAQ,KAAK,QAAQ,UAAU,IACjCgV,EAAY,KAAK,QAAQ,WAAW,SAASpV,CAAI,GAGnD,IAAIqV,EAUJ,OATIjV,EAAQ,KAAK,QAAQ,MAAM,IAC7BiV,EAAQ,KAAK,QAAQ,OAAO,SAASrV,CAAI,EACrCI,EAAQiV,CAAK,IACfA,EAAQA,EAAM,IAAI,SAAUC,EAAe,CACzC,OAAO,IAAIC,GAAiBD,CAAa,CACjD,CAAO,IAIAlV,EAAQD,CAAM,GAInBA,EAAO,UAAYiV,EACnBjV,EAAO,MAAQkV,EACRlV,GALE,IAAIoV,GAAiBH,EAAWC,CAAK,CAMhD,EAEAH,GAAyB,UAAU,OAAS,SAAU7U,EAAO,CAC3D,OACE,OAASA,GACRA,aAAiB6U,IAChBpV,EAAS,OAAO,KAAK,QAAQ,WAAYO,EAAM,QAAQ,UAAU,GACjEP,EAAS,OAAO,KAAK,QAAQ,OAAQO,EAAM,QAAQ,MAAM,CAE/D,EAEA,SAASmV,GAAenG,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACnE,MAAMsM,EAAcnG,EAAO,QAC3B,GAAI,CAAClP,EAAQqV,CAAW,EACtB,OAGF,MAAMlJ,EAAWH,EAAmBqJ,EAAY,QAAQ,EACxD,IAAIN,EAAU9F,EAAO,QAChBjP,EAAQ+U,CAAO,IAClB9F,EAAO,QAAU8F,EAAU,IAAIO,IAGjC1H,EACE,QACAmH,EACA,OACAM,EAAY,KACZlJ,EACApD,EACA1B,CACD,EAKDoJ,GACEsE,EACA,aACAM,EAAY,UACZhO,CACD,EACD2J,GACE+D,EACA,SACAM,EAAY,MACZhO,CACD,GACGrH,EAAQ+U,EAAQ,UAAU,GAAK/U,EAAQ+U,EAAQ,MAAM,KACvDA,EAAQ,UAAY,IAAID,GAAyBC,CAAO,GAG1DnH,EACE,OACAmH,EACA,SACAM,EAAY,OACZlJ,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAmK,EACA,kBACAM,EAAY,gBACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,OACAmH,EACA,iBACAM,EAAY,eACZlJ,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAmK,EACA,0BACAM,EAAY,wBACZlJ,EACApD,EACA1B,CACD,EACDuG,EACEvH,GACA0O,EACA,aACAM,EAAY,WACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,OACAmH,EACA,cACAM,EAAY,YACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,QACAmH,EACA,OACAM,EAAY,KACZlJ,EACApD,EACA1B,CACD,EACD0H,EACEgG,EACA,WACAM,EAAY,SACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,QACAmH,EACA,UACAM,EAAY,QACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACA6V,EACA,eACAM,EAAY,aACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,OACAmH,EACA,eACAM,EAAY,aACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,QACAmH,EACA,oBACAM,EAAY,kBACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,QACAmH,EACA,WACAM,EAAY,SACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,QACAmH,EACA,cACAM,EAAY,YACZlJ,EACApD,EACA1B,CACD,EACDuG,EACEpD,GACAuK,EACA,UACAM,EAAY,QACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACA8J,EACA,UACAM,EAAY,QACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACA+J,EACA,2BACAM,EAAY,yBACZlJ,EACApD,EACA1B,CACD,EACDuG,EACEnD,EACAsK,EACA,qBACAM,EAAY,mBACZlJ,EACApD,EACA1B,CACD,EACDuG,EACE,OACAmH,EACA,SACAM,EAAY,OACZlJ,EACApD,EACA1B,CACD,CACH,CAEA,SAASkO,GAA4BC,EAAe,CAClD,OAAOA,EAAgBhL,GAAQ,SAAWA,GAAQ,IACpD,CAEA,SAASiL,GAAgBxG,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACpE,MAAM2M,EAAexG,EAAO,SAC5B,GAAI,CAAClP,EAAQ0V,CAAY,EACvB,OAGF,MAAMvJ,EAAWH,EAAmB0J,EAAa,QAAQ,EACzD,IAAIC,EAAW1G,EAAO,SA8GtB,GA7GKjP,EAAQ2V,CAAQ,IACnB1G,EAAO,SAAW0G,EAAW,IAAIC,IAGnChI,EACE,QACA+H,EACA,OACAD,EAAa,KACbvJ,EACApD,EACA1B,CACD,EACDoJ,GACEkF,EACA,YACAD,EAAa,UACbrO,CACD,EACDuG,EACE,OACA+H,EACA,QACAD,EAAa,MACbvJ,EACApD,EACA1B,CACD,EACDuG,EACE,OACA+H,EACA,cACAD,EAAa,YACbvJ,EACApD,EACA1B,CACD,EACD0H,EACE4G,EACA,WACAD,EAAa,SACbvJ,EACApD,EACA1B,CACD,EACD0H,EACE4G,EACA,oBACAD,EAAa,kBACbvJ,EACApD,EACA1B,CACD,EACDuG,EACEpD,GACAmL,EACA,UACAD,EAAa,QACbvJ,EACApD,EACA1B,CACD,EACDuG,EACE,QACA+H,EACA,gBACAD,EAAa,cACbvJ,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACA0K,EACA,UACAD,EAAa,QACbvJ,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACA2K,EACA,2BACAD,EAAa,yBACbvJ,EACApD,EACA1B,CACD,EACDuG,EACEnD,EACAkL,EACA,qBACAD,EAAa,mBACbvJ,EACApD,EACA1B,CACD,EACDuG,EACE,OACA+H,EACA,SACAD,EAAa,OACbvJ,EACApD,EACA1B,CACD,EAGGrH,EAAQ0V,EAAa,aAAa,GAAK,CAAC1V,EAAQ0V,EAAa,OAAO,EAAG,CACzE,MAAM3E,EAAU,CAAE,EAClBnD,EACE,QACAmD,EACA,gBACA2E,EAAa,cACbvJ,EACApD,EACA1B,CACD,EACDsO,EAAS,QAAU3N,GACjB+I,EAAQ,cACRwE,EACD,CACL,CACA,CAEA,SAASM,GAAsB5G,EAAQC,EAAQ7H,EAAkB0B,EAAW,CAC1E,MAAM+M,EAAqB5G,EAAO,eAClC,GAAI,CAAClP,EAAQ8V,CAAkB,EAC7B,OAGF,MAAM3J,EAAWH,EAAmB8J,EAAmB,QAAQ,EAC/D,IAAIC,EAAiB9G,EAAO,eACvBjP,EAAQ+V,CAAc,IACzB9G,EAAO,eAAiB8G,EAAiB,IAAIC,IAG/CvF,GACEsF,EACA,YACAD,EAAmB,UACnBzO,CACD,EACD4J,GACE8E,EACA,QACAD,EAAmB,MACnBzO,CACD,EACDuG,EACE,QACAmI,EACA,OACAD,EAAmB,KACnB3J,EACApD,EACA1B,CACD,EACDuG,EACEjD,GACAoL,EACA,aACAD,EAAmB,WACnB3J,EACApD,EACA1B,CACD,EACDuG,EACE,QACAmI,EACA,OACAD,EAAmB,KACnB3J,EACApD,EACA1B,CACD,EACD0H,EACEgH,EACA,WACAD,EAAmB,SACnB3J,EACApD,EACA1B,CACD,EACDuG,EACE,QACAmI,EACA,UACAD,EAAmB,QACnB3J,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACA6W,EACA,eACAD,EAAmB,aACnB3J,EACApD,EACA1B,CACD,EACDuG,EACE,OACAmI,EACA,eACAD,EAAmB,aACnB3J,EACApD,EACA1B,CACD,EACDuG,EACE,OACAmI,EACA,cACAD,EAAmB,YACnB3J,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACA8K,EACA,UACAD,EAAmB,QACnB3J,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACA+K,EACA,2BACAD,EAAmB,yBACnB3J,EACApD,EACA1B,CACD,CACH,CAEA,SAAS4O,GAAiBhH,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACrE,MAAMmN,EAAgBhH,EAAO,UAC7B,GAAI,CAAClP,EAAQkW,CAAa,EACxB,OAGF,MAAM/J,EAAWH,EAAmBkK,EAAc,QAAQ,EAC1D,IAAIC,EAAYlH,EAAO,UAClBjP,EAAQmW,CAAS,IACpBlH,EAAO,UAAYkH,EAAY,IAAIC,IAGrCxI,EACE,QACAuI,EACA,OACAD,EAAc,KACd/J,EACApD,EACA1B,CACD,EACDuG,EACExE,GACA+M,EACA,cACAD,EAAc,YACd/J,EACApD,EACA1B,CACD,EACDuG,EACE,OACAuI,EACA,SACAD,EAAc,OACd/J,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAuL,EACA,kBACAD,EAAc,gBACd/J,EACApD,EACA1B,CACD,EACDuG,EACE,OACAuI,EACA,iBACAD,EAAc,eACd/J,EACApD,EACA1B,CACD,EACDuG,EACEhD,EACAuL,EACA,0BACAD,EAAc,wBACd/J,EACApD,EACA1B,CACD,EACDuG,EACEvH,GACA8P,EACA,WACAD,EAAc,SACd/J,EACApD,EACA1B,CACD,EACDuG,EACEvH,GACA8P,EACA,aACAD,EAAc,WACd/J,EACApD,EACA1B,CACD,EACDuG,EACE,OACAuI,EACA,cACAD,EAAc,YACd/J,EACApD,EACA1B,CACD,EACDuG,EACE,QACAuI,EACA,OACAD,EAAc,KACd/J,EACApD,EACA1B,CACD,EACD0H,EACEoH,EACA,WACAD,EAAc,SACd/J,EACApD,EACA1B,CACD,EACDuG,EACE,QACAuI,EACA,UACAD,EAAc,QACd/J,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAiX,EACA,eACAD,EAAc,aACd/J,EACApD,EACA1B,CACD,EACDuG,EACE,OACAuI,EACA,eACAD,EAAc,aACd/J,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACAkL,EACA,UACAD,EAAc,QACd/J,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACAmL,EACA,2BACAD,EAAc,yBACd/J,EACApD,EACA1B,CACD,EACDuG,EACEnD,EACA0L,EACA,qBACAD,EAAc,mBACd/J,EACApD,EACA1B,CACD,EACDuG,EACE,OACAuI,EACA,SACAD,EAAc,OACd/J,EACApD,EACA1B,CACD,CACH,CAEA,SAASgP,GAAepH,EAAQC,EAAQ7H,EAAkB0B,EAAW,CACnE,MAAMuN,EAAcpH,EAAO,QAC3B,GAAI,CAAClP,EAAQsW,CAAW,EACtB,OAGF,MAAMnK,EAAWH,EAAmBsK,EAAY,QAAQ,EACxD,IAAIC,EAAUtH,EAAO,QAChBjP,EAAQuW,CAAO,IAClBtH,EAAO,QAAUsH,EAAU,IAAIC,IAGjC5I,EACE,QACA2I,EACA,OACAD,EAAY,KACZnK,EACApD,EACA1B,CACD,EACDuG,EACEnN,GACA8V,EACA,MACAD,EAAY,IACZnK,EACApD,EACA1B,CACD,EACDuG,EACE,OACA2I,EACA,0BACAD,EAAY,wBACZnK,EACApD,EACA1B,CACD,CACH,CAEA,SAASoP,GAAYxH,EAAQC,EAAQ7H,EAAkB0B,EAAW,CAChE,MAAM2N,EAAWxH,EAAO,KACxB,GAAI,CAAClP,EAAQ0W,CAAQ,EACnB,OAGF,MAAMvK,EAAWH,EAAmB0K,EAAS,QAAQ,EACrD,IAAIC,EAAO1H,EAAO,KACbjP,EAAQ2W,CAAI,IACf1H,EAAO,KAAO0H,EAAO,IAAIC,IAG3BhJ,EACE,QACA+I,EACA,OACAD,EAAS,KACTvK,EACApD,EACA1B,CACD,EACDoJ,GAAqBkG,EAAM,YAAaD,EAAS,UAAWrP,CAAgB,EAC5EkJ,GACEoG,EACA,iBACAD,EAAS,eACTrP,CACD,EACDkJ,GACEoG,EACA,iBACAD,EAAS,eACTrP,CACD,EACDuG,EACE,OACA+I,EACA,cACAD,EAAS,YACTvK,EACApD,EACA1B,CACD,EACDuG,EACE,QACA+I,EACA,OACAD,EAAS,KACTvK,EACApD,EACA1B,CACD,EACD0H,EACE4H,EACA,WACAD,EAAS,SACTvK,EACApD,EACA1B,CACD,EACDuG,EACE,QACA+I,EACA,UACAD,EAAS,QACTvK,EACApD,EACA1B,CACD,EACDuG,EACE1O,EACAyX,EACA,eACAD,EAAS,aACTvK,EACApD,EACA1B,CACD,EACDuG,EACE,OACA+I,EACA,eACAD,EAAS,aACTvK,EACApD,EACA1B,CACD,EACDuG,EACE3C,EACA0L,EACA,UACAD,EAAS,QACTvK,EACApD,EACA1B,CACD,EACDuG,EACE5C,EACA2L,EACA,2BACAD,EAAS,yBACTvK,EACApD,EACA1B,CACD,CACH,CAEA,SAASwP,GACP3H,EACA7H,EACAyP,EACA/N,EACAsJ,EACA,CACA,IAAI0E,EAAW7H,EAAO,GAOtB,GANKlP,EAAQ+W,CAAQ,IACnBA,EAAWC,GAAY,GAGzB7P,GAAY4P,EAER,CAAC/W,EAAQqS,EAAW,QAAQ,GAAK0E,IAAa,WAChD,MAAM,IAAIhP,GACR,8DACD,EAGH,GAAImH,EAAO,SAAc,GACvB7H,EAAiB,WAAW0P,CAAQ,UA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}