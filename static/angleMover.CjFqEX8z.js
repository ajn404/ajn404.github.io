import{j as s}from"./jsx-runtime.DZ3s2XAB.js";import d from"./index.FIxribuB.js";import{M as f}from"./Mover.DJ3EP4Mg.js";import{r as c}from"./index.D4IXJ7me.js";import"./_sentry-release-injection-file.B-UwqLso.js";import"./preload-helper.ddZQF9G8.js";/* empty css                       */import"./react-icons.esm.Bm3uWd-S.js";import"./createLucideIcon.Bi-ZCKuD.js";import"./_commonjsHelpers.DqoTaOmB.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},e=new r.Error().stack;e&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[e]="f46be833-94fb-4078-9e24-c96d8a55c3fb",r._sentryDebugIdIdentifier="sentry-dbid-f46be833-94fb-4078-9e24-c96d8a55c3fb")}catch{}})();const x=()=>{const r=c.useCallback(e=>{let t;const n=()=>{e.createCanvas(e.windowWidth/2,240),t=new Array(10).fill(0).map(()=>new f(e)),e.frameRate(60)},a=()=>{e.background(255),t.forEach(o=>{o.update(),o.checkEdges(),o.show()})},i=()=>{e.resizeCanvas(e.windowWidth/2,240)};e.setup=n,e.draw=a,e.windowResized=i},[]);return s.jsx(s.Fragment,{children:s.jsx(d,{sketch:r,showControls:!0})})};export{x as default};
//# sourceMappingURL=angleMover.CjFqEX8z.js.map
