{"version":3,"file":"floating-ui.dom.DKV5iS0A.js","sources":["../../node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../node_modules/.pnpm/@floating-ui+core@1.7.0/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../../node_modules/.pnpm/@floating-ui+dom@1.7.0/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          var _overflowsData$;\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          const hasInitialMainAxisOverflow = ((_overflowsData$ = overflowsData[0]) == null ? void 0 : _overflowsData$.overflows[0]) > 0;\n          if (!ignoreCrossAxisOverflow || hasInitialMainAxisOverflow) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n"],"names":["sides","alignments","placements","acc","side","min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","clamp","start","value","end","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","x","y","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","strategy","middleware","platform","validMiddleware","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","getPlacementList","autoAlignment","allowedPlacements","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements$1","overflow","currentIndex","currentPlacement","alignmentSides","currentOverflows","allOverflows","nextPlacement","placementsSortedByMostSpace","d","a","b","resetPlacement","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","initialSideAxis","isBasePlacement","fallbackPlacements","hasFallbackAxisSideDirection","overflows","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$","ignoreCrossAxisOverflow","hasInitialMainAxisOverflow","_overflowsData$filter2","currentSideAxis","getSideOffsets","isAnySideFullyClipped","hide","offsets","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","nativeClientRects","clientRects","fallback","getBoundingClientRect","firstRect","lastRect","isTop","top","bottom","left","right","isLeftSide","maxRight","minLeft","measureRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","_middlewareData$offse","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","_state$middlewareData","_state$middlewareData2","apply","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","hasWindow","getNodeName","node","isNode","getWindow","_node$ownerDocument","getDocumentElement","isElement","isHTMLElement","isShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","isTableElement","isTopLayer","selector","isContainingBlock","elementOrCss","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","getWindowScrollBarX","leftScroll","getHTMLOffset","documentElement","scroll","ignoreScrollbarX","htmlRect","convertOffsetParentRelativeRectToViewportRelativeRect","topLayer","isOffsetParentAnElement","offsetRect","htmlOffset","getClientRects","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","setLeftRTLScrollbarOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","getOffsetParent","svgOffsetParent","getElementRects","getOffsetParentFn","getDimensionsFn","floatingDimensions","isRTL","rectsAreEqual","observeMove","onMove","io","timeoutId","root","cleanup","_io","refresh","skip","threshold","elementRectForRootMargin","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","detectOverflow$1","offset$1","autoPlacement$1","shift$1","flip$1","size$1","hide$1","arrow$1","inline$1","limitShift$1","mergedOptions","platformWithCache","computePosition$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}