{"version":3,"file":"template.D10Mnrry.js","sources":["../../src/components/react/fiber/bookOfShader/template.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from \"react\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport { ShaderMaterial } from \"three\";\nimport * as THREE from \"three\";\n// import { OrbitControls } from \"@react-three/drei\";\n\n/**\n * CustomShaderCube is a React functional component that renders a 3D plane using a custom shader material.\n *\n * @param mouse - An object containing the current x and y coordinates of the mouse.\n * @param vertexShader - A string representing the GLSL code for the vertex shader.\n * @param fragmentShader - A string representing the GLSL code for the fragment shader.\n *\n * The component uses the @react-three/fiber library to manage WebGL rendering, and it relies on the `useThree`\n * hook to access the rendering context's size and WebGL instance. It creates a ShaderMaterial with the provided\n * vertex and fragment shaders, and it passes the time, resolution, and mouse position as uniforms to the shaders.\n * The component updates the shader uniforms on each animation frame using the `useFrame` hook.\n */\nconst CustomShaderCube: React.FC<{\n  mouse: { x: number; y: number };\n  vertexShader: string;\n  fragmentShader: string;\n}> = ({ mouse, vertexShader, fragmentShader }) => {\n  const meshRef = useRef<THREE.Mesh>(null);\n  const { size, gl } = useThree(); // 获取 Canvas 的真实宽高\n\n  const material = useMemo(() => {\n    return new ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      uniforms: {\n        u_time: { value: 0 },\n        u_resolution: { value: new THREE.Vector2(size.width, size.height) },\n        u_mouse: { value: new THREE.Vector2(mouse.x, mouse.y) },\n      },\n    });\n  }, [vertexShader, fragmentShader, size]);\n\n  useEffect(() => {\n    gl.setPixelRatio(window.devicePixelRatio || 2);\n    gl.setSize(size.width, size.height);\n    material.uniforms.u_resolution.value.set(size.width, size.height); // 更新分辨率\n  }, [size]);\n\n  useFrame(({ clock }) => {\n    material.uniforms.u_time.value = clock.getElapsedTime();\n    material.uniforms.u_mouse.value.set(mouse.x, mouse.y);\n    material.uniforms.u_resolution.value.set(size.width, size.height); // 每帧更新分辨率\n  });\n  return (\n    <mesh ref={meshRef} material={material}>\n      <planeGeometry args={[size.width, size.height, 1]} />\n    </mesh>\n  );\n};\ntype NumericString = `${number}`;\nconst App: React.FC<{\n  vertexShader?: string;\n  fragmentShader?: string;\n  width?: NumericString;\n  height?: NumericString;\n}> = ({\n  vertexShader = `\n    uniform vec2 u_resolution;\n    varying vec2 v_uv;\n\n    void main() {\n      v_uv = (position.xy + 1.0) / 2.0; // 将坐标转换到 [0, 1] 范围\n      gl_Position = vec4(position, 1.0);\n    }\n  `,\n  fragmentShader = `\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    uniform vec2 u_resolution;\n    uniform vec2 u_mouse;\n    uniform float u_time;\n\n    float plot(vec2 st) {\n      return smoothstep(0.02, 0.0, abs(st.y - st.x));\n    }\n\n    void main() {\n      vec2 st = gl_FragCoord.xy / u_resolution;\n      float y = st.x;\n      vec3 color = vec3(y);\n      float pct = plot(st);\n      color = (1.0 - pct) * color + pct * vec3(1.000, 0.895, 0.688);\n      gl_FragColor = vec4(color, 1.0);\n    }\n  `,\n  width = 45,\n  height = 45,\n}) => {\n  const [mouse, setMouse] = useState({ x: 0, y: 0 });\n  const canvas = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      setMouse({ x: event.clientX, y: event.clientY });\n    };\n    if (canvas.current) {\n      canvas.current.addEventListener(\"mousemove\", handleMouseMove);\n    }\n    return () => {\n      if (canvas.current) {\n        canvas.current.removeEventListener(\"mousemove\", handleMouseMove);\n      }\n    };\n  }, []);\n  return (\n    <Canvas\n      dpr={[1, 2]}\n      className=\"m-auto\"\n      gl={{ antialias: false }}\n      camera={{ position: [0, 0, 15], fov: 17.5, near: 1, far: 20 }}\n      style={{ width: `${width}vw`, height: `${height}vw` }}\n      ref={canvas}\n    >\n      <color attach=\"background\" args={[\"black\"]} />\n      <CustomShaderCube\n        mouse={mouse}\n        vertexShader={vertexShader}\n        fragmentShader={fragmentShader}\n      />\n    </Canvas>\n  );\n};\n\nexport default App;\n"],"names":["CustomShaderCube","mouse","vertexShader","fragmentShader","meshRef","useRef","size","gl","useThree","material","useMemo","ShaderMaterial","THREE.Vector2","useEffect","useFrame","clock","jsx","App","width","height","setMouse","useState","canvas","handleMouseMove","event","jsxs","Canvas"],"mappings":"woBAkBA,MAAMA,EAID,CAAC,CAAE,MAAAC,EAAO,aAAAC,EAAc,eAAAC,KAAqB,CAC1C,MAAAC,EAAUC,SAAmB,IAAI,EACjC,CAAE,KAAAC,EAAM,GAAAC,CAAG,EAAIC,EAAS,EAExBC,EAAWC,EAAAA,QAAQ,IAChB,IAAIC,EAAe,CACxB,aAAAT,EACA,eAAAC,EACA,SAAU,CACR,OAAQ,CAAE,MAAO,CAAE,EACnB,aAAc,CAAE,MAAO,IAAIS,EAAcN,EAAK,MAAOA,EAAK,MAAM,CAAE,EAClE,QAAS,CAAE,MAAO,IAAIM,EAAcX,EAAM,EAAGA,EAAM,CAAC,CAAE,CAAA,CACxD,CACD,EACA,CAACC,EAAcC,EAAgBG,CAAI,CAAC,EAEvCO,OAAAA,EAAAA,UAAU,IAAM,CACXN,EAAA,cAAc,OAAO,kBAAoB,CAAC,EAC7CA,EAAG,QAAQD,EAAK,MAAOA,EAAK,MAAM,EAClCG,EAAS,SAAS,aAAa,MAAM,IAAIH,EAAK,MAAOA,EAAK,MAAM,CAAA,EAC/D,CAACA,CAAI,CAAC,EAEAQ,EAAA,CAAC,CAAE,MAAAC,KAAY,CACtBN,EAAS,SAAS,OAAO,MAAQM,EAAM,eAAe,EACtDN,EAAS,SAAS,QAAQ,MAAM,IAAIR,EAAM,EAAGA,EAAM,CAAC,EACpDQ,EAAS,SAAS,aAAa,MAAM,IAAIH,EAAK,MAAOA,EAAK,MAAM,CAAA,CACjE,EAEEU,EAAAA,IAAA,OAAA,CAAK,IAAKZ,EAAS,SAAAK,EAClB,SAACO,MAAA,gBAAA,CAAc,KAAM,CAACV,EAAK,MAAOA,EAAK,OAAQ,CAAC,CAAG,CAAA,EACrD,CAEJ,EAEMW,EAKD,CAAC,CACJ,aAAAf,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASf,eAAAC,EAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsBjB,MAAAe,EAAQ,GACR,OAAAC,EAAS,EACX,IAAM,CACE,KAAA,CAAClB,EAAOmB,CAAQ,EAAIC,EAAA,SAAS,CAAE,EAAG,EAAG,EAAG,EAAG,EAC3CC,EAASjB,SAA0B,IAAI,EAC7CQ,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAU,EAAmBC,GAAsB,CAC7CJ,EAAS,CAAE,EAAGI,EAAM,QAAS,EAAGA,EAAM,QAAS,CACjD,EACA,OAAIF,EAAO,SACFA,EAAA,QAAQ,iBAAiB,YAAaC,CAAe,EAEvD,IAAM,CACPD,EAAO,SACFA,EAAA,QAAQ,oBAAoB,YAAaC,CAAe,CAEnE,CACF,EAAG,EAAE,EAEHE,EAAA,KAACC,EAAA,CACC,IAAK,CAAC,EAAG,CAAC,EACV,UAAU,SACV,GAAI,CAAE,UAAW,EAAM,EACvB,OAAQ,CAAE,SAAU,CAAC,EAAG,EAAG,EAAE,EAAG,IAAK,KAAM,KAAM,EAAG,IAAK,EAAG,EAC5D,MAAO,CAAE,MAAO,GAAGR,CAAK,KAAM,OAAQ,GAAGC,CAAM,IAAK,EACpD,IAAKG,EAEL,SAAA,CAAAN,EAAA,IAAC,SAAM,OAAO,aAAa,KAAM,CAAC,OAAO,EAAG,EAC5CA,EAAA,IAAChB,EAAA,CACC,MAAAC,EACA,aAAAC,EACA,eAAAC,CAAA,CAAA,CACF,CAAA,CACF,CAEJ"}