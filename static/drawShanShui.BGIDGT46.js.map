{"version":3,"file":"drawShanShui.BGIDGT46.js","sources":["../../src/components/react/svg/drawShanShui/render/basic/PRNG.ts","../../src/components/react/svg/drawShanShui/render/basic/range.ts","../../src/components/react/svg/drawShanShui/render/basic/chunk.ts","../../src/components/react/svg/drawShanShui/render/basic/perlinNoise.ts","../../src/components/react/svg/drawShanShui/render/basic/point.ts","../../src/components/react/svg/drawShanShui/render/basic/designer.ts","../../src/components/react/svg/drawShanShui/render/basic/polytools.ts","../../src/components/react/svg/drawShanShui/render/svg/types.ts","../../src/components/react/svg/drawShanShui/render/basic/utils.ts","../../src/components/react/svg/drawShanShui/render/parts/brushes.ts","../../src/components/react/svg/drawShanShui/render/parts/man.ts","../../src/components/react/svg/drawShanShui/render/parts/arch.ts","../../src/components/react/svg/drawShanShui/render/parts/tree.ts","../../src/components/react/svg/drawShanShui/render/parts/mountain.ts","../../src/components/react/svg/drawShanShui/render/parts/water.ts","../../src/components/react/svg/drawShanShui/render/chunkCache.ts","../../src/components/react/svg/drawShanShui/ui/ScrollableCanvas.tsx","../../src/components/react/svg/drawShanShui/ui/BackgroundRender.tsx","../../src/components/react/svg/drawShanShui.tsx"],"sourcesContent":["export class PRNG {\n  s: number = 1234;\n  p: number = 999979;\n  q: number = 999983;\n  m: number = this.p * this.q;\n\n  hash(x: any): number {\n    const y = window.btoa(JSON.stringify(x));\n    let z = 0;\n    for (let i = 0; i < y.length; i++) {\n      z += y.charCodeAt(i) * Math.pow(128, i);\n    }\n    return z;\n  }\n\n  seed(x: any): void {\n    if (x === undefined) {\n      x = new Date().getTime();\n    }\n    let y = 0;\n    let z = 0;\n    const redo = () => {\n      y = (this.hash(x) + z) % this.m;\n      z += 1;\n    };\n    while (y % this.p === 0 || y % this.q === 0 || y === 0 || y === 1) {\n      redo();\n    }\n    this.s = y;\n    console.log(`seed(${x}) = ${this.s}`);\n    for (let i = 0; i < 10; i++) {\n      this.next();\n    }\n  }\n\n  next(): number {\n    this.s = (this.s * this.s) % this.m;\n    return this.s / this.m;\n  }\n\n  random(l: number = 0, r: number = 1): number {\n    return this.next() * (r - l) + l;\n  }\n\n  /**\n   * @returns -1 or 1\n   */\n  randsign(): number {\n    return this.random() > 0.5 ? -1 : 1;\n  }\n}\n","export interface IRange {\n  l: number;\n  r: number;\n}\n\nexport class Range {\n  constructor(start: number = 0, end: number = 1) {\n    this.l = start;\n    this.r = end;\n  }\n  l: number = 0;\n  r: number = 1;\n  length(): number {\n    return this.r - this.l;\n  }\n  copy(): Range {\n    return new Range(this.l, this.r);\n  }\n  contains(v: number): boolean {\n    return v >= this.l && v <= this.r;\n  }\n  toratio(x: number): number {\n    return (x - this.l) / (this.r - this.l);\n  }\n  fromratio(p: number): number {\n    return p * this.length() + this.l;\n  }\n  static fromArray(a: number[]): Range {\n    return new Range(a[0], a[1]);\n  }\n}\n\nexport class Bound {\n  constructor(\n    xMin: number = 0,\n    xMax: number = 0,\n    yMin: number = 0,\n    yMax: number = 0\n  ) {\n    this.xmin = xMin;\n    this.xmax = xMax;\n    this.ymin = yMin;\n    this.ymax = yMax;\n  }\n\n  xmin: number = 0;\n  xmax: number = 0;\n  ymin: number = 0;\n  ymax: number = 0;\n}\n","import type { ISvgElement } from \"../svg\";\nimport type { IPoint } from \"./point\";\n\ntype ChunkTag = \"mount\" | \"flatmount\" | \"distmount\" | \"boat\" | \"water\" | \"?\";\n\nexport interface IChunk extends IPoint {\n  tag: ChunkTag;\n  x: number;\n  y: number;\n}\n\nexport class Chunk {\n  constructor(tag: ChunkTag, x: number, y: number, elements: ISvgElement[]) {\n    this.tag = tag;\n    this.x = x;\n    this.y = y;\n    this.elements = elements;\n    this.canv = this.elements.map(p => p.render()).join(\"\\n\");\n  }\n\n  tag: ChunkTag = \"?\";\n  x: number = 0;\n  y: number = 0;\n  elements: ISvgElement[] = [];\n  canv: string;\n\n  render(): string {\n    return this.canv;\n  }\n}\n\nexport class DesignChunk implements IChunk {\n  constructor(tag: ChunkTag, x: number, y: number, h: number = 0) {\n    this.tag = tag;\n    this.x = x;\n    this.y = y;\n    this.h = h;\n  }\n\n  tag: ChunkTag = \"?\";\n  x: number = 0;\n  y: number = 0;\n  h: number = 0;\n}\n","// Modified from https://raw.githubusercontent.com/processing/p5.js/master/src/math/noise.js\nimport { PRNG } from \"./PRNG\";\n\nconst PERLIN_YWRAPB = 4;\nconst PERLIN_YWRAP = 1 << PERLIN_YWRAPB;\nconst PERLIN_ZWRAPB = 8;\nconst PERLIN_ZWRAP = 1 << PERLIN_ZWRAPB;\nconst PERLIN_SIZE = 4095;\nconst PERLIN_OCTAVES = 4;\nconst PERLIN_AMP_FALLOFF = 0.5;\n\nfunction scaled_cosine(i: number): number {\n  return 0.5 * (1.0 - Math.cos(i * Math.PI));\n}\n\nconst lcg = {\n  m: 4294967296,\n  a: 1664525,\n  c: 1013904223,\n  seed: -1,\n  z: -1,\n  setSeed(prng: PRNG, val: number): void {\n    // make seed unsigned\n    this.z = this.seed = (val == null ? prng.random(0, this.m) : val) >>> 0;\n  },\n  getSeed: function (): number {\n    return this.seed;\n  },\n  rand: function (): number {\n    this.z = (this.a * this.z + this.c) % this.m;\n    return this.z / this.m;\n  },\n};\n\nexport class PerlinNoise {\n  perlin: number[] | undefined;\n\n  noise(prng: PRNG, x: number, y: number = 0, z: number = 0): number {\n    if (this.perlin === undefined) {\n      this.perlin = new Array(PERLIN_SIZE + 1);\n      for (let i = 0; i < PERLIN_SIZE + 1; i++) {\n        this.perlin[i] = prng.random();\n      }\n    }\n\n    x = Math.abs(x);\n    y = Math.abs(y);\n    z = Math.abs(z);\n    let xi = Math.floor(x),\n      yi = Math.floor(y),\n      zi = Math.floor(z);\n    let xf = x - xi;\n    let yf = y - yi;\n    let zf = z - zi;\n    let r = 0;\n    let ampl = 0.5;\n\n    for (let o = 0; o < PERLIN_OCTAVES; o++) {\n      let of = xi + (yi << PERLIN_YWRAPB) + (zi << PERLIN_ZWRAPB);\n      const rxf = scaled_cosine(xf);\n      const ryf = scaled_cosine(yf);\n      let n1 = this.perlin[of & PERLIN_SIZE];\n      n1 += rxf * (this.perlin[(of + 1) & PERLIN_SIZE] - n1);\n      let n2 = this.perlin[(of + PERLIN_YWRAP) & PERLIN_SIZE];\n      n2 += rxf * (this.perlin[(of + PERLIN_YWRAP + 1) & PERLIN_SIZE] - n2);\n      n1 += ryf * (n2 - n1);\n      of += PERLIN_ZWRAP;\n      n2 = this.perlin[of & PERLIN_SIZE];\n      n2 += rxf * (this.perlin[(of + 1) & PERLIN_SIZE] - n2);\n      let n3 = this.perlin[(of + PERLIN_YWRAP) & PERLIN_SIZE];\n      n3 += rxf * (this.perlin[(of + PERLIN_YWRAP + 1) & PERLIN_SIZE] - n3);\n      n2 += ryf * (n3 - n2);\n      n1 += scaled_cosine(zf) * (n2 - n1);\n      r += n1 * ampl;\n      ampl *= PERLIN_AMP_FALLOFF;\n      xi <<= 1;\n      xf *= 2;\n      yi <<= 1;\n      yf *= 2;\n      zi <<= 1;\n      zf *= 2;\n      if (xf >= 1.0) {\n        xi++;\n        xf--;\n      }\n      if (yf >= 1.0) {\n        yi++;\n        yf--;\n      }\n      if (zf >= 1.0) {\n        zi++;\n        zf--;\n      }\n    }\n    return r;\n  }\n\n  seed(prng: PRNG, seed: number): void {\n    lcg.setSeed(prng, seed);\n    this.perlin = new Array(PERLIN_SIZE + 1);\n    for (let i = 0; i < PERLIN_SIZE + 1; i++) {\n      this.perlin[i] = lcg.rand();\n    }\n  }\n}\n\nconst Noise = new PerlinNoise();\n\nexport { Noise };\n","export interface IPoint {\n  x: number;\n  y: number;\n}\n\nexport class Point implements IPoint {\n  constructor(X: number = 0, Y: number = 0) {\n    this.x = X;\n    this.y = Y;\n  }\n  x: number = 0;\n  y: number = 0;\n  toArray(): number[] {\n    return [this.x, this.y];\n  }\n  to(dst: Point): Vector {\n    return new Vector(dst.x - this.x, dst.y - this.y);\n  }\n  from(src: Point): Vector {\n    return src.to(this);\n  }\n  move(vec: Vector): Point {\n    return new Point(this.x + vec.x, this.y + vec.y);\n  }\n  isFinite(): boolean {\n    return isFinite(this.x) && isFinite(this.y);\n  }\n  copy(): Point {\n    return new Point(this.x, this.y);\n  }\n  static fromArray(a: number[]): Point {\n    return new Point(a[0], a[1]);\n  }\n  static origin(): Point {\n    return new Point(0, 0);\n  }\n  static readonly O: Point = Point.origin();\n}\n\nexport class Vector implements IPoint {\n  constructor(X: number, Y: number) {\n    this.x = X;\n    this.y = Y;\n  }\n  x: number = 0;\n  y: number = 0;\n  toArray(): number[] {\n    return [this.x, this.y];\n  }\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  movefrom(src: Point) {\n    return src.move(this);\n  }\n  move(v: Vector): Vector {\n    return new Vector(this.x + v.x, this.y + v.y);\n  }\n  scale(ratio: number): Vector {\n    return new Vector(this.x * ratio, this.y * ratio);\n  }\n  static unit(angle: number = 0): Vector {\n    return new Vector(Math.cos(angle), Math.sin(angle));\n  }\n  static fromArray(a: number[]): Vector {\n    return new Vector(a[0], a[1]);\n  }\n}\n\nexport function distance(p0: Point, p1: Point): number {\n  return p0.to(p1).length();\n}\n","import { DesignChunk, type IChunk } from \"./chunk\";\nimport { Noise } from \"./perlinNoise\";\nimport { Point } from \"./point\";\nimport { PRNG } from \"./PRNG\";\n\n/**\n * whether f(x, y) is max value in rect(x - r, y - r, x + r, y + r)\n * @param p center point\n * @param f\n * @param r radius\n * @returns\n */\nfunction locmax(p: Point, f: (p: Point) => number, r: number): boolean {\n  const z0 = f(p);\n\n  const np = new Point();\n  for (np.x = p.x - r; np.x < p.x + r; np.x++) {\n    for (np.y = p.y - r; np.y < p.y + r; np.y++) {\n      if (z0 < f(np)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction needAdd(reg: IChunk[], c: IChunk, r: number = 10): boolean {\n  for (let k = 0; k < reg.length; k++) {\n    if (Math.abs(reg[k].x - c.x) < r) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function design(\n  prng: PRNG,\n  mountain_cover: number[],\n  xmin: number,\n  xmax: number\n): IChunk[] {\n  const reg: IChunk[] = [];\n  const samp = 0.03;\n  const ns = (p: Point) =>\n    Math.max(Noise.noise(prng, p.x * samp) - 0.55, 0) * 2;\n  const yr = (x: number) => Noise.noise(prng, x * 0.01, Math.PI);\n\n  const xstep = 5;\n  const mwid = 200;\n\n  const imin = Math.floor(xmin / xstep),\n    imax = Math.floor(xmax / xstep);\n  const ioff = (xmin % xstep) + (xmin < 0 ? 1 : 0) * xstep;\n\n  for (let i = imin; i < imax; i++) {\n    if (isNaN(mountain_cover[i])) mountain_cover[i] = 0;\n  }\n\n  for (let i = imin; i < imax; i++) {\n    const x = i * xstep + ioff;\n    for (let j = 0; j < yr(x) * 480; j += 30) {\n      if (ns(new Point(x, j)) > 0.3 && locmax(new Point(x, j), ns, 2)) {\n        const xof = x + prng.random(-500, 500);\n        const yof = j + 300;\n        const r = new DesignChunk(\"mount\", xof, yof, ns(new Point(x, j)));\n        if (needAdd(reg, r)) {\n          reg.push(r);\n          for (\n            let k = Math.floor((xof - mwid) / xstep);\n            k < (xof + mwid) / xstep;\n            k++\n          ) {\n            mountain_cover[k] = isNaN(mountain_cover[k])\n              ? 1\n              : mountain_cover[k] + 1;\n          }\n        }\n      }\n    }\n\n    if (Math.abs(x) % 1000 < Math.max(1, xstep - 1)) {\n      const r = new DesignChunk(\n        \"distmount\",\n        x,\n        prng.random(230, 280),\n        ns(new Point(x, yr(x) * 480))\n      );\n      if (needAdd(reg, r)) reg.push(r);\n    }\n  }\n\n  for (let i = imin; i < imax; i++) {\n    const x = i * xstep + ioff;\n    if (mountain_cover[i] === 0) {\n      if (prng.random() < 0.01) {\n        for (let j = 0; j < prng.random(0, 4); j++) {\n          const r = new DesignChunk(\n            \"flatmount\",\n            x + prng.random(-700, 700),\n            700 - j * 50,\n            ns(new Point(x, j))\n          );\n          if (needAdd(reg, r)) reg.push(r);\n        }\n      }\n    }\n  }\n\n  for (let i = imin; i < imax; i++) {\n    if (prng.random() < 0.2) {\n      const x = i * xstep + ioff;\n      const r = new DesignChunk(\"boat\", x, prng.random(300, 690));\n      if (needAdd(reg, r, 400)) reg.push(r);\n    }\n  }\n\n  return reg;\n}\n","import { distance, Point } from \"./point\";\n\nexport function midPt(ps: Point[]): Point {\n  let sx = 0;\n  let sy = 0;\n  for (let i = 0; i < ps.length; ++i) {\n    sx += ps[i].x;\n    sy += ps[i].y;\n  }\n\n  return new Point(sx / ps.length, sy / ps.length);\n}\n\nfunction lineExpr(pt0: Point, pt1: Point): number[] {\n  const den: number = pt1.x - pt1.x;\n  const m: number = den === 0 ? Infinity : (pt1.y - pt0.y) / den;\n  const k = pt0.y - m * pt0.x;\n  return [m, k];\n}\n\nfunction onSeg(p: Point, ln: Point[]) {\n  //non-inclusive\n  return (\n    Math.min(ln[0].x, ln[1].x) <= p.x &&\n    p.x <= Math.max(ln[0].x, ln[1].x) &&\n    Math.min(ln[0].y, ln[1].y) <= p.x &&\n    p.x <= Math.max(ln[0].y, ln[1].y)\n  );\n}\n\nfunction intersect(ln0: Point[], ln1: Point[]): boolean {\n  const le0 = lineExpr(ln0[0], ln0[1]);\n  const le1 = lineExpr(ln1[0], ln1[1]);\n  const den = le0[0] - le1[0];\n  if (den === 0) {\n    return false;\n  }\n  const x = (le1[1] - le0[1]) / den;\n  const y = le0[0] * x + le0[1];\n  const p = new Point(x, y);\n  if (onSeg(p, ln0) && onSeg(p, ln1)) {\n    // return [x, y];\n    return true;\n  }\n  return false;\n}\n\nfunction ptInPoly(pt: Point, plist: Point[]): boolean {\n  let scount = 0;\n  for (let i = 0; i < plist.length; i++) {\n    const np = plist[i !== plist.length - 1 ? i + 1 : 0];\n    const sect = intersect(\n      [plist[i], np],\n      [pt, new Point(pt.x + 999, pt.y + 999)]\n    );\n    if (sect !== false) {\n      scount++;\n    }\n  }\n  return scount % 2 === 1;\n}\n\nfunction lnInPoly(ln: Point[], plist: Point[]): boolean {\n  const lnc = [new Point(), new Point()];\n  const ep = 0.01;\n\n  lnc[0].x = ln[0].x * (1 - ep) + ln[1].x * ep;\n  lnc[0].y = ln[0].y * (1 - ep) + ln[1].y * ep;\n  lnc[1].x = ln[0].x * ep + ln[1].x * (1 - ep);\n  lnc[1].y = ln[0].y * ep + ln[1].y * (1 - ep);\n\n  for (let i = 0; i < plist.length; i++) {\n    const pt = plist[i];\n    const np = plist[i !== plist.length - 1 ? i + 1 : 0];\n    if (intersect(lnc, [pt, np]) !== false) {\n      return false;\n    }\n  }\n  const mid = midPt([ln[0], ln[1]]);\n  if (ptInPoly(mid, plist) === false) {\n    return false;\n  }\n  return true;\n}\n\nfunction sidesOf(plist: Point[]) {\n  const slist = [];\n  for (let i = 0; i < plist.length; i++) {\n    const pt = plist[i];\n    const np = plist[i !== plist.length - 1 ? i + 1 : 0];\n    const s = distance(pt, np);\n    slist.push(s);\n  }\n  return slist;\n}\n\nfunction areaOf(plist: Point[]) {\n  const slist = sidesOf(plist);\n  const a = slist[0],\n    b = slist[1],\n    c = slist[2];\n  const s = (a + b + c) / 2;\n  return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\nfunction sliverRatio(plist: Point[]) {\n  const A = areaOf(plist);\n  const P = sidesOf(plist).reduce(function (m, n) {\n    return m + n;\n  }, 0);\n  return A / P;\n}\n\nfunction bestEar(plist: Point[], convex: boolean, optimize: boolean) {\n  const cuts = [];\n  for (let i = 0; i < plist.length; i++) {\n    const pt = plist[i];\n    const lp = plist[i !== 0 ? i - 1 : plist.length - 1];\n    const np = plist[i !== plist.length - 1 ? i + 1 : 0];\n    const qlist = plist.slice();\n    qlist.splice(i, 1);\n    if (convex || lnInPoly([lp, np], plist)) {\n      const c = [[lp, pt, np], qlist];\n      if (!optimize) return c;\n      cuts.push(c);\n    }\n  }\n  let best = [plist, []];\n  let bestRatio = 0;\n  cuts.forEach(i => {\n    const r = sliverRatio(i[0]);\n    if (r >= bestRatio) {\n      best = i;\n      bestRatio = r;\n    }\n  });\n  return best;\n}\n\n/**\n * 将三角形拆分成一系列面积不大于 a 的三角形\n * @param plist 待拆分三角形\n * @param a 面积上限\n * @returns 一系列三角形\n */\nfunction shatter(plist: Point[], a: number): Point[][] {\n  if (plist.length === 0 || a === 0) {\n    return [];\n  }\n\n  if (areaOf(plist) < a) {\n    return [plist];\n  } else {\n    try {\n      const slist = sidesOf(plist);\n      const ind = slist.reduce(\n        (iMax, x, i, arr) => (x > arr[iMax] ? i : iMax),\n        0\n      );\n      const nind = (ind + 1) % plist.length;\n      const lind = (ind + 2) % plist.length;\n      const mid = midPt([plist[ind], plist[nind]]);\n      return shatter([plist[ind], mid, plist[lind]], a).concat(\n        shatter([plist[lind], plist[nind], mid], a)\n      );\n    } catch (err) {\n      console.log(plist);\n      console.log(err);\n      return [];\n    }\n  }\n}\n\n/**\n * 将多边形拆分成三角形列表\n * @param plist 多边形顶点列表\n * @param args 附加参数\n * @returns 拆分得到的一系列三角形\n */\nexport function triangulate(\n  plist: Point[],\n  area: number = 100,\n  convex: boolean = false,\n  optimize: boolean = false\n): Point[][] {\n  if (plist.length <= 3) {\n    return shatter(plist, area);\n  } else {\n    const cut = bestEar(plist, convex, optimize);\n    return shatter(cut[0], area).concat(\n      triangulate(cut[1], area, convex, optimize)\n    );\n  }\n}\n","import type { ISvgAttributes, ISvgElement, ISvgStyles } from \"./interfaces\";\n\nfunction SvgAttributeKey(key: string): string {\n  var result = key.replace(/([A-Z])/g, \" $1\");\n  return result.split(\" \").join(\"-\").toLowerCase();\n}\n\nfunction SvgStyleRender(attr: Partial<ISvgStyles>): string {\n  const strlist = Object.entries(attr).map(\n    ([k, v]) => `${SvgAttributeKey(k)}:${v}`\n  );\n  return `${strlist.join(\";\")}`;\n}\n\nfunction SvgAttributeRender(attr: Partial<ISvgAttributes>): string {\n  const strlist = Object.entries(attr).map(([k, v]) => {\n    const vstr = k === \"style\" && attr.style ? SvgStyleRender(attr.style) : v;\n    return `${SvgAttributeKey(k)}='${vstr}'`;\n  });\n  return strlist.join(\" \");\n}\n\ninterface IPoint {\n  x: number;\n  y: number;\n}\n\nexport class SvgPoint implements ISvgElement, IPoint {\n  constructor(_x: number, _y: number) {\n    this.x = _x;\n    this.y = _y;\n  }\n\n  attr = {};\n  x: number = 0;\n  y: number = 0;\n\n  static from(p: IPoint): SvgPoint {\n    return new SvgPoint(p.x, p.y);\n  }\n  render(): string {\n    return `${this.x.toFixed(1)},${this.y.toFixed(1)}`;\n  }\n}\n\nexport class SvgPolyline implements ISvgElement {\n  attr: Partial<ISvgAttributes> = {};\n  points: SvgPoint[] = [];\n\n  constructor(points: SvgPoint[], style: Partial<ISvgStyles>) {\n    this.points = points;\n    this.attr = { style };\n  }\n\n  render(): string {\n    const attrstr = SvgAttributeRender(this.attr);\n    return `<polyline points='${this.points\n      .map(p => p.render())\n      .join(\" \")}' ${attrstr}/>`;\n  }\n\n  toString(): string {\n    console.error(\"call Polyline.toString\");\n    return this.render();\n  }\n}\n\nexport class SvgText implements ISvgElement {\n  attr: Partial<ISvgAttributes> = {};\n  content: string = \"\";\n\n  constructor(content: string, attr: Partial<ISvgAttributes>) {\n    this.content = content;\n    this.attr = attr;\n  }\n\n  render() {\n    const attrstr = SvgAttributeRender(this.attr);\n    return `<text ${attrstr}>${this.content}</text>`;\n  }\n}\n","import { midPt } from \"./polytools\";\nimport { Point, Vector } from \"./point\";\nimport { PRNG } from \"./PRNG\";\nimport { Range } from \"./range\";\nimport { SvgPoint, SvgPolyline } from \"../svg\";\n\nexport function unNan(plist: Point[]): Point[] {\n  return plist.map((p: Point) => (p && p.isFinite() ? p : new Point()));\n}\n\nexport function mapval(value: number, i: Range, o: Range): number {\n  return o.fromratio(i.toratio(value));\n}\n\nexport function loopNoise(nslist: number[]): number[] {\n  const dif = nslist[nslist.length - 1] - nslist[0];\n  const bds = [100, -100];\n  for (let i = 0; i < nslist.length; i++) {\n    nslist[i] += (dif * (nslist.length - 1 - i)) / (nslist.length - 1);\n    if (nslist[i] < bds[0]) bds[0] = nslist[i];\n    if (nslist[i] > bds[1]) bds[1] = nslist[i];\n  }\n  const irange = Range.fromArray(bds);\n  const orange = new Range(0, 1);\n  return nslist.map(v => mapval(v, irange, orange));\n}\n\nexport function randChoice<T>(prng: PRNG, arr: T[]): T {\n  const p = prng.random(0, arr.length);\n  const ip = Math.floor(p);\n  return arr[ip];\n}\n\nexport function normRand(prng: PRNG, m: number, M: number): number {\n  const irange = new Range(0, 1);\n  const orange = new Range(m, M);\n  return mapval(prng.random(), irange, orange);\n}\n\nexport function wtrand(prng: PRNG, func: (v: number) => number): number {\n  const x = prng.random();\n  const y = prng.random();\n  return y < func(x) ? x : wtrand(prng, func);\n}\n\nexport function randGaussian(prng: PRNG): number {\n  const v1 = wtrand(prng, x => Math.exp(-24 * Math.pow(x - 0.5, 2)));\n  return v1 * 2 - 1;\n}\n\nexport function bezmh(P: Point[], w: number = 1): Point[] {\n  if (P.length === 2) {\n    P = [P[0], midPt(P), P[1]];\n  }\n  const plist = [];\n  for (let j = 0; j < P.length - 2; j++) {\n    const p0 = j === 0 ? P[j] : midPt([P[j], P[j + 1]]);\n    const p1 = P[j + 1];\n    const p2 = j === P.length - 3 ? P[j + 2] : midPt([P[j + 1], P[j + 2]]);\n\n    const pl = 20;\n    const jb = j === P.length - 3 ? 1 : 0;\n    for (let i = 0; i < pl + jb; i += 1) {\n      const t = i / pl;\n      // const u = Math.pow(1 - t, 2) + 2 * t * (1 - t) * w + t * t;\n      const a0 = (1 - t) * (1 - t);\n      const a1 = 2 * t * (1 - t);\n      const a2 = t * t;\n      const x = a0 * p0.x + a1 * p1.x + a2 * p2.x;\n      const y = a0 * p0.y + a1 * p1.y + a2 * p2.y;\n      plist.push(new Point(x, y));\n    }\n  }\n  return plist;\n}\n\nexport function poly(\n  plist: Point[],\n  xoff: number = 0,\n  yoff: number = 0,\n  fill: string = \"rgba(0,0,0,0)\",\n  stroke: string = \"rgba(0,0,0,0)\",\n  strokeWidth: number = 0\n): SvgPolyline {\n  const off = new Vector(xoff, yoff);\n\n  const polyline = new SvgPolyline(\n    plist.map((p: Point) => SvgPoint.from(p.move(off))),\n    { fill, stroke, strokeWidth }\n  );\n\n  return polyline;\n}\n","import { Noise } from \"../basic/perlinNoise\";\nimport { Point, Vector } from \"../basic/point\";\nimport { PRNG } from \"../basic/PRNG\";\nimport { loopNoise, poly } from \"../basic/utils\";\nimport { SvgPolyline } from \"../svg\";\n\nexport function stroke(\n  prng: PRNG,\n  ptlist: Point[],\n  fill: string = \"rgba(200,200,200,0.9)\",\n  stroke: string = \"rgba(200,200,200,0.9)\",\n  strokeWidth: number = 2,\n  noi: number = 0.5,\n  out: number = 1,\n  fun: (x: number) => number = (x: number) => Math.sin(x * Math.PI)\n): SvgPolyline {\n  console.assert(ptlist.length > 0);\n\n  const vtxlist0 = [];\n  const vtxlist1 = [];\n  let vtxlist = [];\n  const n0 = prng.random(0, 10);\n  for (let i = 1; i < ptlist.length - 1; i++) {\n    let w = strokeWidth * fun(i / ptlist.length);\n    w = w * (1 - noi) + w * noi * Noise.noise(prng, i * 0.5, n0);\n    const a1 = Math.atan2(\n      ptlist[i].y - ptlist[i - 1].y,\n      ptlist[i].x - ptlist[i - 1].x\n    );\n    const a2 = Math.atan2(\n      ptlist[i].y - ptlist[i + 1].y,\n      ptlist[i].x - ptlist[i + 1].x\n    );\n    let a = (a1 + a2) / 2;\n    if (a < a2) {\n      a += Math.PI;\n    }\n    vtxlist0.push(\n      new Point(ptlist[i].x + w * Math.cos(a), ptlist[i].y + w * Math.sin(a))\n    );\n    vtxlist1.push(\n      new Point(ptlist[i].x - w * Math.cos(a), ptlist[i].y - w * Math.sin(a))\n    );\n  }\n\n  vtxlist = [ptlist[0]]\n    .concat(\n      vtxlist0.concat(vtxlist1.concat([ptlist[ptlist.length - 1]]).reverse())\n    )\n    .concat([ptlist[0]]);\n\n  return poly(vtxlist, 0, 0, fill, stroke, out);\n}\n\nexport function blob(\n  prng: PRNG,\n  x: number,\n  y: number,\n  ang: number = 0,\n  col: string = \"rgba(200,200,200,0.9)\",\n  len: number = 20,\n  strokeWidth: number = 5,\n  noi: number = 0.5,\n  fun: (x: number) => number = (x: number) =>\n    x <= 1\n      ? Math.pow(Math.sin(x * Math.PI), 0.5)\n      : -Math.pow(Math.sin((x + 1) * Math.PI), 0.5)\n): SvgPolyline {\n  const plist = blob_points(prng, x, y, ang, col, len, strokeWidth, noi, fun);\n  return poly(plist, 0, 0, col, col);\n}\n\nexport function blob_points(\n  prng: PRNG,\n  x: number,\n  y: number,\n  ang: number = 0,\n  col: string = \"rgba(200,200,200,0.9)\",\n  len: number = 20,\n  strokeWidth: number = 5,\n  noi: number = 0.5,\n  fun: (x: number) => number = (x: number) =>\n    x <= 1\n      ? Math.pow(Math.sin(x * Math.PI), 0.5)\n      : -Math.pow(Math.sin((x + 1) * Math.PI), 0.5)\n): Point[] {\n  const reso = 20.0;\n  const lalist = [];\n  for (let i = 0; i < reso + 1; i++) {\n    const p = (i / reso) * 2;\n    const xo = len / 2 - Math.abs(p - 1) * len;\n    const yo = (fun(p) * strokeWidth) / 2;\n    const a = Math.atan2(yo, xo);\n    const l = Math.sqrt(xo * xo + yo * yo);\n    lalist.push([l, a]);\n  }\n  let nslist = [];\n  const n0 = prng.random(0, 10);\n  for (let i = 0; i < reso + 1; i++) {\n    nslist.push(Noise.noise(prng, i * 0.05, n0));\n  }\n\n  nslist = loopNoise(nslist);\n  const plist = [];\n  for (let i = 0; i < lalist.length; i++) {\n    const ns = nslist[i] * noi + (1 - noi);\n    const nx = x + Math.cos(lalist[i][1] + ang) * lalist[i][0] * ns;\n    const ny = y + Math.sin(lalist[i][1] + ang) * lalist[i][0] * ns;\n    plist.push(new Point(nx, ny));\n  }\n\n  return plist;\n}\n\nexport function div(plist: Point[], reso: number): Point[] {\n  const tl = (plist.length - 1) * reso;\n  const rlist = [];\n\n  for (let i = 0; i < tl; i += 1) {\n    const lastp = plist[Math.floor(i / reso)];\n    const nextp = plist[Math.ceil(i / reso)];\n    const p = (i % reso) / reso;\n    const nx = lastp.x * (1 - p) + nextp.x * p;\n    const ny = lastp.y * (1 - p) + nextp.y * p;\n\n    // const ang = Math.atan2(ny - ly, nx - lx);\n\n    rlist.push(new Point(nx, ny));\n  }\n\n  if (plist.length > 0) {\n    rlist.push(plist[plist.length - 1]);\n  }\n  return rlist;\n}\n\nexport function texture(\n  prng: PRNG,\n  ptlist: Point[][],\n  xof: number = 0,\n  yof: number = 0,\n  tex: number = 400,\n  strokeWidth: number = 1.5,\n  sha: number = 0,\n  col: (x: number) => string = _ =>\n    `rgba(100,100,100,${prng.random(0, 0.3).toFixed(3)})`,\n  dis: () => number = () =>\n    0.5 + (prng.random() > 0.5 ? -1 : 1) * prng.random(1 / 6, 0.5),\n  noi: (x: number) => number = x => 30 / x,\n  len: number = 0.2\n): SvgPolyline[] {\n  const offset = new Vector(xof, yof);\n  const reso = [ptlist.length, ptlist[0].length];\n  const texlist: Point[][] = [];\n\n  for (let i = 0; i < tex; i++) {\n    const mid = (dis() * reso[1]) | 0;\n\n    const hlen = Math.floor(prng.random(0, reso[1] * len));\n\n    let start = mid - hlen;\n    let end = mid + hlen;\n    start = Math.min(Math.max(start, 0), reso[1]);\n    end = Math.min(Math.max(end, 0), reso[1]);\n\n    const layer = (i / tex) * (reso[0] - 1);\n\n    texlist.push([]);\n    for (let j = start; j < end; j++) {\n      const p = layer - Math.floor(layer);\n\n      const x =\n        ptlist[Math.floor(layer)][j].x * p +\n        ptlist[Math.ceil(layer)][j].x * (1 - p);\n\n      const y =\n        ptlist[Math.floor(layer)][j].y * p +\n        ptlist[Math.ceil(layer)][j].y * (1 - p);\n\n      const nx = noi(layer + 1) * (Noise.noise(prng, x, j * 0.5) - 0.5);\n      const ny = noi(layer + 1) * (Noise.noise(prng, y, j * 0.5) - 0.5);\n\n      texlist[texlist.length - 1].push(new Point(x + nx, y + ny));\n    }\n  }\n\n  const polylines: SvgPolyline[] = [];\n\n  //SHADE\n  if (sha) {\n    const step = 1 + (sha !== 0 ? 1 : 0);\n    for (let j = 0; j < texlist.length; j += step) {\n      if (texlist[j].length > 0) {\n        polylines.push(\n          stroke(\n            prng,\n            texlist[j].map(p => p.move(offset)),\n            \"rgba(100,100,100,0.1)\",\n            \"rgba(100,100,100,0.1)\",\n            sha\n          )\n        );\n      }\n    }\n  }\n  //TEXTURE\n  for (let j = 0 + sha; j < texlist.length; j += 1 + sha) {\n    if (texlist[j].length > 0) {\n      polylines.push(\n        stroke(\n          prng,\n          texlist[j].map(p => p.move(offset)),\n          col(j / texlist.length),\n          col(j / texlist.length),\n          strokeWidth\n        )\n      );\n    }\n  }\n\n  return polylines;\n}\n","import { Noise } from \"../basic/perlinNoise\";\nimport { distance, type IPoint, Point, Vector } from \"../basic/point\";\nimport { PRNG } from \"../basic/PRNG\";\nimport { bezmh, normRand, poly } from \"../basic/utils\";\nimport { SvgPolyline } from \"../svg/types\";\nimport { stroke } from \"./brushes\";\n\nfunction expand(ptlist: Point[], wfun: (v: number) => number): Point[][] {\n  const vtxlist0: Point[] = [];\n  const vtxlist1: Point[] = [];\n\n  for (let i = 1; i < ptlist.length - 1; i++) {\n    const w = wfun(i / ptlist.length);\n    const a1 = Math.atan2(\n      ptlist[i].y - ptlist[i - 1].y,\n      ptlist[i].x - ptlist[i - 1].x\n    );\n    const a2 = Math.atan2(\n      ptlist[i].y - ptlist[i + 1].y,\n      ptlist[i].x - ptlist[i + 1].x\n    );\n    let a = (a1 + a2) / 2;\n    if (a < a2) {\n      a += Math.PI;\n    }\n    vtxlist0.push(\n      new Point(ptlist[i].x + w * Math.cos(a), ptlist[i].y + w * Math.sin(a))\n    );\n    vtxlist1.push(\n      new Point(ptlist[i].x - w * Math.cos(a), ptlist[i].y - w * Math.sin(a))\n    );\n  }\n  const l = ptlist.length - 1;\n  const a0 =\n    Math.atan2(ptlist[1].y - ptlist[0].y, ptlist[1].x - ptlist[0].x) -\n    Math.PI / 2;\n  const a1 =\n    Math.atan2(ptlist[l].y - ptlist[l - 1].y, ptlist[l].x - ptlist[l - 1].x) -\n    Math.PI / 2;\n  const w0 = wfun(0);\n  const w1 = wfun(1);\n  vtxlist0.unshift(\n    new Point(ptlist[0].x + w0 * Math.cos(a0), ptlist[0].y + w0 * Math.sin(a0))\n  );\n  vtxlist1.unshift(\n    new Point(ptlist[0].x - w0 * Math.cos(a0), ptlist[0].y - w0 * Math.sin(a0))\n  );\n  vtxlist0.push(\n    new Point(ptlist[l].x + w1 * Math.cos(a1), ptlist[l].y + w1 * Math.sin(a1))\n  );\n  vtxlist1.push(\n    new Point(ptlist[l].x - w1 * Math.cos(a1), ptlist[l].y - w1 * Math.sin(a1))\n  );\n  return [vtxlist0, vtxlist1];\n}\n\nfunction tranpoly(p0: Point, p1: Point, ptlist: Point[]): Point[] {\n  const plist = ptlist.map(function (v) {\n    return new Point(-v.x, v.y);\n  });\n  const ang = Math.atan2(p1.y - p0.y, p1.x - p0.x) - Math.PI / 2;\n  const scl = distance(p0, p1);\n  const qlist = plist.map(function (v) {\n    const d = distance(v, new Point(0, 0));\n    const a = Math.atan2(v.y, v.x);\n    return new Point(\n      p0.x + d * scl * Math.cos(ang + a),\n      p0.y + d * scl * Math.sin(ang + a)\n    );\n  });\n  return qlist;\n}\n\nconst flipper = function (plist: Point[]): Point[] {\n  return plist.map(function (v) {\n    return new Point(-v.x, v.y);\n  });\n};\n\nexport function hat01(\n  prng: PRNG,\n  p0: Point,\n  p1: Point,\n  fli = false\n): SvgPolyline[] {\n  const polylines: SvgPolyline[] = [];\n  const seed = prng.random();\n  const f: (pl: Point[]) => Point[] = fli ? flipper : x => x;\n  //const plist = [[-0.5,0.5],[0.5,0.5],[0.5,1],[-0.5,2]]\n  polylines.push(\n    poly(\n      tranpoly(\n        p0,\n        p1,\n        f([\n          new Point(-0.3, 0.5),\n          new Point(0.3, 0.8),\n          new Point(0.2, 1),\n          new Point(0, 1.1),\n          new Point(-0.3, 1.15),\n          new Point(-0.55, 1),\n          new Point(-0.65, 0.5),\n        ])\n      ),\n      0,\n      0,\n      \"rgba(100,100,100,0.8)\"\n    )\n  );\n\n  const qlist1: Point[] = [];\n  for (let i = 0; i < 10; i++) {\n    qlist1.push(\n      new Point(\n        -0.3 - Noise.noise(prng, i * 0.2, seed) * i * 0.1,\n        0.5 - i * 0.3\n      )\n    );\n  }\n  polylines.push(\n    poly(\n      tranpoly(p0, p1, f(qlist1)),\n      0,\n      0,\n      \"rgba(0, 0, 0, 0)\",\n      \"rgba(100,100,100,0.8)\",\n      1\n    )\n  );\n\n  return polylines;\n}\n\nexport function hat02(\n  prng: PRNG,\n  p0: Point,\n  p1: Point,\n  fli = false\n): SvgPolyline[] {\n  const polylines: SvgPolyline[] = [];\n  // const seed = prng.random();\n\n  const f: (pl: Point[]) => Point[] = fli ? flipper : x => x;\n\n  polylines.push(\n    poly(\n      tranpoly(\n        p0,\n        p1,\n        f([\n          new Point(-0.3, 0.5),\n          new Point(-1.1, 0.5),\n          new Point(-1.2, 0.6),\n          new Point(-1.1, 0.7),\n          new Point(-0.3, 0.8),\n          new Point(0.3, 0.8),\n          new Point(1.0, 0.7),\n          new Point(1.3, 0.6),\n          new Point(1.2, 0.5),\n          new Point(0.3, 0.5),\n        ])\n      ),\n      0,\n      0,\n      \"rgba(100,100,100,0.8)\"\n    )\n  );\n  return polylines;\n}\n\nexport function stick01(\n  prng: PRNG,\n  p0: Point,\n  p1: Point,\n  fli = false\n): SvgPolyline[] {\n  const polylines: SvgPolyline[] = [];\n  const seed = prng.random();\n\n  const f: (pl: Point[]) => Point[] = fli ? flipper : x => x;\n\n  const qlist1 = [];\n  const l = 12;\n  for (let i = 0; i < l; i++) {\n    qlist1.push(\n      new Point(\n        -Noise.noise(prng, i * 0.1, seed) *\n          0.1 *\n          Math.sin((i / l) * Math.PI) *\n          5,\n        0 + i * 0.3\n      )\n    );\n  }\n  polylines.push(\n    poly(\n      tranpoly(p0, p1, f(qlist1)),\n      0,\n      0,\n      \"rgba(0,0,0,0)\",\n      \"rgba(100,100,100,0.5)\",\n      1\n    )\n  );\n\n  return polylines;\n}\n\nfunction cloth(\n  prng: PRNG,\n  toGlobal: (p: Point) => Point,\n  plist: Point[],\n  fun: (v: number) => number\n): SvgPolyline[] {\n  const polylines: SvgPolyline[] = [];\n  const tlist = bezmh(plist, 2);\n  const [tlist1, tlist2] = expand(tlist, fun);\n  polylines.push(\n    poly(tlist1.concat(tlist2.reverse()).map(toGlobal), 0, 0, \"white\")\n  );\n  polylines.push(\n    stroke(\n      prng,\n      tlist1.map(toGlobal),\n      \"rgba(100,100,100,0.5)\",\n      \"rgba(100,100,100,0.5)\",\n      1\n    )\n  );\n  polylines.push(\n    stroke(\n      prng,\n      tlist2.map(toGlobal),\n      \"rgba(100,100,100,0.6)\",\n      \"rgba(100,100,100,0.6)\",\n      1\n    )\n  );\n\n  return polylines;\n}\n\nfunction fsleeve(sca: number, x: number) {\n  return (\n    sca *\n    8 *\n    (Math.sin(0.5 * x * Math.PI) * Math.pow(Math.sin(x * Math.PI), 0.1) +\n      (1 - x) * 0.4)\n  );\n}\nfunction fbody(sca: number, x: number) {\n  return (\n    sca *\n    11 *\n    (Math.sin(0.5 * x * Math.PI) * Math.pow(Math.sin(x * Math.PI), 0.1) +\n      (1 - x) * 0.5)\n  );\n}\nfunction fhead(sca: number, x: number) {\n  return sca * 7 * Math.pow(0.25 - Math.pow(x - 0.5, 2), 0.3);\n}\n\n//      2\n//    1/\n// 7/  | \\_ 6\n// 8| 0 \\ 5\n//      /3\n//     4\n\nexport function man(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  fli = true,\n  sca = 0.5,\n  _len = [0, 30, 20, 30, 30, 30, 30, 30, 30],\n  ite: (prng: PRNG, p1: Point, p2: Point, fli: boolean) => SvgPolyline[] = (\n    _1: PRNG,\n    _2: Point,\n    _3: Point,\n    _4: boolean\n  ) => [],\n  hat = hat01\n): SvgPolyline[] {\n  const ang: number[] = [\n    0,\n    -Math.PI / 2,\n    normRand(prng, 0, 0),\n    prng.random(0, Math.PI / 4),\n    prng.random(0, (Math.PI * 3) / 4),\n    (Math.PI * 3) / 4,\n    -Math.PI / 4,\n    -Math.PI * prng.random(3 / 4, 1),\n    -Math.PI / 4,\n  ];\n  const len = _len.map(function (v) {\n    return v * sca;\n  });\n\n  const polylinelists: SvgPolyline[][] = [];\n  // const sct = {\n  //   0: {\n  //     1: {\n  //       2: {},\n  //       5: {\n  //         6: {},\n  //       },\n  //       7: {\n  //         8: {},\n  //       },\n  //     },\n  //     3: {\n  //       4: {},\n  //     },\n  //   },\n  // };\n  const struct = [\n    [0],\n    [0, 1],\n    [0, 1, 2],\n    [0, 3],\n    [0, 3, 4],\n    [0, 1, 5],\n    [0, 1, 5, 6],\n    [0, 1, 7],\n    [0, 1, 7, 8],\n  ];\n\n  const toGlobal = function (v: IPoint) {\n    return new Point((fli ? -1 : 1) * v.x + xoff, v.y + yoff);\n  };\n\n  const vecs: Vector[] = [];\n  for (let i = 0; i < ang.length; i++) {\n    vecs.push(\n      struct[i].reduce<Vector>(\n        (pos: Vector, par: number) => {\n          // rotate angle of part[i]\n          const rot = struct[par].reduce((s, j) => s + ang[j], 0);\n          return pos.move(Vector.unit(rot).scale(len[par]));\n        },\n        new Vector(0, 0)\n      )\n    );\n  }\n  yoff -= vecs[4].y;\n\n  const _fsleeve = (v: number) => fsleeve(sca, v);\n  const _fbody = (v: number) => fbody(sca, v);\n  const _fhead = (v: number) => fhead(sca, v);\n\n  polylinelists.push(ite(prng, toGlobal(vecs[8]), toGlobal(vecs[6]), fli));\n\n  polylinelists.push(\n    cloth(\n      prng,\n      toGlobal,\n      [vecs[1], vecs[7], vecs[8]].map(v => v.movefrom(Point.O)),\n      _fsleeve\n    )\n  );\n  polylinelists.push(\n    cloth(\n      prng,\n      toGlobal,\n      [vecs[1], vecs[0], vecs[3], vecs[4]].map(v => v.movefrom(Point.O)),\n      _fbody\n    )\n  );\n  polylinelists.push(\n    cloth(\n      prng,\n      toGlobal,\n      [vecs[1], vecs[5], vecs[6]].map(v => v.movefrom(Point.O)),\n      _fsleeve\n    )\n  );\n  polylinelists.push(\n    cloth(\n      prng,\n      toGlobal,\n      [vecs[1], vecs[2]].map(v => v.movefrom(Point.O)),\n      _fhead\n    )\n  );\n\n  const hlist = bezmh(\n    [vecs[1], vecs[2]].map(v => v.movefrom(Point.O)),\n    2\n  );\n  const [hlist1, hlist2] = expand(hlist, _fhead);\n  hlist1.splice(0, Math.floor(hlist1.length * 0.1));\n  hlist2.splice(0, Math.floor(hlist2.length * 0.95));\n  polylinelists.push([\n    poly(\n      hlist1.concat(hlist2.reverse()).map(toGlobal),\n      0,\n      0,\n      \"rgba(100,100,100,0.6)\"\n    ),\n  ]);\n\n  polylinelists.push(hat(prng, toGlobal(vecs[1]), toGlobal(vecs[2]), fli));\n\n  return polylinelists.flat();\n}\n","import { Chunk } from \"../basic/chunk\";\nimport { Noise } from \"../basic/perlinNoise\";\nimport { Point } from \"../basic/point\";\nimport { PRNG } from \"../basic/PRNG\";\nimport { normRand, poly, randChoice, wtrand } from \"../basic/utils\";\nimport { midPt } from \"../basic/polytools\";\nimport { type ISvgElement } from \"../svg\";\nimport { SvgPolyline, SvgText } from \"../svg/types\";\nimport { div, stroke, texture } from \"./brushes\";\nimport { hat02, man, stick01 } from \"./man\";\n\nfunction flip(ptlist: Point[], axis: number = 0): Point[] {\n  ptlist.forEach(i => {\n    i.x = axis - i.x - axis;\n  });\n  return ptlist;\n}\n\nfunction hut(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  hei: number = 40,\n  strokeWidth: number = 180,\n  tex: number = 300\n): SvgPolyline[] {\n  const reso = [10, 10];\n  const ptlist: Point[][] = [];\n\n  for (let i = 0; i < reso[0]; i++) {\n    ptlist.push([]);\n    const heir = hei * prng.random(1, 1.2);\n    for (let j = 0; j < reso[1]; j++) {\n      const nx =\n        strokeWidth *\n        (i / (reso[0] - 1) - 0.5) *\n        Math.pow(j / (reso[1] - 1), 0.7);\n      const ny = heir * (j / (reso[1] - 1));\n      ptlist[ptlist.length - 1].push(new Point(nx, ny));\n    }\n  }\n\n  const polylines: SvgPolyline[] = [];\n\n  polylines.push(\n    poly(\n      ptlist[0]\n        .slice(0, -1)\n        .concat(ptlist[ptlist.length - 1].slice(0, -1).reverse()),\n      xoff,\n      yoff,\n      \"white\",\n      \"none\"\n    )\n  );\n  polylines.push(\n    poly(ptlist[0], xoff, yoff, \"none\", \"rgba(100,100,100,0.3)\", 2)\n  );\n  polylines.push(\n    poly(\n      ptlist[ptlist.length - 1],\n      xoff,\n      yoff,\n      \"none\",\n      \"rgba(100,100,100,0.3)\",\n      2\n    )\n  );\n\n  const texures = texture(\n    prng,\n    ptlist,\n    xoff,\n    yoff,\n    tex,\n    1,\n    0,\n    x => `rgba(120,120,120,${prng.random(0.3, 0.6).toFixed(3)})`,\n    () => wtrand(prng, a => a * a),\n    _ => 5,\n    0.25\n  );\n\n  // for (let i = 0; i < reso[0]; i++) {\n  //   //canv += poly(ptlist[i],{xof:xoff,yof:yoff,fill:\"none\",stroke:\"red\",strokeWidth:2})\n  // }\n\n  return polylines.concat(texures);\n}\n\nfunction box(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  hei: number = 20,\n  strokeWidth: number = 120,\n  rot: number = 0.7,\n  per: number = 4,\n  tra: boolean = true,\n  bot: boolean = true,\n  wei: number = 3,\n  dec: (pul: Point, pur: Point, pdl: Point, pdr: Point) => Point[][] = (\n    _1,\n    _2,\n    _3,\n    _4\n  ) => []\n): SvgPolyline[] {\n  const mid = -strokeWidth * 0.5 + strokeWidth * rot;\n  const bmid = -strokeWidth * 0.5 + strokeWidth * (1 - rot);\n  const _ptlist: Point[][] = [];\n  _ptlist.push(\n    div(\n      [new Point(-strokeWidth * 0.5, -hei), new Point(-strokeWidth * 0.5, 0)],\n      5\n    )\n  );\n  _ptlist.push(\n    div(\n      [new Point(strokeWidth * 0.5, -hei), new Point(strokeWidth * 0.5, 0)],\n      5\n    )\n  );\n  if (bot) {\n    _ptlist.push(\n      div([new Point(-strokeWidth * 0.5, 0), new Point(mid, per)], 5)\n    );\n    _ptlist.push(\n      div([new Point(strokeWidth * 0.5, 0), new Point(mid, per)], 5)\n    );\n  }\n  _ptlist.push(div([new Point(mid, -hei), new Point(mid, per)], 5));\n  if (tra) {\n    if (bot) {\n      _ptlist.push(\n        div([new Point(-strokeWidth * 0.5, 0), new Point(bmid, -per)], 5)\n      );\n      _ptlist.push(\n        div([new Point(strokeWidth * 0.5, 0), new Point(bmid, -per)], 5)\n      );\n    }\n    _ptlist.push(div([new Point(bmid, -hei), new Point(bmid, -per)], 5));\n  }\n\n  const surf = (rot < 0.5 ? 1 : 0) * 2 - 1;\n  const ptlist = _ptlist.concat(\n    dec(\n      new Point(surf * strokeWidth * 0.5, -hei),\n      new Point(mid, -hei + per),\n      new Point(surf * strokeWidth * 0.5, 0),\n      new Point(mid, per)\n    )\n  );\n\n  const polist = [\n    new Point(strokeWidth * 0.5, -hei),\n    new Point(strokeWidth * 0.5, -hei),\n    new Point(strokeWidth * 0.5, 0),\n    new Point(mid, per),\n    new Point(-strokeWidth * 0.5, 0),\n  ];\n\n  const polylines: SvgPolyline[] = [];\n  if (!tra) {\n    polylines.push(poly(polist, xoff, yoff, \"white\", \"none\"));\n  }\n\n  for (let i = 0; i < ptlist.length; i++) {\n    polylines.push(\n      stroke(\n        prng,\n        ptlist[i].map(function (p) {\n          return new Point(p.x + xoff, p.y + yoff);\n        }),\n        \"rgba(100,100,100,0.4)\",\n        \"rgba(100,100,100,0.4)\",\n        wei,\n        1,\n        1,\n        x => 1\n      )\n    );\n  }\n  return polylines;\n}\n\nfunction deco(\n  style: number,\n  pul: Point = Point.O,\n  pur: Point = new Point(0, 100),\n  pdl: Point = new Point(100, 0),\n  pdr: Point = new Point(100, 100),\n  hsp: number[] = [1, 3],\n  vsp: number[] = [1, 2]\n): Point[][] {\n  const plist = [];\n  const dl = div([pul, pdl], vsp[1]);\n  const dr = div([pur, pdr], vsp[1]);\n  const du = div([pul, pur], hsp[1]);\n  const dd = div([pdl, pdr], hsp[1]);\n\n  if (style === 1) {\n    //-| |-\n    const mlu = du[hsp[0]];\n    const mru = du[du.length - 1 - hsp[0]];\n    const mld = dd[hsp[0]];\n    const mrd = dd[du.length - 1 - hsp[0]];\n\n    for (let i = vsp[0]; i < dl.length - vsp[0]; i += vsp[0]) {\n      const mml = div([mlu, mld], vsp[1])[i];\n      const mmr = div([mru, mrd], vsp[1])[i];\n      const ml = dl[i];\n      const mr = dr[i];\n      plist.push(div([mml, ml], 5));\n      plist.push(div([mmr, mr], 5));\n    }\n    plist.push(div([mlu, mld], 5));\n    plist.push(div([mru, mrd], 5));\n  } else if (style === 2) {\n    //||||\n\n    for (let i = hsp[0]; i < du.length - hsp[0]; i += hsp[0]) {\n      const mu = du[i];\n      const md = dd[i];\n      plist.push(div([mu, md], 5));\n    }\n  } else if (style === 3) {\n    //|##|\n    const mlu = du[hsp[0]];\n    const mru = du[du.length - 1 - hsp[0]];\n    const mld = dd[hsp[0]];\n    const mrd = dd[du.length - 1 - hsp[0]];\n\n    for (let i = vsp[0]; i < dl.length - vsp[0]; i += vsp[0]) {\n      const mml = div([mlu, mld], vsp[1])[i];\n      const mmr = div([mru, mrd], vsp[1])[i];\n      const mmu = div([mlu, mru], vsp[1])[i];\n      const mmd = div([mld, mrd], vsp[1])[i];\n\n      // const ml = dl[i];\n      // const mr = dr[i];\n      plist.push(div([mml, mmr], 5));\n      plist.push(div([mmu, mmd], 5));\n    }\n    plist.push(div([mlu, mld], 5));\n    plist.push(div([mru, mrd], 5));\n  }\n  return plist;\n}\n\nfunction rail(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  tra: boolean = true,\n  hei: number = 20,\n  strokeWidth: number = 180,\n  per: number = 4,\n  seg: number = 4,\n  fro: boolean = true,\n  rot: number = 0.7,\n  wei: number = 1\n): SvgPolyline[] {\n  const mid = -strokeWidth * 0.5 + strokeWidth * rot;\n  const bmid = -strokeWidth * 0.5 + strokeWidth * (1 - rot);\n  const ptlist = [];\n\n  if (fro) {\n    ptlist.push(\n      div([new Point(-strokeWidth * 0.5, 0), new Point(mid, per)], seg)\n    );\n    ptlist.push(\n      div([new Point(mid, per), new Point(strokeWidth * 0.5, 0)], seg)\n    );\n  }\n  if (tra) {\n    ptlist.push(\n      div([new Point(-strokeWidth * 0.5, 0), new Point(bmid, -per)], seg)\n    );\n    ptlist.push(\n      div([new Point(bmid, -per), new Point(strokeWidth * 0.5, 0)], seg)\n    );\n  }\n  if (fro) {\n    ptlist.push(\n      div(\n        [new Point(-strokeWidth * 0.5, -hei), new Point(mid, -hei + per)],\n        seg\n      )\n    );\n    ptlist.push(\n      div([new Point(mid, -hei + per), new Point(strokeWidth * 0.5, -hei)], seg)\n    );\n  }\n  if (tra) {\n    ptlist.push(\n      div(\n        [new Point(-strokeWidth * 0.5, -hei), new Point(bmid, -hei - per)],\n        seg\n      )\n    );\n    ptlist.push(\n      div(\n        [new Point(bmid, -hei - per), new Point(strokeWidth * 0.5, -hei)],\n        seg\n      )\n    );\n  }\n  if (tra) {\n    const open = Math.floor(prng.random(0, ptlist.length));\n    ptlist[open] = ptlist[open].slice(0, -1);\n    ptlist[(open + ptlist.length) % ptlist.length] = ptlist[\n      (open + ptlist.length) % ptlist.length\n    ].slice(0, -1);\n  }\n\n  const polylines: SvgPolyline[] = [];\n\n  for (let i = 0; i < ptlist.length / 2; i++) {\n    for (let j = 0; j < ptlist[i].length; j++) {\n      //ptlist.push(div([ptlist[i][j],ptlist[4+i][j]],2))\n      ptlist[i][j].y += (Noise.noise(prng, i, j * 0.5, seed) - 0.5) * hei;\n      ptlist[(ptlist.length / 2 + i) % ptlist.length][\n        j % ptlist[(ptlist.length / 2 + i) % ptlist.length].length\n      ].y += (Noise.noise(prng, i + 0.5, j * 0.5, seed) - 0.5) * hei;\n      const ln = div(\n        [\n          ptlist[i][j],\n          ptlist[(ptlist.length / 2 + i) % ptlist.length][\n            j % ptlist[(ptlist.length / 2 + i) % ptlist.length].length\n          ],\n        ],\n        2\n      );\n      ln[0].x += prng.random(-0.25, 0.25) * hei;\n      polylines.push(poly(ln, xoff, yoff, \"none\", \"rgba(100,100,100,0.5)\", 2));\n    }\n  }\n\n  for (let i = 0; i < ptlist.length; i++) {\n    polylines.push(\n      stroke(\n        prng,\n        ptlist[i].map(function (p) {\n          return new Point(p.x + xoff, p.y + yoff);\n        }),\n        \"rgba(100,100,100,0.5)\",\n        \"rgba(100,100,100,0.5)\",\n        wei,\n        0.5,\n        1,\n        _ => 1\n      )\n    );\n  }\n  return polylines;\n}\n\nfunction roof(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  hei = 20,\n  strokeWidth = 120,\n  rot = 0.7,\n  wei = 3,\n  per = 4,\n  pla: [number, string] = [0, \"\"],\n  cor = 5\n): ISvgElement[] {\n  const opf = function (ptlist: Point[]) {\n    if (rot < 0.5) {\n      return flip(ptlist);\n    } else {\n      return ptlist;\n    }\n  };\n  const rrot = rot < 0.5 ? 1 - rot : rot;\n\n  const mid = -strokeWidth * 0.5 + strokeWidth * rrot;\n  // const bmid = -strokeWidth * 0.5 + strokeWidth * (1 - rrot);\n  const quat = (mid + strokeWidth * 0.5) * 0.5 - mid;\n\n  const ptlist = [];\n  ptlist.push(\n    div(\n      opf([\n        new Point(-strokeWidth * 0.5 + quat, -hei - per / 2),\n        new Point(-strokeWidth * 0.5 + quat * 0.5, -hei / 2 - per / 4),\n        new Point(-strokeWidth * 0.5 - cor, 0),\n      ]),\n      5\n    )\n  );\n  ptlist.push(\n    div(\n      opf([\n        new Point(mid + quat, -hei),\n        new Point((mid + quat + strokeWidth * 0.5) / 2, -hei / 2),\n        new Point(strokeWidth * 0.5 + cor, 0),\n      ]),\n      5\n    )\n  );\n  ptlist.push(\n    div(\n      opf([\n        new Point(mid + quat, -hei),\n        new Point(mid + quat / 2, -hei / 2 + per / 2),\n        new Point(mid + cor, per),\n      ]),\n      5\n    )\n  );\n\n  ptlist.push(\n    div(\n      opf([new Point(-strokeWidth * 0.5 - cor, 0), new Point(mid + cor, per)]),\n      5\n    )\n  );\n  ptlist.push(\n    div(\n      opf([new Point(strokeWidth * 0.5 + cor, 0), new Point(mid + cor, per)]),\n      5\n    )\n  );\n\n  ptlist.push(\n    div(\n      opf([\n        new Point(-strokeWidth * 0.5 + quat, -hei - per / 2),\n        new Point(mid + quat, -hei),\n      ]),\n      5\n    )\n  );\n\n  const polylines: ISvgElement[] = [];\n\n  const polist = opf([\n    new Point(-strokeWidth * 0.5, 0),\n    new Point(-strokeWidth * 0.5 + quat, -hei - per / 2),\n    new Point(mid + quat, -hei),\n    new Point(strokeWidth * 0.5, 0),\n    new Point(mid, per),\n  ]);\n  polylines.push(poly(polist, xoff, yoff, \"white\", \"none\"));\n\n  for (let i = 0; i < ptlist.length; i++) {\n    polylines.push(\n      stroke(\n        prng,\n        ptlist[i].map(function (p) {\n          return new Point(p.x + xoff, p.y + yoff);\n        }),\n        \"rgba(100,100,100,0.4)\",\n        \"rgba(100,100,100,0.4)\",\n        wei,\n        1,\n        1,\n        _ => 1\n      )\n    );\n  }\n\n  if (pla[0] === 1) {\n    let pp = opf([\n      new Point(mid + quat / 2, -hei / 2 + per / 2),\n      new Point(-strokeWidth * 0.5 + quat * 0.5, -hei / 2 - per / 4),\n    ]);\n    if (pp[0].x > pp[1].x) {\n      pp = [pp[1], pp[0]];\n    }\n    const mp = midPt(pp);\n    const a = Math.atan2(pp[1].y - pp[0].y, pp[1].x - pp[0].x);\n    const adeg = (a * 180) / Math.PI;\n\n    const text = new SvgText(pla[1], {\n      fontSize: hei * 0.6,\n      fontFamily: \"Verdana\",\n      textAnchor: \"middle\",\n      transform: `translate(${mp.x + xoff},${mp.y + yoff}) rotate(${adeg})`,\n      style: {\n        fill: \"rgba(100, 100, 100, 0.9)\",\n      },\n    });\n\n    polylines.push(text);\n  }\n  return polylines;\n}\n\nfunction pagroof(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  hei = 20,\n  strokeWidth = 120,\n  wei = 3,\n  per = 4\n): SvgPolyline[] {\n  const cor = 10,\n    sid = 4;\n  const ptlist: Point[][] = [];\n  const polist: Point[] = [new Point(0, -hei)];\n  const polylines: SvgPolyline[] = [];\n\n  for (let i = 0; i < sid; i++) {\n    const fx = strokeWidth * ((i * 1.0) / (sid - 1) - 0.5);\n    const fy = per * (1 - Math.abs((i * 1.0) / (sid - 1) - 0.5) * 2);\n    const fxx = (strokeWidth + cor) * ((i * 1.0) / (sid - 1) - 0.5);\n    if (i > 0) {\n      ptlist.push([ptlist[ptlist.length - 1][2], new Point(fxx, fy)]);\n    }\n    ptlist.push([\n      new Point(0, -hei),\n      new Point(fx * 0.5, (-hei + fy) * 0.5),\n      new Point(fxx, fy),\n    ]);\n    polist.push(new Point(fxx, fy));\n  }\n\n  polylines.push(poly(polist, xoff, yoff, \"white\", \"none\"));\n\n  for (let i = 0; i < ptlist.length; i++) {\n    polylines.push(\n      stroke(\n        prng,\n        div(ptlist[i], 5).map(function (p) {\n          return new Point(p.x + xoff, p.y + yoff);\n        }),\n        \"rgba(100,100,100,0.4)\",\n        \"rgba(100,100,100,0.4)\",\n        wei,\n        1,\n        1,\n        _ => 1\n      )\n    );\n  }\n\n  return polylines;\n}\n\nexport function arch01(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  hei = 70,\n  strokeWidth = 180,\n  per = 5\n): SvgPolyline[] {\n  const p = prng.random(0.4, 0.6);\n  const h0 = hei * p;\n  const h1 = hei * (1 - p);\n\n  const polylinelists: SvgPolyline[][] = [];\n  polylinelists.push(hut(prng, xoff, yoff - hei, h0, strokeWidth));\n  polylinelists.push(\n    box(prng, xoff, yoff, h1, (strokeWidth * 2) / 3, 0.7, per, true, false)\n  );\n\n  polylinelists.push(\n    rail(\n      prng,\n      xoff,\n      yoff,\n      seed,\n      true,\n      10,\n      strokeWidth,\n      per * 2,\n      prng.random(3, 6),\n      false\n    )\n  );\n\n  const mcnt = randChoice(prng, [0, 1, 1, 2]);\n  if (mcnt === 1) {\n    polylinelists.push(\n      man(\n        prng,\n        xoff + normRand(prng, -strokeWidth / 3, strokeWidth / 3),\n        yoff,\n        randChoice(prng, [true, false]),\n        0.42\n      )\n    );\n  } else if (mcnt === 2) {\n    polylinelists.push(\n      man(\n        prng,\n        xoff + normRand(prng, -strokeWidth / 4, -strokeWidth / 5),\n        yoff,\n        false,\n        0.42\n      )\n    );\n    polylinelists.push(\n      man(\n        prng,\n        xoff + normRand(prng, strokeWidth / 5, strokeWidth / 4),\n        yoff,\n        true,\n        0.42\n      )\n    );\n  }\n  polylinelists.push(\n    rail(\n      prng,\n      xoff,\n      yoff,\n      seed,\n      false,\n      10,\n      strokeWidth,\n      per * 2,\n      prng.random(3, 6),\n      true\n    )\n  );\n\n  return polylinelists.flat();\n}\n\nexport function arch02(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  strokeWidth = 50,\n  sto = 3,\n  rot = 0.3,\n  sty = 1\n): ISvgElement[] {\n  const hei = 10,\n    per = 5,\n    rai = false;\n\n  const elementlists: ISvgElement[][] = [];\n\n  let hoff = 0;\n  const dec = (pul: Point, pur: Point, pdl: Point, pdr: Point) =>\n    deco(\n      sty,\n      pul,\n      pur,\n      pdl,\n      pdr,\n      [[], [1, 5], [1, 5], [1, 4]][sty],\n      [[], [1, 2], [1, 2], [1, 3]][sty]\n    );\n  for (let i = 0; i < sto; i++) {\n    elementlists.push(\n      box(\n        prng,\n        xoff,\n        yoff - hoff,\n        hei,\n        strokeWidth * Math.pow(0.85, i),\n        rot,\n        per,\n        false,\n        true,\n        1.5,\n        dec\n      )\n    );\n    elementlists.push(\n      rai\n        ? rail(\n            prng,\n            xoff,\n            yoff - hoff,\n            i * 0.2,\n            false,\n            hei / 2,\n            strokeWidth * Math.pow(0.85, i) * 1.1,\n            per,\n            4,\n            true,\n            rot,\n            0.5\n          )\n        : []\n    );\n\n    const pla: [number, string] =\n      sto === 1 && prng.random() < 1 / 3 ? [1, \"Pizza Hut\"] : [0, \"\"];\n    elementlists.push(\n      roof(\n        prng,\n        xoff,\n        yoff - hoff - hei,\n        hei,\n        strokeWidth * Math.pow(0.9, i),\n        rot,\n        1.5,\n        per,\n        pla\n      )\n    );\n\n    hoff += hei * 1.5;\n  }\n  return elementlists.flat();\n}\n\nexport function arch03(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  strokeWidth = 50,\n  sto = 7\n): SvgPolyline[] {\n  const hei = 10,\n    rot = 0.7,\n    per = 5;\n\n  const polylinelists: SvgPolyline[][] = [];\n\n  let hoff = 0;\n  const dec = (pul: Point, pur: Point, pdl: Point, pdr: Point) =>\n    deco(1, pul, pur, pdl, pdr, [1, 4], [1, 2]);\n  for (let i = 0; i < sto; i++) {\n    polylinelists.push(\n      box(\n        prng,\n        xoff,\n        yoff - hoff,\n        hei,\n        strokeWidth * Math.pow(0.85, i),\n        rot,\n        per / 2,\n        false,\n        true,\n        1.5,\n        dec\n      )\n    );\n    polylinelists.push(\n      rail(\n        prng,\n        xoff,\n        yoff - hoff,\n        i * 0.2,\n        false,\n        hei / 2,\n        strokeWidth * Math.pow(0.85, i) * 1.1,\n        per / 2,\n        5,\n        true,\n        rot,\n        0.5\n      )\n    );\n    polylinelists.push(\n      pagroof(\n        prng,\n        xoff,\n        yoff - hoff - hei,\n        hei * 1.5,\n        strokeWidth * Math.pow(0.9, i),\n        1.5,\n        per\n      )\n    );\n    hoff += hei * 1.5;\n  }\n  return polylinelists.flat();\n}\n\nexport function arch04(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  sto = 2\n): SvgPolyline[] {\n  const hei = 15,\n    strokeWidth = 30,\n    rot = 0.7,\n    per = 5;\n\n  const polylinelists: SvgPolyline[][] = [];\n\n  let hoff = 0;\n  const dec = (_1: Point, _2: Point, _3: Point, _4: Point) => [];\n  for (let i = 0; i < sto; i++) {\n    polylinelists.push(\n      box(\n        prng,\n        xoff,\n        yoff - hoff,\n        hei,\n        strokeWidth * Math.pow(0.85, i),\n        rot,\n        per / 2,\n        true,\n        true,\n        1.5,\n        dec\n      )\n    );\n    polylinelists.push(\n      rail(\n        prng,\n        xoff,\n        yoff - hoff,\n        i * 0.2,\n        true,\n        hei / 3,\n        strokeWidth * Math.pow(0.85, i) * 1.2,\n        per / 2,\n        3,\n        true,\n        rot,\n        0.5\n      )\n    );\n    polylinelists.push(\n      pagroof(\n        prng,\n        xoff,\n        yoff - hoff - hei,\n        hei * 1,\n        strokeWidth * Math.pow(0.9, i),\n        1.5,\n        per\n      )\n    );\n    hoff += hei * 1.2;\n  }\n  return polylinelists.flat();\n}\n\nexport function boat01(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  sca = 1,\n  fli = false\n): Chunk {\n  const len = 120;\n  const polylinelists: SvgPolyline[][] = [];\n\n  const dir = fli ? -1 : 1;\n  polylinelists.push(\n    man(\n      prng,\n      xoff + 20 * sca * dir,\n      yoff,\n      !fli,\n      0.5 * sca,\n      [0, 30, 20, 30, 10, 30, 30, 30, 30],\n      stick01,\n      hat02\n    )\n  );\n\n  const plist1: Point[] = [];\n  const plist2: Point[] = [];\n  const fun1 = (x: number) => Math.pow(Math.sin(x * Math.PI), 0.5) * 7 * sca;\n  const fun2 = (x: number) => Math.pow(Math.sin(x * Math.PI), 0.5) * 10 * sca;\n\n  for (let i = 0; i < len * sca; i += 5 * sca) {\n    plist1.push(new Point(i * dir, fun1(i / len)));\n    plist2.push(new Point(i * dir, fun2(i / len)));\n  }\n  const plist: Point[] = plist1.concat(plist2.reverse());\n  polylinelists.push([poly(plist, xoff, yoff, \"white\")]);\n  polylinelists.push([\n    stroke(\n      prng,\n      plist.map(v => new Point(xoff + v.x, yoff + v.y)),\n      \"rgba(100,100,100,0.4)\",\n      \"rgba(100,100,100,0.4)\",\n      1,\n      0.5,\n      1,\n      x => Math.sin(x * Math.PI * 2)\n    ),\n  ]);\n\n  const chunk: Chunk = new Chunk(\"boat\", xoff, yoff, polylinelists.flat());\n  return chunk;\n}\n\nexport function transmissionTower01(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0\n): SvgPolyline[] {\n  const hei = 100,\n    strokeWidth = 20;\n\n  const polylines: SvgPolyline[] = [];\n\n  const toGlobal = (v: Point) => new Point(v.x + xoff, v.y + yoff);\n\n  const quickstroke = function (pl: Point[]) {\n    return stroke(\n      prng,\n      div(pl, 5).map(toGlobal),\n      \"rgba(100,100,100,0.4)\",\n      \"rgba(100,100,100,0.4)\",\n      1,\n      0.5,\n      1,\n      _ => 0.5\n    );\n  };\n\n  const p00 = new Point(-strokeWidth * 0.05, -hei);\n  const p01 = new Point(strokeWidth * 0.05, -hei);\n\n  const p10 = new Point(-strokeWidth * 0.1, -hei * 0.9);\n  const p11 = new Point(strokeWidth * 0.1, -hei * 0.9);\n\n  const p20 = new Point(-strokeWidth * 0.2, -hei * 0.5);\n  const p21 = new Point(strokeWidth * 0.2, -hei * 0.5);\n\n  const p30 = new Point(-strokeWidth * 0.5, 0);\n  const p31 = new Point(strokeWidth * 0.5, 0);\n\n  const bch = [\n    new Point(0.7, -0.85),\n    new Point(1, -0.675),\n    new Point(0.7, -0.5),\n  ];\n\n  bch.forEach(i => {\n    polylines.push(\n      quickstroke([\n        new Point(-i.x * strokeWidth, i.y * hei),\n        new Point(i.x * strokeWidth, i.y * hei),\n      ])\n    );\n    polylines.push(\n      quickstroke([\n        new Point(-i.x * strokeWidth, i.y * hei),\n        new Point(0, (i.y - 0.05) * hei),\n      ])\n    );\n    polylines.push(\n      quickstroke([\n        new Point(i.x * strokeWidth, i.y * hei),\n        new Point(0, (i.y - 0.05) * hei),\n      ])\n    );\n\n    polylines.push(\n      quickstroke([\n        new Point(-i.x * strokeWidth, i.y * hei),\n        new Point(-i.x * strokeWidth, (i.y + 0.1) * hei),\n      ])\n    );\n    polylines.push(\n      quickstroke([\n        new Point(i.x * strokeWidth, i.y * hei),\n        new Point(i.x * strokeWidth, (i.y + 0.1) * hei),\n      ])\n    );\n  });\n\n  const l10 = div([p00, p10, p20, p30], 5);\n  const l11 = div([p01, p11, p21, p31], 5);\n\n  for (let i = 0; i < l10.length - 1; i++) {\n    polylines.push(quickstroke([l10[i], l11[i + 1]]));\n    polylines.push(quickstroke([l11[i], l10[i + 1]]));\n  }\n\n  polylines.push(quickstroke([p00, p01]));\n  polylines.push(quickstroke([p10, p11]));\n  polylines.push(quickstroke([p20, p21]));\n  polylines.push(quickstroke([p00, p10, p20, p30]));\n  polylines.push(quickstroke([p01, p11, p21, p31]));\n\n  return polylines;\n}\n","import { Noise } from \"../basic/perlinNoise\";\nimport { distance, Point, Vector } from \"../basic/point\";\nimport { PRNG } from \"../basic/PRNG\";\nimport {\n  loopNoise,\n  normRand,\n  poly,\n  randChoice,\n  randGaussian,\n} from \"../basic/utils\";\nimport { midPt, triangulate } from \"../basic/polytools\";\nimport { SvgPolyline } from \"../svg/types\";\nimport { blob_points, blob, div, stroke } from \"./brushes\";\n\nexport function tree01(\n  prng: PRNG,\n  x: number,\n  y: number,\n  hei: number = 50,\n  strokeWidth: number = 3,\n  col: string = \"rgba(100,100,100,0.5)\"\n): SvgPolyline[] {\n  const reso = 10;\n  const nslist = [];\n  for (let i = 0; i < reso; i++) {\n    nslist.push([Noise.noise(prng, i * 0.5), Noise.noise(prng, i * 0.5, 0.5)]);\n  }\n\n  let leafcol;\n  if (col.includes(\"rgba(\")) {\n    leafcol = col.replace(\"rgba(\", \"\").replace(\")\", \"\").split(\",\");\n  } else {\n    leafcol = [\"100\", \"100\", \"100\", \"0.5\"];\n  }\n\n  const polylines: SvgPolyline[] = [];\n  const line1 = [];\n  const line2 = [];\n  for (let i = 0; i < reso; i++) {\n    const nx = x;\n    const ny = y - (i * hei) / reso;\n    if (i >= reso / 4) {\n      for (let j = 0; j < (reso - i) / 5; j++) {\n        const lcol = `rgba(${leafcol[0]},${leafcol[1]},${leafcol[2]},${(\n          prng.random(0, 0.2) + parseFloat(leafcol[3])\n        ).toFixed(1)})`;\n        polylines.push(\n          blob(\n            prng,\n            nx + strokeWidth * prng.random(-0.6, 0.6) * (reso - i),\n            ny + prng.random(-0.5, 0.5) * strokeWidth,\n            (Math.PI / 6) * prng.random(-0.5, 0.5),\n            lcol,\n            prng.random(10, 10 + 4 * (reso - i)),\n            prng.random(3, 9)\n          )\n        );\n      }\n    }\n    line1.push(\n      new Point(nx + (nslist[i][0] - 0.5) * strokeWidth - strokeWidth / 2, ny)\n    );\n    line2.push(\n      new Point(nx + (nslist[i][1] - 0.5) * strokeWidth + strokeWidth / 2, ny)\n    );\n  }\n\n  polylines.push(poly(line1, 0, 0, \"none\", col, 1.5));\n  polylines.push(poly(line2, 0, 0, \"none\", col, 1.5));\n  return polylines;\n}\n\nexport function tree02(\n  prng: PRNG,\n  x: number,\n  y: number,\n  col: string = \"rgba(100,100,100,0.5)\",\n  clu: number = 5\n): SvgPolyline[] {\n  const hei: number = 16,\n    strokeWidth: number = 8;\n\n  const polylines: SvgPolyline[] = [];\n  const bfunc = (x: number) =>\n    x <= 1\n      ? Math.pow(Math.sin(x * Math.PI) * x, 0.5)\n      : -Math.pow(Math.sin((x - 2) * Math.PI * (x - 2)), 0.5);\n  for (let i = 0; i < clu; i++) {\n    polylines.push(\n      blob(\n        prng,\n        x + randGaussian(prng) * clu * 4,\n        y + randGaussian(prng) * clu * 4,\n        Math.PI / 2,\n        col,\n        prng.random(0.5, 1.25) * hei,\n        prng.random(0.5, 1.25) * strokeWidth,\n        0.5,\n        bfunc\n      )\n    );\n  }\n  return polylines;\n}\n\nexport function tree03(\n  prng: PRNG,\n  x: number,\n  y: number,\n  hei: number = 16,\n  col: string = \"rgba(100,100,100,0.5)\",\n  ben: (x: number) => number = _ => 0\n): SvgPolyline[] {\n  const strokeWidth: number = 5;\n\n  const reso = 10;\n  const nslist = [];\n  for (let i = 0; i < reso; i++) {\n    nslist.push([Noise.noise(prng, i * 0.5), Noise.noise(prng, i * 0.5, 0.5)]);\n  }\n\n  let leafcol;\n  if (col.includes(\"rgba(\")) {\n    leafcol = col.replace(\"rgba(\", \"\").replace(\")\", \"\").split(\",\");\n  } else {\n    leafcol = [\"100\", \"100\", \"100\", \"0.5\"];\n  }\n  const polylines: SvgPolyline[] = [];\n  const blobs: SvgPolyline[] = [];\n  const line1: Point[] = [];\n  const line2: Point[] = [];\n  for (let i = 0; i < reso; i++) {\n    const nx = x + ben(i / reso) * 100;\n    const ny = y - (i * hei) / reso;\n    if (i >= reso / 5) {\n      for (let j = 0; j < (reso - i) * 2; j++) {\n        const shape = (x: number) => Math.log(50 * x + 1) / 3.95;\n        const ox = prng.random(0, 2) * strokeWidth * shape((reso - i) / reso);\n        const lcol = `rgba(${leafcol[0]},${leafcol[1]},${leafcol[2]},${(\n          prng.random(0, 0.2) + parseFloat(leafcol[3])\n        ).toFixed(3)})`;\n        blobs.push(\n          blob(\n            prng,\n            nx + ox * randChoice(prng, [-1, 1]),\n            ny + prng.random(-1, 1) * strokeWidth,\n            (prng.random(-0.5, 0.5) * Math.PI) / 6,\n            lcol,\n            ox * 2,\n            prng.random(3, 9)\n          )\n        );\n      }\n    }\n    line1.push(\n      new Point(\n        nx +\n          (((nslist[i][0] - 0.5) * strokeWidth - strokeWidth / 2) *\n            (reso - i)) /\n            reso,\n        ny\n      )\n    );\n    line2.push(\n      new Point(\n        nx +\n          (((nslist[i][1] - 0.5) * strokeWidth + strokeWidth / 2) *\n            (reso - i)) /\n            reso,\n        ny\n      )\n    );\n  }\n  const lc = line1.concat(line2.reverse());\n  polylines.push(poly(lc, 0, 0, \"white\", col, 1.5));\n\n  return polylines.concat(blobs);\n}\n\nexport function branch(\n  prng: PRNG,\n  hei: number = 360,\n  strokeWidth: number = 6,\n  ang: number = 0,\n  ben: number = 0.2 * Math.PI,\n  det: number = 10\n): Point[][] {\n  let nx = 0;\n  let ny = 0;\n  const tlist = [[nx, ny]];\n  let a0 = 0;\n  const g = 3;\n  for (let i = 0; i < g; i++) {\n    a0 += ((prng.random(1, 2) * ben) / 2) * prng.randsign();\n    nx += (Math.cos(a0) * hei) / g;\n    ny -= (Math.sin(a0) * hei) / g;\n    tlist.push([nx, ny]);\n  }\n  const ta = Math.atan2(tlist[tlist.length - 1][1], tlist[tlist.length - 1][0]);\n\n  for (let i = 0; i < tlist.length; i++) {\n    const a = Math.atan2(tlist[i][1], tlist[i][0]);\n    const d = Math.sqrt(tlist[i][0] * tlist[i][0] + tlist[i][1] * tlist[i][1]);\n    tlist[i][0] = d * Math.cos(a - ta + ang);\n    tlist[i][1] = d * Math.sin(a - ta + ang);\n  }\n\n  const trlist1: Point[] = [];\n  const trlist2: Point[] = [];\n  const span = det;\n  const tl = (tlist.length - 1) * span;\n  let lx = 0;\n  let ly = 0;\n\n  for (let i = 0; i < tl; i += 1) {\n    const lastp = tlist[Math.floor(i / span)];\n    const nextp = tlist[Math.ceil(i / span)];\n    const p = (i % span) / span;\n    const nx = lastp[0] * (1 - p) + nextp[0] * p;\n    const ny = lastp[1] * (1 - p) + nextp[1] * p;\n\n    const angle = Math.atan2(ny - ly, nx - lx);\n    const woff = ((Noise.noise(prng, i * 0.3) - 0.5) * strokeWidth * hei) / 80;\n\n    let b = 0;\n    if (p === 0) {\n      b = prng.random() * strokeWidth;\n    }\n\n    const nw = strokeWidth * (((tl - i) / tl) * 0.5 + 0.5);\n    trlist1.push(\n      new Point(\n        nx + Math.cos(angle + Math.PI / 2) * (nw + woff + b),\n        ny + Math.sin(angle + Math.PI / 2) * (nw + woff + b)\n      )\n    );\n    trlist2.push(\n      new Point(\n        nx + Math.cos(angle - Math.PI / 2) * (nw - woff + b),\n        ny + Math.sin(angle - Math.PI / 2) * (nw - woff + b)\n      )\n    );\n    lx = nx;\n    ly = ny;\n  }\n\n  return [trlist1, trlist2];\n}\n\nexport function twig(\n  prng: PRNG,\n  tx: number,\n  ty: number,\n  dep: number,\n  ang: number = 0,\n  sca: number = 1,\n  dir: number = 1,\n  strokeWidth: number = 1,\n  lea: [boolean, number] = [true, 12]\n): SvgPolyline[] {\n  const polylinelists: SvgPolyline[][] = [];\n  const twlist: Point[] = [];\n  const tl = 10;\n  const hs = prng.random(0.5, 1);\n  // const fun1 = (x: number) => Math.sqrt(x);\n  const fun2 = (x: number) => -1 / Math.pow(x / tl + 1, 5) + 1;\n\n  const tfun = randChoice(prng, [fun2]);\n  const a0 = ((prng.random() * Math.PI) / 6) * dir + ang;\n\n  for (let i = 0; i < tl; i++) {\n    const mx = dir * tfun(i / tl) * 50 * sca * hs;\n    const my = -i * 5 * sca;\n\n    const a = Math.atan2(my, mx);\n    const d = Math.pow(mx * mx + my * my, 0.5);\n\n    const nx = Math.cos(a + a0) * d;\n    const ny = Math.sin(a + a0) * d;\n\n    twlist.push(new Point(nx + tx, ny + ty));\n    if ((i === ((tl / 3) | 0) || i === (((tl * 2) / 3) | 0)) && dep > 0) {\n      polylinelists.push(\n        twig(\n          prng,\n          nx + tx,\n          ny + ty,\n          dep - 1,\n          ang,\n          sca * 0.8,\n          dir * randChoice(prng, [-1, 1]),\n          strokeWidth,\n          lea\n        )\n      );\n    }\n    if (i === tl - 1 && lea[0]) {\n      for (let j = 0; j < 5; j++) {\n        const dj = (j - 2.5) * 5;\n        const bfunc = function (x: number) {\n          return x <= 1\n            ? Math.pow(Math.sin(x * Math.PI) * x, 0.5)\n            : -Math.pow(Math.sin((x - 2) * Math.PI * (x - 2)), 0.5);\n        };\n        polylinelists.push([\n          blob(\n            prng,\n            nx + tx + Math.cos(ang) * dj * strokeWidth,\n            ny + ty + (Math.sin(ang) * dj - lea[1] / (dep + 1)) * strokeWidth,\n            ang / 2 + Math.PI / 2 + Math.PI * prng.random(-0.1, 0.1),\n            `rgba(100,100,100,${(0.5 + dep * 0.2).toFixed(3)})`,\n            prng.random(15, 27) * strokeWidth,\n            prng.random(6, 9) * strokeWidth,\n            0.5,\n            bfunc\n          ),\n        ]);\n      }\n    }\n  }\n  polylinelists.push([\n    stroke(\n      prng,\n      twlist,\n      \"rgba(100,100,100,0.5)\",\n      \"rgba(100,100,100,0.5)\",\n      1,\n      0.5,\n      1,\n      x => Math.cos((x * Math.PI) / 2)\n    ),\n  ]);\n\n  return polylinelists.flat();\n}\n\nfunction bark(\n  prng: PRNG,\n  x: number,\n  y: number,\n  strokeWidth: number,\n  ang: number\n): SvgPolyline[] {\n  const len = prng.random(10, 20);\n  const noi = 0.5;\n  const fun = function (x: number) {\n    return x <= 1\n      ? Math.pow(Math.sin(x * Math.PI), 0.5)\n      : -Math.pow(Math.sin((x + 1) * Math.PI), 0.5);\n  };\n  const reso = 20.0;\n  const polylines: SvgPolyline[] = [];\n\n  const lalist: number[][] = [];\n  for (let i = 0; i < reso + 1; i++) {\n    const p = (i / reso) * 2;\n    const xo = len / 2 - Math.abs(p - 1) * len;\n    const yo = (fun(p) * strokeWidth) / 2;\n    const a = Math.atan2(yo, xo);\n    const l = Math.sqrt(xo * xo + yo * yo);\n    lalist.push([l, a]);\n  }\n  let nslist: number[] = [];\n  const n0 = prng.random() * 10;\n  for (let i = 0; i < reso + 1; i++) {\n    nslist.push(Noise.noise(prng, i * 0.05, n0));\n  }\n\n  nslist = loopNoise(nslist);\n  const brklist: Point[] = [];\n  for (let i = 0; i < lalist.length; i++) {\n    const ns = nslist[i] * noi + (1 - noi);\n    const nx = x + Math.cos(lalist[i][1] + ang) * lalist[i][0] * ns;\n    const ny = y + Math.sin(lalist[i][1] + ang) * lalist[i][0] * ns;\n    brklist.push(new Point(nx, ny));\n  }\n\n  const fr = prng.random();\n  polylines.push(\n    stroke(\n      prng,\n      brklist,\n      \"rgba(100,100,100,0.4)\",\n      \"rgba(100,100,100,0.4)\",\n      0.8,\n      0,\n      0,\n      x => Math.sin((x + fr) * Math.PI * 3)\n    )\n  );\n\n  return polylines;\n}\n\nexport function barkify(\n  prng: PRNG,\n  x: number,\n  y: number,\n  trlist: Point[][]\n): SvgPolyline[] {\n  const polylinelists: SvgPolyline[][] = [];\n\n  for (let i = 2; i < trlist[0].length - 1; i++) {\n    const a0 = Math.atan2(\n      trlist[0][i].y - trlist[0][i - 1].y,\n      trlist[0][i].x - trlist[0][i - 1].x\n    );\n    const a1 = Math.atan2(\n      trlist[1][i].y - trlist[1][i - 1].y,\n      trlist[1][i].x - trlist[1][i - 1].x\n    );\n    const p = prng.random();\n    const nx = trlist[0][i].x * (1 - p) + trlist[1][i].x * p;\n    const ny = trlist[0][i].y * (1 - p) + trlist[1][i].y * p;\n    if (prng.random() < 0.2) {\n      polylinelists.push([\n        blob(\n          prng,\n          nx + x,\n          ny + y,\n          (a0 + a1) / 2,\n          \"rgba(100,100,100,0.6)\",\n          15,\n          6 - Math.abs(p - 0.5) * 10,\n          1\n        ),\n      ]);\n    } else {\n      polylinelists.push(\n        bark(prng, nx + x, ny + y, 5 - Math.abs(p - 0.5) * 10, (a0 + a1) / 2)\n      );\n    }\n\n    if (prng.random() < 0.05) {\n      const jl = prng.random(2, 4);\n      const xya = randChoice(prng, [\n        [trlist[0][i].x, trlist[0][i].y, a0],\n        [trlist[1][i].x, trlist[1][i].y, a1],\n      ]);\n      for (let j = 0; j < jl; j++) {\n        polylinelists.push([\n          blob(\n            prng,\n            xya[0] + x + Math.cos(xya[2]) * (j - jl / 2) * 4,\n            xya[1] + y + Math.sin(xya[2]) * (j - jl / 2) * 4,\n            a0 + Math.PI / 2,\n            \"rgba(100,100,100,0.6)\",\n            prng.random(4, 10),\n            4\n          ),\n        ]);\n      }\n    }\n  }\n  const trflist = trlist[0].concat(trlist[1].slice().reverse());\n  const rglist: Point[][] = [[]];\n  for (let i = 0; i < trflist.length; i++) {\n    if (prng.random() < 0.5) {\n      rglist.push([]);\n    } else {\n      rglist[rglist.length - 1].push(trflist[i]);\n    }\n  }\n\n  for (let i = 0; i < rglist.length; i++) {\n    rglist[i] = div(rglist[i], 4);\n    for (let j = 0; j < rglist[i].length; j++) {\n      rglist[i][j].x +=\n        (Noise.noise(prng, i, j * 0.1, 1) - 0.5) *\n        (15 + 5 * randGaussian(prng));\n      rglist[i][j].y +=\n        (Noise.noise(prng, i, j * 0.1, 2) - 0.5) *\n        (15 + 5 * randGaussian(prng));\n    }\n    if (rglist[i].length > 0) {\n      polylinelists.push([\n        stroke(\n          prng,\n          rglist[i].map(function (p: Point) {\n            return new Point(p.x + x, p.y + y);\n          }),\n          \"rgba(100,100,100,0.7)\",\n          \"rgba(100,100,100,0.7)\",\n          1.5,\n          0.5,\n          0\n        ),\n      ]);\n    }\n  }\n  return polylinelists.flat();\n}\n\nexport function tree04(prng: PRNG, x: number, y: number): SvgPolyline[] {\n  const hei: number = 300;\n  const strokeWidth: number = 6;\n  const col: string = \"rgba(100,100,100,0.5)\";\n\n  const polylinelists: SvgPolyline[][] = [];\n  const txpolylinelists: SvgPolyline[][] = [];\n  const twpolylinelists: SvgPolyline[][] = [];\n\n  const _trlist = branch(prng, hei, strokeWidth, -Math.PI / 2);\n  txpolylinelists.push(barkify(prng, x, y, _trlist));\n  const trlist: Point[] = _trlist[0].concat(_trlist[1].reverse());\n\n  let trmlist: Point[] = [];\n\n  for (let i = 0; i < trlist.length; i++) {\n    if (\n      (i >= trlist.length * 0.3 &&\n        i <= trlist.length * 0.7 &&\n        prng.random() < 0.1) ||\n      i === trlist.length / 2 - 1\n    ) {\n      const ba =\n        Math.PI * 0.2 - Math.PI * 1.4 * (i > trlist.length / 2 ? 1 : 0);\n      const _brlist: Point[][] = branch(\n        prng,\n        hei * prng.random(0.3, 0.6),\n        strokeWidth * 0.5,\n        ba\n      );\n\n      _brlist[0].splice(0, 1);\n      _brlist[1].splice(0, 1);\n      const foff = function (p: Point) {\n        return new Point(p.x + trlist[i].x, p.y + trlist[i].y);\n      };\n\n      txpolylinelists.push(\n        barkify(prng, x, y, [_brlist[0].map(foff), _brlist[1].map(foff)])\n      );\n\n      for (let j = 0; j < _brlist[0].length; j++) {\n        if (prng.random() < 0.2 || j === _brlist[0].length - 1) {\n          twpolylinelists.push(\n            twig(\n              prng,\n              _brlist[0][j].x + trlist[i].x + x,\n              _brlist[0][j].y + trlist[i].y + y,\n              1,\n              ba > -Math.PI / 2 ? ba : ba + Math.PI,\n              (0.5 * hei) / 300,\n              ba > -Math.PI / 2 ? 1 : -1,\n              hei / 300\n            )\n          );\n        }\n      }\n      const brlist = _brlist[0].concat(_brlist[1].reverse());\n      trmlist = trmlist.concat(\n        brlist.map(function (p: Point) {\n          return new Point(p.x + trlist[i].x, p.y + trlist[i].y);\n        })\n      );\n    } else {\n      trmlist.push(trlist[i]);\n    }\n  }\n  polylinelists.push([poly(trmlist, x, y, \"white\", col)]);\n\n  trmlist.splice(0, 1);\n  trmlist.splice(trmlist.length - 1, 1);\n  const color = `rgba(100,100,100,${prng.random(0.4, 0.5).toFixed(3)})`;\n\n  polylinelists.push([\n    stroke(\n      prng,\n      trmlist.map(function (p: Point) {\n        return new Point(p.x + x, p.y + y);\n      }),\n      color,\n      color,\n      2.5,\n      0.9,\n      0,\n      x => Math.sin(1)\n    ),\n  ]);\n\n  polylinelists.push(txpolylinelists.flat());\n  polylinelists.push(twpolylinelists.flat());\n  return polylinelists.flat();\n}\n\n/**\n * 近处的大树\n * @param x\n * @param y\n * @param args\n * @returns\n */\nexport function tree05(\n  prng: PRNG,\n  x: number,\n  y: number,\n  hei: number = 300\n): SvgPolyline[] {\n  const strokeWidth: number = 5;\n  const col: string = \"rgba(100,100,100,0.5)\";\n\n  const polylinelists: SvgPolyline[][] = [];\n  const txpolylinelists: SvgPolyline[][] = [];\n  const twpolylinelists: SvgPolyline[][] = [];\n\n  const _trlist = branch(prng, hei, strokeWidth, -Math.PI / 2, 0);\n  txpolylinelists.push(barkify(prng, x, y, _trlist));\n  const trlist = _trlist[0].concat(_trlist[1].reverse());\n\n  let trmlist: Point[] = [];\n\n  for (let i = 0; i < trlist.length; i++) {\n    const p = Math.abs(i - trlist.length * 0.5) / (trlist.length * 0.5);\n    if (\n      (i >= trlist.length * 0.2 &&\n        i <= trlist.length * 0.8 &&\n        i % 3 === 0 &&\n        prng.random() > p) ||\n      i === trlist.length / 2 - 1\n    ) {\n      const bar = prng.random(0, 0.2);\n      const ba =\n        -bar * Math.PI -\n        (1 - bar * 2) * Math.PI * (i > trlist.length / 2 ? 1 : 0);\n      const _brlist = branch(\n        prng,\n        hei * (0.3 * p - prng.random(0, 0.05)),\n        strokeWidth * 0.5,\n        ba,\n        0.5\n      );\n\n      _brlist[0].splice(0, 1);\n      _brlist[1].splice(0, 1);\n      // const foff = function (p: Point) {\n      //   return new Point(p.x + trlist[i].x, p.y + trlist[i].y);\n      // };\n      //txcanv += barkify(x,y,[brlist[0].map(foff),brlist[1].map(foff)])\n\n      for (let j = 0; j < _brlist[0].length; j++) {\n        if (j % 20 === 0 || j === _brlist[0].length - 1) {\n          twpolylinelists.push(\n            twig(\n              prng,\n              _brlist[0][j].x + trlist[i].x + x,\n              _brlist[0][j].y + trlist[i].y + y,\n              0,\n              ba > -Math.PI / 2 ? ba : ba + Math.PI,\n              (0.2 * hei) / 300,\n              ba > -Math.PI / 2 ? 1 : -1,\n              hei / 300,\n              [true, 5]\n            )\n          );\n        }\n      }\n      const brlist = _brlist[0].concat(_brlist[1].reverse());\n      trmlist = trmlist.concat(\n        brlist.map(function (p) {\n          return new Point(p.x + trlist[i].x, p.y + trlist[i].y);\n        })\n      );\n    } else {\n      trmlist.push(trlist[i]);\n    }\n  }\n\n  polylinelists.push([poly(trmlist, x, y, \"white\", col)]);\n\n  trmlist.splice(0, 1);\n  trmlist.splice(trmlist.length - 1, 1);\n  const color = `rgba(100,100,100,${prng.random(0.4, 0.5).toFixed(3)})`;\n\n  // 树干\n  polylinelists.push([\n    stroke(\n      prng,\n      trmlist.map(function (p: Point) {\n        return new Point(p.x + x, p.y + y);\n      }),\n      color,\n      color,\n      2.5,\n      0.9,\n      0,\n      x => Math.sin(1)\n    ),\n  ]);\n\n  polylinelists.push(txpolylinelists.flat());\n  polylinelists.push(twpolylinelists.flat());\n  return polylinelists.flat();\n}\n\nfunction fracTree06(\n  prng: PRNG,\n  txpolylinelists: SvgPolyline[][],\n  twpolylinelists: SvgPolyline[][],\n  xoff: number,\n  yoff: number,\n  dep: number,\n  hei: number = 300,\n  strokeWidth: number = 5,\n  ang: number = 0,\n  ben: number = 0.2 * Math.PI\n): Point[] {\n  const _trlist = branch(prng, hei, strokeWidth, ang, ben, hei / 20);\n\n  txpolylinelists.push(barkify(prng, xoff, yoff, _trlist));\n  const trlist = _trlist[0].concat(_trlist[1].reverse());\n\n  let trmlist: Point[] = [];\n\n  for (let i = 0; i < trlist.length; i++) {\n    // const p = Math.abs(i - trlist.length * 0.5) / (trlist.length * 0.5);\n    if (\n      ((prng.random() < 0.025 &&\n        i >= trlist.length * 0.2 &&\n        i <= trlist.length * 0.8) ||\n        i === ((trlist.length / 2) | 0) - 1 ||\n        i === ((trlist.length / 2) | 0) + 1) &&\n      dep > 0\n    ) {\n      const bar = prng.random(0.02, 0.1);\n      const ba =\n        bar * Math.PI - bar * 2 * Math.PI * (i > trlist.length / 2 ? 1 : 0);\n\n      const brlist = fracTree06(\n        prng,\n        txpolylinelists,\n        twpolylinelists,\n        trlist[i].x + xoff,\n        trlist[i].y + yoff,\n        dep - 1,\n        hei * prng.random(0.7, 0.9),\n        strokeWidth * 0.6,\n        ang + ba,\n        0.55\n      );\n\n      for (let j = 0; j < brlist.length; j++) {\n        if (prng.random() < 0.03) {\n          twpolylinelists.push(\n            twig(\n              prng,\n              brlist[j].x + trlist[i].x + xoff,\n              brlist[j].y + trlist[i].y + yoff,\n              2,\n              ba * prng.random(0.75, 1.25),\n              0.3,\n              ba > 0 ? 1 : -1,\n              1,\n              [false, 0]\n            )\n          );\n        }\n      }\n\n      trmlist = trmlist.concat(\n        brlist.map(function (v) {\n          return new Point(v.x + trlist[i].x, v.y + trlist[i].y);\n        })\n      );\n    } else {\n      trmlist.push(trlist[i]);\n    }\n  }\n\n  return trmlist;\n}\n\nexport function tree06(\n  prng: PRNG,\n  x: number,\n  y: number,\n  hei: number = 100\n): SvgPolyline[] {\n  const strokeWidth: number = 6;\n  const col: string = \"rgba(100,100,100,0.5)\";\n  const polylinelists: SvgPolyline[][] = [];\n  const txpolylinelists: SvgPolyline[][] = [];\n  const twpolylinelists: SvgPolyline[][] = [];\n\n  const trmlist = fracTree06(\n    prng,\n    txpolylinelists,\n    twpolylinelists,\n    x,\n    y,\n    3,\n    hei,\n    strokeWidth,\n    -Math.PI / 2,\n    0\n  );\n\n  polylinelists.push([poly(trmlist, x, y, \"white\", col, 0)]);\n\n  trmlist.splice(0, 1);\n  trmlist.splice(trmlist.length - 1, 1);\n  const color = `rgba(100,100,100,${prng.random(0.4, 0.5).toFixed(3)})`;\n  polylinelists.push([\n    stroke(\n      prng,\n      trmlist.map(function (v) {\n        return new Point(v.x + x, v.y + y);\n      }),\n      color,\n      color,\n      2.5,\n      0.9,\n      0,\n      _ => Math.sin(1)\n    ),\n  ]);\n\n  polylinelists.push(txpolylinelists.flat());\n  polylinelists.push(twpolylinelists.flat());\n  return polylinelists.flat();\n}\n\nexport function tree07(\n  prng: PRNG,\n  x: number,\n  y: number,\n  hei: number = 60\n): SvgPolyline[] {\n  const strokeWidth: number = 4;\n  const ben: (x: number) => number = (x: number) => 0.2 * Math.sqrt(x);\n  const col: string = \"rgba(100,100,100,1)\";\n\n  const reso = 10;\n  const nslist = [];\n  for (let i = 0; i < reso; i++) {\n    nslist.push([Noise.noise(prng, i * 0.5), Noise.noise(prng, i * 0.5, 0.5)]);\n  }\n\n  // assert(col.includes('rgba('))\n  if (!col.includes(\"rgba(\")) {\n    console.log(\"unexpected exception!!\");\n  }\n  const leafcol = col.replace(\"rgba(\", \"\").replace(\")\", \"\").split(\",\");\n\n  const polylines: SvgPolyline[] = [];\n  const line1: Point[] = [];\n  const line2: Point[] = [];\n  let T: Point[][] = [];\n  for (let i = 0; i < reso; i++) {\n    const nx = x + ben(i / reso) * 100;\n    const ny = y - (i * hei) / reso;\n    if (i >= reso / 4) {\n      for (let j = 0; j < 1; j++) {\n        const lcol = `rgba(${leafcol[0]},${leafcol[1]},${\n          leafcol[2]\n        },${parseFloat(leafcol[3]).toFixed(3)})`;\n        const bfunc = function (x: number) {\n          return x <= 1\n            ? 2.75 * x * Math.pow(1 - x, 1 / 1.8)\n            : 2.75 * (x - 2) * Math.pow(x - 1, 1 / 1.8);\n        };\n        const bpl = blob_points(\n          prng,\n          nx + prng.random(-0.3, 0.3) * strokeWidth * (reso - i),\n          ny + prng.random(-0.25, 0.25) * strokeWidth,\n          prng.random(0, -Math.PI / 6),\n          lcol,\n          prng.random(20, 70),\n          prng.random(12, 24),\n          0.5,\n          bfunc\n        );\n\n        //canv+=poly(bpl,{fill:col,strokeWidth:0})\n        T = T.concat(triangulate(bpl as Point[], 50, true, false));\n      }\n    }\n    line1.push(\n      new Point(nx + (nslist[i][0] - 0.5) * strokeWidth - strokeWidth / 2, ny)\n    );\n    line2.push(\n      new Point(nx + (nslist[i][1] - 0.5) * strokeWidth + strokeWidth / 2, ny)\n    );\n  }\n\n  //canv += poly(line1.concat(line2.reverse()),{fill:col,strokeWidth:0})\n  T = triangulate(line1.concat(line2.reverse()), 50, true, true).concat(T);\n\n  for (let k = 0; k < T.length; k++) {\n    const m = midPt(T[k]);\n    const c = (Noise.noise(prng, m.x * 0.02, m.y * 0.02) * 200 + 50) | 0;\n    const co = `rgba(${c},${c},${c},0.8)`;\n    polylines.push(poly(T[k], 0, 0, co, co));\n  }\n  return polylines;\n}\n\nfunction fracTree08(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  dep: number,\n  ang: number = -Math.PI / 2,\n  len: number = 15,\n  ben: number = 0\n): SvgPolyline[] {\n  const fun = (x: number) => (dep ? 1 : Math.cos(0.5 * Math.PI * x));\n  const spt = new Vector(xoff, yoff);\n  const ept = new Point(xoff + Math.cos(ang) * len, yoff + Math.sin(ang) * len);\n\n  const _trmlist = [new Point(xoff, yoff), new Point(xoff + len, yoff)];\n\n  const bfun = randChoice(prng, [\n    (x: number) => Math.sin(x * Math.PI),\n    (x: number) => -Math.sin(x * Math.PI),\n  ]);\n\n  const trmlist = div(_trmlist, 10);\n\n  for (let i = 0; i < trmlist.length; i++) {\n    trmlist[i].y += bfun(i / trmlist.length) * 2;\n  }\n\n  for (let i = 0; i < trmlist.length; i++) {\n    const d = distance(trmlist[i], spt.movefrom(Point.O));\n    const a = Math.atan2(trmlist[i].y - spt.y, trmlist[i].x - spt.x);\n    trmlist[i].x = spt.x + d * Math.cos(a + ang);\n    trmlist[i].y = spt.y + d * Math.sin(a + ang);\n  }\n\n  const polylinelists: SvgPolyline[][] = [];\n  polylinelists.push([\n    stroke(\n      prng,\n      trmlist,\n      \"rgba(100,100,100,0.5)\",\n      \"rgba(100,100,100,0.5)\",\n      0.8,\n      0.5,\n      1,\n      fun\n    ),\n  ]);\n\n  if (dep !== 0) {\n    const nben = ben + randChoice(prng, [-1, 1]) * Math.PI * 0.001 * dep * dep;\n    if (prng.random() < 0.5) {\n      polylinelists.push(\n        fracTree08(\n          prng,\n          ept.x,\n          ept.y,\n          dep - 1,\n          ang +\n            ben +\n            Math.PI *\n              randChoice(prng, [\n                normRand(prng, -1, 0.5),\n                normRand(prng, 0.5, 1),\n              ]) *\n              0.2,\n          len * normRand(prng, 0.8, 0.9),\n          nben\n        )\n      );\n      polylinelists.push(\n        fracTree08(\n          prng,\n          ept.x,\n          ept.y,\n          dep - 1,\n          ang +\n            ben +\n            Math.PI *\n              randChoice(prng, [\n                normRand(prng, -1, -0.5),\n                normRand(prng, 0.5, 1),\n              ]) *\n              0.2,\n          len * normRand(prng, 0.8, 0.9),\n          nben\n        )\n      );\n    } else {\n      polylinelists.push(\n        fracTree08(\n          prng,\n          ept.x,\n          ept.y,\n          dep - 1,\n          ang + ben,\n          len * normRand(prng, 0.8, 0.9),\n          nben\n        )\n      );\n    }\n  }\n  return polylinelists.flat();\n}\n\nexport function tree08(\n  prng: PRNG,\n  x: number,\n  y: number,\n  hei: number = 80\n): SvgPolyline[] {\n  const strokeWidth: number = 1;\n  const col: string = \"rgba(100,100,100,0.5)\";\n\n  const polylinelists: SvgPolyline[][] = [];\n  const twpolylinelists: SvgPolyline[][] = [];\n\n  const ang = normRand(prng, -1, 1) * Math.PI * 0.2;\n\n  const _trlist = branch(\n    prng,\n    hei,\n    strokeWidth,\n    -Math.PI / 2 + ang,\n    Math.PI * 0.2,\n    hei / 20\n  );\n  //txcanv += barkify(x,y,trlist)\n\n  const trlist = _trlist[0].concat(_trlist[1].reverse());\n\n  for (let i = 0; i < trlist.length; i++) {\n    if (prng.random() < 0.2) {\n      twpolylinelists.push(\n        fracTree08(\n          prng,\n          x + trlist[i].x,\n          y + trlist[i].y,\n          Math.floor(prng.random(0, 4)),\n          -Math.PI / 2 + prng.random(-ang, 0)\n        )\n      );\n    } else if (i === Math.floor(trlist.length / 2)) {\n      twpolylinelists.push(\n        fracTree08(\n          prng,\n          x + trlist[i].x,\n          y + trlist[i].y,\n          3,\n          -Math.PI / 2 + ang\n        )\n      );\n    }\n  }\n\n  polylinelists.push([poly(trlist, x, y, \"white\", col)]);\n\n  const color = `rgba(100,100,100,${prng.random(0.6, 0.7).toFixed(3)})`;\n  polylinelists.push([\n    stroke(\n      prng,\n      trlist.map(function (v) {\n        return new Point(v.x + x, v.y + y);\n      }),\n      color,\n      color,\n      2.5,\n      0.9,\n      0,\n      x => Math.sin(1)\n    ),\n  ]);\n\n  polylinelists.push(twpolylinelists.flat());\n  //console.log(canv)\n  return polylinelists.flat();\n}\n","import { distance, Point } from \"../basic/point\";\nimport { loopNoise, normRand, poly, randChoice } from \"../basic/utils\";\nimport { Noise } from \"../basic/perlinNoise\";\nimport { div, stroke, texture } from \"./brushes\";\nimport {\n  tree01,\n  tree02,\n  tree03,\n  tree04,\n  tree05,\n  tree06,\n  tree07,\n  tree08,\n} from \"./tree\";\nimport { arch01, arch02, arch03, arch04, transmissionTower01 } from \"./arch\";\nimport { midPt, triangulate } from \"../basic/polytools\";\nimport { Bound } from \"../basic/range\";\nimport { PRNG } from \"../basic/PRNG\";\nimport { type ISvgElement, SvgPolyline } from \"../svg\";\nimport { Chunk } from \"../basic/chunk\";\n\nexport function foot(\n  prng: PRNG,\n  ptlist: Point[][],\n  xoff: number = 0,\n  yoff: number = 0\n): SvgPolyline[] {\n  const ftlist: Point[][] = [];\n  const span = 10;\n  let ni = 0;\n  for (let i = 0; i < ptlist.length - 2; i += 1) {\n    if (i === ni) {\n      ni = Math.min(ni + randChoice(prng, [1, 2]), ptlist.length - 1);\n\n      ftlist.push([]);\n      ftlist.push([]);\n      for (let j = 0; j < Math.min(ptlist[i].length / 8, 10); j++) {\n        ftlist[ftlist.length - 2].push(\n          new Point(\n            ptlist[i][j].x + Noise.noise(prng, j * 0.1, i) * 10,\n            ptlist[i][j].y\n          )\n        );\n        ftlist[ftlist.length - 1].push(\n          new Point(\n            ptlist[i][ptlist[i].length - 1 - j].x -\n              Noise.noise(prng, j * 0.1, i) * 10,\n            ptlist[i][ptlist[i].length - 1 - j].y\n          )\n        );\n      }\n\n      ftlist[ftlist.length - 2] = ftlist[ftlist.length - 2].reverse();\n      ftlist[ftlist.length - 1] = ftlist[ftlist.length - 1].reverse();\n      for (let j = 0; j < span; j++) {\n        const p = j / span;\n        const x1 = ptlist[i][0].x * (1 - p) + ptlist[ni][0].x * p;\n        let y1 = ptlist[i][0].y * (1 - p) + ptlist[ni][0].y * p;\n\n        const x2 =\n          ptlist[i][ptlist[i].length - 1].x * (1 - p) +\n          ptlist[ni][ptlist[i].length - 1].x * p;\n        let y2 =\n          ptlist[i][ptlist[i].length - 1].y * (1 - p) +\n          ptlist[ni][ptlist[i].length - 1].y * p;\n\n        const vib = -1.7 * (p - 1) * Math.pow(p, 1 / 5);\n        y1 += vib * 5 + Noise.noise(prng, xoff * 0.05, i) * 5;\n        y2 += vib * 5 + Noise.noise(prng, xoff * 0.05, i) * 5;\n\n        ftlist[ftlist.length - 2].push(new Point(x1, y1));\n        ftlist[ftlist.length - 1].push(new Point(x2, y2));\n      }\n    }\n  }\n\n  const polylines: SvgPolyline[] = [];\n\n  for (let i = 0; i < ftlist.length; i++) {\n    polylines.push(poly(ftlist[i], xoff, yoff, \"white\", \"none\"));\n  }\n  for (let j = 0; j < ftlist.length; j++) {\n    const color = `rgba(100,100,100,${prng.random(0.1, 0.2).toFixed(3)})`;\n    polylines.push(\n      stroke(\n        prng,\n        ftlist[j].map(function (p) {\n          return new Point(p.x + xoff, p.y + yoff);\n        }),\n        color,\n        color,\n        1\n      )\n    );\n  }\n  return polylines;\n}\n\nfunction vegetate(\n  ptlist: Point[][],\n  treeFunc: (x: number, y: number) => ISvgElement[],\n  growthRule: (i: number, j: number) => boolean,\n  proofRule: (pl: Point[], i: number) => boolean\n): ISvgElement[] {\n  const elementlists: ISvgElement[][] = [];\n  const veglist: Point[] = [];\n  for (let i = 0; i < ptlist.length; i += 1) {\n    for (let j = 0; j < ptlist[i].length; j += 1) {\n      if (growthRule(i, j)) {\n        veglist.push(ptlist[i][j].copy());\n      }\n    }\n  }\n  for (let i = 0; i < veglist.length; i++) {\n    if (proofRule(veglist, i)) {\n      elementlists.push(treeFunc(veglist[i].x, veglist[i].y));\n    }\n  }\n  return elementlists.flat();\n}\n\nexport function mountain(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0\n): Chunk {\n  const hei: number = prng.random(100, 500);\n  const strokeWidth: number = prng.random(400, 600);\n  const tex: number = 200;\n  const veg: boolean = true;\n\n  const elementlists: ISvgElement[][] = [];\n\n  const ptlist: Point[][] = [];\n  const h = hei;\n  const w = strokeWidth;\n  const reso = [10, 50];\n\n  let hoff = 0;\n  for (let j = 0; j < reso[0]; j++) {\n    hoff += prng.random(0, yoff / 100);\n    ptlist.push([]);\n    for (let i = 0; i < reso[1]; i++) {\n      const x = (i / reso[1] - 0.5) * Math.PI;\n      const y = Math.cos(x) * Noise.noise(prng, x + 10, j * 0.15, seed);\n      const p = 1 - j / reso[0];\n      ptlist[ptlist.length - 1].push(\n        new Point((x / Math.PI) * w * p, -y * h * p + hoff)\n      );\n    }\n  }\n\n  //RIM\n  elementlists.push(\n    vegetate(\n      ptlist,\n      function (x, y) {\n        const noise = Noise.noise(prng, 0.01 * x, 0.01 * y) * 0.5 * 0.3 + 0.5;\n        return tree02(\n          prng,\n          x + xoff,\n          y + yoff - 5,\n          `rgba(100,100,100,${noise.toFixed(3)})`,\n          2\n        );\n      },\n      function (i, j) {\n        const noise = Noise.noise(prng, j * 0.1, seed);\n        return (\n          i === 0 &&\n          noise * noise * noise < 0.1 &&\n          Math.abs(ptlist[i][j].y) / h > 0.2\n        );\n      },\n      (_v, _i) => true\n    )\n  );\n\n  //WHITE BG\n  elementlists.push([\n    poly(\n      ptlist[0].concat([new Point(0, reso[0] * 4)]),\n      xoff,\n      yoff,\n      \"white\",\n      \"none\"\n    ),\n  ]);\n  //OUTLINE\n  elementlists.push([\n    stroke(\n      prng,\n      ptlist[0].map(function (p) {\n        return new Point(p.x + xoff, p.y + yoff);\n      }),\n      \"rgba(100,100,100,0.3)\",\n      \"rgba(100,100,100,0.3)\",\n      3,\n      1\n    ),\n  ]);\n\n  elementlists.push(foot(prng, ptlist, xoff, yoff));\n\n  elementlists.push(\n    texture(\n      prng,\n      ptlist,\n      xoff,\n      yoff,\n      tex,\n      1.5,\n      randChoice(prng, [0, 0, 0, 0, 5])\n    )\n  );\n\n  //TOP\n  elementlists.push(\n    vegetate(\n      ptlist,\n      function (x, y) {\n        const noise = Noise.noise(prng, 0.01 * x, 0.01 * y) * 0.5 * 0.3 + 0.5;\n        return tree02(\n          prng,\n          x + xoff,\n          y + yoff,\n          `rgba(100,100,100,${noise.toFixed(3)})`\n        );\n      },\n      function (i, j) {\n        const noise = Noise.noise(prng, i * 0.1, j * 0.1, seed + 2);\n        return Math.pow(noise, 3) < 0.1 && Math.abs(ptlist[i][j].y) / h > 0.5;\n      },\n      (_v, _i) => true\n    )\n  );\n\n  if (veg) {\n    //MIDDLE\n    elementlists.push(\n      vegetate(\n        ptlist,\n        function (x, y) {\n          const ht = ((h + y) / h) * 70 * prng.random(0.3, 1);\n          const noise = Noise.noise(prng, 0.01 * x, 0.01 * y) * 0.5 * 0.3 + 0.3;\n          return tree01(\n            prng,\n            x + xoff,\n            y + yoff,\n            ht,\n            prng.random(1, 4),\n            `rgba(100,100,100,${noise.toFixed(3)})`\n          );\n        },\n        function (i, j): boolean {\n          const noise = Noise.noise(prng, i * 0.2, j * 0.05, seed);\n          return (\n            j % 2 !== 0 &&\n            Math.pow(noise, 4) < 0.012 &&\n            Math.abs(ptlist[i][j].y) / h < 0.3\n          );\n        },\n        function (veglist, i) {\n          const cnt = veglist.reduce<number>(\n            (s: number, p: Point, j: number) =>\n              s + (i !== j && distance(veglist[i], p) < 30 ? 1 : 0),\n            0\n          );\n          return cnt > 2;\n        }\n      )\n    );\n\n    //BOTTOM\n    elementlists.push(\n      vegetate(\n        ptlist,\n        function (x, y) {\n          const ht = ((h + y) / h) * prng.random(60, 120);\n          const bc = prng.random(0, 0.1);\n          const bp = 1;\n          const noise = Noise.noise(prng, 0.01 * x, 0.01 * y) * 0.5 * 0.3 + 0.3;\n          return tree03(\n            prng,\n            x + xoff,\n            y + yoff,\n            ht,\n            `rgba(100,100,100,${noise.toFixed(3)})`,\n            x => Math.pow(x * bc, bp)\n          );\n        },\n        function (i, j) {\n          const noise = Noise.noise(prng, i * 0.2, j * 0.05, seed);\n          return (\n            (j === 0 || j === ptlist[i].length - 1) &&\n            Math.pow(noise, 4) < 0.012\n          );\n        },\n        (_veglist, _i) => true\n      )\n    );\n  }\n\n  //BOTT ARCH\n  elementlists.push(\n    vegetate(\n      ptlist,\n      function (x, y): ISvgElement[] {\n        const tt = randChoice(prng, [0, 0, 1, 1, 1, 2]);\n        if (tt === 1) {\n          return arch02(\n            prng,\n            x + xoff,\n            y + yoff,\n            seed,\n            normRand(prng, 40, 70),\n            randChoice(prng, [1, 2, 2, 3]),\n            prng.random(),\n            randChoice(prng, [1, 2, 3])\n          );\n        } else if (tt === 2) {\n          return arch04(\n            prng,\n            x + xoff,\n            y + yoff,\n            seed,\n            randChoice(prng, [1, 1, 1, 2, 2])\n          );\n        } else {\n          return [];\n        }\n      },\n      function (i, j) {\n        const ns = Noise.noise(prng, i * 0.2, j * 0.05, seed + 10);\n        return (\n          i !== 0 &&\n          (j === 1 || j === ptlist[i].length - 2) &&\n          ns * ns * ns * ns < 0.008\n        );\n      },\n      (_veglist, _i) => true\n    )\n  );\n  //TOP ARCH\n  elementlists.push(\n    vegetate(\n      ptlist,\n      function (x, y) {\n        return arch03(\n          prng,\n          x + xoff,\n          y + yoff,\n          seed,\n          prng.random(40, 20),\n          randChoice(prng, [5, 7])\n        );\n      },\n      function (i, j) {\n        return (\n          i === 1 &&\n          Math.abs(j - ptlist[i].length / 2) < 1 &&\n          prng.random() < 0.02\n        );\n      },\n      (_veglist, _i) => true\n    )\n  );\n\n  //TRANSM\n  elementlists.push(\n    vegetate(\n      ptlist,\n      function (x, y) {\n        return transmissionTower01(prng, x + xoff, y + yoff, seed);\n      },\n      function (i, j) {\n        const noise = Noise.noise(prng, i * 0.2, j * 0.05, seed + 20 * Math.PI);\n        return (\n          i % 2 === 0 &&\n          (j === 1 || j === ptlist[i].length - 2) &&\n          Math.pow(noise, 4) < 0.002\n        );\n      },\n      (_veglist, _i) => true\n    )\n  );\n\n  //BOTT ROCK\n  elementlists.push(\n    vegetate(\n      ptlist,\n      function (x, y) {\n        return rock(\n          prng,\n          x + xoff,\n          y + yoff,\n          seed,\n          prng.random(20, 40),\n          2,\n          prng.random(20, 40)\n        );\n      },\n      function (i, j) {\n        return (j === 0 || j === ptlist[i].length - 1) && prng.random() < 0.1;\n      },\n      (_veglist, _i) => true\n    )\n  );\n\n  const chunk: Chunk = new Chunk(\"mount\", xoff, yoff, elementlists.flat());\n  return chunk;\n}\n\nfunction bound(plist: Point[]): Bound {\n  let xmin = plist[0].x;\n  let xmax = plist[0].x;\n  let ymin = plist[0].y;\n  let ymax = plist[0].y;\n  plist.forEach(i => {\n    if (i.x < xmin) {\n      xmin = i.x;\n    }\n    if (i.x > xmax) {\n      xmax = i.x;\n    }\n    if (i.y < ymin) {\n      ymin = i.y;\n    }\n    if (i.y > ymax) {\n      ymax = i.y;\n    }\n  });\n  return new Bound(xmin, xmax, ymin, ymax);\n}\n\nexport function flatMount(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  hei: number = prng.random(40, 440),\n  cho: number = 0.5,\n  strokeWidth: number = prng.random(400, 600)\n): Chunk {\n  const tex: number = 80;\n\n  const polylinelists: SvgPolyline[][] = [];\n  const ptlist: Point[][] = [];\n  const reso = [5, 50];\n  let hoff = 0;\n  const flat: Point[][] = [];\n  for (let j = 0; j < reso[0]; j++) {\n    hoff += prng.random(0, yoff / 100);\n    ptlist.push([]);\n    flat.push([]);\n    for (let i = 0; i < reso[1]; i++) {\n      const x = (i / reso[1] - 0.5) * Math.PI;\n      const y =\n        (Math.cos(x * 2) + 1) * Noise.noise(prng, x + 10, j * 0.1, seed);\n      const p = 1 - (j / reso[0]) * 0.6;\n      const nx = (x / Math.PI) * strokeWidth * p;\n      let ny = -y * hei * p + hoff;\n      const h = 100;\n      if (ny < -h * cho + hoff) {\n        ny = -h * cho + hoff;\n        if (flat[flat.length - 1].length % 2 === 0) {\n          flat[flat.length - 1].push(new Point(nx, ny));\n        }\n      } else {\n        if (flat[flat.length - 1].length % 2 === 1) {\n          flat[flat.length - 1].push(\n            ptlist[ptlist.length - 1][ptlist[ptlist.length - 1].length - 1]\n          );\n        }\n      }\n\n      ptlist[ptlist.length - 1].push(new Point(nx, ny));\n    }\n  }\n\n  //WHITE BG\n  polylinelists.push([\n    poly(\n      ptlist[0].concat([new Point(0, reso[0] * 4)]),\n      xoff,\n      yoff,\n      \"white\",\n      \"none\"\n    ),\n  ]);\n  //OUTLINE\n  polylinelists.push([\n    stroke(\n      prng,\n      ptlist[0].map(function (p: Point) {\n        return new Point(p.x + xoff, p.y + yoff);\n      }),\n      \"rgba(100,100,100,0.3)\",\n      \"rgba(100,100,100,0.3)\",\n      3,\n      1\n    ),\n  ]);\n\n  //canv += foot(ptlist,{xof:xoff,yof:yoff})\n  polylinelists.push(\n    texture(\n      prng,\n      ptlist,\n      xoff,\n      yoff,\n      tex,\n      2,\n      0,\n      _ => `rgba(100,100,100,${prng.random(0, 0.3).toFixed(3)})`,\n      () => 0.5 + prng.randsign() * prng.random(0, 0.4)\n    )\n  );\n  const _grlist1: Point[] = [];\n  const _grlist2: Point[] = [];\n  for (let i = 0; i < flat.length; i += 2) {\n    if (flat[i].length >= 2) {\n      _grlist1.push(flat[i][0]);\n      _grlist2.push(flat[i][flat[i].length - 1]);\n    }\n  }\n\n  if (_grlist1.length === 0) {\n    const chunk = new Chunk(\"flatmount\", xoff, yoff, polylinelists.flat());\n    return chunk;\n  }\n\n  const _wb = [_grlist1[0].x, _grlist2[0].x];\n  for (let i = 0; i < 3; i++) {\n    const p = 0.8 - i * 0.2;\n\n    _grlist1.unshift(new Point(_wb[0] * p, _grlist1[0].y - 5));\n    _grlist2.unshift(new Point(_wb[1] * p, _grlist2[0].y - 5));\n  }\n\n  const wb = [_grlist1[_grlist1.length - 1].x, _grlist2[_grlist2.length - 1].x];\n\n  for (let i = 0; i < 3; i++) {\n    const p = 0.6 - i * i * 0.1;\n    _grlist1.push(new Point(wb[0] * p, _grlist1[_grlist1.length - 1].y + 1));\n    _grlist2.push(new Point(wb[1] * p, _grlist2[_grlist2.length - 1].y + 1));\n  }\n\n  const d = 5;\n  const grlist1 = div(_grlist1, d);\n  const grlist2 = div(_grlist2, d);\n\n  const grlist = grlist1.reverse().concat(grlist2.concat([grlist1[0]]));\n  for (let i = 0; i < grlist.length; i++) {\n    const v = (1 - Math.abs((i % d) - d / 2) / (d / 2)) * 0.12;\n    grlist[i].x *= 1 - v + Noise.noise(prng, grlist[i].y * 0.5) * v;\n  }\n  /*       for (const i = 0; i < ptlist.length; i++){\n              canv += poly(ptlist[i],{xof:xoff,yof:yoff,stroke:\"red\",fill:\"none\",strokeWidth:2})\n            }\n       */\n  polylinelists.push([poly(grlist, xoff, yoff, \"white\", \"none\", 2)]);\n  polylinelists.push([\n    stroke(\n      prng,\n      grlist.map((p: Point) => new Point(p.x + xoff, p.y + yoff)),\n      \"rgba(100,100,100,0.2)\",\n      \"rgba(100,100,100,0.2)\",\n      3\n    ),\n  ]);\n\n  polylinelists.push(flatDec(prng, xoff, yoff, bound(grlist)));\n\n  const chunk = new Chunk(\"flatmount\", xoff, yoff, polylinelists.flat());\n  return chunk;\n}\n\nexport function flatDec(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  grbd: Bound\n): SvgPolyline[] {\n  const polylinelists: SvgPolyline[][] = [];\n\n  const tt = randChoice(prng, [0, 0, 1, 2, 3, 4]);\n\n  for (let j = 0; j < prng.random(0, 5); j++) {\n    polylinelists.push(\n      rock(\n        prng,\n        xoff + normRand(prng, grbd.xmin, grbd.xmax),\n        yoff + (grbd.ymin + grbd.ymax) / 2 + normRand(prng, -10, 10) + 10,\n        prng.random(0, 100),\n        prng.random(10, 30),\n        2,\n        prng.random(10, 30)\n      )\n    );\n  }\n  for (let j = 0; j < randChoice(prng, [0, 0, 1, 2]); j++) {\n    const xr = xoff + normRand(prng, grbd.xmin, grbd.xmax);\n    const yr = yoff + (grbd.ymin + grbd.ymax) / 2 + normRand(prng, -5, 5) + 20;\n    for (let k = 0; k < prng.random(2, 5); k++) {\n      polylinelists.push(\n        tree08(\n          prng,\n          xr +\n            Math.min(Math.max(normRand(prng, -30, 30), grbd.xmin), grbd.xmax),\n          yr,\n          prng.random(60, 100)\n        )\n      );\n    }\n  }\n\n  if (tt === 0) {\n    for (let j = 0; j < prng.random(0, 3); j++) {\n      polylinelists.push(\n        rock(\n          prng,\n          xoff + normRand(prng, grbd.xmin, grbd.xmax),\n          yoff + (grbd.ymin + grbd.ymax) / 2 + normRand(prng, -5, 5) + 20,\n          prng.random(0, 100),\n          prng.random(40, 60),\n          5,\n          prng.random(50, 70)\n        )\n      );\n    }\n  }\n  if (tt === 1) {\n    const xmid = (grbd.xmin + grbd.xmax) / 2;\n    const xmin = prng.random(grbd.xmin, xmid);\n    const xmax = prng.random(xmid, grbd.xmax);\n    for (let i = xmin; i < xmax; i += 30) {\n      polylinelists.push(\n        tree05(\n          prng,\n          xoff + i + 20 * normRand(prng, -1, 1),\n          yoff + (grbd.ymin + grbd.ymax) / 2 + 20,\n          prng.random(100, 300)\n        )\n      );\n    }\n    for (let j = 0; j < prng.random(0, 4); j++) {\n      polylinelists.push(\n        rock(\n          prng,\n          xoff + normRand(prng, grbd.xmin, grbd.xmax),\n          yoff + (grbd.ymin + grbd.ymax) / 2 + normRand(prng, -5, 5) + 20,\n          prng.random(0, 100),\n          prng.random(40, 60),\n          5,\n          prng.random(50, 70)\n        )\n      );\n    }\n  } else if (tt === 2) {\n    for (let i = 0; i < randChoice(prng, [1, 1, 1, 1, 2, 2, 3]); i++) {\n      const xr = normRand(prng, grbd.xmin, grbd.xmax);\n      const yr = (grbd.ymin + grbd.ymax) / 2;\n      polylinelists.push(tree04(prng, xoff + xr, yoff + yr + 20));\n      for (let j = 0; j < prng.random(0, 2); j++) {\n        polylinelists.push(\n          rock(\n            prng,\n            xoff +\n              Math.max(\n                grbd.xmin,\n                Math.min(grbd.xmax, xr + normRand(prng, -50, 50))\n              ),\n            yoff + yr + normRand(prng, -5, 5) + 20,\n            prng.random(100 * i * j),\n            prng.random(40, 60),\n            5,\n            prng.random(50, 70)\n          )\n        );\n      }\n    }\n  } else if (tt === 3) {\n    for (let i = 0; i < randChoice(prng, [1, 1, 1, 1, 2, 2, 3]); i++) {\n      polylinelists.push(\n        tree06(\n          prng,\n          xoff + normRand(prng, grbd.xmin, grbd.xmax),\n          yoff + (grbd.ymin + grbd.ymax) / 2,\n          prng.random(60, 120)\n        )\n      );\n    }\n  } else if (tt === 4) {\n    const xmid = (grbd.xmin + grbd.xmax) / 2;\n    const xmin = prng.random(grbd.xmin, xmid);\n    const xmax = prng.random(xmid, grbd.xmax);\n    for (let i = xmin; i < xmax; i += 20) {\n      polylinelists.push(\n        tree07(\n          prng,\n          xoff + i + 20 * normRand(prng, -1, 1),\n          yoff + (grbd.ymin + grbd.ymax) / 2 + normRand(prng, -1, 1) + 0,\n          normRand(prng, 40, 80)\n        )\n      );\n    }\n  }\n\n  for (let i = 0; i < prng.random(0, 50); i++) {\n    polylinelists.push(\n      tree02(\n        prng,\n        xoff + normRand(prng, grbd.xmin, grbd.xmax),\n        yoff + normRand(prng, grbd.ymin, grbd.ymax)\n      )\n    );\n  }\n\n  const ts = randChoice(prng, [0, 0, 0, 0, 1]);\n  if (ts === 1 && tt !== 4) {\n    polylinelists.push(\n      arch01(\n        prng,\n        xoff + normRand(prng, grbd.xmin, grbd.xmax),\n        yoff + (grbd.ymin + grbd.ymax) / 2 + 20,\n        prng.random(),\n        normRand(prng, 80, 100),\n        normRand(prng, 160, 200),\n        prng.random()\n      )\n    );\n  }\n\n  return polylinelists.flat();\n}\n\nexport function distMount(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  hei: number = 300,\n  len: number = 2000\n): Chunk {\n  const seg = 5;\n  const polylines: SvgPolyline[] = [];\n  const span = 10;\n\n  const ptlist: Point[][] = [];\n\n  for (let i = 0; i < len / span / seg; i++) {\n    ptlist.push([]);\n    for (let j = 0; j < seg + 1; j++) {\n      const tran = (k: number) =>\n        new Point(\n          xoff + k * span,\n          yoff -\n            hei *\n              Noise.noise(prng, k * 0.05, seed) *\n              Math.pow(Math.sin((Math.PI * k) / (len / span)), 0.5)\n        );\n      ptlist[ptlist.length - 1].push(tran(i * seg + j));\n    }\n    for (let j = 0; j < seg / 2 + 1; j++) {\n      const tran = (k: number) =>\n        new Point(\n          xoff + k * span,\n          yoff +\n            24 *\n              Noise.noise(prng, k * 0.05, 2, seed) *\n              Math.pow(Math.sin((Math.PI * k) / (len / span)), 1)\n        );\n      ptlist[ptlist.length - 1].unshift(tran(i * seg + j * 2));\n    }\n  }\n  for (let i = 0; i < ptlist.length; i++) {\n    const getCol = function (x: number, y: number) {\n      const c = Noise.noise(prng, x * 0.02, y * 0.02, yoff) * 55 + 200;\n      return `rgb(${c},${c},${c})`;\n    };\n    const pe = ptlist[i][ptlist[i].length - 1];\n    polylines.push(poly(ptlist[i], 0, 0, getCol(pe.x, pe.y), \"none\", 1));\n\n    const T = triangulate(ptlist[i], 100, true, false);\n    for (let k = 0; k < T.length; k++) {\n      const m = midPt(T[k]);\n      const co = getCol(m.x, m.y);\n      polylines.push(poly(T[k], 0, 0, co, co, 1));\n    }\n  }\n\n  const chunk: Chunk = new Chunk(\"distmount\", xoff, yoff, polylines);\n  return chunk;\n}\n\nexport function rock(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number = 0,\n  hei: number = 80,\n  sha: number = 10,\n  strokeWidth: number = 100\n): SvgPolyline[] {\n  const tex = 40;\n\n  const polylinelists: SvgPolyline[][] = [];\n\n  const reso = [10, 50];\n  const ptlist: Point[][] = [];\n\n  for (let i = 0; i < reso[0]; i++) {\n    ptlist.push([]);\n\n    const nslist = [];\n    for (let j = 0; j < reso[1]; j++) {\n      nslist.push(Noise.noise(prng, i, j * 0.2, seed));\n    }\n    loopNoise(nslist);\n\n    for (let j = 0; j < reso[1]; j++) {\n      const a = (j / reso[1]) * Math.PI * 2 - Math.PI / 2;\n      let l =\n        (strokeWidth * hei) /\n        Math.sqrt(\n          Math.pow(hei * Math.cos(a), 2) +\n            Math.pow(strokeWidth * Math.sin(a), 2)\n        );\n\n      /*           const l = Math.sin(a)>0? Math.pow(Math.sin(a),0.1)*strokeWidth\n                                       : - Math.pow(Math.sin(a+Math.PI),0.1)*strokeWidth */\n      l *= 0.7 + 0.3 * nslist[j];\n\n      const p = 1 - i / reso[0];\n\n      const nx = Math.cos(a) * l * p;\n      let ny = -Math.sin(a) * l * p;\n\n      if (Math.PI < a || a < 0) {\n        ny *= 0.2;\n      }\n\n      ny += hei * (i / reso[0]) * 0.2;\n\n      ptlist[ptlist.length - 1].push(new Point(nx, ny));\n    }\n  }\n\n  //WHITE BG\n  polylinelists.push([\n    poly(ptlist[0].concat([new Point(0, 0)]), xoff, yoff, \"white\", \"none\"),\n  ]);\n  //OUTLINE\n  polylinelists.push([\n    stroke(\n      prng,\n      ptlist[0].map(function (p) {\n        return new Point(p.x + xoff, p.y + yoff);\n      }),\n      \"rgba(100,100,100,0.3)\",\n      \"rgba(100,100,100,0.3)\",\n      3,\n      1\n    ),\n  ]);\n  polylinelists.push(\n    texture(\n      prng,\n      ptlist,\n      xoff,\n      yoff,\n      tex,\n      3,\n      sha,\n      _ => `rgba(180,180,180,${prng.random(0.3, 0.6).toFixed(3)})`,\n      () => 0.5 + prng.randsign() * prng.random(0.2, 0.35)\n    )\n  );\n\n  // for (let i = 0; i < reso[0]; i++) {\n  //   //canv += poly(ptlist[i],{xof:xoff,yof:yoff,fill:\"none\",stroke:\"red\",strokeWidth:2})\n  // }\n  return polylinelists.flat();\n}\n","import { Chunk } from \"../basic/chunk\";\nimport { Noise } from \"../basic/perlinNoise\";\nimport { Point } from \"../basic/point\";\nimport { PRNG } from \"../basic/PRNG\";\nimport { SvgPolyline } from \"../svg/types\";\nimport { stroke } from \"./brushes\";\n\nexport function water(\n  prng: PRNG,\n  xoff: number,\n  yoff: number,\n  seed: number,\n  hei = 2,\n  len = 800,\n  clu = 10\n): Chunk {\n  const polylines: SvgPolyline[] = [];\n\n  const ptlist: Point[][] = [];\n  let yk = 0;\n  for (let i = 0; i < clu; i++) {\n    ptlist.push([]);\n    const xk = (prng.random(-0.5, 0.5) * len) / 8;\n    yk += prng.random(0, 5);\n    const lk = len * prng.random(0.25, 0.5);\n    const reso = 5;\n    for (let j = -lk; j < lk; j += reso) {\n      ptlist[ptlist.length - 1].push(\n        new Point(\n          j + xk,\n          Math.sin(j * 0.2) * hei * Noise.noise(prng, j * 0.1) - 20 + yk\n        )\n      );\n    }\n  }\n\n  for (let j = 1; j < ptlist.length; j += 1) {\n    const color = `rgba(100,100,100,${prng.random(0.3, 0.6).toFixed(3)})`;\n    polylines.push(\n      stroke(\n        prng,\n        ptlist[j].map(function (p) {\n          return new Point(p.x + xoff, p.y + yoff);\n        }),\n        color,\n        color\n      )\n    );\n  }\n\n  const chunk: Chunk = new Chunk(\"water\", xoff, yoff - 10000, polylines);\n  return chunk;\n}\n","import { Chunk, type IChunk } from \"../render/basic/chunk\";\nimport { design } from \"../render/basic/designer\";\nimport { PRNG } from \"../render/basic/PRNG\";\nimport { Range } from \"../render/basic/range\";\nimport { randChoice } from \"../render/basic/utils\";\nimport { boat01 } from \"../render/parts/arch\";\nimport { distMount, flatMount, mountain } from \"../render/parts/mountain\";\nimport { water } from \"../render/parts/water\";\n\nexport class ChunkCache {\n  chunks: Chunk[] = [];\n  orange: Range = new Range();\n  mountain_cover: number[] = [];\n\n  update(prng: PRNG, nrange: Range, cwid: number = 512): void {\n    if (nrange.r > this.orange.r - cwid || nrange.l < this.orange.l + cwid) {\n      while (\n        nrange.r > this.orange.r - cwid ||\n        nrange.l < this.orange.l + cwid\n      ) {\n        console.log(`generating new chunk... ${nrange.l}, ${nrange.r}`);\n\n        let plan: IChunk[] = [];\n        if (nrange.r > this.orange.r - cwid) {\n          plan = design(\n            prng,\n            this.mountain_cover,\n            this.orange.r,\n            this.orange.r + cwid\n          );\n          this.orange.r = this.orange.r + cwid;\n        } else {\n          plan = design(\n            prng,\n            this.mountain_cover,\n            this.orange.l - cwid,\n            this.orange.l\n          );\n          this.orange.l = this.orange.l - cwid;\n        }\n\n        for (let i = 0; i < plan.length; i++) {\n          if (plan[i].tag === \"mount\") {\n            this.chunks.push(\n              mountain(prng, plan[i].x, plan[i].y, prng.random(0, 2 * i))\n            );\n            this.chunks.push(water(prng, plan[i].x, plan[i].y, i * 2));\n          } else if (plan[i].tag === \"flatmount\") {\n            this.chunks.push(\n              flatMount(\n                prng,\n                plan[i].x,\n                plan[i].y,\n                prng.random(0, 2 * Math.PI),\n                100,\n                prng.random(0.5, 0.7),\n                prng.random(600, 1000)\n              )\n            );\n          } else if (plan[i].tag === \"distmount\") {\n            this.chunks.push(\n              distMount(\n                prng,\n                plan[i].x,\n                plan[i].y,\n                prng.random(0, 100),\n                150,\n                randChoice(prng, [500, 1000, 1500])\n              )\n            );\n          } else if (plan[i].tag === \"boat\") {\n            this.chunks.push(\n              boat01(\n                prng,\n                plan[i].x,\n                plan[i].y,\n                prng.random(),\n                plan[i].y / 800,\n                randChoice(prng, [true, false])\n              )\n            );\n          }\n        }\n      }\n      this.chunks.sort((a, b) => a.y - b.y);\n    }\n  }\n\n  download(\n    prng: PRNG,\n    seed: string,\n    r: Range,\n    windy: number,\n    cwid: number = 512\n  ): void {\n    const filename: string = `${seed}-[${r.l}, ${r.r}].svg`;\n    const windx: number = r.r - r.l;\n    const zoom: number = 1.142;\n    const viewbox = `${r.l} 0 ${windx / zoom} ${windy / zoom}`;\n\n    this.update(prng, r);\n\n    const left = r.l - cwid;\n    const right = r.r + cwid;\n\n    const content: string = `<svg id=\"SVG\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${\n      r.r - r.l\n    }\" height=\"${windy}\" style=\"mix-blend-mode: 'multiply'\" viewBox=\"${viewbox}\">${this.chunks\n      .filter(c => c.x >= left && c.x < right)\n      .map(c => `<g transform=\"translate(0, 0)\">${c.render()}</g>`)\n      .join(\"\\n\")} </svg>`;\n\n    const element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content)\n    );\n    element.setAttribute(\"download\", filename);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n}\n","import React from \"react\";\nimport { PRNG } from \"../render/basic/PRNG\";\nimport { Range } from \"../render/basic/range\";\nimport { ChunkCache } from \"../render/chunkCache\";\nimport \"./styles.css\";\n\ninterface IBarProps {\n  id: string;\n  height: number;\n  onClick: () => void;\n  icon: string;\n}\n\ninterface IBarState {\n  isHover: boolean;\n}\n\nclass ScrollBar extends React.Component<IBarProps, IBarState> {\n  constructor(props: IBarProps) {\n    super(props);\n    this.state = {\n      isHover: false,\n    };\n  }\n\n  render() {\n    const onMouseOver = () => this.setState({ isHover: true });\n    const onMouseOut = () => this.setState({ isHover: false });\n    const bgrColor = this.state.isHover ? 0.1 : 0;\n\n    return (\n      <div\n        id={this.props.id}\n        onMouseOver={onMouseOver}\n        onMouseOut={onMouseOut}\n        onClick={this.props.onClick}\n        style={{\n          backgroundColor: `rgba(0, 0, 0, ${bgrColor})`,\n          height: this.props.height,\n        }}\n      >\n        <div id={`${this.props.id}.t`}>\n          <span>{this.props.icon}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface IProps {\n  xscroll: (v: number) => void;\n  windy: number;\n  background: string | undefined;\n  seed: string;\n  cursx: number;\n  windx: number;\n  updateflag: boolean;\n  prng: PRNG;\n  chunkCache: ChunkCache;\n}\n\ninterface IState {}\n\nclass ScrollableCanvas extends React.Component<IProps, IState> {\n  static id = \"SCROLLABLE_CANVAS\";\n  cwid: number = 512;\n  canv: string = \"\";\n  zoom: number = 1.142;\n\n  render() {\n    const { prng, chunkCache } = this.props;\n\n    const xscroll = this.props.xscroll;\n    const viewbox = `${this.props.cursx} 0 ${this.props.windx / this.zoom} ${\n      this.props.windy / this.zoom\n    }`;\n    const nr = new Range(this.props.cursx, this.props.cursx + this.props.windx);\n    chunkCache.update(prng, nr, this.cwid);\n\n    return (\n      <table id={ScrollableCanvas.id}>\n        <tbody>\n          <tr>\n            <td>\n              <ScrollBar\n                id=\"L\"\n                onClick={() => xscroll(-200)}\n                height={8}\n                icon=\"&#x3008;\"\n              />\n            </td>\n            <td>\n              <div\n                id=\"BG\"\n                style={{\n                  backgroundImage: `url(${this.props.background})`,\n                  width: this.props.windx,\n                  height: this.props.windy,\n                }}\n              >\n                <svg\n                  id=\"SVG\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={this.props.windx}\n                  height={this.props.windy}\n                  style={{ mixBlendMode: \"multiply\" }}\n                  viewBox={viewbox}\n                >\n                  {chunkCache.chunks.map(c => (\n                    <g\n                      key={`${c.tag} ${c.x} ${c.y}`}\n                      transform=\"translate(0, 0)\"\n                      dangerouslySetInnerHTML={{ __html: c.render() }}\n                    ></g>\n                  ))}\n                </svg>\n              </div>\n            </td>\n            <td>\n              <ScrollBar\n                id=\"R\"\n                onClick={() => xscroll(200)}\n                height={8}\n                icon=\"&#x3009;\"\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default ScrollableCanvas;\n","import React from \"react\";\nimport { PerlinNoise } from \"../render/basic/perlinNoise\";\nimport { PRNG } from \"../render/basic/PRNG\";\n\ninterface IProps {}\n\nclass BackgroundRender extends React.Component<IProps> {\n  canvasRef = React.createRef<HTMLCanvasElement>();\n\n  generate(prng: PRNG, noise: PerlinNoise): string | undefined {\n    const ctx = this.canvasRef.current?.getContext(\"2d\");\n    if (ctx === null || ctx === undefined) {\n      return undefined;\n    }\n    const resolution = 512;\n\n    for (let i = 0; i < resolution / 2 + 1; i++) {\n      for (let j = 0; j < resolution / 2 + 1; j++) {\n        let c = 245 + noise.noise(prng, i * 0.1, j * 0.1) * 10;\n        c -= prng.random(0, 20);\n\n        const r = c.toFixed(0);\n        const g = (c * 0.95).toFixed(0);\n        const b = (c * 0.85).toFixed(0);\n        ctx.fillStyle = `rgb(${r}, ${g}, ${b})`;\n        ctx.fillRect(i, j, 1, 1);\n        ctx.fillRect(resolution - i, j, 1, 1);\n        ctx.fillRect(i, resolution - j, 1, 1);\n        ctx.fillRect(resolution - i, resolution - j, 1, 1);\n      }\n    }\n    return this.canvasRef.current?.toDataURL(\"image/png\");\n  }\n\n  render() {\n    return (\n      <canvas\n        id=\"bgcanv\"\n        ref={this.canvasRef}\n        width=\"512\"\n        height=\"512\"\n        hidden\n      />\n    );\n  }\n}\n\nexport default BackgroundRender;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ScrollableCanvas from \"./drawShanShui/ui/ScrollableCanvas\";\nimport BackgroundRender from \"./drawShanShui/ui/BackgroundRender\";\nimport { PRNG } from \"./drawShanShui/render/basic/PRNG\";\nimport { Range } from \"./drawShanShui/render/basic/range\";\nimport { PerlinNoise } from \"./drawShanShui/render/basic/perlinNoise\";\nimport { ChunkCache } from \"./drawShanShui/render/chunkCache\";\n\nconst App: React.FC = () => {\n  const bgrender = useRef<BackgroundRender>(null);\n  const container = useRef<HTMLDivElement>(null);\n  const [seed, setSeed] = useState<string>(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const qseed: string | null = urlParams.get(\"seed\");\n    return qseed == null ? new Date().getTime().toString() : qseed;\n  });\n  const [backgroundImage, setBackgroundImage] = useState<string | undefined>(\n    undefined\n  );\n  const [cursx, setCursx] = useState<number>(0);\n  const [windx, setWindx] = useState<number>(window.innerWidth);\n  const [windy, setWindy] = useState<number>(window.innerHeight);\n  const [updateflag, setUpdateflag] = useState<boolean>(false);\n  const [saveRange, setSaveRange] = useState<Range>(\n    new Range(0, window.innerWidth)\n  );\n  const [autoLoad, setAutoLoad] = useState<boolean>(false);\n\n  const prng = new PRNG();\n  const noise = new PerlinNoise();\n  const chunkCache = new ChunkCache();\n  const FPS = 2;\n\n  useEffect(() => {\n    prng.seed(seed);\n    const url = bgrender.current?.generate(prng, noise);\n    setBackgroundImage(url);\n\n    const resizeCallback = () => {\n      if (container.current) {\n        setWindx(container.current.clientWidth);\n        setWindy(container.current.clientHeight);\n      }\n    };\n\n    window.addEventListener(\"resize\", resizeCallback);\n    return () => {\n      window.removeEventListener(\"resize\", resizeCallback);\n    };\n  }, [seed, prng, noise]);\n\n  const xscroll = (v: number) => {\n    const nextx = cursx + v;\n    setCursx(nextx);\n    setUpdateflag(prev => !prev);\n\n    if (autoLoad) {\n      setSaveRange(new Range(nextx, nextx + windx));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"App\" ref={container}>\n        <ScrollableCanvas\n          xscroll={xscroll}\n          windy={windy}\n          background={backgroundImage}\n          seed={seed}\n          cursx={cursx}\n          windx={windx}\n          updateflag={updateflag}\n          prng={prng}\n          chunkCache={chunkCache}\n        />\n      </div>\n      <BackgroundRender ref={bgrender} />\n    </>\n  );\n};\n\nexport default App;\n"],"names":["PRNG","x","y","z","i","redo","l","r","Range","start","end","v","p","a","Bound","xMin","xMax","yMin","yMax","Chunk","tag","elements","DesignChunk","h","PERLIN_YWRAPB","PERLIN_YWRAP","PERLIN_ZWRAPB","PERLIN_ZWRAP","PERLIN_SIZE","PERLIN_OCTAVES","PERLIN_AMP_FALLOFF","scaled_cosine","lcg","prng","val","PerlinNoise","xi","yi","zi","xf","yf","zf","ampl","o","of","rxf","ryf","n1","n2","n3","seed","Noise","Point","X","Y","dst","Vector","src","vec","ratio","angle","distance","p0","p1","locmax","f","z0","np","needAdd","reg","c","k","design","mountain_cover","xmin","xmax","ns","yr","imin","imax","ioff","j","xof","yof","midPt","ps","sx","sy","lineExpr","pt0","pt1","den","m","onSeg","ln","intersect","ln0","ln1","le0","le1","ptInPoly","pt","plist","scount","lnInPoly","lnc","ep","mid","sidesOf","slist","s","areaOf","b","sliverRatio","A","P","n","bestEar","convex","optimize","cuts","lp","qlist","best","bestRatio","shatter","ind","iMax","arr","nind","lind","err","triangulate","area","cut","SvgAttributeKey","key","result","SvgStyleRender","attr","SvgAttributeRender","vstr","SvgPoint","_x","_y","SvgPolyline","points","style","attrstr","SvgText","content","mapval","value","loopNoise","nslist","dif","bds","irange","orange","randChoice","ip","normRand","M","wtrand","func","randGaussian","bezmh","w","p2","pl","jb","t","a0","a1","a2","poly","xoff","yoff","fill","stroke","strokeWidth","off","ptlist","noi","out","fun","vtxlist0","vtxlist1","vtxlist","n0","blob","ang","col","len","blob_points","lalist","xo","yo","nx","ny","div","reso","tl","rlist","lastp","nextp","texture","tex","sha","_","dis","offset","texlist","hlen","layer","polylines","step","expand","wfun","w0","w1","tranpoly","scl","d","flipper","hat01","fli","qlist1","hat02","stick01","cloth","toGlobal","tlist","tlist1","tlist2","fsleeve","sca","fbody","fhead","man","_len","ite","_1","_2","_3","_4","hat","polylinelists","struct","vecs","pos","par","rot","_fsleeve","_fbody","_fhead","hlist","hlist1","hlist2","flip","axis","hut","hei","heir","texures","box","per","tra","bot","wei","dec","bmid","_ptlist","surf","polist","deco","pul","pur","pdl","pdr","hsp","vsp","dl","dr","du","dd","mlu","mru","mld","mrd","mml","mmr","ml","mr","mu","md","mmu","mmd","rail","seg","fro","open","roof","pla","cor","opf","rrot","quat","pp","mp","adeg","text","pagroof","fx","fy","fxx","arch01","h0","h1","mcnt","arch02","sto","sty","elementlists","hoff","arch03","arch04","boat01","dir","plist1","plist2","fun1","fun2","transmissionTower01","quickstroke","p00","p01","p10","p11","p20","p21","p30","p31","l10","l11","tree01","leafcol","line1","line2","lcol","tree02","clu","bfunc","tree03","ben","blobs","shape","ox","lc","branch","det","g","ta","trlist1","trlist2","span","lx","ly","woff","nw","twig","tx","ty","dep","lea","twlist","hs","tfun","mx","my","dj","bark","brklist","fr","barkify","trlist","jl","xya","trflist","rglist","tree04","txpolylinelists","twpolylinelists","_trlist","trmlist","ba","_brlist","foff","brlist","color","tree05","bar","fracTree06","tree06","tree07","T","bpl","co","fracTree08","spt","ept","_trmlist","bfun","nben","tree08","foot","ftlist","ni","x1","y1","x2","y2","vib","vegetate","treeFunc","growthRule","proofRule","veglist","mountain","noise","_v","_i","ht","bc","bp","_veglist","tt","rock","bound","ymin","ymax","flatMount","cho","flat","_grlist1","_grlist2","chunk","_wb","wb","grlist1","grlist2","grlist","flatDec","grbd","xr","xmid","distMount","tran","getCol","pe","water","yk","xk","lk","ChunkCache","nrange","cwid","plan","windy","filename","windx","zoom","viewbox","left","right","element","ScrollBar","React","props","onMouseOver","onMouseOut","bgrColor","jsx","ScrollableCanvas","chunkCache","xscroll","nr","BackgroundRender","ctx","resolution","App","bgrender","useRef","container","setSeed","useState","qseed","backgroundImage","setBackgroundImage","cursx","setCursx","setWindx","setWindy","updateflag","setUpdateflag","saveRange","setSaveRange","autoLoad","setAutoLoad","useEffect","url","resizeCallback","nextx","prev","jsxs","Fragment"],"mappings":"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"}