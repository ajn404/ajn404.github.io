{"version":3,"file":"historyLine.QiO2I8tP.js","sources":["../../src/components/react/cesium/work/generateTrackJson.tsx","../../src/components/react/cesium/work/historyLine.tsx"],"sourcesContent":["export const generateTrajectory = (centerLng = -117.16, centerLat = 32.71) => {\n  const points = [];\n  // 初始时间的时间戳（2024-01-01 00:00:00 UTC）\n  const baseTime = new Date(\"2024-01-01T00:00:00Z\").getTime();\n  for (let t = 0; t < 200; t++) {\n    const angle = t * 0.1;\n    const radius = 0.0005 * angle;\n\n    // 生成坐标\n    const lng =\n      centerLng +\n      radius * (1 + 0.3 * Math.sin(5 * angle)) * Math.cos(angle) +\n      (Math.random() - 0.5) * 0.0001;\n\n    const lat =\n      centerLat +\n      radius * (1 + 0.3 * Math.sin(5 * angle)) * Math.sin(angle) +\n      (Math.random() - 0.5) * 0.0001;\n\n    // 生成时间戳（每5秒一个点）\n    const timestamp = baseTime + t * 5000; // 5000毫秒 = 5秒\n\n    points.push({\n      time: timestamp, // 毫秒级时间戳\n      lng: Number(lng.toFixed(6)),\n      lat: Number(lat.toFixed(6)),\n    });\n  }\n  return points;\n};\n","import {\n  Cartesian3,\n  JulianDate,\n  ClockRange,\n  SampledPositionProperty,\n  TimeInterval,\n  PointGraphics,\n  PolylineGlowMaterialProperty,\n  VelocityOrientationProperty,\n  TimeIntervalCollection,\n  Color,\n  PathGraphics,\n  Cartographic,\n  Math,\n} from \"cesium\";\nimport { useCesium } from \"../hooks/useCesium\";\nimport { useEffect, useCallback, useState } from \"react\";\nimport \"cesium/Build/Cesium/Widgets/widgets.css\";\nimport { generateTrajectory } from \"./generateTrackJson\";\n\nexport default () => {\n  const { cesiumContainerRef, viewer } = useCesium();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState<{\n    lng: number;\n    lat: number;\n  }>();\n  const trajectoryPoints = generateTrajectory(116.5389, 39.8209);\n\n  // 创建时间驱动的动态位置属性\n  const createTimeBasedPosition = useCallback(() => {\n    if (!viewer.current) return;\n\n    // 1. 配置场景时钟\n    const viewerClock = viewer.current.clock;\n\n    // 1. 配置时钟参数\n    viewerClock.startTime = JulianDate.fromDate(\n      new Date(trajectoryPoints[0].time)\n    );\n    viewerClock.stopTime = JulianDate.fromDate(\n      new Date(trajectoryPoints[trajectoryPoints.length - 1].time)\n    );\n    viewerClock.currentTime = JulianDate.clone(viewerClock.startTime);\n    viewerClock.clockRange = ClockRange.LOOP_STOP;\n    viewerClock.multiplier = 1;\n\n    // 2. 创建采样位置属性\n    const positionProperty = new SampledPositionProperty();\n    trajectoryPoints.forEach(point => {\n      const time = JulianDate.fromDate(new Date(point.time));\n      const position = Cartesian3.fromDegrees(point.lng, point.lat);\n      positionProperty.addSample(time, position);\n    });\n\n    // 3. 创建动态实体\n    const movingEntity = viewer.current.entities.add({\n      availability: new TimeIntervalCollection([\n        new TimeInterval({\n          start: viewerClock.startTime,\n          stop: viewerClock.stopTime,\n        }),\n      ]),\n      model: {\n        uri: \"/assets/models/gltf/Cesium_Man.glb\",\n        scale: 2,\n        // 添加以下配置调整模型初始方向\n        minimumPixelSize: 64, // 可选：保持模型可见\n        maximumScale: 200, // 可选：限制最大缩放\n        clampAnimations: false, // 允许动画循环\n      },\n      position: positionProperty,\n      orientation: new VelocityOrientationProperty(positionProperty), // 自动计算朝向\n      point: new PointGraphics({\n        color: Color.RED,\n        pixelSize: 12,\n        outlineColor: Color.WHITE,\n        outlineWidth: 2,\n      }),\n      path: new PathGraphics({\n        resolution: 1,\n        material: new PolylineGlowMaterialProperty({\n          glowPower: 0.3,\n          color: Color.YELLOW,\n        }),\n        width: 3,\n      }),\n    });\n\n    // 配置跟踪参数\n    viewer.current.trackedEntity = movingEntity;\n    viewer.current.scene.screenSpaceCameraController.enableCollisionDetection =\n      false; // 禁用碰撞检测\n\n    // 4. 时间变化监听\n    viewer.current.clock.onTick.addEventListener(clock => {\n      const currentTime = clock.currentTime;\n      const cartesian = positionProperty.getValue(currentTime);\n      const cartographic = Cartographic.fromCartesian(cartesian);\n      setCurrentPosition({\n        lng: Math.toDegrees(cartographic.longitude),\n        lat: Math.toDegrees(cartographic.latitude),\n      });\n    });\n\n    return () => {\n      viewer.current?.entities.remove(movingEntity);\n      viewer.current?.clock.onTick.removeEventListener();\n    };\n  }, [viewer.current, trajectoryPoints]);\n\n  // 初始化场景\n  useEffect(() => {\n    if (!viewer.current) return;\n\n    // 绘制静态轨迹\n    const staticPath = viewer.current.entities.add({\n      polyline: {\n        positions: Cartesian3.fromDegreesArray(\n          trajectoryPoints.flatMap(p => [p.lng, p.lat])\n        ),\n        width: 1,\n        material: Color.GRAY.withAlpha(0.5),\n      },\n    });\n\n    createTimeBasedPosition();\n\n    return () => {\n      viewer.current?.entities.remove(staticPath);\n    };\n  }, []);\n\n  // 控制时钟状态\n  const togglePlay = () => {\n    if (!viewer.current) return;\n\n    if (isPlaying) {\n      viewer.current.clock.shouldAnimate = false;\n    } else {\n      if (\n        JulianDate.compare(\n          viewer.current.clock.currentTime,\n          viewer.current.clock.stopTime\n        ) === 0\n      ) {\n        viewer.current.clock.currentTime = viewer.current.clock.startTime;\n      }\n      viewer.current.clock.shouldAnimate = true;\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div\n        ref={cesiumContainerRef}\n        style={{\n          width: \"100%\",\n          height: \"70vh\",\n          userSelect: \"none\",\n          position: \"relative\",\n          zIndex: 0,\n        }}\n      />\n\n      {/* 控制面板 */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\",\n          zIndex: 1,\n          background: \"rgba(40,40,40,0.7)\",\n          color: \"white\",\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 2px 8px rgba(0,0,0,0.3)\",\n        }}\n      >\n        <button onClick={togglePlay}>\n          {isPlaying ? \"⏸️ 暂停\" : \"▶️ 播放\"}\n        </button>\n        <button\n          onClick={() => {\n            viewer.current!.clock.currentTime = viewer.current!.clock.startTime;\n            viewer.current!.clock.shouldAnimate = false;\n            setIsPlaying(false);\n          }}\n        >\n          ⏹️ 重置\n        </button>\n        <div style={{ marginTop: 10 }}>\n          {currentPosition &&\n            `经度: ${currentPosition.lng.toFixed(6)}  纬度: ${currentPosition.lat.toFixed(6)}`}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["generateTrajectory","centerLng","centerLat","points","baseTime","t","angle","radius","lng","lat","timestamp","historyLine","cesiumContainerRef","viewer","useCesium","isPlaying","setIsPlaying","useState","currentPosition","setCurrentPosition","trajectoryPoints","createTimeBasedPosition","useCallback","viewerClock","JulianDate","ClockRange","positionProperty","SampledPositionProperty","point","time","position","Cartesian3","movingEntity","TimeIntervalCollection","TimeInterval","VelocityOrientationProperty","PointGraphics","Color","PathGraphics","PolylineGlowMaterialProperty","clock","currentTime","cartesian","cartographic","Cartographic","Math","useEffect","staticPath","p","togglePlay","jsx","jsxs"],"mappings":"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"}