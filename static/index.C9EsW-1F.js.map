{"version":3,"file":"index.C9EsW-1F.js","sources":["../../node_modules/.pnpm/@vueuse+shared@12.8.2_typescript@5.8.3/node_modules/@vueuse/shared/index.mjs","../../node_modules/.pnpm/@vueuse+core@12.8.2_typescript@5.8.3/node_modules/@vueuse/core/index.mjs","../../node_modules/.pnpm/@vueuse+gesture@2.0.0_vue@3.5.14_typescript@5.8.3_/node_modules/@vueuse/gesture/dist/index.mjs","../../node_modules/.pnpm/@vueuse+shared@10.11.1_vue@3.5.14_typescript@5.8.3_/node_modules/@vueuse/shared/index.mjs","../../node_modules/.pnpm/@vueuse+core@10.11.1_vue@3.5.14_typescript@5.8.3_/node_modules/@vueuse/core/index.mjs","../../node_modules/.pnpm/framesync@6.1.2/node_modules/framesync/dist/es/on-next-frame.mjs","../../node_modules/.pnpm/framesync@6.1.2/node_modules/framesync/dist/es/create-render-step.mjs","../../node_modules/.pnpm/framesync@6.1.2/node_modules/framesync/dist/es/index.mjs","../../node_modules/.pnpm/tslib@2.4.0/node_modules/tslib/tslib.es6.js","../../node_modules/.pnpm/hey-listen@1.0.8/node_modules/hey-listen/dist/hey-listen.es.js","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/clamp.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/animations/utils/find-spring.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/animations/generators/spring.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/progress.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/mix.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/utils.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/numbers/index.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/numbers/units.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/color/utils.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/color/hsla.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/color/rgba.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/color/hex.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/color/index.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/complex/index.mjs","../../node_modules/.pnpm/style-value-types@5.1.2/node_modules/style-value-types/dist/es/complex/filter.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/mix-color.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/inc.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/pipe.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/mix-complex.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/interpolate.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/easing/utils.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/easing/index.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/animations/generators/keyframes.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/animations/generators/decay.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/animations/utils/elapsed.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/animations/index.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/utils/velocity-per-second.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/animations/inertia.mjs","../../node_modules/.pnpm/popmotion@11.0.5/node_modules/popmotion/dist/es/easing/cubic-bezier.mjs","../../node_modules/.pnpm/@vueuse+motion@2.2.6_magicast@0.3.5_vue@3.5.14_typescript@5.8.3_/node_modules/@vueuse/motion/dist/index.mjs","../../node_modules/.pnpm/tabbable@6.2.0/node_modules/tabbable/dist/index.esm.js","../../node_modules/.pnpm/focus-trap@7.6.4/node_modules/focus-trap/dist/focus-trap.esm.js","../../node_modules/.pnpm/@vueuse+integrations@12.8.2_focus-trap@7.6.4_fuse.js@7.1.0_idb-keyval@6.2.2_sortablejs@1.15.6_typescript@5.8.3/node_modules/@vueuse/integrations/useFocusTrap.mjs","../../node_modules/.pnpm/@douxcode+vue-spring-bottom-sheet@1.2.7_@vueuse+gesture@2.0.0_vue@3.5.14_typescript@5.8.3___@_lo56pkhvq6o5li3xn3o2uvwvwa/node_modules/@douxcode/vue-spring-bottom-sheet/dist/index.mjs","../../src/components/vue/sheet/index.vue"],"sourcesContent":["import { shallowRef, watchEffect, readonly, watch, customRef, getCurrentScope, onScopeDispose, effectScope, getCurrentInstance, hasInjectionContext, inject, provide, ref, isRef, unref, toValue as toValue$1, computed, reactive, toRefs as toRefs$1, toRef as toRef$1, onBeforeMount, nextTick, onBeforeUnmount, onMounted, onUnmounted, isReactive } from 'vue';\n\nfunction computedEager(fn, options) {\n  var _a;\n  const result = shallowRef();\n  watchEffect(() => {\n    result.value = fn();\n  }, {\n    ...options,\n    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : \"sync\"\n  });\n  return readonly(result);\n}\n\nfunction computedWithControl(source, fn) {\n  let v = void 0;\n  let track;\n  let trigger;\n  const dirty = shallowRef(true);\n  const update = () => {\n    dirty.value = true;\n    trigger();\n  };\n  watch(source, update, { flush: \"sync\" });\n  const get = typeof fn === \"function\" ? fn : fn.get;\n  const set = typeof fn === \"function\" ? void 0 : fn.set;\n  const result = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        if (dirty.value) {\n          v = get(v);\n          dirty.value = false;\n        }\n        track();\n        return v;\n      },\n      set(v2) {\n        set == null ? void 0 : set(v2);\n      }\n    };\n  });\n  if (Object.isExtensible(result))\n    result.trigger = update;\n  return result;\n}\n\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n\nfunction createEventHook() {\n  const fns = /* @__PURE__ */ new Set();\n  const off = (fn) => {\n    fns.delete(fn);\n  };\n  const clear = () => {\n    fns.clear();\n  };\n  const on = (fn) => {\n    fns.add(fn);\n    const offFn = () => off(fn);\n    tryOnScopeDispose(offFn);\n    return {\n      off: offFn\n    };\n  };\n  const trigger = (...args) => {\n    return Promise.all(Array.from(fns).map((fn) => fn(...args)));\n  };\n  return {\n    on,\n    off,\n    trigger,\n    clear\n  };\n}\n\nfunction createGlobalState(stateFactory) {\n  let initialized = false;\n  let state;\n  const scope = effectScope(true);\n  return (...args) => {\n    if (!initialized) {\n      state = scope.run(() => stateFactory(...args));\n      initialized = true;\n    }\n    return state;\n  };\n}\n\nconst localProvidedStateMap = /* @__PURE__ */ new WeakMap();\n\nconst injectLocal = (...args) => {\n  var _a;\n  const key = args[0];\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\n  if (instance == null && !hasInjectionContext())\n    throw new Error(\"injectLocal must be called in setup\");\n  if (instance && localProvidedStateMap.has(instance) && key in localProvidedStateMap.get(instance))\n    return localProvidedStateMap.get(instance)[key];\n  return inject(...args);\n};\n\nconst provideLocal = (key, value) => {\n  var _a;\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\n  if (instance == null)\n    throw new Error(\"provideLocal must be called in setup\");\n  if (!localProvidedStateMap.has(instance))\n    localProvidedStateMap.set(instance, /* @__PURE__ */ Object.create(null));\n  const localProvidedState = localProvidedStateMap.get(instance);\n  localProvidedState[key] = value;\n  provide(key, value);\n};\n\nfunction createInjectionState(composable, options) {\n  const key = (options == null ? void 0 : options.injectionKey) || Symbol(composable.name || \"InjectionState\");\n  const defaultValue = options == null ? void 0 : options.defaultValue;\n  const useProvidingState = (...args) => {\n    const state = composable(...args);\n    provideLocal(key, state);\n    return state;\n  };\n  const useInjectedState = () => injectLocal(key, defaultValue);\n  return [useProvidingState, useInjectedState];\n}\n\nfunction createRef(value, deep) {\n  if (deep === true) {\n    return ref(value);\n  } else {\n    return shallowRef(value);\n  }\n}\n\nfunction createSharedComposable(composable) {\n  let subscribers = 0;\n  let state;\n  let scope;\n  const dispose = () => {\n    subscribers -= 1;\n    if (scope && subscribers <= 0) {\n      scope.stop();\n      state = void 0;\n      scope = void 0;\n    }\n  };\n  return (...args) => {\n    subscribers += 1;\n    if (!scope) {\n      scope = effectScope(true);\n      state = scope.run(() => composable(...args));\n    }\n    tryOnScopeDispose(dispose);\n    return state;\n  };\n}\n\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\n  for (const [key, value] of Object.entries(extend)) {\n    if (key === \"value\")\n      continue;\n    if (isRef(value) && unwrap) {\n      Object.defineProperty(ref, key, {\n        get() {\n          return value.value;\n        },\n        set(v) {\n          value.value = v;\n        },\n        enumerable\n      });\n    } else {\n      Object.defineProperty(ref, key, { value, enumerable });\n    }\n  }\n  return ref;\n}\n\nfunction get(obj, key) {\n  if (key == null)\n    return unref(obj);\n  return unref(obj)[key];\n}\n\nfunction isDefined(v) {\n  return unref(v) != null;\n}\n\nfunction makeDestructurable(obj, arr) {\n  if (typeof Symbol !== \"undefined\") {\n    const clone = { ...obj };\n    Object.defineProperty(clone, Symbol.iterator, {\n      enumerable: false,\n      value() {\n        let index = 0;\n        return {\n          next: () => ({\n            value: arr[index++],\n            done: index > arr.length\n          })\n        };\n      }\n    });\n    return clone;\n  } else {\n    return Object.assign([...arr], obj);\n  }\n}\n\nfunction reactify(fn, options) {\n  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : toValue$1;\n  return function(...args) {\n    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));\n  };\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\n  let keys = [];\n  let options;\n  if (Array.isArray(optionsOrKeys)) {\n    keys = optionsOrKeys;\n  } else {\n    options = optionsOrKeys;\n    const { includeOwnProperties = true } = optionsOrKeys;\n    keys.push(...Object.keys(obj));\n    if (includeOwnProperties)\n      keys.push(...Object.getOwnPropertyNames(obj));\n  }\n  return Object.fromEntries(\n    keys.map((key) => {\n      const value = obj[key];\n      return [\n        key,\n        typeof value === \"function\" ? reactify(value.bind(obj), options) : value\n      ];\n    })\n  );\n}\n\nfunction toReactive(objectRef) {\n  if (!isRef(objectRef))\n    return reactive(objectRef);\n  const proxy = new Proxy({}, {\n    get(_, p, receiver) {\n      return unref(Reflect.get(objectRef.value, p, receiver));\n    },\n    set(_, p, value) {\n      if (isRef(objectRef.value[p]) && !isRef(value))\n        objectRef.value[p].value = value;\n      else\n        objectRef.value[p] = value;\n      return true;\n    },\n    deleteProperty(_, p) {\n      return Reflect.deleteProperty(objectRef.value, p);\n    },\n    has(_, p) {\n      return Reflect.has(objectRef.value, p);\n    },\n    ownKeys() {\n      return Object.keys(objectRef.value);\n    },\n    getOwnPropertyDescriptor() {\n      return {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  });\n  return reactive(proxy);\n}\n\nfunction reactiveComputed(fn) {\n  return toReactive(computed(fn));\n}\n\nfunction reactiveOmit(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => !predicate(toValue$1(v), k))) : Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0]))));\n}\n\nconst isClient = typeof window !== \"undefined\" && typeof document !== \"undefined\";\nconst isWorker = typeof WorkerGlobalScope !== \"undefined\" && globalThis instanceof WorkerGlobalScope;\nconst isDef = (val) => typeof val !== \"undefined\";\nconst notNullish = (val) => val != null;\nconst assert = (condition, ...infos) => {\n  if (!condition)\n    console.warn(...infos);\n};\nconst toString = Object.prototype.toString;\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\nconst now = () => Date.now();\nconst timestamp = () => +Date.now();\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\nconst noop = () => {\n};\nconst rand = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\nconst isIOS = /* @__PURE__ */ getIsIOS();\nfunction getIsIOS() {\n  var _a, _b;\n  return isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && (/iP(?:ad|hone|od)/.test(window.navigator.userAgent) || ((_b = window == null ? void 0 : window.navigator) == null ? void 0 : _b.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));\n}\n\nfunction createFilterWrapper(filter, fn) {\n  function wrapper(...args) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve).catch(reject);\n    });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction debounceFilter(ms, options = {}) {\n  let timer;\n  let maxTimer;\n  let lastRejector = noop;\n  const _clearTimeout = (timer2) => {\n    clearTimeout(timer2);\n    lastRejector();\n    lastRejector = noop;\n  };\n  let lastInvoker;\n  const filter = (invoke) => {\n    const duration = toValue$1(ms);\n    const maxDuration = toValue$1(options.maxWait);\n    if (timer)\n      _clearTimeout(timer);\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\n      if (maxTimer) {\n        _clearTimeout(maxTimer);\n        maxTimer = null;\n      }\n      return Promise.resolve(invoke());\n    }\n    return new Promise((resolve, reject) => {\n      lastRejector = options.rejectOnCancel ? reject : resolve;\n      lastInvoker = invoke;\n      if (maxDuration && !maxTimer) {\n        maxTimer = setTimeout(() => {\n          if (timer)\n            _clearTimeout(timer);\n          maxTimer = null;\n          resolve(lastInvoker());\n        }, maxDuration);\n      }\n      timer = setTimeout(() => {\n        if (maxTimer)\n          _clearTimeout(maxTimer);\n        maxTimer = null;\n        resolve(invoke());\n      }, duration);\n    });\n  };\n  return filter;\n}\nfunction throttleFilter(...args) {\n  let lastExec = 0;\n  let timer;\n  let isLeading = true;\n  let lastRejector = noop;\n  let lastValue;\n  let ms;\n  let trailing;\n  let leading;\n  let rejectOnCancel;\n  if (!isRef(args[0]) && typeof args[0] === \"object\")\n    ({ delay: ms, trailing = true, leading = true, rejectOnCancel = false } = args[0]);\n  else\n    [ms, trailing = true, leading = true, rejectOnCancel = false] = args;\n  const clear = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n      lastRejector();\n      lastRejector = noop;\n    }\n  };\n  const filter = (_invoke) => {\n    const duration = toValue$1(ms);\n    const elapsed = Date.now() - lastExec;\n    const invoke = () => {\n      return lastValue = _invoke();\n    };\n    clear();\n    if (duration <= 0) {\n      lastExec = Date.now();\n      return invoke();\n    }\n    if (elapsed > duration && (leading || !isLeading)) {\n      lastExec = Date.now();\n      invoke();\n    } else if (trailing) {\n      lastValue = new Promise((resolve, reject) => {\n        lastRejector = rejectOnCancel ? reject : resolve;\n        timer = setTimeout(() => {\n          lastExec = Date.now();\n          isLeading = true;\n          resolve(invoke());\n          clear();\n        }, Math.max(0, duration - elapsed));\n      });\n    }\n    if (!leading && !timer)\n      timer = setTimeout(() => isLeading = true, duration);\n    isLeading = false;\n    return lastValue;\n  };\n  return filter;\n}\nfunction pausableFilter(extendFilter = bypassFilter, options = {}) {\n  const {\n    initialState = \"active\"\n  } = options;\n  const isActive = toRef(initialState === \"active\");\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive: readonly(isActive), pause, resume, eventFilter };\n}\n\nfunction cacheStringFunction(fn) {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, \"-$1\").toLowerCase());\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\n  return new Promise((resolve, reject) => {\n    if (throwOnTimeout)\n      setTimeout(() => reject(reason), ms);\n    else\n      setTimeout(resolve, ms);\n  });\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction containsProp(obj, ...props) {\n  return props.some((k) => k in obj);\n}\nfunction increaseWithUnit(target, delta) {\n  var _a;\n  if (typeof target === \"number\")\n    return target + delta;\n  const value = ((_a = target.match(/^-?\\d+\\.?\\d*/)) == null ? void 0 : _a[0]) || \"\";\n  const unit = target.slice(value.length);\n  const result = Number.parseFloat(value) + delta;\n  if (Number.isNaN(result))\n    return target;\n  return result + unit;\n}\nfunction pxValue(px) {\n  return px.endsWith(\"rem\") ? Number.parseFloat(px) * 16 : Number.parseFloat(px);\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\nfunction objectOmit(obj, keys, omitUndefined = false) {\n  return Object.fromEntries(Object.entries(obj).filter(([key, value]) => {\n    return (!omitUndefined || value !== void 0) && !keys.includes(key);\n  }));\n}\nfunction objectEntries(obj) {\n  return Object.entries(obj);\n}\nfunction getLifeCycleTarget(target) {\n  return target || getCurrentInstance();\n}\nfunction toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\nfunction toRef(...args) {\n  if (args.length !== 1)\n    return toRef$1(...args);\n  const r = args[0];\n  return typeof r === \"function\" ? readonly(customRef(() => ({ get: r, set: noop }))) : ref(r);\n}\nconst resolveRef = toRef;\n\nfunction reactivePick(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => predicate(toValue$1(v), k))) : Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));\n}\n\nfunction refAutoReset(defaultValue, afterMs = 1e4) {\n  return customRef((track, trigger) => {\n    let value = toValue$1(defaultValue);\n    let timer;\n    const resetAfter = () => setTimeout(() => {\n      value = toValue$1(defaultValue);\n      trigger();\n    }, toValue$1(afterMs));\n    tryOnScopeDispose(() => {\n      clearTimeout(timer);\n    });\n    return {\n      get() {\n        track();\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        trigger();\n        clearTimeout(timer);\n        timer = resetAfter();\n      }\n    };\n  });\n}\n\nfunction useDebounceFn(fn, ms = 200, options = {}) {\n  return createFilterWrapper(\n    debounceFilter(ms, options),\n    fn\n  );\n}\n\nfunction refDebounced(value, ms = 200, options = {}) {\n  const debounced = ref(value.value);\n  const updater = useDebounceFn(() => {\n    debounced.value = value.value;\n  }, ms, options);\n  watch(value, () => updater());\n  return debounced;\n}\n\nfunction refDefault(source, defaultValue) {\n  return computed({\n    get() {\n      var _a;\n      return (_a = source.value) != null ? _a : defaultValue;\n    },\n    set(value) {\n      source.value = value;\n    }\n  });\n}\n\nfunction useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {\n  return createFilterWrapper(\n    throttleFilter(ms, trailing, leading, rejectOnCancel),\n    fn\n  );\n}\n\nfunction refThrottled(value, delay = 200, trailing = true, leading = true) {\n  if (delay <= 0)\n    return value;\n  const throttled = ref(value.value);\n  const updater = useThrottleFn(() => {\n    throttled.value = value.value;\n  }, delay, trailing, leading);\n  watch(value, () => updater());\n  return throttled;\n}\n\nfunction refWithControl(initial, options = {}) {\n  let source = initial;\n  let track;\n  let trigger;\n  const ref = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        return get();\n      },\n      set(v) {\n        set(v);\n      }\n    };\n  });\n  function get(tracking = true) {\n    if (tracking)\n      track();\n    return source;\n  }\n  function set(value, triggering = true) {\n    var _a, _b;\n    if (value === source)\n      return;\n    const old = source;\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\n      return;\n    source = value;\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\n    if (triggering)\n      trigger();\n  }\n  const untrackedGet = () => get(false);\n  const silentSet = (v) => set(v, false);\n  const peek = () => get(false);\n  const lay = (v) => set(v, false);\n  return extendRef(\n    ref,\n    {\n      get,\n      set,\n      untrackedGet,\n      silentSet,\n      peek,\n      lay\n    },\n    { enumerable: true }\n  );\n}\nconst controlledRef = refWithControl;\n\nfunction set(...args) {\n  if (args.length === 2) {\n    const [ref, value] = args;\n    ref.value = value;\n  }\n  if (args.length === 3) {\n    const [target, key, value] = args;\n    target[key] = value;\n  }\n}\n\nfunction watchWithFilter(source, cb, options = {}) {\n  const {\n    eventFilter = bypassFilter,\n    ...watchOptions\n  } = options;\n  return watch(\n    source,\n    createFilterWrapper(\n      eventFilter,\n      cb\n    ),\n    watchOptions\n  );\n}\n\nfunction watchPausable(source, cb, options = {}) {\n  const {\n    eventFilter: filter,\n    initialState = \"active\",\n    ...watchOptions\n  } = options;\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter, { initialState });\n  const stop = watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter\n    }\n  );\n  return { stop, pause, resume, isActive };\n}\n\nfunction syncRef(left, right, ...[options]) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true,\n    direction = \"both\",\n    transform = {}\n  } = options || {};\n  const watchers = [];\n  const transformLTR = \"ltr\" in transform && transform.ltr || ((v) => v);\n  const transformRTL = \"rtl\" in transform && transform.rtl || ((v) => v);\n  if (direction === \"both\" || direction === \"ltr\") {\n    watchers.push(watchPausable(\n      left,\n      (newValue) => {\n        watchers.forEach((w) => w.pause());\n        right.value = transformLTR(newValue);\n        watchers.forEach((w) => w.resume());\n      },\n      { flush, deep, immediate }\n    ));\n  }\n  if (direction === \"both\" || direction === \"rtl\") {\n    watchers.push(watchPausable(\n      right,\n      (newValue) => {\n        watchers.forEach((w) => w.pause());\n        left.value = transformRTL(newValue);\n        watchers.forEach((w) => w.resume());\n      },\n      { flush, deep, immediate }\n    ));\n  }\n  const stop = () => {\n    watchers.forEach((w) => w.stop());\n  };\n  return stop;\n}\n\nfunction syncRefs(source, targets, options = {}) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true\n  } = options;\n  const targetsArray = toArray(targets);\n  return watch(\n    source,\n    (newValue) => targetsArray.forEach((target) => target.value = newValue),\n    { flush, deep, immediate }\n  );\n}\n\nfunction toRefs(objectRef, options = {}) {\n  if (!isRef(objectRef))\n    return toRefs$1(objectRef);\n  const result = Array.isArray(objectRef.value) ? Array.from({ length: objectRef.value.length }) : {};\n  for (const key in objectRef.value) {\n    result[key] = customRef(() => ({\n      get() {\n        return objectRef.value[key];\n      },\n      set(v) {\n        var _a;\n        const replaceRef = (_a = toValue$1(options.replaceRef)) != null ? _a : true;\n        if (replaceRef) {\n          if (Array.isArray(objectRef.value)) {\n            const copy = [...objectRef.value];\n            copy[key] = v;\n            objectRef.value = copy;\n          } else {\n            const newObject = { ...objectRef.value, [key]: v };\n            Object.setPrototypeOf(newObject, Object.getPrototypeOf(objectRef.value));\n            objectRef.value = newObject;\n          }\n        } else {\n          objectRef.value[key] = v;\n        }\n      }\n    }));\n  }\n  return result;\n}\n\nconst toValue = toValue$1;\nconst resolveUnref = toValue$1;\n\nfunction tryOnBeforeMount(fn, sync = true, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onBeforeMount(fn, target);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnBeforeUnmount(fn, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onBeforeUnmount(fn, target);\n}\n\nfunction tryOnMounted(fn, sync = true, target) {\n  const instance = getLifeCycleTarget();\n  if (instance)\n    onMounted(fn, target);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnUnmounted(fn, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onUnmounted(fn, target);\n}\n\nfunction createUntil(r, isNot = false) {\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        r,\n        (v) => {\n          if (condition(v) !== isNot) {\n            if (stop)\n              stop();\n            else\n              nextTick(() => stop == null ? void 0 : stop());\n            resolve(v);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue$1(r)).finally(() => stop == null ? void 0 : stop())\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBe(value, options) {\n    if (!isRef(value))\n      return toMatch((v) => v === value, options);\n    const { flush = \"sync\", deep = false, timeout, throwOnTimeout } = options != null ? options : {};\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        [r, value],\n        ([v1, v2]) => {\n          if (isNot !== (v1 === v2)) {\n            if (stop)\n              stop();\n            else\n              nextTick(() => stop == null ? void 0 : stop());\n            resolve(v1);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue$1(r)).finally(() => {\n          stop == null ? void 0 : stop();\n          return toValue$1(r);\n        })\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBeTruthy(options) {\n    return toMatch((v) => Boolean(v), options);\n  }\n  function toBeNull(options) {\n    return toBe(null, options);\n  }\n  function toBeUndefined(options) {\n    return toBe(void 0, options);\n  }\n  function toBeNaN(options) {\n    return toMatch(Number.isNaN, options);\n  }\n  function toContains(value, options) {\n    return toMatch((v) => {\n      const array = Array.from(v);\n      return array.includes(value) || array.includes(toValue$1(value));\n    }, options);\n  }\n  function changed(options) {\n    return changedTimes(1, options);\n  }\n  function changedTimes(n = 1, options) {\n    let count = -1;\n    return toMatch(() => {\n      count += 1;\n      return count >= n;\n    }, options);\n  }\n  if (Array.isArray(toValue$1(r))) {\n    const instance = {\n      toMatch,\n      toContains,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  } else {\n    const instance = {\n      toMatch,\n      toBe,\n      toBeTruthy,\n      toBeNull,\n      toBeNaN,\n      toBeUndefined,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  }\n}\nfunction until(r) {\n  return createUntil(r);\n}\n\nfunction defaultComparator(value, othVal) {\n  return value === othVal;\n}\nfunction useArrayDifference(...args) {\n  var _a, _b;\n  const list = args[0];\n  const values = args[1];\n  let compareFn = (_a = args[2]) != null ? _a : defaultComparator;\n  const {\n    symmetric = false\n  } = (_b = args[3]) != null ? _b : {};\n  if (typeof compareFn === \"string\") {\n    const key = compareFn;\n    compareFn = (value, othVal) => value[key] === othVal[key];\n  }\n  const diff1 = computed(() => toValue$1(list).filter((x) => toValue$1(values).findIndex((y) => compareFn(x, y)) === -1));\n  if (symmetric) {\n    const diff2 = computed(() => toValue$1(values).filter((x) => toValue$1(list).findIndex((y) => compareFn(x, y)) === -1));\n    return computed(() => symmetric ? [...toValue$1(diff1), ...toValue$1(diff2)] : toValue$1(diff1));\n  } else {\n    return diff1;\n  }\n}\n\nfunction useArrayEvery(list, fn) {\n  return computed(() => toValue$1(list).every((element, index, array) => fn(toValue$1(element), index, array)));\n}\n\nfunction useArrayFilter(list, fn) {\n  return computed(() => toValue$1(list).map((i) => toValue$1(i)).filter(fn));\n}\n\nfunction useArrayFind(list, fn) {\n  return computed(() => toValue$1(\n    toValue$1(list).find((element, index, array) => fn(toValue$1(element), index, array))\n  ));\n}\n\nfunction useArrayFindIndex(list, fn) {\n  return computed(() => toValue$1(list).findIndex((element, index, array) => fn(toValue$1(element), index, array)));\n}\n\nfunction findLast(arr, cb) {\n  let index = arr.length;\n  while (index-- > 0) {\n    if (cb(arr[index], index, arr))\n      return arr[index];\n  }\n  return void 0;\n}\nfunction useArrayFindLast(list, fn) {\n  return computed(() => toValue$1(\n    !Array.prototype.findLast ? findLast(toValue$1(list), (element, index, array) => fn(toValue$1(element), index, array)) : toValue$1(list).findLast((element, index, array) => fn(toValue$1(element), index, array))\n  ));\n}\n\nfunction isArrayIncludesOptions(obj) {\n  return isObject(obj) && containsProp(obj, \"formIndex\", \"comparator\");\n}\nfunction useArrayIncludes(...args) {\n  var _a;\n  const list = args[0];\n  const value = args[1];\n  let comparator = args[2];\n  let formIndex = 0;\n  if (isArrayIncludesOptions(comparator)) {\n    formIndex = (_a = comparator.fromIndex) != null ? _a : 0;\n    comparator = comparator.comparator;\n  }\n  if (typeof comparator === \"string\") {\n    const key = comparator;\n    comparator = (element, value2) => element[key] === toValue$1(value2);\n  }\n  comparator = comparator != null ? comparator : (element, value2) => element === toValue$1(value2);\n  return computed(() => toValue$1(list).slice(formIndex).some((element, index, array) => comparator(\n    toValue$1(element),\n    toValue$1(value),\n    index,\n    toValue$1(array)\n  )));\n}\n\nfunction useArrayJoin(list, separator) {\n  return computed(() => toValue$1(list).map((i) => toValue$1(i)).join(toValue$1(separator)));\n}\n\nfunction useArrayMap(list, fn) {\n  return computed(() => toValue$1(list).map((i) => toValue$1(i)).map(fn));\n}\n\nfunction useArrayReduce(list, reducer, ...args) {\n  const reduceCallback = (sum, value, index) => reducer(toValue$1(sum), toValue$1(value), index);\n  return computed(() => {\n    const resolved = toValue$1(list);\n    return args.length ? resolved.reduce(reduceCallback, typeof args[0] === \"function\" ? toValue$1(args[0]()) : toValue$1(args[0])) : resolved.reduce(reduceCallback);\n  });\n}\n\nfunction useArraySome(list, fn) {\n  return computed(() => toValue$1(list).some((element, index, array) => fn(toValue$1(element), index, array)));\n}\n\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction uniqueElementsBy(array, fn) {\n  return array.reduce((acc, v) => {\n    if (!acc.some((x) => fn(v, x, array)))\n      acc.push(v);\n    return acc;\n  }, []);\n}\nfunction useArrayUnique(list, compareFn) {\n  return computed(() => {\n    const resolvedList = toValue$1(list).map((element) => toValue$1(element));\n    return compareFn ? uniqueElementsBy(resolvedList, compareFn) : uniq(resolvedList);\n  });\n}\n\nfunction useCounter(initialValue = 0, options = {}) {\n  let _initialValue = unref(initialValue);\n  const count = shallowRef(initialValue);\n  const {\n    max = Number.POSITIVE_INFINITY,\n    min = Number.NEGATIVE_INFINITY\n  } = options;\n  const inc = (delta = 1) => count.value = Math.max(Math.min(max, count.value + delta), min);\n  const dec = (delta = 1) => count.value = Math.min(Math.max(min, count.value - delta), max);\n  const get = () => count.value;\n  const set = (val) => count.value = Math.max(min, Math.min(max, val));\n  const reset = (val = _initialValue) => {\n    _initialValue = val;\n    return set(val);\n  };\n  return { count, inc, dec, get, set, reset };\n}\n\nconst REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[T\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/i;\nconst REGEX_FORMAT = /[YMDHhms]o|\\[([^\\]]+)\\]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|z{1,4}|SSS/g;\nfunction defaultMeridiem(hours, minutes, isLowercase, hasPeriod) {\n  let m = hours < 12 ? \"AM\" : \"PM\";\n  if (hasPeriod)\n    m = m.split(\"\").reduce((acc, curr) => acc += `${curr}.`, \"\");\n  return isLowercase ? m.toLowerCase() : m;\n}\nfunction formatOrdinal(num) {\n  const suffixes = [\"th\", \"st\", \"nd\", \"rd\"];\n  const v = num % 100;\n  return num + (suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]);\n}\nfunction formatDate(date, formatStr, options = {}) {\n  var _a;\n  const years = date.getFullYear();\n  const month = date.getMonth();\n  const days = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n  const day = date.getDay();\n  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;\n  const stripTimeZone = (dateString) => {\n    var _a2;\n    return (_a2 = dateString.split(\" \")[1]) != null ? _a2 : \"\";\n  };\n  const matches = {\n    Yo: () => formatOrdinal(years),\n    YY: () => String(years).slice(-2),\n    YYYY: () => years,\n    M: () => month + 1,\n    Mo: () => formatOrdinal(month + 1),\n    MM: () => `${month + 1}`.padStart(2, \"0\"),\n    MMM: () => date.toLocaleDateString(toValue$1(options.locales), { month: \"short\" }),\n    MMMM: () => date.toLocaleDateString(toValue$1(options.locales), { month: \"long\" }),\n    D: () => String(days),\n    Do: () => formatOrdinal(days),\n    DD: () => `${days}`.padStart(2, \"0\"),\n    H: () => String(hours),\n    Ho: () => formatOrdinal(hours),\n    HH: () => `${hours}`.padStart(2, \"0\"),\n    h: () => `${hours % 12 || 12}`.padStart(1, \"0\"),\n    ho: () => formatOrdinal(hours % 12 || 12),\n    hh: () => `${hours % 12 || 12}`.padStart(2, \"0\"),\n    m: () => String(minutes),\n    mo: () => formatOrdinal(minutes),\n    mm: () => `${minutes}`.padStart(2, \"0\"),\n    s: () => String(seconds),\n    so: () => formatOrdinal(seconds),\n    ss: () => `${seconds}`.padStart(2, \"0\"),\n    SSS: () => `${milliseconds}`.padStart(3, \"0\"),\n    d: () => day,\n    dd: () => date.toLocaleDateString(toValue$1(options.locales), { weekday: \"narrow\" }),\n    ddd: () => date.toLocaleDateString(toValue$1(options.locales), { weekday: \"short\" }),\n    dddd: () => date.toLocaleDateString(toValue$1(options.locales), { weekday: \"long\" }),\n    A: () => meridiem(hours, minutes),\n    AA: () => meridiem(hours, minutes, false, true),\n    a: () => meridiem(hours, minutes, true),\n    aa: () => meridiem(hours, minutes, true, true),\n    z: () => stripTimeZone(date.toLocaleDateString(toValue$1(options.locales), { timeZoneName: \"shortOffset\" })),\n    zz: () => stripTimeZone(date.toLocaleDateString(toValue$1(options.locales), { timeZoneName: \"shortOffset\" })),\n    zzz: () => stripTimeZone(date.toLocaleDateString(toValue$1(options.locales), { timeZoneName: \"shortOffset\" })),\n    zzzz: () => stripTimeZone(date.toLocaleDateString(toValue$1(options.locales), { timeZoneName: \"longOffset\" }))\n  };\n  return formatStr.replace(REGEX_FORMAT, (match, $1) => {\n    var _a2, _b;\n    return (_b = $1 != null ? $1 : (_a2 = matches[match]) == null ? void 0 : _a2.call(matches)) != null ? _b : match;\n  });\n}\nfunction normalizeDate(date) {\n  if (date === null)\n    return new Date(Number.NaN);\n  if (date === void 0)\n    return /* @__PURE__ */ new Date();\n  if (date instanceof Date)\n    return new Date(date);\n  if (typeof date === \"string\" && !/Z$/i.test(date)) {\n    const d = date.match(REGEX_PARSE);\n    if (d) {\n      const m = d[2] - 1 || 0;\n      const ms = (d[7] || \"0\").substring(0, 3);\n      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);\n    }\n  }\n  return new Date(date);\n}\nfunction useDateFormat(date, formatStr = \"HH:mm:ss\", options = {}) {\n  return computed(() => formatDate(normalizeDate(toValue$1(date)), toValue$1(formatStr), options));\n}\n\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  let timer = null;\n  const isActive = shallowRef(false);\n  function clean() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    const intervalValue = toValue$1(interval);\n    if (intervalValue <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    if (isActive.value)\n      timer = setInterval(cb, intervalValue);\n  }\n  if (immediate && isClient)\n    resume();\n  if (isRef(interval) || typeof interval === \"function\") {\n    const stopWatch = watch(interval, () => {\n      if (isActive.value && isClient)\n        resume();\n    });\n    tryOnScopeDispose(stopWatch);\n  }\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nfunction useInterval(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    immediate = true,\n    callback\n  } = options;\n  const counter = shallowRef(0);\n  const update = () => counter.value += 1;\n  const reset = () => {\n    counter.value = 0;\n  };\n  const controls = useIntervalFn(\n    callback ? () => {\n      update();\n      callback(counter.value);\n    } : update,\n    interval,\n    { immediate }\n  );\n  if (exposeControls) {\n    return {\n      counter,\n      reset,\n      ...controls\n    };\n  } else {\n    return counter;\n  }\n}\n\nfunction useLastChanged(source, options = {}) {\n  var _a;\n  const ms = shallowRef((_a = options.initialValue) != null ? _a : null);\n  watch(\n    source,\n    () => ms.value = timestamp(),\n    options\n  );\n  return ms;\n}\n\nfunction useTimeoutFn(cb, interval, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  const isPending = shallowRef(false);\n  let timer = null;\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function stop() {\n    isPending.value = false;\n    clear();\n  }\n  function start(...args) {\n    if (immediateCallback)\n      cb();\n    clear();\n    isPending.value = true;\n    timer = setTimeout(() => {\n      isPending.value = false;\n      timer = null;\n      cb(...args);\n    }, toValue$1(interval));\n  }\n  if (immediate) {\n    isPending.value = true;\n    if (isClient)\n      start();\n  }\n  tryOnScopeDispose(stop);\n  return {\n    isPending: readonly(isPending),\n    start,\n    stop\n  };\n}\n\nfunction useTimeout(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    callback\n  } = options;\n  const controls = useTimeoutFn(\n    callback != null ? callback : noop,\n    interval,\n    options\n  );\n  const ready = computed(() => !controls.isPending.value);\n  if (exposeControls) {\n    return {\n      ready,\n      ...controls\n    };\n  } else {\n    return ready;\n  }\n}\n\nfunction useToNumber(value, options = {}) {\n  const {\n    method = \"parseFloat\",\n    radix,\n    nanToZero\n  } = options;\n  return computed(() => {\n    let resolved = toValue$1(value);\n    if (typeof method === \"function\")\n      resolved = method(resolved);\n    else if (typeof resolved === \"string\")\n      resolved = Number[method](resolved, radix);\n    if (nanToZero && Number.isNaN(resolved))\n      resolved = 0;\n    return resolved;\n  });\n}\n\nfunction useToString(value) {\n  return computed(() => `${toValue$1(value)}`);\n}\n\nfunction useToggle(initialValue = false, options = {}) {\n  const {\n    truthyValue = true,\n    falsyValue = false\n  } = options;\n  const valueIsRef = isRef(initialValue);\n  const _value = shallowRef(initialValue);\n  function toggle(value) {\n    if (arguments.length) {\n      _value.value = value;\n      return _value.value;\n    } else {\n      const truthy = toValue$1(truthyValue);\n      _value.value = _value.value === truthy ? toValue$1(falsyValue) : truthy;\n      return _value.value;\n    }\n  }\n  if (valueIsRef)\n    return toggle;\n  else\n    return [_value, toggle];\n}\n\nfunction watchArray(source, cb, options) {\n  let oldList = (options == null ? void 0 : options.immediate) ? [] : [...typeof source === \"function\" ? source() : Array.isArray(source) ? source : toValue$1(source)];\n  return watch(source, (newList, _, onCleanup) => {\n    const oldListRemains = Array.from({ length: oldList.length });\n    const added = [];\n    for (const obj of newList) {\n      let found = false;\n      for (let i = 0; i < oldList.length; i++) {\n        if (!oldListRemains[i] && obj === oldList[i]) {\n          oldListRemains[i] = true;\n          found = true;\n          break;\n        }\n      }\n      if (!found)\n        added.push(obj);\n    }\n    const removed = oldList.filter((_2, i) => !oldListRemains[i]);\n    cb(newList, oldList, added, removed, onCleanup);\n    oldList = [...newList];\n  }, options);\n}\n\nfunction watchAtMost(source, cb, options) {\n  const {\n    count,\n    ...watchOptions\n  } = options;\n  const current = shallowRef(0);\n  const stop = watchWithFilter(\n    source,\n    (...args) => {\n      current.value += 1;\n      if (current.value >= toValue$1(count))\n        nextTick(() => stop());\n      cb(...args);\n    },\n    watchOptions\n  );\n  return { count: current, stop };\n}\n\nfunction watchDebounced(source, cb, options = {}) {\n  const {\n    debounce = 0,\n    maxWait = void 0,\n    ...watchOptions\n  } = options;\n  return watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter: debounceFilter(debounce, { maxWait })\n    }\n  );\n}\n\nfunction watchDeep(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    {\n      ...options,\n      deep: true\n    }\n  );\n}\n\nfunction watchIgnorable(source, cb, options = {}) {\n  const {\n    eventFilter = bypassFilter,\n    ...watchOptions\n  } = options;\n  const filteredCb = createFilterWrapper(\n    eventFilter,\n    cb\n  );\n  let ignoreUpdates;\n  let ignorePrevAsyncUpdates;\n  let stop;\n  if (watchOptions.flush === \"sync\") {\n    const ignore = shallowRef(false);\n    ignorePrevAsyncUpdates = () => {\n    };\n    ignoreUpdates = (updater) => {\n      ignore.value = true;\n      updater();\n      ignore.value = false;\n    };\n    stop = watch(\n      source,\n      (...args) => {\n        if (!ignore.value)\n          filteredCb(...args);\n      },\n      watchOptions\n    );\n  } else {\n    const disposables = [];\n    const ignoreCounter = shallowRef(0);\n    const syncCounter = shallowRef(0);\n    ignorePrevAsyncUpdates = () => {\n      ignoreCounter.value = syncCounter.value;\n    };\n    disposables.push(\n      watch(\n        source,\n        () => {\n          syncCounter.value++;\n        },\n        { ...watchOptions, flush: \"sync\" }\n      )\n    );\n    ignoreUpdates = (updater) => {\n      const syncCounterPrev = syncCounter.value;\n      updater();\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\n    };\n    disposables.push(\n      watch(\n        source,\n        (...args) => {\n          const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\n          ignoreCounter.value = 0;\n          syncCounter.value = 0;\n          if (ignore)\n            return;\n          filteredCb(...args);\n        },\n        watchOptions\n      )\n    );\n    stop = () => {\n      disposables.forEach((fn) => fn());\n    };\n  }\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\n}\n\nfunction watchImmediate(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    {\n      ...options,\n      immediate: true\n    }\n  );\n}\n\nfunction watchOnce(source, cb, options) {\n  const stop = watch(source, (...args) => {\n    nextTick(() => stop());\n    return cb(...args);\n  }, options);\n  return stop;\n}\n\nfunction watchThrottled(source, cb, options = {}) {\n  const {\n    throttle = 0,\n    trailing = true,\n    leading = true,\n    ...watchOptions\n  } = options;\n  return watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter: throttleFilter(throttle, trailing, leading)\n    }\n  );\n}\n\nfunction watchTriggerable(source, cb, options = {}) {\n  let cleanupFn;\n  function onEffect() {\n    if (!cleanupFn)\n      return;\n    const fn = cleanupFn;\n    cleanupFn = void 0;\n    fn();\n  }\n  function onCleanup(callback) {\n    cleanupFn = callback;\n  }\n  const _cb = (value, oldValue) => {\n    onEffect();\n    return cb(value, oldValue, onCleanup);\n  };\n  const res = watchIgnorable(source, _cb, options);\n  const { ignoreUpdates } = res;\n  const trigger = () => {\n    let res2;\n    ignoreUpdates(() => {\n      res2 = _cb(getWatchSources(source), getOldValue(source));\n    });\n    return res2;\n  };\n  return {\n    ...res,\n    trigger\n  };\n}\nfunction getWatchSources(sources) {\n  if (isReactive(sources))\n    return sources;\n  if (Array.isArray(sources))\n    return sources.map((item) => toValue$1(item));\n  return toValue$1(sources);\n}\nfunction getOldValue(source) {\n  return Array.isArray(source) ? source.map(() => void 0) : void 0;\n}\n\nfunction whenever(source, cb, options) {\n  const stop = watch(\n    source,\n    (v, ov, onInvalidate) => {\n      if (v) {\n        if (options == null ? void 0 : options.once)\n          nextTick(() => stop());\n        cb(v, ov, onInvalidate);\n      }\n    },\n    {\n      ...options,\n      once: false\n    }\n  );\n  return stop;\n}\n\nexport { assert, refAutoReset as autoResetRef, bypassFilter, camelize, clamp, computedEager, computedWithControl, containsProp, computedWithControl as controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, createInjectionState, reactify as createReactiveFn, createRef, createSharedComposable, createSingletonPromise, debounceFilter, refDebounced as debouncedRef, watchDebounced as debouncedWatch, computedEager as eagerComputed, extendRef, formatDate, get, getLifeCycleTarget, hasOwn, hyphenate, identity, watchIgnorable as ignorableWatch, increaseWithUnit, injectLocal, invoke, isClient, isDef, isDefined, isIOS, isObject, isWorker, makeDestructurable, noop, normalizeDate, notNullish, now, objectEntries, objectOmit, objectPick, pausableFilter, watchPausable as pausableWatch, promiseTimeout, provideLocal, pxValue, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRef, syncRefs, throttleFilter, refThrottled as throttledRef, watchThrottled as throttledWatch, timestamp, toArray, toReactive, toRef, toRefs, toValue, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useCounter, useDateFormat, refDebounced as useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, refThrottled as useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToNumber, useToString, useToggle, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever };\n","import { noop, makeDestructurable, camelize, isClient, toArray, watchImmediate, isObject, tryOnScopeDispose, isIOS, notNullish, tryOnMounted, objectOmit, promiseTimeout, until, injectLocal, provideLocal, pxValue, increaseWithUnit, objectEntries, createRef, createSingletonPromise, useTimeoutFn, pausableWatch, toRef, createEventHook, useIntervalFn, computedWithControl, timestamp, pausableFilter, watchIgnorable, debounceFilter, bypassFilter, createFilterWrapper, toRefs, watchOnce, containsProp, hasOwn, throttleFilter, useDebounceFn, useThrottleFn, tryOnUnmounted, clamp, syncRef, objectPick, watchWithFilter, identity, isDef, whenever, isWorker } from '@vueuse/shared';\nexport * from '@vueuse/shared';\nimport { isRef, shallowRef, ref, watchEffect, computed, inject, defineComponent, h, TransitionGroup, shallowReactive, Fragment, toValue, unref, getCurrentInstance, onMounted, watch, customRef, onUpdated, readonly, reactive, hasInjectionContext, toRaw, nextTick, markRaw, getCurrentScope, isReadonly, onBeforeUpdate } from 'vue';\n\nfunction computedAsync(evaluationCallback, initialState, optionsOrRef) {\n  let options;\n  if (isRef(optionsOrRef)) {\n    options = {\n      evaluating: optionsOrRef\n    };\n  } else {\n    options = optionsOrRef || {};\n  }\n  const {\n    lazy = false,\n    evaluating = void 0,\n    shallow = true,\n    onError = noop\n  } = options;\n  const started = shallowRef(!lazy);\n  const current = shallow ? shallowRef(initialState) : ref(initialState);\n  let counter = 0;\n  watchEffect(async (onInvalidate) => {\n    if (!started.value)\n      return;\n    counter++;\n    const counterAtBeginning = counter;\n    let hasFinished = false;\n    if (evaluating) {\n      Promise.resolve().then(() => {\n        evaluating.value = true;\n      });\n    }\n    try {\n      const result = await evaluationCallback((cancelCallback) => {\n        onInvalidate(() => {\n          if (evaluating)\n            evaluating.value = false;\n          if (!hasFinished)\n            cancelCallback();\n        });\n      });\n      if (counterAtBeginning === counter)\n        current.value = result;\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (evaluating && counterAtBeginning === counter)\n        evaluating.value = false;\n      hasFinished = true;\n    }\n  });\n  if (lazy) {\n    return computed(() => {\n      started.value = true;\n      return current.value;\n    });\n  } else {\n    return current;\n  }\n}\n\nfunction computedInject(key, options, defaultSource, treatDefaultAsFactory) {\n  let source = inject(key);\n  if (defaultSource)\n    source = inject(key, defaultSource);\n  if (treatDefaultAsFactory)\n    source = inject(key, defaultSource, treatDefaultAsFactory);\n  if (typeof options === \"function\") {\n    return computed((ctx) => options(source, ctx));\n  } else {\n    return computed({\n      get: (ctx) => options.get(source, ctx),\n      set: options.set\n    });\n  }\n}\n\nfunction createReusableTemplate(options = {}) {\n  const {\n    inheritAttrs = true\n  } = options;\n  const render = shallowRef();\n  const define = /*@__PURE__*/ defineComponent({\n    setup(_, { slots }) {\n      return () => {\n        render.value = slots.default;\n      };\n    }\n  });\n  const reuse = /*@__PURE__*/ defineComponent({\n    inheritAttrs,\n    props: options.props,\n    setup(props, { attrs, slots }) {\n      return () => {\n        var _a;\n        if (!render.value && process.env.NODE_ENV !== \"production\")\n          throw new Error(\"[VueUse] Failed to find the definition of reusable template\");\n        const vnode = (_a = render.value) == null ? void 0 : _a.call(render, {\n          ...options.props == null ? keysToCamelKebabCase(attrs) : props,\n          $slots: slots\n        });\n        return inheritAttrs && (vnode == null ? void 0 : vnode.length) === 1 ? vnode[0] : vnode;\n      };\n    }\n  });\n  return makeDestructurable(\n    { define, reuse },\n    [define, reuse]\n  );\n}\nfunction keysToCamelKebabCase(obj) {\n  const newObj = {};\n  for (const key in obj)\n    newObj[camelize(key)] = obj[key];\n  return newObj;\n}\n\nfunction createTemplatePromise(options = {}) {\n  let index = 0;\n  const instances = ref([]);\n  function create(...args) {\n    const props = shallowReactive({\n      key: index++,\n      args,\n      promise: void 0,\n      resolve: () => {\n      },\n      reject: () => {\n      },\n      isResolving: false,\n      options\n    });\n    instances.value.push(props);\n    props.promise = new Promise((_resolve, _reject) => {\n      props.resolve = (v) => {\n        props.isResolving = true;\n        return _resolve(v);\n      };\n      props.reject = _reject;\n    }).finally(() => {\n      props.promise = void 0;\n      const index2 = instances.value.indexOf(props);\n      if (index2 !== -1)\n        instances.value.splice(index2, 1);\n    });\n    return props.promise;\n  }\n  function start(...args) {\n    if (options.singleton && instances.value.length > 0)\n      return instances.value[0].promise;\n    return create(...args);\n  }\n  const component = /*@__PURE__*/ defineComponent((_, { slots }) => {\n    const renderList = () => instances.value.map((props) => {\n      var _a;\n      return h(Fragment, { key: props.key }, (_a = slots.default) == null ? void 0 : _a.call(slots, props));\n    });\n    if (options.transition)\n      return () => h(TransitionGroup, options.transition, renderList);\n    return renderList;\n  });\n  component.start = start;\n  return component;\n}\n\nfunction createUnrefFn(fn) {\n  return function(...args) {\n    return fn.apply(this, args.map((i) => toValue(i)));\n  };\n}\n\nconst defaultWindow = isClient ? window : void 0;\nconst defaultDocument = isClient ? window.document : void 0;\nconst defaultNavigator = isClient ? window.navigator : void 0;\nconst defaultLocation = isClient ? window.location : void 0;\n\nfunction unrefElement(elRef) {\n  var _a;\n  const plain = toValue(elRef);\n  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;\n}\n\nfunction useEventListener(...args) {\n  const cleanups = [];\n  const cleanup = () => {\n    cleanups.forEach((fn) => fn());\n    cleanups.length = 0;\n  };\n  const register = (el, event, listener, options) => {\n    el.addEventListener(event, listener, options);\n    return () => el.removeEventListener(event, listener, options);\n  };\n  const firstParamTargets = computed(() => {\n    const test = toArray(toValue(args[0])).filter((e) => e != null);\n    return test.every((e) => typeof e !== \"string\") ? test : void 0;\n  });\n  const stopWatch = watchImmediate(\n    () => {\n      var _a, _b;\n      return [\n        (_b = (_a = firstParamTargets.value) == null ? void 0 : _a.map((e) => unrefElement(e))) != null ? _b : [defaultWindow].filter((e) => e != null),\n        toArray(toValue(firstParamTargets.value ? args[1] : args[0])),\n        toArray(unref(firstParamTargets.value ? args[2] : args[1])),\n        // @ts-expect-error - TypeScript gets the correct types, but somehow still complains\n        toValue(firstParamTargets.value ? args[3] : args[2])\n      ];\n    },\n    ([raw_targets, raw_events, raw_listeners, raw_options]) => {\n      cleanup();\n      if (!(raw_targets == null ? void 0 : raw_targets.length) || !(raw_events == null ? void 0 : raw_events.length) || !(raw_listeners == null ? void 0 : raw_listeners.length))\n        return;\n      const optionsClone = isObject(raw_options) ? { ...raw_options } : raw_options;\n      cleanups.push(\n        ...raw_targets.flatMap(\n          (el) => raw_events.flatMap(\n            (event) => raw_listeners.map((listener) => register(el, event, listener, optionsClone))\n          )\n        )\n      );\n    },\n    { flush: \"post\" }\n  );\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(cleanup);\n  return stop;\n}\n\nlet _iOSWorkaround = false;\nfunction onClickOutside(target, handler, options = {}) {\n  const { window = defaultWindow, ignore = [], capture = true, detectIframe = false, controls = false } = options;\n  if (!window) {\n    return controls ? { stop: noop, cancel: noop, trigger: noop } : noop;\n  }\n  if (isIOS && !_iOSWorkaround) {\n    _iOSWorkaround = true;\n    const listenerOptions = { passive: true };\n    Array.from(window.document.body.children).forEach((el) => useEventListener(el, \"click\", noop, listenerOptions));\n    useEventListener(window.document.documentElement, \"click\", noop, listenerOptions);\n  }\n  let shouldListen = true;\n  const shouldIgnore = (event) => {\n    return toValue(ignore).some((target2) => {\n      if (typeof target2 === \"string\") {\n        return Array.from(window.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));\n      } else {\n        const el = unrefElement(target2);\n        return el && (event.target === el || event.composedPath().includes(el));\n      }\n    });\n  };\n  function hasMultipleRoots(target2) {\n    const vm = toValue(target2);\n    return vm && vm.$.subTree.shapeFlag === 16;\n  }\n  function checkMultipleRoots(target2, event) {\n    const vm = toValue(target2);\n    const children = vm.$.subTree && vm.$.subTree.children;\n    if (children == null || !Array.isArray(children))\n      return false;\n    return children.some((child) => child.el === event.target || event.composedPath().includes(child.el));\n  }\n  const listener = (event) => {\n    const el = unrefElement(target);\n    if (event.target == null)\n      return;\n    if (!(el instanceof Element) && hasMultipleRoots(target) && checkMultipleRoots(target, event))\n      return;\n    if (!el || el === event.target || event.composedPath().includes(el))\n      return;\n    if (\"detail\" in event && event.detail === 0)\n      shouldListen = !shouldIgnore(event);\n    if (!shouldListen) {\n      shouldListen = true;\n      return;\n    }\n    handler(event);\n  };\n  let isProcessingClick = false;\n  const cleanup = [\n    useEventListener(window, \"click\", (event) => {\n      if (!isProcessingClick) {\n        isProcessingClick = true;\n        setTimeout(() => {\n          isProcessingClick = false;\n        }, 0);\n        listener(event);\n      }\n    }, { passive: true, capture }),\n    useEventListener(window, \"pointerdown\", (e) => {\n      const el = unrefElement(target);\n      shouldListen = !shouldIgnore(e) && !!(el && !e.composedPath().includes(el));\n    }, { passive: true }),\n    detectIframe && useEventListener(window, \"blur\", (event) => {\n      setTimeout(() => {\n        var _a;\n        const el = unrefElement(target);\n        if (((_a = window.document.activeElement) == null ? void 0 : _a.tagName) === \"IFRAME\" && !(el == null ? void 0 : el.contains(window.document.activeElement))) {\n          handler(event);\n        }\n      }, 0);\n    }, { passive: true })\n  ].filter(Boolean);\n  const stop = () => cleanup.forEach((fn) => fn());\n  if (controls) {\n    return {\n      stop,\n      cancel: () => {\n        shouldListen = false;\n      },\n      trigger: (event) => {\n        shouldListen = true;\n        listener(event);\n        shouldListen = false;\n      }\n    };\n  }\n  return stop;\n}\n\nfunction useMounted() {\n  const isMounted = shallowRef(false);\n  const instance = getCurrentInstance();\n  if (instance) {\n    onMounted(() => {\n      isMounted.value = true;\n    }, instance);\n  }\n  return isMounted;\n}\n\nfunction useSupported(callback) {\n  const isMounted = useMounted();\n  return computed(() => {\n    isMounted.value;\n    return Boolean(callback());\n  });\n}\n\nfunction useMutationObserver(target, callback, options = {}) {\n  const { window = defaultWindow, ...mutationOptions } = options;\n  let observer;\n  const isSupported = useSupported(() => window && \"MutationObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(() => {\n    const value = toValue(target);\n    const items = toArray(value).map(unrefElement).filter(notNullish);\n    return new Set(items);\n  });\n  const stopWatch = watch(\n    () => targets.value,\n    (targets2) => {\n      cleanup();\n      if (isSupported.value && targets2.size) {\n        observer = new MutationObserver(callback);\n        targets2.forEach((el) => observer.observe(el, mutationOptions));\n      }\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const takeRecords = () => {\n    return observer == null ? void 0 : observer.takeRecords();\n  };\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop,\n    takeRecords\n  };\n}\n\nfunction onElementRemoval(target, callback, options = {}) {\n  const {\n    window = defaultWindow,\n    document = window == null ? void 0 : window.document,\n    flush = \"sync\"\n  } = options;\n  if (!window || !document)\n    return noop;\n  let stopFn;\n  const cleanupAndUpdate = (fn) => {\n    stopFn == null ? void 0 : stopFn();\n    stopFn = fn;\n  };\n  const stopWatch = watchEffect(() => {\n    const el = unrefElement(target);\n    if (el) {\n      const { stop } = useMutationObserver(\n        document,\n        (mutationsList) => {\n          const targetRemoved = mutationsList.map((mutation) => [...mutation.removedNodes]).flat().some((node) => node === el || node.contains(el));\n          if (targetRemoved) {\n            callback(mutationsList);\n          }\n        },\n        {\n          window,\n          childList: true,\n          subtree: true\n        }\n      );\n      cleanupAndUpdate(stop);\n    }\n  }, { flush });\n  const stopHandle = () => {\n    stopWatch();\n    cleanupAndUpdate();\n  };\n  tryOnScopeDispose(stopHandle);\n  return stopHandle;\n}\n\nfunction createKeyPredicate(keyFilter) {\n  if (typeof keyFilter === \"function\")\n    return keyFilter;\n  else if (typeof keyFilter === \"string\")\n    return (event) => event.key === keyFilter;\n  else if (Array.isArray(keyFilter))\n    return (event) => keyFilter.includes(event.key);\n  return () => true;\n}\nfunction onKeyStroke(...args) {\n  let key;\n  let handler;\n  let options = {};\n  if (args.length === 3) {\n    key = args[0];\n    handler = args[1];\n    options = args[2];\n  } else if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      key = true;\n      handler = args[0];\n      options = args[1];\n    } else {\n      key = args[0];\n      handler = args[1];\n    }\n  } else {\n    key = true;\n    handler = args[0];\n  }\n  const {\n    target = defaultWindow,\n    eventName = \"keydown\",\n    passive = false,\n    dedupe = false\n  } = options;\n  const predicate = createKeyPredicate(key);\n  const listener = (e) => {\n    if (e.repeat && toValue(dedupe))\n      return;\n    if (predicate(e))\n      handler(e);\n  };\n  return useEventListener(target, eventName, listener, passive);\n}\nfunction onKeyDown(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keydown\" });\n}\nfunction onKeyPressed(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keypress\" });\n}\nfunction onKeyUp(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keyup\" });\n}\n\nconst DEFAULT_DELAY = 500;\nconst DEFAULT_THRESHOLD = 10;\nfunction onLongPress(target, handler, options) {\n  var _a, _b;\n  const elementRef = computed(() => unrefElement(target));\n  let timeout;\n  let posStart;\n  let startTimestamp;\n  let hasLongPressed = false;\n  function clear() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = void 0;\n    }\n    posStart = void 0;\n    startTimestamp = void 0;\n    hasLongPressed = false;\n  }\n  function onRelease(ev) {\n    var _a2, _b2, _c;\n    const [_startTimestamp, _posStart, _hasLongPressed] = [startTimestamp, posStart, hasLongPressed];\n    clear();\n    if (!(options == null ? void 0 : options.onMouseUp) || !_posStart || !_startTimestamp)\n      return;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    const dx = ev.x - _posStart.x;\n    const dy = ev.y - _posStart.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    options.onMouseUp(ev.timeStamp - _startTimestamp, distance, _hasLongPressed);\n  }\n  function onDown(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    clear();\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    posStart = {\n      x: ev.x,\n      y: ev.y\n    };\n    startTimestamp = ev.timeStamp;\n    timeout = setTimeout(\n      () => {\n        hasLongPressed = true;\n        handler(ev);\n      },\n      (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY\n    );\n  }\n  function onMove(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    if (!posStart || (options == null ? void 0 : options.distanceThreshold) === false)\n      return;\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    const dx = ev.x - posStart.x;\n    const dy = ev.y - posStart.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance >= ((_d = options == null ? void 0 : options.distanceThreshold) != null ? _d : DEFAULT_THRESHOLD))\n      clear();\n  }\n  const listenerOptions = {\n    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,\n    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once\n  };\n  const cleanup = [\n    useEventListener(elementRef, \"pointerdown\", onDown, listenerOptions),\n    useEventListener(elementRef, \"pointermove\", onMove, listenerOptions),\n    useEventListener(elementRef, [\"pointerup\", \"pointerleave\"], onRelease, listenerOptions)\n  ];\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nfunction isFocusedElementEditable() {\n  const { activeElement, body } = document;\n  if (!activeElement)\n    return false;\n  if (activeElement === body)\n    return false;\n  switch (activeElement.tagName) {\n    case \"INPUT\":\n    case \"TEXTAREA\":\n      return true;\n  }\n  return activeElement.hasAttribute(\"contenteditable\");\n}\nfunction isTypedCharValid({\n  keyCode,\n  metaKey,\n  ctrlKey,\n  altKey\n}) {\n  if (metaKey || ctrlKey || altKey)\n    return false;\n  if (keyCode >= 48 && keyCode <= 57 || keyCode >= 96 && keyCode <= 105)\n    return true;\n  if (keyCode >= 65 && keyCode <= 90)\n    return true;\n  return false;\n}\nfunction onStartTyping(callback, options = {}) {\n  const { document: document2 = defaultDocument } = options;\n  const keydown = (event) => {\n    if (!isFocusedElementEditable() && isTypedCharValid(event)) {\n      callback(event);\n    }\n  };\n  if (document2)\n    useEventListener(document2, \"keydown\", keydown, { passive: true });\n}\n\nfunction templateRef(key, initialValue = null) {\n  const instance = getCurrentInstance();\n  let _trigger = () => {\n  };\n  const element = customRef((track, trigger) => {\n    _trigger = trigger;\n    return {\n      get() {\n        var _a, _b;\n        track();\n        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;\n      },\n      set() {\n      }\n    };\n  });\n  tryOnMounted(_trigger);\n  onUpdated(_trigger);\n  return element;\n}\n\nfunction useActiveElement(options = {}) {\n  var _a;\n  const {\n    window = defaultWindow,\n    deep = true,\n    triggerOnRemoval = false\n  } = options;\n  const document = (_a = options.document) != null ? _a : window == null ? void 0 : window.document;\n  const getDeepActiveElement = () => {\n    var _a2;\n    let element = document == null ? void 0 : document.activeElement;\n    if (deep) {\n      while (element == null ? void 0 : element.shadowRoot)\n        element = (_a2 = element == null ? void 0 : element.shadowRoot) == null ? void 0 : _a2.activeElement;\n    }\n    return element;\n  };\n  const activeElement = shallowRef();\n  const trigger = () => {\n    activeElement.value = getDeepActiveElement();\n  };\n  if (window) {\n    const listenerOptions = {\n      capture: true,\n      passive: true\n    };\n    useEventListener(\n      window,\n      \"blur\",\n      (event) => {\n        if (event.relatedTarget !== null)\n          return;\n        trigger();\n      },\n      listenerOptions\n    );\n    useEventListener(\n      window,\n      \"focus\",\n      trigger,\n      listenerOptions\n    );\n  }\n  if (triggerOnRemoval) {\n    onElementRemoval(activeElement, trigger, { document });\n  }\n  trigger();\n  return activeElement;\n}\n\nfunction useRafFn(fn, options = {}) {\n  const {\n    immediate = true,\n    fpsLimit = void 0,\n    window = defaultWindow,\n    once = false\n  } = options;\n  const isActive = shallowRef(false);\n  const intervalLimit = computed(() => {\n    return fpsLimit ? 1e3 / toValue(fpsLimit) : null;\n  });\n  let previousFrameTimestamp = 0;\n  let rafId = null;\n  function loop(timestamp) {\n    if (!isActive.value || !window)\n      return;\n    if (!previousFrameTimestamp)\n      previousFrameTimestamp = timestamp;\n    const delta = timestamp - previousFrameTimestamp;\n    if (intervalLimit.value && delta < intervalLimit.value) {\n      rafId = window.requestAnimationFrame(loop);\n      return;\n    }\n    previousFrameTimestamp = timestamp;\n    fn({ delta, timestamp });\n    if (once) {\n      isActive.value = false;\n      rafId = null;\n      return;\n    }\n    rafId = window.requestAnimationFrame(loop);\n  }\n  function resume() {\n    if (!isActive.value && window) {\n      isActive.value = true;\n      previousFrameTimestamp = 0;\n      rafId = window.requestAnimationFrame(loop);\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    if (rafId != null && window) {\n      window.cancelAnimationFrame(rafId);\n      rafId = null;\n    }\n  }\n  if (immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive: readonly(isActive),\n    pause,\n    resume\n  };\n}\n\nfunction useAnimate(target, keyframes, options) {\n  let config;\n  let animateOptions;\n  if (isObject(options)) {\n    config = options;\n    animateOptions = objectOmit(options, [\"window\", \"immediate\", \"commitStyles\", \"persist\", \"onReady\", \"onError\"]);\n  } else {\n    config = { duration: options };\n    animateOptions = options;\n  }\n  const {\n    window = defaultWindow,\n    immediate = true,\n    commitStyles,\n    persist,\n    playbackRate: _playbackRate = 1,\n    onReady,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = config;\n  const isSupported = useSupported(() => window && HTMLElement && \"animate\" in HTMLElement.prototype);\n  const animate = shallowRef(void 0);\n  const store = shallowReactive({\n    startTime: null,\n    currentTime: null,\n    timeline: null,\n    playbackRate: _playbackRate,\n    pending: false,\n    playState: immediate ? \"idle\" : \"paused\",\n    replaceState: \"active\"\n  });\n  const pending = computed(() => store.pending);\n  const playState = computed(() => store.playState);\n  const replaceState = computed(() => store.replaceState);\n  const startTime = computed({\n    get() {\n      return store.startTime;\n    },\n    set(value) {\n      store.startTime = value;\n      if (animate.value)\n        animate.value.startTime = value;\n    }\n  });\n  const currentTime = computed({\n    get() {\n      return store.currentTime;\n    },\n    set(value) {\n      store.currentTime = value;\n      if (animate.value) {\n        animate.value.currentTime = value;\n        syncResume();\n      }\n    }\n  });\n  const timeline = computed({\n    get() {\n      return store.timeline;\n    },\n    set(value) {\n      store.timeline = value;\n      if (animate.value)\n        animate.value.timeline = value;\n    }\n  });\n  const playbackRate = computed({\n    get() {\n      return store.playbackRate;\n    },\n    set(value) {\n      store.playbackRate = value;\n      if (animate.value)\n        animate.value.playbackRate = value;\n    }\n  });\n  const play = () => {\n    if (animate.value) {\n      try {\n        animate.value.play();\n        syncResume();\n      } catch (e) {\n        syncPause();\n        onError(e);\n      }\n    } else {\n      update();\n    }\n  };\n  const pause = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.pause();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  const reverse = () => {\n    var _a;\n    if (!animate.value)\n      update();\n    try {\n      (_a = animate.value) == null ? void 0 : _a.reverse();\n      syncResume();\n    } catch (e) {\n      syncPause();\n      onError(e);\n    }\n  };\n  const finish = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.finish();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  const cancel = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.cancel();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  watch(() => unrefElement(target), (el) => {\n    if (el) {\n      update();\n    } else {\n      animate.value = void 0;\n    }\n  });\n  watch(() => keyframes, (value) => {\n    if (animate.value) {\n      update();\n      const targetEl = unrefElement(target);\n      if (targetEl) {\n        animate.value.effect = new KeyframeEffect(\n          targetEl,\n          toValue(value),\n          animateOptions\n        );\n      }\n    }\n  }, { deep: true });\n  tryOnMounted(() => update(true), false);\n  tryOnScopeDispose(cancel);\n  function update(init) {\n    const el = unrefElement(target);\n    if (!isSupported.value || !el)\n      return;\n    if (!animate.value)\n      animate.value = el.animate(toValue(keyframes), animateOptions);\n    if (persist)\n      animate.value.persist();\n    if (_playbackRate !== 1)\n      animate.value.playbackRate = _playbackRate;\n    if (init && !immediate)\n      animate.value.pause();\n    else\n      syncResume();\n    onReady == null ? void 0 : onReady(animate.value);\n  }\n  const listenerOptions = { passive: true };\n  useEventListener(animate, [\"cancel\", \"finish\", \"remove\"], syncPause, listenerOptions);\n  useEventListener(animate, \"finish\", () => {\n    var _a;\n    if (commitStyles)\n      (_a = animate.value) == null ? void 0 : _a.commitStyles();\n  }, listenerOptions);\n  const { resume: resumeRef, pause: pauseRef } = useRafFn(() => {\n    if (!animate.value)\n      return;\n    store.pending = animate.value.pending;\n    store.playState = animate.value.playState;\n    store.replaceState = animate.value.replaceState;\n    store.startTime = animate.value.startTime;\n    store.currentTime = animate.value.currentTime;\n    store.timeline = animate.value.timeline;\n    store.playbackRate = animate.value.playbackRate;\n  }, { immediate: false });\n  function syncResume() {\n    if (isSupported.value)\n      resumeRef();\n  }\n  function syncPause() {\n    if (isSupported.value && window)\n      window.requestAnimationFrame(pauseRef);\n  }\n  return {\n    isSupported,\n    animate,\n    // actions\n    play,\n    pause,\n    reverse,\n    finish,\n    cancel,\n    // state\n    pending,\n    playState,\n    replaceState,\n    startTime,\n    currentTime,\n    timeline,\n    playbackRate\n  };\n}\n\nfunction useAsyncQueue(tasks, options) {\n  const {\n    interrupt = true,\n    onError = noop,\n    onFinished = noop,\n    signal\n  } = options || {};\n  const promiseState = {\n    aborted: \"aborted\",\n    fulfilled: \"fulfilled\",\n    pending: \"pending\",\n    rejected: \"rejected\"\n  };\n  const initialResult = Array.from(Array.from({ length: tasks.length }), () => ({ state: promiseState.pending, data: null }));\n  const result = reactive(initialResult);\n  const activeIndex = shallowRef(-1);\n  if (!tasks || tasks.length === 0) {\n    onFinished();\n    return {\n      activeIndex,\n      result\n    };\n  }\n  function updateResult(state, res) {\n    activeIndex.value++;\n    result[activeIndex.value].data = res;\n    result[activeIndex.value].state = state;\n  }\n  tasks.reduce((prev, curr) => {\n    return prev.then((prevRes) => {\n      var _a;\n      if (signal == null ? void 0 : signal.aborted) {\n        updateResult(promiseState.aborted, new Error(\"aborted\"));\n        return;\n      }\n      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {\n        onFinished();\n        return;\n      }\n      const done = curr(prevRes).then((currentRes) => {\n        updateResult(promiseState.fulfilled, currentRes);\n        if (activeIndex.value === tasks.length - 1)\n          onFinished();\n        return currentRes;\n      });\n      if (!signal)\n        return done;\n      return Promise.race([done, whenAborted(signal)]);\n    }).catch((e) => {\n      if (signal == null ? void 0 : signal.aborted) {\n        updateResult(promiseState.aborted, e);\n        return e;\n      }\n      updateResult(promiseState.rejected, e);\n      onError();\n      return e;\n    });\n  }, Promise.resolve());\n  return {\n    activeIndex,\n    result\n  };\n}\nfunction whenAborted(signal) {\n  return new Promise((resolve, reject) => {\n    const error = new Error(\"aborted\");\n    if (signal.aborted)\n      reject(error);\n    else\n      signal.addEventListener(\"abort\", () => reject(error), { once: true });\n  });\n}\n\nfunction useAsyncState(promise, initialState, options) {\n  const {\n    immediate = true,\n    delay = 0,\n    onError = noop,\n    onSuccess = noop,\n    resetOnExecute = true,\n    shallow = true,\n    throwError\n  } = options != null ? options : {};\n  const state = shallow ? shallowRef(initialState) : ref(initialState);\n  const isReady = shallowRef(false);\n  const isLoading = shallowRef(false);\n  const error = shallowRef(void 0);\n  async function execute(delay2 = 0, ...args) {\n    if (resetOnExecute)\n      state.value = initialState;\n    error.value = void 0;\n    isReady.value = false;\n    isLoading.value = true;\n    if (delay2 > 0)\n      await promiseTimeout(delay2);\n    const _promise = typeof promise === \"function\" ? promise(...args) : promise;\n    try {\n      const data = await _promise;\n      state.value = data;\n      isReady.value = true;\n      onSuccess(data);\n    } catch (e) {\n      error.value = e;\n      onError(e);\n      if (throwError)\n        throw e;\n    } finally {\n      isLoading.value = false;\n    }\n    return state.value;\n  }\n  if (immediate) {\n    execute(delay);\n  }\n  const shell = {\n    state,\n    isReady,\n    isLoading,\n    error,\n    execute\n  };\n  function waitUntilIsLoaded() {\n    return new Promise((resolve, reject) => {\n      until(isLoading).toBe(false).then(() => resolve(shell)).catch(reject);\n    });\n  }\n  return {\n    ...shell,\n    then(onFulfilled, onRejected) {\n      return waitUntilIsLoaded().then(onFulfilled, onRejected);\n    }\n  };\n}\n\nconst defaults = {\n  array: (v) => JSON.stringify(v),\n  object: (v) => JSON.stringify(v),\n  set: (v) => JSON.stringify(Array.from(v)),\n  map: (v) => JSON.stringify(Object.fromEntries(v)),\n  null: () => \"\"\n};\nfunction getDefaultSerialization(target) {\n  if (!target)\n    return defaults.null;\n  if (target instanceof Map)\n    return defaults.map;\n  else if (target instanceof Set)\n    return defaults.set;\n  else if (Array.isArray(target))\n    return defaults.array;\n  else\n    return defaults.object;\n}\n\nfunction useBase64(target, options) {\n  const base64 = shallowRef(\"\");\n  const promise = shallowRef();\n  function execute() {\n    if (!isClient)\n      return;\n    promise.value = new Promise((resolve, reject) => {\n      try {\n        const _target = toValue(target);\n        if (_target == null) {\n          resolve(\"\");\n        } else if (typeof _target === \"string\") {\n          resolve(blobToBase64(new Blob([_target], { type: \"text/plain\" })));\n        } else if (_target instanceof Blob) {\n          resolve(blobToBase64(_target));\n        } else if (_target instanceof ArrayBuffer) {\n          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));\n        } else if (_target instanceof HTMLCanvasElement) {\n          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n        } else if (_target instanceof HTMLImageElement) {\n          const img = _target.cloneNode(false);\n          img.crossOrigin = \"Anonymous\";\n          imgLoaded(img).then(() => {\n            const canvas = document.createElement(\"canvas\");\n            const ctx = canvas.getContext(\"2d\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n          }).catch(reject);\n        } else if (typeof _target === \"object\") {\n          const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);\n          const serialized = _serializeFn(_target);\n          return resolve(blobToBase64(new Blob([serialized], { type: \"application/json\" })));\n        } else {\n          reject(new Error(\"target is unsupported types\"));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n    promise.value.then((res) => {\n      base64.value = (options == null ? void 0 : options.dataUrl) === false ? res.replace(/^data:.*?;base64,/, \"\") : res;\n    });\n    return promise.value;\n  }\n  if (isRef(target) || typeof target === \"function\")\n    watch(target, execute, { immediate: true });\n  else\n    execute();\n  return {\n    base64,\n    promise,\n    execute\n  };\n}\nfunction imgLoaded(img) {\n  return new Promise((resolve, reject) => {\n    if (!img.complete) {\n      img.onload = () => {\n        resolve();\n      };\n      img.onerror = reject;\n    } else {\n      resolve();\n    }\n  });\n}\nfunction blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      resolve(e.target.result);\n    };\n    fr.onerror = reject;\n    fr.readAsDataURL(blob);\n  });\n}\n\nfunction useBattery(options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const events = [\"chargingchange\", \"chargingtimechange\", \"dischargingtimechange\", \"levelchange\"];\n  const isSupported = useSupported(() => navigator && \"getBattery\" in navigator && typeof navigator.getBattery === \"function\");\n  const charging = shallowRef(false);\n  const chargingTime = shallowRef(0);\n  const dischargingTime = shallowRef(0);\n  const level = shallowRef(1);\n  let battery;\n  function updateBatteryInfo() {\n    charging.value = this.charging;\n    chargingTime.value = this.chargingTime || 0;\n    dischargingTime.value = this.dischargingTime || 0;\n    level.value = this.level;\n  }\n  if (isSupported.value) {\n    navigator.getBattery().then((_battery) => {\n      battery = _battery;\n      updateBatteryInfo.call(battery);\n      useEventListener(battery, events, updateBatteryInfo, { passive: true });\n    });\n  }\n  return {\n    isSupported,\n    charging,\n    chargingTime,\n    dischargingTime,\n    level\n  };\n}\n\nfunction useBluetooth(options) {\n  let {\n    acceptAllDevices = false\n  } = options || {};\n  const {\n    filters = void 0,\n    optionalServices = void 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => navigator && \"bluetooth\" in navigator);\n  const device = shallowRef();\n  const error = shallowRef(null);\n  watch(device, () => {\n    connectToBluetoothGATTServer();\n  });\n  async function requestDevice() {\n    if (!isSupported.value)\n      return;\n    error.value = null;\n    if (filters && filters.length > 0)\n      acceptAllDevices = false;\n    try {\n      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({\n        acceptAllDevices,\n        filters,\n        optionalServices\n      }));\n    } catch (err) {\n      error.value = err;\n    }\n  }\n  const server = shallowRef();\n  const isConnected = shallowRef(false);\n  function reset() {\n    isConnected.value = false;\n    device.value = void 0;\n    server.value = void 0;\n  }\n  async function connectToBluetoothGATTServer() {\n    error.value = null;\n    if (device.value && device.value.gatt) {\n      useEventListener(device, \"gattserverdisconnected\", reset, { passive: true });\n      try {\n        server.value = await device.value.gatt.connect();\n        isConnected.value = server.value.connected;\n      } catch (err) {\n        error.value = err;\n      }\n    }\n  }\n  tryOnMounted(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.connect();\n  });\n  tryOnScopeDispose(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();\n  });\n  return {\n    isSupported,\n    isConnected: readonly(isConnected),\n    // Device:\n    device,\n    requestDevice,\n    // Server:\n    server,\n    // Errors:\n    error\n  };\n}\n\nconst ssrWidthSymbol = Symbol(\"vueuse-ssr-width\");\nfunction useSSRWidth() {\n  const ssrWidth = hasInjectionContext() ? injectLocal(ssrWidthSymbol, null) : null;\n  return typeof ssrWidth === \"number\" ? ssrWidth : void 0;\n}\nfunction provideSSRWidth(width, app) {\n  if (app !== void 0) {\n    app.provide(ssrWidthSymbol, width);\n  } else {\n    provideLocal(ssrWidthSymbol, width);\n  }\n}\n\nfunction useMediaQuery(query, options = {}) {\n  const { window = defaultWindow, ssrWidth = useSSRWidth() } = options;\n  const isSupported = useSupported(() => window && \"matchMedia\" in window && typeof window.matchMedia === \"function\");\n  const ssrSupport = shallowRef(typeof ssrWidth === \"number\");\n  const mediaQuery = shallowRef();\n  const matches = shallowRef(false);\n  const handler = (event) => {\n    matches.value = event.matches;\n  };\n  watchEffect(() => {\n    if (ssrSupport.value) {\n      ssrSupport.value = !isSupported.value;\n      const queryStrings = toValue(query).split(\",\");\n      matches.value = queryStrings.some((queryString) => {\n        const not = queryString.includes(\"not all\");\n        const minWidth = queryString.match(/\\(\\s*min-width:\\s*(-?\\d+(?:\\.\\d*)?[a-z]+\\s*)\\)/);\n        const maxWidth = queryString.match(/\\(\\s*max-width:\\s*(-?\\d+(?:\\.\\d*)?[a-z]+\\s*)\\)/);\n        let res = Boolean(minWidth || maxWidth);\n        if (minWidth && res) {\n          res = ssrWidth >= pxValue(minWidth[1]);\n        }\n        if (maxWidth && res) {\n          res = ssrWidth <= pxValue(maxWidth[1]);\n        }\n        return not ? !res : res;\n      });\n      return;\n    }\n    if (!isSupported.value)\n      return;\n    mediaQuery.value = window.matchMedia(toValue(query));\n    matches.value = mediaQuery.value.matches;\n  });\n  useEventListener(mediaQuery, \"change\", handler, { passive: true });\n  return computed(() => matches.value);\n}\n\nconst breakpointsTailwind = {\n  \"sm\": 640,\n  \"md\": 768,\n  \"lg\": 1024,\n  \"xl\": 1280,\n  \"2xl\": 1536\n};\nconst breakpointsBootstrapV5 = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n};\nconst breakpointsVuetifyV2 = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1264,\n  xl: 1904\n};\nconst breakpointsVuetifyV3 = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n  xxl: 2560\n};\nconst breakpointsVuetify = breakpointsVuetifyV2;\nconst breakpointsAntDesign = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600\n};\nconst breakpointsQuasar = {\n  xs: 0,\n  sm: 600,\n  md: 1024,\n  lg: 1440,\n  xl: 1920\n};\nconst breakpointsSematic = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop4K: 2560\n};\nconst breakpointsMasterCss = {\n  \"3xs\": 360,\n  \"2xs\": 480,\n  \"xs\": 600,\n  \"sm\": 768,\n  \"md\": 1024,\n  \"lg\": 1280,\n  \"xl\": 1440,\n  \"2xl\": 1600,\n  \"3xl\": 1920,\n  \"4xl\": 2560\n};\nconst breakpointsPrimeFlex = {\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n};\nconst breakpointsElement = {\n  xs: 0,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n  xl: 1920\n};\n\nfunction useBreakpoints(breakpoints, options = {}) {\n  function getValue(k, delta) {\n    let v = toValue(breakpoints[toValue(k)]);\n    if (delta != null)\n      v = increaseWithUnit(v, delta);\n    if (typeof v === \"number\")\n      v = `${v}px`;\n    return v;\n  }\n  const { window = defaultWindow, strategy = \"min-width\", ssrWidth = useSSRWidth() } = options;\n  const ssrSupport = typeof ssrWidth === \"number\";\n  const mounted = ssrSupport ? shallowRef(false) : { value: true };\n  if (ssrSupport) {\n    tryOnMounted(() => mounted.value = !!window);\n  }\n  function match(query, size) {\n    if (!mounted.value && ssrSupport) {\n      return query === \"min\" ? ssrWidth >= pxValue(size) : ssrWidth <= pxValue(size);\n    }\n    if (!window)\n      return false;\n    return window.matchMedia(`(${query}-width: ${size})`).matches;\n  }\n  const greaterOrEqual = (k) => {\n    return useMediaQuery(() => `(min-width: ${getValue(k)})`, options);\n  };\n  const smallerOrEqual = (k) => {\n    return useMediaQuery(() => `(max-width: ${getValue(k)})`, options);\n  };\n  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {\n    Object.defineProperty(shortcuts, k, {\n      get: () => strategy === \"min-width\" ? greaterOrEqual(k) : smallerOrEqual(k),\n      enumerable: true,\n      configurable: true\n    });\n    return shortcuts;\n  }, {});\n  function current() {\n    const points = Object.keys(breakpoints).map((k) => [k, shortcutMethods[k], pxValue(getValue(k))]).sort((a, b) => a[2] - b[2]);\n    return computed(() => points.filter(([, v]) => v.value).map(([k]) => k));\n  }\n  return Object.assign(shortcutMethods, {\n    greaterOrEqual,\n    smallerOrEqual,\n    greater(k) {\n      return useMediaQuery(() => `(min-width: ${getValue(k, 0.1)})`, options);\n    },\n    smaller(k) {\n      return useMediaQuery(() => `(max-width: ${getValue(k, -0.1)})`, options);\n    },\n    between(a, b) {\n      return useMediaQuery(() => `(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);\n    },\n    isGreater(k) {\n      return match(\"min\", getValue(k, 0.1));\n    },\n    isGreaterOrEqual(k) {\n      return match(\"min\", getValue(k));\n    },\n    isSmaller(k) {\n      return match(\"max\", getValue(k, -0.1));\n    },\n    isSmallerOrEqual(k) {\n      return match(\"max\", getValue(k));\n    },\n    isInBetween(a, b) {\n      return match(\"min\", getValue(a)) && match(\"max\", getValue(b, -0.1));\n    },\n    current,\n    active() {\n      const bps = current();\n      return computed(() => bps.value.length === 0 ? \"\" : bps.value.at(strategy === \"min-width\" ? -1 : 0));\n    }\n  });\n}\n\nfunction useBroadcastChannel(options) {\n  const {\n    name,\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"BroadcastChannel\" in window);\n  const isClosed = shallowRef(false);\n  const channel = ref();\n  const data = ref();\n  const error = shallowRef(null);\n  const post = (data2) => {\n    if (channel.value)\n      channel.value.postMessage(data2);\n  };\n  const close = () => {\n    if (channel.value)\n      channel.value.close();\n    isClosed.value = true;\n  };\n  if (isSupported.value) {\n    tryOnMounted(() => {\n      error.value = null;\n      channel.value = new BroadcastChannel(name);\n      const listenerOptions = {\n        passive: true\n      };\n      useEventListener(channel, \"message\", (e) => {\n        data.value = e.data;\n      }, listenerOptions);\n      useEventListener(channel, \"messageerror\", (e) => {\n        error.value = e;\n      }, listenerOptions);\n      useEventListener(channel, \"close\", () => {\n        isClosed.value = true;\n      }, listenerOptions);\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    isSupported,\n    channel,\n    data,\n    post,\n    close,\n    error,\n    isClosed\n  };\n}\n\nconst WRITABLE_PROPERTIES = [\n  \"hash\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"search\"\n];\nfunction useBrowserLocation(options = {}) {\n  const { window = defaultWindow } = options;\n  const refs = Object.fromEntries(\n    WRITABLE_PROPERTIES.map((key) => [key, ref()])\n  );\n  for (const [key, ref] of objectEntries(refs)) {\n    watch(ref, (value) => {\n      if (!(window == null ? void 0 : window.location) || window.location[key] === value)\n        return;\n      window.location[key] = value;\n    });\n  }\n  const buildState = (trigger) => {\n    var _a;\n    const { state: state2, length } = (window == null ? void 0 : window.history) || {};\n    const { origin } = (window == null ? void 0 : window.location) || {};\n    for (const key of WRITABLE_PROPERTIES)\n      refs[key].value = (_a = window == null ? void 0 : window.location) == null ? void 0 : _a[key];\n    return reactive({\n      trigger,\n      state: state2,\n      length,\n      origin,\n      ...refs\n    });\n  };\n  const state = ref(buildState(\"load\"));\n  if (window) {\n    const listenerOptions = { passive: true };\n    useEventListener(window, \"popstate\", () => state.value = buildState(\"popstate\"), listenerOptions);\n    useEventListener(window, \"hashchange\", () => state.value = buildState(\"hashchange\"), listenerOptions);\n  }\n  return state;\n}\n\nfunction useCached(refValue, comparator = (a, b) => a === b, options) {\n  const { deepRefs = true, ...watchOptions } = options || {};\n  const cachedValue = createRef(refValue.value, deepRefs);\n  watch(() => refValue.value, (value) => {\n    if (!comparator(value, cachedValue.value))\n      cachedValue.value = value;\n  }, watchOptions);\n  return cachedValue;\n}\n\nfunction usePermission(permissionDesc, options = {}) {\n  const {\n    controls = false,\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"permissions\" in navigator);\n  const permissionStatus = shallowRef();\n  const desc = typeof permissionDesc === \"string\" ? { name: permissionDesc } : permissionDesc;\n  const state = shallowRef();\n  const update = () => {\n    var _a, _b;\n    state.value = (_b = (_a = permissionStatus.value) == null ? void 0 : _a.state) != null ? _b : \"prompt\";\n  };\n  useEventListener(permissionStatus, \"change\", update, { passive: true });\n  const query = createSingletonPromise(async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionStatus.value) {\n      try {\n        permissionStatus.value = await navigator.permissions.query(desc);\n      } catch (e) {\n        permissionStatus.value = void 0;\n      } finally {\n        update();\n      }\n    }\n    if (controls)\n      return toRaw(permissionStatus.value);\n  });\n  query();\n  if (controls) {\n    return {\n      state,\n      isSupported,\n      query\n    };\n  } else {\n    return state;\n  }\n}\n\nfunction useClipboard(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500,\n    legacy = false\n  } = options;\n  const isClipboardApiSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const permissionRead = usePermission(\"clipboard-read\");\n  const permissionWrite = usePermission(\"clipboard-write\");\n  const isSupported = computed(() => isClipboardApiSupported.value || legacy);\n  const text = shallowRef(\"\");\n  const copied = shallowRef(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring, { immediate: false });\n  async function updateText() {\n    let useLegacy = !(isClipboardApiSupported.value && isAllowed(permissionRead.value));\n    if (!useLegacy) {\n      try {\n        text.value = await navigator.clipboard.readText();\n      } catch (e) {\n        useLegacy = true;\n      }\n    }\n    if (useLegacy) {\n      text.value = legacyRead();\n    }\n  }\n  if (isSupported.value && read)\n    useEventListener([\"copy\", \"cut\"], updateText, { passive: true });\n  async function copy(value = toValue(source)) {\n    if (isSupported.value && value != null) {\n      let useLegacy = !(isClipboardApiSupported.value && isAllowed(permissionWrite.value));\n      if (!useLegacy) {\n        try {\n          await navigator.clipboard.writeText(value);\n        } catch (e) {\n          useLegacy = true;\n        }\n      }\n      if (useLegacy)\n        legacyCopy(value);\n      text.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  function legacyCopy(value) {\n    const ta = document.createElement(\"textarea\");\n    ta.value = value != null ? value : \"\";\n    ta.style.position = \"absolute\";\n    ta.style.opacity = \"0\";\n    document.body.appendChild(ta);\n    ta.select();\n    document.execCommand(\"copy\");\n    ta.remove();\n  }\n  function legacyRead() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = document == null ? void 0 : document.getSelection) == null ? void 0 : _a.call(document)) == null ? void 0 : _b.toString()) != null ? _c : \"\";\n  }\n  function isAllowed(status) {\n    return status === \"granted\" || status === \"prompt\";\n  }\n  return {\n    isSupported,\n    text,\n    copied,\n    copy\n  };\n}\n\nfunction useClipboardItems(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500\n  } = options;\n  const isSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const content = ref([]);\n  const copied = shallowRef(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring, { immediate: false });\n  function updateContent() {\n    if (isSupported.value) {\n      navigator.clipboard.read().then((items) => {\n        content.value = items;\n      });\n    }\n  }\n  if (isSupported.value && read)\n    useEventListener([\"copy\", \"cut\"], updateContent, { passive: true });\n  async function copy(value = toValue(source)) {\n    if (isSupported.value && value != null) {\n      await navigator.clipboard.write(value);\n      content.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  return {\n    isSupported,\n    content,\n    copied,\n    copy\n  };\n}\n\nfunction cloneFnJSON(source) {\n  return JSON.parse(JSON.stringify(source));\n}\nfunction useCloned(source, options = {}) {\n  const cloned = ref({});\n  const isModified = shallowRef(false);\n  let _lastSync = false;\n  const {\n    manual,\n    clone = cloneFnJSON,\n    // watch options\n    deep = true,\n    immediate = true\n  } = options;\n  watch(cloned, () => {\n    if (_lastSync) {\n      _lastSync = false;\n      return;\n    }\n    isModified.value = true;\n  }, {\n    deep: true,\n    flush: \"sync\"\n  });\n  function sync() {\n    _lastSync = true;\n    isModified.value = false;\n    cloned.value = clone(toValue(source));\n  }\n  if (!manual && (isRef(source) || typeof source === \"function\")) {\n    watch(source, sync, {\n      ...options,\n      deep,\n      immediate\n    });\n  } else {\n    sync();\n  }\n  return { cloned, isModified, sync };\n}\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__vueuse_ssr_handlers__\";\nconst handlers = /* @__PURE__ */ getHandlers();\nfunction getHandlers() {\n  if (!(globalKey in _global))\n    _global[globalKey] = _global[globalKey] || {};\n  return _global[globalKey];\n}\nfunction getSSRHandler(key, fallback) {\n  return handlers[key] || fallback;\n}\nfunction setSSRHandler(key, fn) {\n  handlers[key] = fn;\n}\n\nfunction usePreferredDark(options) {\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n}\n\nfunction guessSerializerType(rawInit) {\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\n}\n\nconst StorageSerializers = {\n  boolean: {\n    read: (v) => v === \"true\",\n    write: (v) => String(v)\n  },\n  object: {\n    read: (v) => JSON.parse(v),\n    write: (v) => JSON.stringify(v)\n  },\n  number: {\n    read: (v) => Number.parseFloat(v),\n    write: (v) => String(v)\n  },\n  any: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  string: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  map: {\n    read: (v) => new Map(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v.entries()))\n  },\n  set: {\n    read: (v) => new Set(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v))\n  },\n  date: {\n    read: (v) => new Date(v),\n    write: (v) => v.toISOString()\n  }\n};\nconst customStorageEventName = \"vueuse-storage\";\nfunction useStorage(key, defaults, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    },\n    initOnMounted\n  } = options;\n  const data = (shallow ? shallowRef : ref)(typeof defaults === \"function\" ? defaults() : defaults);\n  const keyComputed = computed(() => toValue(key));\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  if (!storage)\n    return data;\n  const rawInit = toValue(defaults);\n  const type = guessSerializerType(rawInit);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  const { pause: pauseWatch, resume: resumeWatch } = pausableWatch(\n    data,\n    () => write(data.value),\n    { flush, deep, eventFilter }\n  );\n  watch(keyComputed, () => update(), { flush });\n  if (window && listenToStorageChanges) {\n    tryOnMounted(() => {\n      if (storage instanceof Storage)\n        useEventListener(window, \"storage\", update, { passive: true });\n      else\n        useEventListener(window, customStorageEventName, updateFromCustomEvent);\n      if (initOnMounted)\n        update();\n    });\n  }\n  if (!initOnMounted)\n    update();\n  function dispatchWriteEvent(oldValue, newValue) {\n    if (window) {\n      const payload = {\n        key: keyComputed.value,\n        oldValue,\n        newValue,\n        storageArea: storage\n      };\n      window.dispatchEvent(storage instanceof Storage ? new StorageEvent(\"storage\", payload) : new CustomEvent(customStorageEventName, {\n        detail: payload\n      }));\n    }\n  }\n  function write(v) {\n    try {\n      const oldValue = storage.getItem(keyComputed.value);\n      if (v == null) {\n        dispatchWriteEvent(oldValue, null);\n        storage.removeItem(keyComputed.value);\n      } else {\n        const serialized = serializer.write(v);\n        if (oldValue !== serialized) {\n          storage.setItem(keyComputed.value, serialized);\n          dispatchWriteEvent(oldValue, serialized);\n        }\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  function read(event) {\n    const rawValue = event ? event.newValue : storage.getItem(keyComputed.value);\n    if (rawValue == null) {\n      if (writeDefaults && rawInit != null)\n        storage.setItem(keyComputed.value, serializer.write(rawInit));\n      return rawInit;\n    } else if (!event && mergeDefaults) {\n      const value = serializer.read(rawValue);\n      if (typeof mergeDefaults === \"function\")\n        return mergeDefaults(value, rawInit);\n      else if (type === \"object\" && !Array.isArray(value))\n        return { ...rawInit, ...value };\n      return value;\n    } else if (typeof rawValue !== \"string\") {\n      return rawValue;\n    } else {\n      return serializer.read(rawValue);\n    }\n  }\n  function update(event) {\n    if (event && event.storageArea !== storage)\n      return;\n    if (event && event.key == null) {\n      data.value = rawInit;\n      return;\n    }\n    if (event && event.key !== keyComputed.value)\n      return;\n    pauseWatch();\n    try {\n      if ((event == null ? void 0 : event.newValue) !== serializer.write(data.value))\n        data.value = read(event);\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (event)\n        nextTick(resumeWatch);\n      else\n        resumeWatch();\n    }\n  }\n  function updateFromCustomEvent(event) {\n    update(event.detail);\n  }\n  return data;\n}\n\nconst CSS_DISABLE_TRANS = \"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\";\nfunction useColorMode(options = {}) {\n  const {\n    selector = \"html\",\n    attribute = \"class\",\n    initialValue = \"auto\",\n    window = defaultWindow,\n    storage,\n    storageKey = \"vueuse-color-scheme\",\n    listenToStorageChanges = true,\n    storageRef,\n    emitAuto,\n    disableTransition = true\n  } = options;\n  const modes = {\n    auto: \"\",\n    light: \"light\",\n    dark: \"dark\",\n    ...options.modes || {}\n  };\n  const preferredDark = usePreferredDark({ window });\n  const system = computed(() => preferredDark.value ? \"dark\" : \"light\");\n  const store = storageRef || (storageKey == null ? toRef(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));\n  const state = computed(() => store.value === \"auto\" ? system.value : store.value);\n  const updateHTMLAttrs = getSSRHandler(\n    \"updateHTMLAttrs\",\n    (selector2, attribute2, value) => {\n      const el = typeof selector2 === \"string\" ? window == null ? void 0 : window.document.querySelector(selector2) : unrefElement(selector2);\n      if (!el)\n        return;\n      const classesToAdd = /* @__PURE__ */ new Set();\n      const classesToRemove = /* @__PURE__ */ new Set();\n      let attributeToChange = null;\n      if (attribute2 === \"class\") {\n        const current = value.split(/\\s/g);\n        Object.values(modes).flatMap((i) => (i || \"\").split(/\\s/g)).filter(Boolean).forEach((v) => {\n          if (current.includes(v))\n            classesToAdd.add(v);\n          else\n            classesToRemove.add(v);\n        });\n      } else {\n        attributeToChange = { key: attribute2, value };\n      }\n      if (classesToAdd.size === 0 && classesToRemove.size === 0 && attributeToChange === null)\n        return;\n      let style;\n      if (disableTransition) {\n        style = window.document.createElement(\"style\");\n        style.appendChild(document.createTextNode(CSS_DISABLE_TRANS));\n        window.document.head.appendChild(style);\n      }\n      for (const c of classesToAdd) {\n        el.classList.add(c);\n      }\n      for (const c of classesToRemove) {\n        el.classList.remove(c);\n      }\n      if (attributeToChange) {\n        el.setAttribute(attributeToChange.key, attributeToChange.value);\n      }\n      if (disableTransition) {\n        window.getComputedStyle(style).opacity;\n        document.head.removeChild(style);\n      }\n    }\n  );\n  function defaultOnChanged(mode) {\n    var _a;\n    updateHTMLAttrs(selector, attribute, (_a = modes[mode]) != null ? _a : mode);\n  }\n  function onChanged(mode) {\n    if (options.onChanged)\n      options.onChanged(mode, defaultOnChanged);\n    else\n      defaultOnChanged(mode);\n  }\n  watch(state, onChanged, { flush: \"post\", immediate: true });\n  tryOnMounted(() => onChanged(state.value));\n  const auto = computed({\n    get() {\n      return emitAuto ? store.value : state.value;\n    },\n    set(v) {\n      store.value = v;\n    }\n  });\n  return Object.assign(auto, { store, system, state });\n}\n\nfunction useConfirmDialog(revealed = shallowRef(false)) {\n  const confirmHook = createEventHook();\n  const cancelHook = createEventHook();\n  const revealHook = createEventHook();\n  let _resolve = noop;\n  const reveal = (data) => {\n    revealHook.trigger(data);\n    revealed.value = true;\n    return new Promise((resolve) => {\n      _resolve = resolve;\n    });\n  };\n  const confirm = (data) => {\n    revealed.value = false;\n    confirmHook.trigger(data);\n    _resolve({ data, isCanceled: false });\n  };\n  const cancel = (data) => {\n    revealed.value = false;\n    cancelHook.trigger(data);\n    _resolve({ data, isCanceled: true });\n  };\n  return {\n    isRevealed: computed(() => revealed.value),\n    reveal,\n    confirm,\n    cancel,\n    onReveal: revealHook.on,\n    onConfirm: confirmHook.on,\n    onCancel: cancelHook.on\n  };\n}\n\nfunction useCountdown(initialCountdown, options) {\n  var _a, _b;\n  const remaining = shallowRef(toValue(initialCountdown));\n  const intervalController = useIntervalFn(() => {\n    var _a2, _b2;\n    const value = remaining.value - 1;\n    remaining.value = value < 0 ? 0 : value;\n    (_a2 = options == null ? void 0 : options.onTick) == null ? void 0 : _a2.call(options);\n    if (remaining.value <= 0) {\n      intervalController.pause();\n      (_b2 = options == null ? void 0 : options.onComplete) == null ? void 0 : _b2.call(options);\n    }\n  }, (_a = options == null ? void 0 : options.interval) != null ? _a : 1e3, { immediate: (_b = options == null ? void 0 : options.immediate) != null ? _b : false });\n  const reset = (countdown) => {\n    var _a2;\n    remaining.value = (_a2 = toValue(countdown)) != null ? _a2 : toValue(initialCountdown);\n  };\n  const stop = () => {\n    intervalController.pause();\n    reset();\n  };\n  const resume = () => {\n    if (!intervalController.isActive.value) {\n      if (remaining.value > 0) {\n        intervalController.resume();\n      }\n    }\n  };\n  const start = (countdown) => {\n    reset(countdown);\n    intervalController.resume();\n  };\n  return {\n    remaining,\n    reset,\n    stop,\n    start,\n    pause: intervalController.pause,\n    resume,\n    isActive: intervalController.isActive\n  };\n}\n\nfunction useCssVar(prop, target, options = {}) {\n  const { window = defaultWindow, initialValue, observe = false } = options;\n  const variable = shallowRef(initialValue);\n  const elRef = computed(() => {\n    var _a;\n    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\n  });\n  function updateCssVar() {\n    var _a;\n    const key = toValue(prop);\n    const el = toValue(elRef);\n    if (el && window && key) {\n      const value = (_a = window.getComputedStyle(el).getPropertyValue(key)) == null ? void 0 : _a.trim();\n      variable.value = value || variable.value || initialValue;\n    }\n  }\n  if (observe) {\n    useMutationObserver(elRef, updateCssVar, {\n      attributeFilter: [\"style\", \"class\"],\n      window\n    });\n  }\n  watch(\n    [elRef, () => toValue(prop)],\n    (_, old) => {\n      if (old[0] && old[1])\n        old[0].style.removeProperty(old[1]);\n      updateCssVar();\n    },\n    { immediate: true }\n  );\n  watch(\n    [variable, elRef],\n    ([val, el]) => {\n      const raw_prop = toValue(prop);\n      if ((el == null ? void 0 : el.style) && raw_prop) {\n        if (val == null)\n          el.style.removeProperty(raw_prop);\n        else\n          el.style.setProperty(raw_prop, val);\n      }\n    },\n    { immediate: true }\n  );\n  return variable;\n}\n\nfunction useCurrentElement(rootComponent) {\n  const vm = getCurrentInstance();\n  const currentElement = computedWithControl(\n    () => null,\n    () => rootComponent ? unrefElement(rootComponent) : vm.proxy.$el\n  );\n  onUpdated(currentElement.trigger);\n  onMounted(currentElement.trigger);\n  return currentElement;\n}\n\nfunction useCycleList(list, options) {\n  const state = shallowRef(getInitialValue());\n  const listRef = toRef(list);\n  const index = computed({\n    get() {\n      var _a;\n      const targetList = listRef.value;\n      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, targetList) : targetList.indexOf(state.value);\n      if (index2 < 0)\n        index2 = (_a = options == null ? void 0 : options.fallbackIndex) != null ? _a : 0;\n      return index2;\n    },\n    set(v) {\n      set(v);\n    }\n  });\n  function set(i) {\n    const targetList = listRef.value;\n    const length = targetList.length;\n    const index2 = (i % length + length) % length;\n    const value = targetList[index2];\n    state.value = value;\n    return value;\n  }\n  function shift(delta = 1) {\n    return set(index.value + delta);\n  }\n  function next(n = 1) {\n    return shift(n);\n  }\n  function prev(n = 1) {\n    return shift(-n);\n  }\n  function getInitialValue() {\n    var _a, _b;\n    return (_b = toValue((_a = options == null ? void 0 : options.initialValue) != null ? _a : toValue(list)[0])) != null ? _b : void 0;\n  }\n  watch(listRef, () => set(index.value));\n  return {\n    state,\n    index,\n    next,\n    prev,\n    go: set\n  };\n}\n\nfunction useDark(options = {}) {\n  const {\n    valueDark = \"dark\",\n    valueLight = \"\"\n  } = options;\n  const mode = useColorMode({\n    ...options,\n    onChanged: (mode2, defaultHandler) => {\n      var _a;\n      if (options.onChanged)\n        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === \"dark\", defaultHandler, mode2);\n      else\n        defaultHandler(mode2);\n    },\n    modes: {\n      dark: valueDark,\n      light: valueLight\n    }\n  });\n  const system = computed(() => mode.system.value);\n  const isDark = computed({\n    get() {\n      return mode.value === \"dark\";\n    },\n    set(v) {\n      const modeVal = v ? \"dark\" : \"light\";\n      if (system.value === modeVal)\n        mode.value = \"auto\";\n      else\n        mode.value = modeVal;\n    }\n  });\n  return isDark;\n}\n\nfunction fnBypass(v) {\n  return v;\n}\nfunction fnSetSource(source, value) {\n  return source.value = value;\n}\nfunction defaultDump(clone) {\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\n}\nfunction defaultParse(clone) {\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\n}\nfunction useManualRefHistory(source, options = {}) {\n  const {\n    clone = false,\n    dump = defaultDump(clone),\n    parse = defaultParse(clone),\n    setSource = fnSetSource\n  } = options;\n  function _createHistoryRecord() {\n    return markRaw({\n      snapshot: dump(source.value),\n      timestamp: timestamp()\n    });\n  }\n  const last = ref(_createHistoryRecord());\n  const undoStack = ref([]);\n  const redoStack = ref([]);\n  const _setSource = (record) => {\n    setSource(source, parse(record.snapshot));\n    last.value = record;\n  };\n  const commit = () => {\n    undoStack.value.unshift(last.value);\n    last.value = _createHistoryRecord();\n    if (options.capacity && undoStack.value.length > options.capacity)\n      undoStack.value.splice(options.capacity, Number.POSITIVE_INFINITY);\n    if (redoStack.value.length)\n      redoStack.value.splice(0, redoStack.value.length);\n  };\n  const clear = () => {\n    undoStack.value.splice(0, undoStack.value.length);\n    redoStack.value.splice(0, redoStack.value.length);\n  };\n  const undo = () => {\n    const state = undoStack.value.shift();\n    if (state) {\n      redoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const redo = () => {\n    const state = redoStack.value.shift();\n    if (state) {\n      undoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const reset = () => {\n    _setSource(last.value);\n  };\n  const history = computed(() => [last.value, ...undoStack.value]);\n  const canUndo = computed(() => undoStack.value.length > 0);\n  const canRedo = computed(() => redoStack.value.length > 0);\n  return {\n    source,\n    undoStack,\n    redoStack,\n    last,\n    history,\n    canUndo,\n    canRedo,\n    clear,\n    commit,\n    reset,\n    undo,\n    redo\n  };\n}\n\nfunction useRefHistory(source, options = {}) {\n  const {\n    deep = false,\n    flush = \"pre\",\n    eventFilter\n  } = options;\n  const {\n    eventFilter: composedFilter,\n    pause,\n    resume: resumeTracking,\n    isActive: isTracking\n  } = pausableFilter(eventFilter);\n  const {\n    ignoreUpdates,\n    ignorePrevAsyncUpdates,\n    stop\n  } = watchIgnorable(\n    source,\n    commit,\n    { deep, flush, eventFilter: composedFilter }\n  );\n  function setSource(source2, value) {\n    ignorePrevAsyncUpdates();\n    ignoreUpdates(() => {\n      source2.value = value;\n    });\n  }\n  const manualHistory = useManualRefHistory(source, { ...options, clone: options.clone || deep, setSource });\n  const { clear, commit: manualCommit } = manualHistory;\n  function commit() {\n    ignorePrevAsyncUpdates();\n    manualCommit();\n  }\n  function resume(commitNow) {\n    resumeTracking();\n    if (commitNow)\n      commit();\n  }\n  function batch(fn) {\n    let canceled = false;\n    const cancel = () => canceled = true;\n    ignoreUpdates(() => {\n      fn(cancel);\n    });\n    if (!canceled)\n      commit();\n  }\n  function dispose() {\n    stop();\n    clear();\n  }\n  return {\n    ...manualHistory,\n    isTracking,\n    pause,\n    resume,\n    commit,\n    batch,\n    dispose\n  };\n}\n\nfunction useDebouncedRefHistory(source, options = {}) {\n  const filter = options.debounce ? debounceFilter(options.debounce) : void 0;\n  const history = useRefHistory(source, { ...options, eventFilter: filter });\n  return {\n    ...history\n  };\n}\n\nfunction useDeviceMotion(options = {}) {\n  const {\n    window = defaultWindow,\n    requestPermissions = false,\n    eventFilter = bypassFilter\n  } = options;\n  const isSupported = useSupported(() => typeof DeviceMotionEvent !== \"undefined\");\n  const requirePermissions = useSupported(() => isSupported.value && \"requestPermission\" in DeviceMotionEvent && typeof DeviceMotionEvent.requestPermission === \"function\");\n  const permissionGranted = shallowRef(false);\n  const acceleration = ref({ x: null, y: null, z: null });\n  const rotationRate = ref({ alpha: null, beta: null, gamma: null });\n  const interval = shallowRef(0);\n  const accelerationIncludingGravity = ref({\n    x: null,\n    y: null,\n    z: null\n  });\n  function init() {\n    if (window) {\n      const onDeviceMotion = createFilterWrapper(\n        eventFilter,\n        (event) => {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n          acceleration.value = {\n            x: ((_a = event.acceleration) == null ? void 0 : _a.x) || null,\n            y: ((_b = event.acceleration) == null ? void 0 : _b.y) || null,\n            z: ((_c = event.acceleration) == null ? void 0 : _c.z) || null\n          };\n          accelerationIncludingGravity.value = {\n            x: ((_d = event.accelerationIncludingGravity) == null ? void 0 : _d.x) || null,\n            y: ((_e = event.accelerationIncludingGravity) == null ? void 0 : _e.y) || null,\n            z: ((_f = event.accelerationIncludingGravity) == null ? void 0 : _f.z) || null\n          };\n          rotationRate.value = {\n            alpha: ((_g = event.rotationRate) == null ? void 0 : _g.alpha) || null,\n            beta: ((_h = event.rotationRate) == null ? void 0 : _h.beta) || null,\n            gamma: ((_i = event.rotationRate) == null ? void 0 : _i.gamma) || null\n          };\n          interval.value = event.interval;\n        }\n      );\n      useEventListener(window, \"devicemotion\", onDeviceMotion, { passive: true });\n    }\n  }\n  const ensurePermissions = async () => {\n    if (!requirePermissions.value)\n      permissionGranted.value = true;\n    if (permissionGranted.value)\n      return;\n    if (requirePermissions.value) {\n      const requestPermission = DeviceMotionEvent.requestPermission;\n      try {\n        const response = await requestPermission();\n        if (response === \"granted\") {\n          permissionGranted.value = true;\n          init();\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  if (isSupported.value) {\n    if (requestPermissions && requirePermissions.value) {\n      ensurePermissions().then(() => init());\n    } else {\n      init();\n    }\n  }\n  return {\n    acceleration,\n    accelerationIncludingGravity,\n    rotationRate,\n    interval,\n    isSupported,\n    requirePermissions,\n    ensurePermissions,\n    permissionGranted\n  };\n}\n\nfunction useDeviceOrientation(options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"DeviceOrientationEvent\" in window);\n  const isAbsolute = shallowRef(false);\n  const alpha = shallowRef(null);\n  const beta = shallowRef(null);\n  const gamma = shallowRef(null);\n  if (window && isSupported.value) {\n    useEventListener(window, \"deviceorientation\", (event) => {\n      isAbsolute.value = event.absolute;\n      alpha.value = event.alpha;\n      beta.value = event.beta;\n      gamma.value = event.gamma;\n    }, { passive: true });\n  }\n  return {\n    isSupported,\n    isAbsolute,\n    alpha,\n    beta,\n    gamma\n  };\n}\n\nfunction useDevicePixelRatio(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const pixelRatio = shallowRef(1);\n  const query = useMediaQuery(() => `(resolution: ${pixelRatio.value}dppx)`, options);\n  let stop = noop;\n  if (window) {\n    stop = watchImmediate(query, () => pixelRatio.value = window.devicePixelRatio);\n  }\n  return {\n    pixelRatio: readonly(pixelRatio),\n    stop\n  };\n}\n\nfunction useDevicesList(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    requestPermissions = false,\n    constraints = { audio: true, video: true },\n    onUpdated\n  } = options;\n  const devices = ref([]);\n  const videoInputs = computed(() => devices.value.filter((i) => i.kind === \"videoinput\"));\n  const audioInputs = computed(() => devices.value.filter((i) => i.kind === \"audioinput\"));\n  const audioOutputs = computed(() => devices.value.filter((i) => i.kind === \"audiooutput\"));\n  const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\n  const permissionGranted = shallowRef(false);\n  let stream;\n  async function update() {\n    if (!isSupported.value)\n      return;\n    devices.value = await navigator.mediaDevices.enumerateDevices();\n    onUpdated == null ? void 0 : onUpdated(devices.value);\n    if (stream) {\n      stream.getTracks().forEach((t) => t.stop());\n      stream = null;\n    }\n  }\n  async function ensurePermissions() {\n    const deviceName = constraints.video ? \"camera\" : \"microphone\";\n    if (!isSupported.value)\n      return false;\n    if (permissionGranted.value)\n      return true;\n    const { state, query } = usePermission(deviceName, { controls: true });\n    await query();\n    if (state.value !== \"granted\") {\n      let granted = true;\n      try {\n        stream = await navigator.mediaDevices.getUserMedia(constraints);\n      } catch (e) {\n        stream = null;\n        granted = false;\n      }\n      update();\n      permissionGranted.value = granted;\n    } else {\n      permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  }\n  if (isSupported.value) {\n    if (requestPermissions)\n      ensurePermissions();\n    useEventListener(navigator.mediaDevices, \"devicechange\", update, { passive: true });\n    update();\n  }\n  return {\n    devices,\n    ensurePermissions,\n    permissionGranted,\n    videoInputs,\n    audioInputs,\n    audioOutputs,\n    isSupported\n  };\n}\n\nfunction useDisplayMedia(options = {}) {\n  var _a;\n  const enabled = shallowRef((_a = options.enabled) != null ? _a : false);\n  const video = options.video;\n  const audio = options.audio;\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;\n  });\n  const constraint = { audio, video };\n  const stream = shallowRef();\n  async function _start() {\n    var _a2;\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => useEventListener(t, \"ended\", stop, { passive: true }));\n    return stream.value;\n  }\n  async function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  watch(\n    enabled,\n    (v) => {\n      if (v)\n        _start();\n      else\n        _stop();\n    },\n    { immediate: true }\n  );\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    enabled\n  };\n}\n\nfunction useDocumentVisibility(options = {}) {\n  const { document = defaultDocument } = options;\n  if (!document)\n    return shallowRef(\"visible\");\n  const visibility = shallowRef(document.visibilityState);\n  useEventListener(document, \"visibilitychange\", () => {\n    visibility.value = document.visibilityState;\n  }, { passive: true });\n  return visibility;\n}\n\nfunction useDraggable(target, options = {}) {\n  var _a;\n  const {\n    pointerTypes,\n    preventDefault,\n    stopPropagation,\n    exact,\n    onMove,\n    onEnd,\n    onStart,\n    initialValue,\n    axis = \"both\",\n    draggingElement = defaultWindow,\n    containerElement,\n    handle: draggingHandle = target,\n    buttons = [0]\n  } = options;\n  const position = ref(\n    (_a = toValue(initialValue)) != null ? _a : { x: 0, y: 0 }\n  );\n  const pressedDelta = ref();\n  const filterEvent = (e) => {\n    if (pointerTypes)\n      return pointerTypes.includes(e.pointerType);\n    return true;\n  };\n  const handleEvent = (e) => {\n    if (toValue(preventDefault))\n      e.preventDefault();\n    if (toValue(stopPropagation))\n      e.stopPropagation();\n  };\n  const start = (e) => {\n    var _a2;\n    if (!toValue(buttons).includes(e.button))\n      return;\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (toValue(exact) && e.target !== toValue(target))\n      return;\n    const container = toValue(containerElement);\n    const containerRect = (_a2 = container == null ? void 0 : container.getBoundingClientRect) == null ? void 0 : _a2.call(container);\n    const targetRect = toValue(target).getBoundingClientRect();\n    const pos = {\n      x: e.clientX - (container ? targetRect.left - containerRect.left + container.scrollLeft : targetRect.left),\n      y: e.clientY - (container ? targetRect.top - containerRect.top + container.scrollTop : targetRect.top)\n    };\n    if ((onStart == null ? void 0 : onStart(pos, e)) === false)\n      return;\n    pressedDelta.value = pos;\n    handleEvent(e);\n  };\n  const move = (e) => {\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    const container = toValue(containerElement);\n    const targetRect = toValue(target).getBoundingClientRect();\n    let { x, y } = position.value;\n    if (axis === \"x\" || axis === \"both\") {\n      x = e.clientX - pressedDelta.value.x;\n      if (container)\n        x = Math.min(Math.max(0, x), container.scrollWidth - targetRect.width);\n    }\n    if (axis === \"y\" || axis === \"both\") {\n      y = e.clientY - pressedDelta.value.y;\n      if (container)\n        y = Math.min(Math.max(0, y), container.scrollHeight - targetRect.height);\n    }\n    position.value = {\n      x,\n      y\n    };\n    onMove == null ? void 0 : onMove(position.value, e);\n    handleEvent(e);\n  };\n  const end = (e) => {\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    pressedDelta.value = void 0;\n    onEnd == null ? void 0 : onEnd(position.value, e);\n    handleEvent(e);\n  };\n  if (isClient) {\n    const config = () => {\n      var _a2;\n      return {\n        capture: (_a2 = options.capture) != null ? _a2 : true,\n        passive: !toValue(preventDefault)\n      };\n    };\n    useEventListener(draggingHandle, \"pointerdown\", start, config);\n    useEventListener(draggingElement, \"pointermove\", move, config);\n    useEventListener(draggingElement, \"pointerup\", end, config);\n  }\n  return {\n    ...toRefs(position),\n    position,\n    isDragging: computed(() => !!pressedDelta.value),\n    style: computed(\n      () => `left:${position.value.x}px;top:${position.value.y}px;`\n    )\n  };\n}\n\nfunction useDropZone(target, options = {}) {\n  var _a, _b;\n  const isOverDropZone = shallowRef(false);\n  const files = shallowRef(null);\n  let counter = 0;\n  let isValid = true;\n  if (isClient) {\n    const _options = typeof options === \"function\" ? { onDrop: options } : options;\n    const multiple = (_a = _options.multiple) != null ? _a : true;\n    const preventDefaultForUnhandled = (_b = _options.preventDefaultForUnhandled) != null ? _b : false;\n    const getFiles = (event) => {\n      var _a2, _b2;\n      const list = Array.from((_b2 = (_a2 = event.dataTransfer) == null ? void 0 : _a2.files) != null ? _b2 : []);\n      return list.length === 0 ? null : multiple ? list : [list[0]];\n    };\n    const checkDataTypes = (types) => {\n      const dataTypes = unref(_options.dataTypes);\n      if (typeof dataTypes === \"function\")\n        return dataTypes(types);\n      if (!(dataTypes == null ? void 0 : dataTypes.length))\n        return true;\n      if (types.length === 0)\n        return false;\n      return types.every(\n        (type) => dataTypes.some((allowedType) => type.includes(allowedType))\n      );\n    };\n    const checkValidity = (items) => {\n      const types = Array.from(items != null ? items : []).map((item) => item.type);\n      const dataTypesValid = checkDataTypes(types);\n      const multipleFilesValid = multiple || items.length <= 1;\n      return dataTypesValid && multipleFilesValid;\n    };\n    const isSafari = () => /^(?:(?!chrome|android).)*safari/i.test(navigator.userAgent) && !(\"chrome\" in window);\n    const handleDragEvent = (event, eventType) => {\n      var _a2, _b2, _c, _d, _e, _f;\n      const dataTransferItemList = (_a2 = event.dataTransfer) == null ? void 0 : _a2.items;\n      isValid = (_b2 = dataTransferItemList && checkValidity(dataTransferItemList)) != null ? _b2 : false;\n      if (preventDefaultForUnhandled) {\n        event.preventDefault();\n      }\n      if (!isSafari() && !isValid) {\n        if (event.dataTransfer) {\n          event.dataTransfer.dropEffect = \"none\";\n        }\n        return;\n      }\n      event.preventDefault();\n      if (event.dataTransfer) {\n        event.dataTransfer.dropEffect = \"copy\";\n      }\n      const currentFiles = getFiles(event);\n      switch (eventType) {\n        case \"enter\":\n          counter += 1;\n          isOverDropZone.value = true;\n          (_c = _options.onEnter) == null ? void 0 : _c.call(_options, null, event);\n          break;\n        case \"over\":\n          (_d = _options.onOver) == null ? void 0 : _d.call(_options, null, event);\n          break;\n        case \"leave\":\n          counter -= 1;\n          if (counter === 0)\n            isOverDropZone.value = false;\n          (_e = _options.onLeave) == null ? void 0 : _e.call(_options, null, event);\n          break;\n        case \"drop\":\n          counter = 0;\n          isOverDropZone.value = false;\n          if (isValid) {\n            files.value = currentFiles;\n            (_f = _options.onDrop) == null ? void 0 : _f.call(_options, currentFiles, event);\n          }\n          break;\n      }\n    };\n    useEventListener(target, \"dragenter\", (event) => handleDragEvent(event, \"enter\"));\n    useEventListener(target, \"dragover\", (event) => handleDragEvent(event, \"over\"));\n    useEventListener(target, \"dragleave\", (event) => handleDragEvent(event, \"leave\"));\n    useEventListener(target, \"drop\", (event) => handleDragEvent(event, \"drop\"));\n  }\n  return {\n    files,\n    isOverDropZone\n  };\n}\n\nfunction useResizeObserver(target, callback, options = {}) {\n  const { window = defaultWindow, ...observerOptions } = options;\n  let observer;\n  const isSupported = useSupported(() => window && \"ResizeObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(() => {\n    const _targets = toValue(target);\n    return Array.isArray(_targets) ? _targets.map((el) => unrefElement(el)) : [unrefElement(_targets)];\n  });\n  const stopWatch = watch(\n    targets,\n    (els) => {\n      cleanup();\n      if (isSupported.value && window) {\n        observer = new ResizeObserver(callback);\n        for (const _el of els) {\n          if (_el)\n            observer.observe(_el, observerOptions);\n        }\n      }\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nfunction useElementBounding(target, options = {}) {\n  const {\n    reset = true,\n    windowResize = true,\n    windowScroll = true,\n    immediate = true,\n    updateTiming = \"sync\"\n  } = options;\n  const height = shallowRef(0);\n  const bottom = shallowRef(0);\n  const left = shallowRef(0);\n  const right = shallowRef(0);\n  const top = shallowRef(0);\n  const width = shallowRef(0);\n  const x = shallowRef(0);\n  const y = shallowRef(0);\n  function recalculate() {\n    const el = unrefElement(target);\n    if (!el) {\n      if (reset) {\n        height.value = 0;\n        bottom.value = 0;\n        left.value = 0;\n        right.value = 0;\n        top.value = 0;\n        width.value = 0;\n        x.value = 0;\n        y.value = 0;\n      }\n      return;\n    }\n    const rect = el.getBoundingClientRect();\n    height.value = rect.height;\n    bottom.value = rect.bottom;\n    left.value = rect.left;\n    right.value = rect.right;\n    top.value = rect.top;\n    width.value = rect.width;\n    x.value = rect.x;\n    y.value = rect.y;\n  }\n  function update() {\n    if (updateTiming === \"sync\")\n      recalculate();\n    else if (updateTiming === \"next-frame\")\n      requestAnimationFrame(() => recalculate());\n  }\n  useResizeObserver(target, update);\n  watch(() => unrefElement(target), (ele) => !ele && update());\n  useMutationObserver(target, update, {\n    attributeFilter: [\"style\", \"class\"]\n  });\n  if (windowScroll)\n    useEventListener(\"scroll\", update, { capture: true, passive: true });\n  if (windowResize)\n    useEventListener(\"resize\", update, { passive: true });\n  tryOnMounted(() => {\n    if (immediate)\n      update();\n  });\n  return {\n    height,\n    bottom,\n    left,\n    right,\n    top,\n    width,\n    x,\n    y,\n    update\n  };\n}\n\nfunction useElementByPoint(options) {\n  const {\n    x,\n    y,\n    document = defaultDocument,\n    multiple,\n    interval = \"requestAnimationFrame\",\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => {\n    if (toValue(multiple))\n      return document && \"elementsFromPoint\" in document;\n    return document && \"elementFromPoint\" in document;\n  });\n  const element = shallowRef(null);\n  const cb = () => {\n    var _a, _b;\n    element.value = toValue(multiple) ? (_a = document == null ? void 0 : document.elementsFromPoint(toValue(x), toValue(y))) != null ? _a : [] : (_b = document == null ? void 0 : document.elementFromPoint(toValue(x), toValue(y))) != null ? _b : null;\n  };\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  return {\n    isSupported,\n    element,\n    ...controls\n  };\n}\n\nfunction useElementHover(el, options = {}) {\n  const {\n    delayEnter = 0,\n    delayLeave = 0,\n    triggerOnRemoval = false,\n    window = defaultWindow\n  } = options;\n  const isHovered = shallowRef(false);\n  let timer;\n  const toggle = (entering) => {\n    const delay = entering ? delayEnter : delayLeave;\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n    }\n    if (delay)\n      timer = setTimeout(() => isHovered.value = entering, delay);\n    else\n      isHovered.value = entering;\n  };\n  if (!window)\n    return isHovered;\n  useEventListener(el, \"mouseenter\", () => toggle(true), { passive: true });\n  useEventListener(el, \"mouseleave\", () => toggle(false), { passive: true });\n  if (triggerOnRemoval) {\n    onElementRemoval(\n      computed(() => unrefElement(el)),\n      () => toggle(false)\n    );\n  }\n  return isHovered;\n}\n\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\n  const { window = defaultWindow, box = \"content-box\" } = options;\n  const isSVG = computed(() => {\n    var _a, _b;\n    return (_b = (_a = unrefElement(target)) == null ? void 0 : _a.namespaceURI) == null ? void 0 : _b.includes(\"svg\");\n  });\n  const width = shallowRef(initialSize.width);\n  const height = shallowRef(initialSize.height);\n  const { stop: stop1 } = useResizeObserver(\n    target,\n    ([entry]) => {\n      const boxSize = box === \"border-box\" ? entry.borderBoxSize : box === \"content-box\" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;\n      if (window && isSVG.value) {\n        const $elem = unrefElement(target);\n        if ($elem) {\n          const rect = $elem.getBoundingClientRect();\n          width.value = rect.width;\n          height.value = rect.height;\n        }\n      } else {\n        if (boxSize) {\n          const formatBoxSize = toArray(boxSize);\n          width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);\n          height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);\n        } else {\n          width.value = entry.contentRect.width;\n          height.value = entry.contentRect.height;\n        }\n      }\n    },\n    options\n  );\n  tryOnMounted(() => {\n    const ele = unrefElement(target);\n    if (ele) {\n      width.value = \"offsetWidth\" in ele ? ele.offsetWidth : initialSize.width;\n      height.value = \"offsetHeight\" in ele ? ele.offsetHeight : initialSize.height;\n    }\n  });\n  const stop2 = watch(\n    () => unrefElement(target),\n    (ele) => {\n      width.value = ele ? initialSize.width : 0;\n      height.value = ele ? initialSize.height : 0;\n    }\n  );\n  function stop() {\n    stop1();\n    stop2();\n  }\n  return {\n    width,\n    height,\n    stop\n  };\n}\n\nfunction useIntersectionObserver(target, callback, options = {}) {\n  const {\n    root,\n    rootMargin = \"0px\",\n    threshold = 0,\n    window = defaultWindow,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => window && \"IntersectionObserver\" in window);\n  const targets = computed(() => {\n    const _target = toValue(target);\n    return toArray(_target).map(unrefElement).filter(notNullish);\n  });\n  let cleanup = noop;\n  const isActive = shallowRef(immediate);\n  const stopWatch = isSupported.value ? watch(\n    () => [targets.value, unrefElement(root), isActive.value],\n    ([targets2, root2]) => {\n      cleanup();\n      if (!isActive.value)\n        return;\n      if (!targets2.length)\n        return;\n      const observer = new IntersectionObserver(\n        callback,\n        {\n          root: unrefElement(root2),\n          rootMargin,\n          threshold\n        }\n      );\n      targets2.forEach((el) => el && observer.observe(el));\n      cleanup = () => {\n        observer.disconnect();\n        cleanup = noop;\n      };\n    },\n    { immediate, flush: \"post\" }\n  ) : noop;\n  const stop = () => {\n    cleanup();\n    stopWatch();\n    isActive.value = false;\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    isActive,\n    pause() {\n      cleanup();\n      isActive.value = false;\n    },\n    resume() {\n      isActive.value = true;\n    },\n    stop\n  };\n}\n\nfunction useElementVisibility(element, options = {}) {\n  const {\n    window = defaultWindow,\n    scrollTarget,\n    threshold = 0,\n    rootMargin,\n    once = false\n  } = options;\n  const elementIsVisible = shallowRef(false);\n  const { stop } = useIntersectionObserver(\n    element,\n    (intersectionObserverEntries) => {\n      let isIntersecting = elementIsVisible.value;\n      let latestTime = 0;\n      for (const entry of intersectionObserverEntries) {\n        if (entry.time >= latestTime) {\n          latestTime = entry.time;\n          isIntersecting = entry.isIntersecting;\n        }\n      }\n      elementIsVisible.value = isIntersecting;\n      if (once) {\n        watchOnce(elementIsVisible, () => {\n          stop();\n        });\n      }\n    },\n    {\n      root: scrollTarget,\n      window,\n      threshold,\n      rootMargin: toValue(rootMargin)\n    }\n  );\n  return elementIsVisible;\n}\n\nconst events = /* @__PURE__ */ new Map();\n\nfunction useEventBus(key) {\n  const scope = getCurrentScope();\n  function on(listener) {\n    var _a;\n    const listeners = events.get(key) || /* @__PURE__ */ new Set();\n    listeners.add(listener);\n    events.set(key, listeners);\n    const _off = () => off(listener);\n    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);\n    return _off;\n  }\n  function once(listener) {\n    function _listener(...args) {\n      off(_listener);\n      listener(...args);\n    }\n    return on(_listener);\n  }\n  function off(listener) {\n    const listeners = events.get(key);\n    if (!listeners)\n      return;\n    listeners.delete(listener);\n    if (!listeners.size)\n      reset();\n  }\n  function reset() {\n    events.delete(key);\n  }\n  function emit(event, payload) {\n    var _a;\n    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));\n  }\n  return { on, once, off, emit, reset };\n}\n\nfunction resolveNestedOptions$1(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useEventSource(url, events = [], options = {}) {\n  const event = shallowRef(null);\n  const data = shallowRef(null);\n  const status = shallowRef(\"CONNECTING\");\n  const eventSource = ref(null);\n  const error = shallowRef(null);\n  const urlRef = toRef(url);\n  const lastEventId = shallowRef(null);\n  let explicitlyClosed = false;\n  let retried = 0;\n  const {\n    withCredentials = false,\n    immediate = true,\n    autoConnect = true,\n    autoReconnect\n  } = options;\n  const close = () => {\n    if (isClient && eventSource.value) {\n      eventSource.value.close();\n      eventSource.value = null;\n      status.value = \"CLOSED\";\n      explicitlyClosed = true;\n    }\n  };\n  const _init = () => {\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\n      return;\n    const es = new EventSource(urlRef.value, { withCredentials });\n    status.value = \"CONNECTING\";\n    eventSource.value = es;\n    es.onopen = () => {\n      status.value = \"OPEN\";\n      error.value = null;\n    };\n    es.onerror = (e) => {\n      status.value = \"CLOSED\";\n      error.value = e;\n      if (es.readyState === 2 && !explicitlyClosed && autoReconnect) {\n        es.close();\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions$1(autoReconnect);\n        retried += 1;\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\n          setTimeout(_init, delay);\n        else if (typeof retries === \"function\" && retries())\n          setTimeout(_init, delay);\n        else\n          onFailed == null ? void 0 : onFailed();\n      }\n    };\n    es.onmessage = (e) => {\n      event.value = null;\n      data.value = e.data;\n      lastEventId.value = e.lastEventId;\n    };\n    for (const event_name of events) {\n      useEventListener(es, event_name, (e) => {\n        event.value = event_name;\n        data.value = e.data || null;\n      }, { passive: true });\n    }\n  };\n  const open = () => {\n    if (!isClient)\n      return;\n    close();\n    explicitlyClosed = false;\n    retried = 0;\n    _init();\n  };\n  if (immediate)\n    open();\n  if (autoConnect)\n    watch(urlRef, open);\n  tryOnScopeDispose(close);\n  return {\n    eventSource,\n    event,\n    data,\n    status,\n    error,\n    open,\n    close,\n    lastEventId\n  };\n}\n\nfunction useEyeDropper(options = {}) {\n  const { initialValue = \"\" } = options;\n  const isSupported = useSupported(() => typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  const sRGBHex = shallowRef(initialValue);\n  async function open(openOptions) {\n    if (!isSupported.value)\n      return;\n    const eyeDropper = new window.EyeDropper();\n    const result = await eyeDropper.open(openOptions);\n    sRGBHex.value = result.sRGBHex;\n    return result;\n  }\n  return { isSupported, sRGBHex, open };\n}\n\nfunction useFavicon(newIcon = null, options = {}) {\n  const {\n    baseUrl = \"\",\n    rel = \"icon\",\n    document = defaultDocument\n  } = options;\n  const favicon = toRef(newIcon);\n  const applyIcon = (icon) => {\n    const elements = document == null ? void 0 : document.head.querySelectorAll(`link[rel*=\"${rel}\"]`);\n    if (!elements || elements.length === 0) {\n      const link = document == null ? void 0 : document.createElement(\"link\");\n      if (link) {\n        link.rel = rel;\n        link.href = `${baseUrl}${icon}`;\n        link.type = `image/${icon.split(\".\").pop()}`;\n        document == null ? void 0 : document.head.append(link);\n      }\n      return;\n    }\n    elements == null ? void 0 : elements.forEach((el) => el.href = `${baseUrl}${icon}`);\n  };\n  watch(\n    favicon,\n    (i, o) => {\n      if (typeof i === \"string\" && i !== o)\n        applyIcon(i);\n    },\n    { immediate: true }\n  );\n  return favicon;\n}\n\nconst payloadMapping = {\n  json: \"application/json\",\n  text: \"text/plain\"\n};\nfunction isFetchOptions(obj) {\n  return obj && containsProp(obj, \"immediate\", \"refetch\", \"initialData\", \"timeout\", \"beforeFetch\", \"afterFetch\", \"onFetchError\", \"fetch\", \"updateDataOnError\");\n}\nconst reAbsolute = /^(?:[a-z][a-z\\d+\\-.]*:)?\\/\\//i;\nfunction isAbsoluteURL(url) {\n  return reAbsolute.test(url);\n}\nfunction headersToObject(headers) {\n  if (typeof Headers !== \"undefined\" && headers instanceof Headers)\n    return Object.fromEntries(headers.entries());\n  return headers;\n}\nfunction combineCallbacks(combination, ...callbacks) {\n  if (combination === \"overwrite\") {\n    return async (ctx) => {\n      let callback;\n      for (let i = callbacks.length - 1; i >= 0; i--) {\n        if (callbacks[i] != null) {\n          callback = callbacks[i];\n          break;\n        }\n      }\n      if (callback)\n        return { ...ctx, ...await callback(ctx) };\n      return ctx;\n    };\n  } else {\n    return async (ctx) => {\n      for (const callback of callbacks) {\n        if (callback)\n          ctx = { ...ctx, ...await callback(ctx) };\n      }\n      return ctx;\n    };\n  }\n}\nfunction createFetch(config = {}) {\n  const _combination = config.combination || \"chain\";\n  const _options = config.options || {};\n  const _fetchOptions = config.fetchOptions || {};\n  function useFactoryFetch(url, ...args) {\n    const computedUrl = computed(() => {\n      const baseUrl = toValue(config.baseUrl);\n      const targetUrl = toValue(url);\n      return baseUrl && !isAbsoluteURL(targetUrl) ? joinPaths(baseUrl, targetUrl) : targetUrl;\n    });\n    let options = _options;\n    let fetchOptions = _fetchOptions;\n    if (args.length > 0) {\n      if (isFetchOptions(args[0])) {\n        options = {\n          ...options,\n          ...args[0],\n          beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[0].beforeFetch),\n          afterFetch: combineCallbacks(_combination, _options.afterFetch, args[0].afterFetch),\n          onFetchError: combineCallbacks(_combination, _options.onFetchError, args[0].onFetchError)\n        };\n      } else {\n        fetchOptions = {\n          ...fetchOptions,\n          ...args[0],\n          headers: {\n            ...headersToObject(fetchOptions.headers) || {},\n            ...headersToObject(args[0].headers) || {}\n          }\n        };\n      }\n    }\n    if (args.length > 1 && isFetchOptions(args[1])) {\n      options = {\n        ...options,\n        ...args[1],\n        beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[1].beforeFetch),\n        afterFetch: combineCallbacks(_combination, _options.afterFetch, args[1].afterFetch),\n        onFetchError: combineCallbacks(_combination, _options.onFetchError, args[1].onFetchError)\n      };\n    }\n    return useFetch(computedUrl, fetchOptions, options);\n  }\n  return useFactoryFetch;\n}\nfunction useFetch(url, ...args) {\n  var _a;\n  const supportsAbort = typeof AbortController === \"function\";\n  let fetchOptions = {};\n  let options = {\n    immediate: true,\n    refetch: false,\n    timeout: 0,\n    updateDataOnError: false\n  };\n  const config = {\n    method: \"GET\",\n    type: \"text\",\n    payload: void 0\n  };\n  if (args.length > 0) {\n    if (isFetchOptions(args[0]))\n      options = { ...options, ...args[0] };\n    else\n      fetchOptions = args[0];\n  }\n  if (args.length > 1) {\n    if (isFetchOptions(args[1]))\n      options = { ...options, ...args[1] };\n  }\n  const {\n    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,\n    initialData,\n    timeout\n  } = options;\n  const responseEvent = createEventHook();\n  const errorEvent = createEventHook();\n  const finallyEvent = createEventHook();\n  const isFinished = shallowRef(false);\n  const isFetching = shallowRef(false);\n  const aborted = shallowRef(false);\n  const statusCode = shallowRef(null);\n  const response = shallowRef(null);\n  const error = shallowRef(null);\n  const data = shallowRef(initialData || null);\n  const canAbort = computed(() => supportsAbort && isFetching.value);\n  let controller;\n  let timer;\n  const abort = () => {\n    if (supportsAbort) {\n      controller == null ? void 0 : controller.abort();\n      controller = new AbortController();\n      controller.signal.onabort = () => aborted.value = true;\n      fetchOptions = {\n        ...fetchOptions,\n        signal: controller.signal\n      };\n    }\n  };\n  const loading = (isLoading) => {\n    isFetching.value = isLoading;\n    isFinished.value = !isLoading;\n  };\n  if (timeout)\n    timer = useTimeoutFn(abort, timeout, { immediate: false });\n  let executeCounter = 0;\n  const execute = async (throwOnFailed = false) => {\n    var _a2, _b;\n    abort();\n    loading(true);\n    error.value = null;\n    statusCode.value = null;\n    aborted.value = false;\n    executeCounter += 1;\n    const currentExecuteCounter = executeCounter;\n    const defaultFetchOptions = {\n      method: config.method,\n      headers: {}\n    };\n    const payload = toValue(config.payload);\n    if (payload) {\n      const headers = headersToObject(defaultFetchOptions.headers);\n      const proto = Object.getPrototypeOf(payload);\n      if (!config.payloadType && payload && (proto === Object.prototype || Array.isArray(proto)) && !(payload instanceof FormData))\n        config.payloadType = \"json\";\n      if (config.payloadType)\n        headers[\"Content-Type\"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;\n      defaultFetchOptions.body = config.payloadType === \"json\" ? JSON.stringify(payload) : payload;\n    }\n    let isCanceled = false;\n    const context = {\n      url: toValue(url),\n      options: {\n        ...defaultFetchOptions,\n        ...fetchOptions\n      },\n      cancel: () => {\n        isCanceled = true;\n      }\n    };\n    if (options.beforeFetch)\n      Object.assign(context, await options.beforeFetch(context));\n    if (isCanceled || !fetch) {\n      loading(false);\n      return Promise.resolve(null);\n    }\n    let responseData = null;\n    if (timer)\n      timer.start();\n    return fetch(\n      context.url,\n      {\n        ...defaultFetchOptions,\n        ...context.options,\n        headers: {\n          ...headersToObject(defaultFetchOptions.headers),\n          ...headersToObject((_b = context.options) == null ? void 0 : _b.headers)\n        }\n      }\n    ).then(async (fetchResponse) => {\n      response.value = fetchResponse;\n      statusCode.value = fetchResponse.status;\n      responseData = await fetchResponse.clone()[config.type]();\n      if (!fetchResponse.ok) {\n        data.value = initialData || null;\n        throw new Error(fetchResponse.statusText);\n      }\n      if (options.afterFetch) {\n        ({ data: responseData } = await options.afterFetch({\n          data: responseData,\n          response: fetchResponse,\n          context,\n          execute\n        }));\n      }\n      data.value = responseData;\n      responseEvent.trigger(fetchResponse);\n      return fetchResponse;\n    }).catch(async (fetchError) => {\n      let errorData = fetchError.message || fetchError.name;\n      if (options.onFetchError) {\n        ({ error: errorData, data: responseData } = await options.onFetchError({\n          data: responseData,\n          error: fetchError,\n          response: response.value,\n          context,\n          execute\n        }));\n      }\n      error.value = errorData;\n      if (options.updateDataOnError)\n        data.value = responseData;\n      errorEvent.trigger(fetchError);\n      if (throwOnFailed)\n        throw fetchError;\n      return null;\n    }).finally(() => {\n      if (currentExecuteCounter === executeCounter)\n        loading(false);\n      if (timer)\n        timer.stop();\n      finallyEvent.trigger(null);\n    });\n  };\n  const refetch = toRef(options.refetch);\n  watch(\n    [\n      refetch,\n      toRef(url)\n    ],\n    ([refetch2]) => refetch2 && execute(),\n    { deep: true }\n  );\n  const shell = {\n    isFinished: readonly(isFinished),\n    isFetching: readonly(isFetching),\n    statusCode,\n    response,\n    error,\n    data,\n    canAbort,\n    aborted,\n    abort,\n    execute,\n    onFetchResponse: responseEvent.on,\n    onFetchError: errorEvent.on,\n    onFetchFinally: finallyEvent.on,\n    // method\n    get: setMethod(\"GET\"),\n    put: setMethod(\"PUT\"),\n    post: setMethod(\"POST\"),\n    delete: setMethod(\"DELETE\"),\n    patch: setMethod(\"PATCH\"),\n    head: setMethod(\"HEAD\"),\n    options: setMethod(\"OPTIONS\"),\n    // type\n    json: setType(\"json\"),\n    text: setType(\"text\"),\n    blob: setType(\"blob\"),\n    arrayBuffer: setType(\"arrayBuffer\"),\n    formData: setType(\"formData\")\n  };\n  function setMethod(method) {\n    return (payload, payloadType) => {\n      if (!isFetching.value) {\n        config.method = method;\n        config.payload = payload;\n        config.payloadType = payloadType;\n        if (isRef(config.payload)) {\n          watch(\n            [\n              refetch,\n              toRef(config.payload)\n            ],\n            ([refetch2]) => refetch2 && execute(),\n            { deep: true }\n          );\n        }\n        return {\n          ...shell,\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        };\n      }\n      return void 0;\n    };\n  }\n  function waitUntilFinished() {\n    return new Promise((resolve, reject) => {\n      until(isFinished).toBe(true).then(() => resolve(shell)).catch(reject);\n    });\n  }\n  function setType(type) {\n    return () => {\n      if (!isFetching.value) {\n        config.type = type;\n        return {\n          ...shell,\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        };\n      }\n      return void 0;\n    };\n  }\n  if (options.immediate)\n    Promise.resolve().then(() => execute());\n  return {\n    ...shell,\n    then(onFulfilled, onRejected) {\n      return waitUntilFinished().then(onFulfilled, onRejected);\n    }\n  };\n}\nfunction joinPaths(start, end) {\n  if (!start.endsWith(\"/\") && !end.startsWith(\"/\")) {\n    return `${start}/${end}`;\n  }\n  if (start.endsWith(\"/\") && end.startsWith(\"/\")) {\n    return `${start.slice(0, -1)}${end}`;\n  }\n  return `${start}${end}`;\n}\n\nconst DEFAULT_OPTIONS = {\n  multiple: true,\n  accept: \"*\",\n  reset: false,\n  directory: false\n};\nfunction prepareInitialFiles(files) {\n  if (!files)\n    return null;\n  if (files instanceof FileList)\n    return files;\n  const dt = new DataTransfer();\n  for (const file of files) {\n    dt.items.add(file);\n  }\n  return dt.files;\n}\nfunction useFileDialog(options = {}) {\n  const {\n    document = defaultDocument\n  } = options;\n  const files = ref(prepareInitialFiles(options.initialFiles));\n  const { on: onChange, trigger: changeTrigger } = createEventHook();\n  const { on: onCancel, trigger: cancelTrigger } = createEventHook();\n  let input;\n  if (document) {\n    input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (event) => {\n      const result = event.target;\n      files.value = result.files;\n      changeTrigger(files.value);\n    };\n    input.oncancel = () => {\n      cancelTrigger();\n    };\n  }\n  const reset = () => {\n    files.value = null;\n    if (input && input.value) {\n      input.value = \"\";\n      changeTrigger(null);\n    }\n  };\n  const open = (localOptions) => {\n    if (!input)\n      return;\n    const _options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n      ...localOptions\n    };\n    input.multiple = _options.multiple;\n    input.accept = _options.accept;\n    input.webkitdirectory = _options.directory;\n    if (hasOwn(_options, \"capture\"))\n      input.capture = _options.capture;\n    if (_options.reset)\n      reset();\n    input.click();\n  };\n  return {\n    files: readonly(files),\n    open,\n    reset,\n    onCancel,\n    onChange\n  };\n}\n\nfunction useFileSystemAccess(options = {}) {\n  const {\n    window: _window = defaultWindow,\n    dataType = \"Text\"\n  } = options;\n  const window = _window;\n  const isSupported = useSupported(() => window && \"showSaveFilePicker\" in window && \"showOpenFilePicker\" in window);\n  const fileHandle = shallowRef();\n  const data = shallowRef();\n  const file = shallowRef();\n  const fileName = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : \"\";\n  });\n  const fileMIME = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : \"\";\n  });\n  const fileSize = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;\n  });\n  const fileLastModified = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;\n  });\n  async function open(_options = {}) {\n    if (!isSupported.value)\n      return;\n    const [handle] = await window.showOpenFilePicker({ ...toValue(options), ..._options });\n    fileHandle.value = handle;\n    await updateData();\n  }\n  async function create(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });\n    data.value = void 0;\n    await updateData();\n  }\n  async function save(_options = {}) {\n    if (!isSupported.value)\n      return;\n    if (!fileHandle.value)\n      return saveAs(_options);\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function saveAs(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function updateFile() {\n    var _a;\n    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());\n  }\n  async function updateData() {\n    var _a, _b;\n    await updateFile();\n    const type = toValue(dataType);\n    if (type === \"Text\")\n      data.value = await ((_a = file.value) == null ? void 0 : _a.text());\n    else if (type === \"ArrayBuffer\")\n      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());\n    else if (type === \"Blob\")\n      data.value = file.value;\n  }\n  watch(() => toValue(dataType), updateData);\n  return {\n    isSupported,\n    data,\n    file,\n    fileName,\n    fileMIME,\n    fileSize,\n    fileLastModified,\n    open,\n    create,\n    save,\n    saveAs,\n    updateData\n  };\n}\n\nfunction useFocus(target, options = {}) {\n  const { initialValue = false, focusVisible = false, preventScroll = false } = options;\n  const innerFocused = shallowRef(false);\n  const targetElement = computed(() => unrefElement(target));\n  const listenerOptions = { passive: true };\n  useEventListener(targetElement, \"focus\", (event) => {\n    var _a, _b;\n    if (!focusVisible || ((_b = (_a = event.target).matches) == null ? void 0 : _b.call(_a, \":focus-visible\")))\n      innerFocused.value = true;\n  }, listenerOptions);\n  useEventListener(targetElement, \"blur\", () => innerFocused.value = false, listenerOptions);\n  const focused = computed({\n    get: () => innerFocused.value,\n    set(value) {\n      var _a, _b;\n      if (!value && innerFocused.value)\n        (_a = targetElement.value) == null ? void 0 : _a.blur();\n      else if (value && !innerFocused.value)\n        (_b = targetElement.value) == null ? void 0 : _b.focus({ preventScroll });\n    }\n  });\n  watch(\n    targetElement,\n    () => {\n      focused.value = initialValue;\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  return { focused };\n}\n\nconst EVENT_FOCUS_IN = \"focusin\";\nconst EVENT_FOCUS_OUT = \"focusout\";\nconst PSEUDO_CLASS_FOCUS_WITHIN = \":focus-within\";\nfunction useFocusWithin(target, options = {}) {\n  const { window = defaultWindow } = options;\n  const targetElement = computed(() => unrefElement(target));\n  const _focused = shallowRef(false);\n  const focused = computed(() => _focused.value);\n  const activeElement = useActiveElement(options);\n  if (!window || !activeElement.value) {\n    return { focused };\n  }\n  const listenerOptions = { passive: true };\n  useEventListener(targetElement, EVENT_FOCUS_IN, () => _focused.value = true, listenerOptions);\n  useEventListener(targetElement, EVENT_FOCUS_OUT, () => {\n    var _a, _b, _c;\n    return _focused.value = (_c = (_b = (_a = targetElement.value) == null ? void 0 : _a.matches) == null ? void 0 : _b.call(_a, PSEUDO_CLASS_FOCUS_WITHIN)) != null ? _c : false;\n  }, listenerOptions);\n  return { focused };\n}\n\nfunction useFps(options) {\n  var _a;\n  const fps = shallowRef(0);\n  if (typeof performance === \"undefined\")\n    return fps;\n  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;\n  let last = performance.now();\n  let ticks = 0;\n  useRafFn(() => {\n    ticks += 1;\n    if (ticks >= every) {\n      const now = performance.now();\n      const diff = now - last;\n      fps.value = Math.round(1e3 / (diff / ticks));\n      last = now;\n      ticks = 0;\n    }\n  });\n  return fps;\n}\n\nconst eventHandlers = [\n  \"fullscreenchange\",\n  \"webkitfullscreenchange\",\n  \"webkitendfullscreen\",\n  \"mozfullscreenchange\",\n  \"MSFullscreenChange\"\n];\nfunction useFullscreen(target, options = {}) {\n  const {\n    document = defaultDocument,\n    autoExit = false\n  } = options;\n  const targetRef = computed(() => {\n    var _a;\n    return (_a = unrefElement(target)) != null ? _a : document == null ? void 0 : document.documentElement;\n  });\n  const isFullscreen = shallowRef(false);\n  const requestMethod = computed(() => {\n    return [\n      \"requestFullscreen\",\n      \"webkitRequestFullscreen\",\n      \"webkitEnterFullscreen\",\n      \"webkitEnterFullScreen\",\n      \"webkitRequestFullScreen\",\n      \"mozRequestFullScreen\",\n      \"msRequestFullscreen\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const exitMethod = computed(() => {\n    return [\n      \"exitFullscreen\",\n      \"webkitExitFullscreen\",\n      \"webkitExitFullScreen\",\n      \"webkitCancelFullScreen\",\n      \"mozCancelFullScreen\",\n      \"msExitFullscreen\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const fullscreenEnabled = computed(() => {\n    return [\n      \"fullScreen\",\n      \"webkitIsFullScreen\",\n      \"webkitDisplayingFullscreen\",\n      \"mozFullScreen\",\n      \"msFullscreenElement\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const fullscreenElementMethod = [\n    \"fullscreenElement\",\n    \"webkitFullscreenElement\",\n    \"mozFullScreenElement\",\n    \"msFullscreenElement\"\n  ].find((m) => document && m in document);\n  const isSupported = useSupported(() => targetRef.value && document && requestMethod.value !== void 0 && exitMethod.value !== void 0 && fullscreenEnabled.value !== void 0);\n  const isCurrentElementFullScreen = () => {\n    if (fullscreenElementMethod)\n      return (document == null ? void 0 : document[fullscreenElementMethod]) === targetRef.value;\n    return false;\n  };\n  const isElementFullScreen = () => {\n    if (fullscreenEnabled.value) {\n      if (document && document[fullscreenEnabled.value] != null) {\n        return document[fullscreenEnabled.value];\n      } else {\n        const target2 = targetRef.value;\n        if ((target2 == null ? void 0 : target2[fullscreenEnabled.value]) != null) {\n          return Boolean(target2[fullscreenEnabled.value]);\n        }\n      }\n    }\n    return false;\n  };\n  async function exit() {\n    if (!isSupported.value || !isFullscreen.value)\n      return;\n    if (exitMethod.value) {\n      if ((document == null ? void 0 : document[exitMethod.value]) != null) {\n        await document[exitMethod.value]();\n      } else {\n        const target2 = targetRef.value;\n        if ((target2 == null ? void 0 : target2[exitMethod.value]) != null)\n          await target2[exitMethod.value]();\n      }\n    }\n    isFullscreen.value = false;\n  }\n  async function enter() {\n    if (!isSupported.value || isFullscreen.value)\n      return;\n    if (isElementFullScreen())\n      await exit();\n    const target2 = targetRef.value;\n    if (requestMethod.value && (target2 == null ? void 0 : target2[requestMethod.value]) != null) {\n      await target2[requestMethod.value]();\n      isFullscreen.value = true;\n    }\n  }\n  async function toggle() {\n    await (isFullscreen.value ? exit() : enter());\n  }\n  const handlerCallback = () => {\n    const isElementFullScreenValue = isElementFullScreen();\n    if (!isElementFullScreenValue || isElementFullScreenValue && isCurrentElementFullScreen())\n      isFullscreen.value = isElementFullScreenValue;\n  };\n  const listenerOptions = { capture: false, passive: true };\n  useEventListener(document, eventHandlers, handlerCallback, listenerOptions);\n  useEventListener(() => unrefElement(targetRef), eventHandlers, handlerCallback, listenerOptions);\n  if (autoExit)\n    tryOnScopeDispose(exit);\n  return {\n    isSupported,\n    isFullscreen,\n    enter,\n    exit,\n    toggle\n  };\n}\n\nfunction mapGamepadToXbox360Controller(gamepad) {\n  return computed(() => {\n    if (gamepad.value) {\n      return {\n        buttons: {\n          a: gamepad.value.buttons[0],\n          b: gamepad.value.buttons[1],\n          x: gamepad.value.buttons[2],\n          y: gamepad.value.buttons[3]\n        },\n        bumper: {\n          left: gamepad.value.buttons[4],\n          right: gamepad.value.buttons[5]\n        },\n        triggers: {\n          left: gamepad.value.buttons[6],\n          right: gamepad.value.buttons[7]\n        },\n        stick: {\n          left: {\n            horizontal: gamepad.value.axes[0],\n            vertical: gamepad.value.axes[1],\n            button: gamepad.value.buttons[10]\n          },\n          right: {\n            horizontal: gamepad.value.axes[2],\n            vertical: gamepad.value.axes[3],\n            button: gamepad.value.buttons[11]\n          }\n        },\n        dpad: {\n          up: gamepad.value.buttons[12],\n          down: gamepad.value.buttons[13],\n          left: gamepad.value.buttons[14],\n          right: gamepad.value.buttons[15]\n        },\n        back: gamepad.value.buttons[8],\n        start: gamepad.value.buttons[9]\n      };\n    }\n    return null;\n  });\n}\nfunction useGamepad(options = {}) {\n  const {\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"getGamepads\" in navigator);\n  const gamepads = ref([]);\n  const onConnectedHook = createEventHook();\n  const onDisconnectedHook = createEventHook();\n  const stateFromGamepad = (gamepad) => {\n    const hapticActuators = [];\n    const vibrationActuator = \"vibrationActuator\" in gamepad ? gamepad.vibrationActuator : null;\n    if (vibrationActuator)\n      hapticActuators.push(vibrationActuator);\n    if (gamepad.hapticActuators)\n      hapticActuators.push(...gamepad.hapticActuators);\n    return {\n      id: gamepad.id,\n      index: gamepad.index,\n      connected: gamepad.connected,\n      mapping: gamepad.mapping,\n      timestamp: gamepad.timestamp,\n      vibrationActuator: gamepad.vibrationActuator,\n      hapticActuators,\n      axes: gamepad.axes.map((axes) => axes),\n      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value }))\n    };\n  };\n  const updateGamepadState = () => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (const gamepad of _gamepads) {\n      if (gamepad && gamepads.value[gamepad.index])\n        gamepads.value[gamepad.index] = stateFromGamepad(gamepad);\n    }\n  };\n  const { isActive, pause, resume } = useRafFn(updateGamepadState);\n  const onGamepadConnected = (gamepad) => {\n    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {\n      gamepads.value.push(stateFromGamepad(gamepad));\n      onConnectedHook.trigger(gamepad.index);\n    }\n    resume();\n  };\n  const onGamepadDisconnected = (gamepad) => {\n    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);\n    onDisconnectedHook.trigger(gamepad.index);\n  };\n  const listenerOptions = { passive: true };\n  useEventListener(\"gamepadconnected\", (e) => onGamepadConnected(e.gamepad), listenerOptions);\n  useEventListener(\"gamepaddisconnected\", (e) => onGamepadDisconnected(e.gamepad), listenerOptions);\n  tryOnMounted(() => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (const gamepad of _gamepads) {\n      if (gamepad && gamepads.value[gamepad.index])\n        onGamepadConnected(gamepad);\n    }\n  });\n  pause();\n  return {\n    isSupported,\n    onConnected: onConnectedHook.on,\n    onDisconnected: onDisconnectedHook.on,\n    gamepads,\n    pause,\n    resume,\n    isActive\n  };\n}\n\nfunction useGeolocation(options = {}) {\n  const {\n    enableHighAccuracy = true,\n    maximumAge = 3e4,\n    timeout = 27e3,\n    navigator = defaultNavigator,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => navigator && \"geolocation\" in navigator);\n  const locatedAt = shallowRef(null);\n  const error = shallowRef(null);\n  const coords = ref({\n    accuracy: 0,\n    latitude: Number.POSITIVE_INFINITY,\n    longitude: Number.POSITIVE_INFINITY,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null\n  });\n  function updatePosition(position) {\n    locatedAt.value = position.timestamp;\n    coords.value = position.coords;\n    error.value = null;\n  }\n  let watcher;\n  function resume() {\n    if (isSupported.value) {\n      watcher = navigator.geolocation.watchPosition(\n        updatePosition,\n        (err) => error.value = err,\n        {\n          enableHighAccuracy,\n          maximumAge,\n          timeout\n        }\n      );\n    }\n  }\n  if (immediate)\n    resume();\n  function pause() {\n    if (watcher && navigator)\n      navigator.geolocation.clearWatch(watcher);\n  }\n  tryOnScopeDispose(() => {\n    pause();\n  });\n  return {\n    isSupported,\n    coords,\n    locatedAt,\n    error,\n    resume,\n    pause\n  };\n}\n\nconst defaultEvents$1 = [\"mousemove\", \"mousedown\", \"resize\", \"keydown\", \"touchstart\", \"wheel\"];\nconst oneMinute = 6e4;\nfunction useIdle(timeout = oneMinute, options = {}) {\n  const {\n    initialState = false,\n    listenForVisibilityChange = true,\n    events = defaultEvents$1,\n    window = defaultWindow,\n    eventFilter = throttleFilter(50)\n  } = options;\n  const idle = shallowRef(initialState);\n  const lastActive = shallowRef(timestamp());\n  let timer;\n  const reset = () => {\n    idle.value = false;\n    clearTimeout(timer);\n    timer = setTimeout(() => idle.value = true, timeout);\n  };\n  const onEvent = createFilterWrapper(\n    eventFilter,\n    () => {\n      lastActive.value = timestamp();\n      reset();\n    }\n  );\n  if (window) {\n    const document = window.document;\n    const listenerOptions = { passive: true };\n    for (const event of events)\n      useEventListener(window, event, onEvent, listenerOptions);\n    if (listenForVisibilityChange) {\n      useEventListener(document, \"visibilitychange\", () => {\n        if (!document.hidden)\n          onEvent();\n      }, listenerOptions);\n    }\n    reset();\n  }\n  return {\n    idle,\n    lastActive,\n    reset\n  };\n}\n\nasync function loadImage(options) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    const { src, srcset, sizes, class: clazz, loading, crossorigin, referrerPolicy, width, height, decoding, fetchPriority, ismap, usemap } = options;\n    img.src = src;\n    if (srcset != null)\n      img.srcset = srcset;\n    if (sizes != null)\n      img.sizes = sizes;\n    if (clazz != null)\n      img.className = clazz;\n    if (loading != null)\n      img.loading = loading;\n    if (crossorigin != null)\n      img.crossOrigin = crossorigin;\n    if (referrerPolicy != null)\n      img.referrerPolicy = referrerPolicy;\n    if (width != null)\n      img.width = width;\n    if (height != null)\n      img.height = height;\n    if (decoding != null)\n      img.decoding = decoding;\n    if (fetchPriority != null)\n      img.fetchPriority = fetchPriority;\n    if (ismap != null)\n      img.isMap = ismap;\n    if (usemap != null)\n      img.useMap = usemap;\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\nfunction useImage(options, asyncStateOptions = {}) {\n  const state = useAsyncState(\n    () => loadImage(toValue(options)),\n    void 0,\n    {\n      resetOnExecute: true,\n      ...asyncStateOptions\n    }\n  );\n  watch(\n    () => toValue(options),\n    () => state.execute(asyncStateOptions.delay),\n    { deep: true }\n  );\n  return state;\n}\n\nfunction resolveElement(el) {\n  if (typeof Window !== \"undefined\" && el instanceof Window)\n    return el.document.documentElement;\n  if (typeof Document !== \"undefined\" && el instanceof Document)\n    return el.documentElement;\n  return el;\n}\n\nconst ARRIVED_STATE_THRESHOLD_PIXELS = 1;\nfunction useScroll(element, options = {}) {\n  const {\n    throttle = 0,\n    idle = 200,\n    onStop = noop,\n    onScroll = noop,\n    offset = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    },\n    eventListenerOptions = {\n      capture: false,\n      passive: true\n    },\n    behavior = \"auto\",\n    window = defaultWindow,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const internalX = shallowRef(0);\n  const internalY = shallowRef(0);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo(x2, void 0);\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo(void 0, y2);\n    }\n  });\n  function scrollTo(_x, _y) {\n    var _a, _b, _c, _d;\n    if (!window)\n      return;\n    const _element = toValue(element);\n    if (!_element)\n      return;\n    (_c = _element instanceof Document ? window.document.body : _element) == null ? void 0 : _c.scrollTo({\n      top: (_a = toValue(_y)) != null ? _a : y.value,\n      left: (_b = toValue(_x)) != null ? _b : x.value,\n      behavior: toValue(behavior)\n    });\n    const scrollContainer = ((_d = _element == null ? void 0 : _element.document) == null ? void 0 : _d.documentElement) || (_element == null ? void 0 : _element.documentElement) || _element;\n    if (x != null)\n      internalX.value = scrollContainer.scrollLeft;\n    if (y != null)\n      internalY.value = scrollContainer.scrollTop;\n  }\n  const isScrolling = shallowRef(false);\n  const arrivedState = reactive({\n    left: true,\n    right: false,\n    top: true,\n    bottom: false\n  });\n  const directions = reactive({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  });\n  const onScrollEnd = (e) => {\n    if (!isScrolling.value)\n      return;\n    isScrolling.value = false;\n    directions.left = false;\n    directions.right = false;\n    directions.top = false;\n    directions.bottom = false;\n    onStop(e);\n  };\n  const onScrollEndDebounced = useDebounceFn(onScrollEnd, throttle + idle);\n  const setArrivedState = (target) => {\n    var _a;\n    if (!window)\n      return;\n    const el = ((_a = target == null ? void 0 : target.document) == null ? void 0 : _a.documentElement) || (target == null ? void 0 : target.documentElement) || unrefElement(target);\n    const { display, flexDirection, direction } = getComputedStyle(el);\n    const directionMultipler = direction === \"rtl\" ? -1 : 1;\n    const scrollLeft = el.scrollLeft;\n    directions.left = scrollLeft < internalX.value;\n    directions.right = scrollLeft > internalX.value;\n    const left = Math.abs(scrollLeft * directionMultipler) <= (offset.left || 0);\n    const right = Math.abs(scrollLeft * directionMultipler) + el.clientWidth >= el.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"row-reverse\") {\n      arrivedState.left = right;\n      arrivedState.right = left;\n    } else {\n      arrivedState.left = left;\n      arrivedState.right = right;\n    }\n    internalX.value = scrollLeft;\n    let scrollTop = el.scrollTop;\n    if (target === window.document && !scrollTop)\n      scrollTop = window.document.body.scrollTop;\n    directions.top = scrollTop < internalY.value;\n    directions.bottom = scrollTop > internalY.value;\n    const top = Math.abs(scrollTop) <= (offset.top || 0);\n    const bottom = Math.abs(scrollTop) + el.clientHeight >= el.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"column-reverse\") {\n      arrivedState.top = bottom;\n      arrivedState.bottom = top;\n    } else {\n      arrivedState.top = top;\n      arrivedState.bottom = bottom;\n    }\n    internalY.value = scrollTop;\n  };\n  const onScrollHandler = (e) => {\n    var _a;\n    if (!window)\n      return;\n    const eventTarget = (_a = e.target.documentElement) != null ? _a : e.target;\n    setArrivedState(eventTarget);\n    isScrolling.value = true;\n    onScrollEndDebounced(e);\n    onScroll(e);\n  };\n  useEventListener(\n    element,\n    \"scroll\",\n    throttle ? useThrottleFn(onScrollHandler, throttle, true, false) : onScrollHandler,\n    eventListenerOptions\n  );\n  tryOnMounted(() => {\n    try {\n      const _element = toValue(element);\n      if (!_element)\n        return;\n      setArrivedState(_element);\n    } catch (e) {\n      onError(e);\n    }\n  });\n  useEventListener(\n    element,\n    \"scrollend\",\n    onScrollEnd,\n    eventListenerOptions\n  );\n  return {\n    x,\n    y,\n    isScrolling,\n    arrivedState,\n    directions,\n    measure() {\n      const _element = toValue(element);\n      if (window && _element)\n        setArrivedState(_element);\n    }\n  };\n}\n\nfunction useInfiniteScroll(element, onLoadMore, options = {}) {\n  var _a;\n  const {\n    direction = \"bottom\",\n    interval = 100,\n    canLoadMore = () => true\n  } = options;\n  const state = reactive(useScroll(\n    element,\n    {\n      ...options,\n      offset: {\n        [direction]: (_a = options.distance) != null ? _a : 0,\n        ...options.offset\n      }\n    }\n  ));\n  const promise = ref();\n  const isLoading = computed(() => !!promise.value);\n  const observedElement = computed(() => {\n    return resolveElement(toValue(element));\n  });\n  const isElementVisible = useElementVisibility(observedElement);\n  function checkAndLoad() {\n    state.measure();\n    if (!observedElement.value || !isElementVisible.value || !canLoadMore(observedElement.value))\n      return;\n    const { scrollHeight, clientHeight, scrollWidth, clientWidth } = observedElement.value;\n    const isNarrower = direction === \"bottom\" || direction === \"top\" ? scrollHeight <= clientHeight : scrollWidth <= clientWidth;\n    if (state.arrivedState[direction] || isNarrower) {\n      if (!promise.value) {\n        promise.value = Promise.all([\n          onLoadMore(state),\n          new Promise((resolve) => setTimeout(resolve, interval))\n        ]).finally(() => {\n          promise.value = null;\n          nextTick(() => checkAndLoad());\n        });\n      }\n    }\n  }\n  const stop = watch(\n    () => [state.arrivedState[direction], isElementVisible.value],\n    checkAndLoad,\n    { immediate: true }\n  );\n  tryOnUnmounted(stop);\n  return {\n    isLoading,\n    reset() {\n      nextTick(() => checkAndLoad());\n    }\n  };\n}\n\nconst defaultEvents = [\"mousedown\", \"mouseup\", \"keydown\", \"keyup\"];\nfunction useKeyModifier(modifier, options = {}) {\n  const {\n    events = defaultEvents,\n    document = defaultDocument,\n    initial = null\n  } = options;\n  const state = shallowRef(initial);\n  if (document) {\n    events.forEach((listenerEvent) => {\n      useEventListener(document, listenerEvent, (evt) => {\n        if (typeof evt.getModifierState === \"function\")\n          state.value = evt.getModifierState(modifier);\n      }, { passive: true });\n    });\n  }\n  return state;\n}\n\nfunction useLocalStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);\n}\n\nconst DefaultMagicKeysAliasMap = {\n  ctrl: \"control\",\n  command: \"meta\",\n  cmd: \"meta\",\n  option: \"alt\",\n  up: \"arrowup\",\n  down: \"arrowdown\",\n  left: \"arrowleft\",\n  right: \"arrowright\"\n};\n\nfunction useMagicKeys(options = {}) {\n  const {\n    reactive: useReactive = false,\n    target = defaultWindow,\n    aliasMap = DefaultMagicKeysAliasMap,\n    passive = true,\n    onEventFired = noop\n  } = options;\n  const current = reactive(/* @__PURE__ */ new Set());\n  const obj = {\n    toJSON() {\n      return {};\n    },\n    current\n  };\n  const refs = useReactive ? reactive(obj) : obj;\n  const metaDeps = /* @__PURE__ */ new Set();\n  const usedKeys = /* @__PURE__ */ new Set();\n  function setRefs(key, value) {\n    if (key in refs) {\n      if (useReactive)\n        refs[key] = value;\n      else\n        refs[key].value = value;\n    }\n  }\n  function reset() {\n    current.clear();\n    for (const key of usedKeys)\n      setRefs(key, false);\n  }\n  function updateRefs(e, value) {\n    var _a, _b;\n    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();\n    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();\n    const values = [code, key].filter(Boolean);\n    if (key) {\n      if (value)\n        current.add(key);\n      else\n        current.delete(key);\n    }\n    for (const key2 of values) {\n      usedKeys.add(key2);\n      setRefs(key2, value);\n    }\n    if (key === \"meta\" && !value) {\n      metaDeps.forEach((key2) => {\n        current.delete(key2);\n        setRefs(key2, false);\n      });\n      metaDeps.clear();\n    } else if (typeof e.getModifierState === \"function\" && e.getModifierState(\"Meta\") && value) {\n      [...current, ...values].forEach((key2) => metaDeps.add(key2));\n    }\n  }\n  useEventListener(target, \"keydown\", (e) => {\n    updateRefs(e, true);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(target, \"keyup\", (e) => {\n    updateRefs(e, false);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(\"blur\", reset, { passive });\n  useEventListener(\"focus\", reset, { passive });\n  const proxy = new Proxy(\n    refs,\n    {\n      get(target2, prop, rec) {\n        if (typeof prop !== \"string\")\n          return Reflect.get(target2, prop, rec);\n        prop = prop.toLowerCase();\n        if (prop in aliasMap)\n          prop = aliasMap[prop];\n        if (!(prop in refs)) {\n          if (/[+_-]/.test(prop)) {\n            const keys = prop.split(/[+_-]/g).map((i) => i.trim());\n            refs[prop] = computed(() => keys.map((key) => toValue(proxy[key])).every(Boolean));\n          } else {\n            refs[prop] = shallowRef(false);\n          }\n        }\n        const r = Reflect.get(target2, prop, rec);\n        return useReactive ? toValue(r) : r;\n      }\n    }\n  );\n  return proxy;\n}\n\nfunction usingElRef(source, cb) {\n  if (toValue(source))\n    cb(toValue(source));\n}\nfunction timeRangeToArray(timeRanges) {\n  let ranges = [];\n  for (let i = 0; i < timeRanges.length; ++i)\n    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];\n  return ranges;\n}\nfunction tracksToArray(tracks) {\n  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));\n}\nconst defaultOptions = {\n  src: \"\",\n  tracks: []\n};\nfunction useMediaControls(target, options = {}) {\n  target = toRef(target);\n  options = {\n    ...defaultOptions,\n    ...options\n  };\n  const {\n    document = defaultDocument\n  } = options;\n  const listenerOptions = { passive: true };\n  const currentTime = shallowRef(0);\n  const duration = shallowRef(0);\n  const seeking = shallowRef(false);\n  const volume = shallowRef(1);\n  const waiting = shallowRef(false);\n  const ended = shallowRef(false);\n  const playing = shallowRef(false);\n  const rate = shallowRef(1);\n  const stalled = shallowRef(false);\n  const buffered = ref([]);\n  const tracks = ref([]);\n  const selectedTrack = shallowRef(-1);\n  const isPictureInPicture = shallowRef(false);\n  const muted = shallowRef(false);\n  const supportsPictureInPicture = document && \"pictureInPictureEnabled\" in document;\n  const sourceErrorEvent = createEventHook();\n  const playbackErrorEvent = createEventHook();\n  const disableTrack = (track) => {\n    usingElRef(target, (el) => {\n      if (track) {\n        const id = typeof track === \"number\" ? track : track.id;\n        el.textTracks[id].mode = \"disabled\";\n      } else {\n        for (let i = 0; i < el.textTracks.length; ++i)\n          el.textTracks[i].mode = \"disabled\";\n      }\n      selectedTrack.value = -1;\n    });\n  };\n  const enableTrack = (track, disableTracks = true) => {\n    usingElRef(target, (el) => {\n      const id = typeof track === \"number\" ? track : track.id;\n      if (disableTracks)\n        disableTrack();\n      el.textTracks[id].mode = \"showing\";\n      selectedTrack.value = id;\n    });\n  };\n  const togglePictureInPicture = () => {\n    return new Promise((resolve, reject) => {\n      usingElRef(target, async (el) => {\n        if (supportsPictureInPicture) {\n          if (!isPictureInPicture.value) {\n            el.requestPictureInPicture().then(resolve).catch(reject);\n          } else {\n            document.exitPictureInPicture().then(resolve).catch(reject);\n          }\n        }\n      });\n    });\n  };\n  watchEffect(() => {\n    if (!document)\n      return;\n    const el = toValue(target);\n    if (!el)\n      return;\n    const src = toValue(options.src);\n    let sources = [];\n    if (!src)\n      return;\n    if (typeof src === \"string\")\n      sources = [{ src }];\n    else if (Array.isArray(src))\n      sources = src;\n    else if (isObject(src))\n      sources = [src];\n    el.querySelectorAll(\"source\").forEach((e) => {\n      e.remove();\n    });\n    sources.forEach(({ src: src2, type, media }) => {\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", src2);\n      source.setAttribute(\"type\", type || \"\");\n      source.setAttribute(\"media\", media || \"\");\n      useEventListener(source, \"error\", sourceErrorEvent.trigger, listenerOptions);\n      el.appendChild(source);\n    });\n    el.load();\n  });\n  watch([target, volume], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.volume = volume.value;\n  });\n  watch([target, muted], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.muted = muted.value;\n  });\n  watch([target, rate], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.playbackRate = rate.value;\n  });\n  watchEffect(() => {\n    if (!document)\n      return;\n    const textTracks = toValue(options.tracks);\n    const el = toValue(target);\n    if (!textTracks || !textTracks.length || !el)\n      return;\n    el.querySelectorAll(\"track\").forEach((e) => e.remove());\n    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {\n      const track = document.createElement(\"track\");\n      track.default = isDefault || false;\n      track.kind = kind;\n      track.label = label;\n      track.src = src;\n      track.srclang = srcLang;\n      if (track.default)\n        selectedTrack.value = i;\n      el.appendChild(track);\n    });\n  });\n  const { ignoreUpdates: ignoreCurrentTimeUpdates } = watchIgnorable(currentTime, (time) => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.currentTime = time;\n  });\n  const { ignoreUpdates: ignorePlayingUpdates } = watchIgnorable(playing, (isPlaying) => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    if (isPlaying) {\n      el.play().catch((e) => {\n        playbackErrorEvent.trigger(e);\n        throw e;\n      });\n    } else {\n      el.pause();\n    }\n  });\n  useEventListener(\n    target,\n    \"timeupdate\",\n    () => ignoreCurrentTimeUpdates(() => currentTime.value = toValue(target).currentTime),\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"durationchange\",\n    () => duration.value = toValue(target).duration,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"progress\",\n    () => buffered.value = timeRangeToArray(toValue(target).buffered),\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"seeking\",\n    () => seeking.value = true,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"seeked\",\n    () => seeking.value = false,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    [\"waiting\", \"loadstart\"],\n    () => {\n      waiting.value = true;\n      ignorePlayingUpdates(() => playing.value = false);\n    },\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"loadeddata\",\n    () => waiting.value = false,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"playing\",\n    () => {\n      waiting.value = false;\n      ended.value = false;\n      ignorePlayingUpdates(() => playing.value = true);\n    },\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"ratechange\",\n    () => rate.value = toValue(target).playbackRate,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"stalled\",\n    () => stalled.value = true,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"ended\",\n    () => ended.value = true,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"pause\",\n    () => ignorePlayingUpdates(() => playing.value = false),\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"play\",\n    () => ignorePlayingUpdates(() => playing.value = true),\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"enterpictureinpicture\",\n    () => isPictureInPicture.value = true,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"leavepictureinpicture\",\n    () => isPictureInPicture.value = false,\n    listenerOptions\n  );\n  useEventListener(\n    target,\n    \"volumechange\",\n    () => {\n      const el = toValue(target);\n      if (!el)\n        return;\n      volume.value = el.volume;\n      muted.value = el.muted;\n    },\n    listenerOptions\n  );\n  const listeners = [];\n  const stop = watch([target], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    stop();\n    listeners[0] = useEventListener(el.textTracks, \"addtrack\", () => tracks.value = tracksToArray(el.textTracks), listenerOptions);\n    listeners[1] = useEventListener(el.textTracks, \"removetrack\", () => tracks.value = tracksToArray(el.textTracks), listenerOptions);\n    listeners[2] = useEventListener(el.textTracks, \"change\", () => tracks.value = tracksToArray(el.textTracks), listenerOptions);\n  });\n  tryOnScopeDispose(() => listeners.forEach((listener) => listener()));\n  return {\n    currentTime,\n    duration,\n    waiting,\n    seeking,\n    ended,\n    stalled,\n    buffered,\n    playing,\n    rate,\n    // Volume\n    volume,\n    muted,\n    // Tracks\n    tracks,\n    selectedTrack,\n    enableTrack,\n    disableTrack,\n    // Picture in Picture\n    supportsPictureInPicture,\n    togglePictureInPicture,\n    isPictureInPicture,\n    // Events\n    onSourceError: sourceErrorEvent.on,\n    onPlaybackError: playbackErrorEvent.on\n  };\n}\n\nfunction useMemoize(resolver, options) {\n  const initCache = () => {\n    if (options == null ? void 0 : options.cache)\n      return shallowReactive(options.cache);\n    return shallowReactive(/* @__PURE__ */ new Map());\n  };\n  const cache = initCache();\n  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);\n  const _loadData = (key, ...args) => {\n    cache.set(key, resolver(...args));\n    return cache.get(key);\n  };\n  const loadData = (...args) => _loadData(generateKey(...args), ...args);\n  const deleteData = (...args) => {\n    cache.delete(generateKey(...args));\n  };\n  const clearData = () => {\n    cache.clear();\n  };\n  const memoized = (...args) => {\n    const key = generateKey(...args);\n    if (cache.has(key))\n      return cache.get(key);\n    return _loadData(key, ...args);\n  };\n  memoized.load = loadData;\n  memoized.delete = deleteData;\n  memoized.clear = clearData;\n  memoized.generateKey = generateKey;\n  memoized.cache = cache;\n  return memoized;\n}\n\nfunction useMemory(options = {}) {\n  const memory = ref();\n  const isSupported = useSupported(() => typeof performance !== \"undefined\" && \"memory\" in performance);\n  if (isSupported.value) {\n    const { interval = 1e3 } = options;\n    useIntervalFn(() => {\n      memory.value = performance.memory;\n    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });\n  }\n  return { isSupported, memory };\n}\n\nconst UseMouseBuiltinExtractors = {\n  page: (event) => [event.pageX, event.pageY],\n  client: (event) => [event.clientX, event.clientY],\n  screen: (event) => [event.screenX, event.screenY],\n  movement: (event) => event instanceof MouseEvent ? [event.movementX, event.movementY] : null\n};\nfunction useMouse(options = {}) {\n  const {\n    type = \"page\",\n    touch = true,\n    resetOnTouchEnds = false,\n    initialValue = { x: 0, y: 0 },\n    window = defaultWindow,\n    target = window,\n    scroll = true,\n    eventFilter\n  } = options;\n  let _prevMouseEvent = null;\n  let _prevScrollX = 0;\n  let _prevScrollY = 0;\n  const x = shallowRef(initialValue.x);\n  const y = shallowRef(initialValue.y);\n  const sourceType = shallowRef(null);\n  const extractor = typeof type === \"function\" ? type : UseMouseBuiltinExtractors[type];\n  const mouseHandler = (event) => {\n    const result = extractor(event);\n    _prevMouseEvent = event;\n    if (result) {\n      [x.value, y.value] = result;\n      sourceType.value = \"mouse\";\n    }\n    if (window) {\n      _prevScrollX = window.scrollX;\n      _prevScrollY = window.scrollY;\n    }\n  };\n  const touchHandler = (event) => {\n    if (event.touches.length > 0) {\n      const result = extractor(event.touches[0]);\n      if (result) {\n        [x.value, y.value] = result;\n        sourceType.value = \"touch\";\n      }\n    }\n  };\n  const scrollHandler = () => {\n    if (!_prevMouseEvent || !window)\n      return;\n    const pos = extractor(_prevMouseEvent);\n    if (_prevMouseEvent instanceof MouseEvent && pos) {\n      x.value = pos[0] + window.scrollX - _prevScrollX;\n      y.value = pos[1] + window.scrollY - _prevScrollY;\n    }\n  };\n  const reset = () => {\n    x.value = initialValue.x;\n    y.value = initialValue.y;\n  };\n  const mouseHandlerWrapper = eventFilter ? (event) => eventFilter(() => mouseHandler(event), {}) : (event) => mouseHandler(event);\n  const touchHandlerWrapper = eventFilter ? (event) => eventFilter(() => touchHandler(event), {}) : (event) => touchHandler(event);\n  const scrollHandlerWrapper = eventFilter ? () => eventFilter(() => scrollHandler(), {}) : () => scrollHandler();\n  if (target) {\n    const listenerOptions = { passive: true };\n    useEventListener(target, [\"mousemove\", \"dragover\"], mouseHandlerWrapper, listenerOptions);\n    if (touch && type !== \"movement\") {\n      useEventListener(target, [\"touchstart\", \"touchmove\"], touchHandlerWrapper, listenerOptions);\n      if (resetOnTouchEnds)\n        useEventListener(target, \"touchend\", reset, listenerOptions);\n    }\n    if (scroll && type === \"page\")\n      useEventListener(window, \"scroll\", scrollHandlerWrapper, listenerOptions);\n  }\n  return {\n    x,\n    y,\n    sourceType\n  };\n}\n\nfunction useMouseInElement(target, options = {}) {\n  const {\n    handleOutside = true,\n    window = defaultWindow\n  } = options;\n  const type = options.type || \"page\";\n  const { x, y, sourceType } = useMouse(options);\n  const targetRef = shallowRef(target != null ? target : window == null ? void 0 : window.document.body);\n  const elementX = shallowRef(0);\n  const elementY = shallowRef(0);\n  const elementPositionX = shallowRef(0);\n  const elementPositionY = shallowRef(0);\n  const elementHeight = shallowRef(0);\n  const elementWidth = shallowRef(0);\n  const isOutside = shallowRef(true);\n  let stop = () => {\n  };\n  if (window) {\n    stop = watch(\n      [targetRef, x, y],\n      () => {\n        const el = unrefElement(targetRef);\n        if (!el || !(el instanceof Element))\n          return;\n        const {\n          left,\n          top,\n          width,\n          height\n        } = el.getBoundingClientRect();\n        elementPositionX.value = left + (type === \"page\" ? window.pageXOffset : 0);\n        elementPositionY.value = top + (type === \"page\" ? window.pageYOffset : 0);\n        elementHeight.value = height;\n        elementWidth.value = width;\n        const elX = x.value - elementPositionX.value;\n        const elY = y.value - elementPositionY.value;\n        isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;\n        if (handleOutside || !isOutside.value) {\n          elementX.value = elX;\n          elementY.value = elY;\n        }\n      },\n      { immediate: true }\n    );\n    useEventListener(\n      document,\n      \"mouseleave\",\n      () => isOutside.value = true,\n      { passive: true }\n    );\n  }\n  return {\n    x,\n    y,\n    sourceType,\n    elementX,\n    elementY,\n    elementPositionX,\n    elementPositionY,\n    elementHeight,\n    elementWidth,\n    isOutside,\n    stop\n  };\n}\n\nfunction useMousePressed(options = {}) {\n  const {\n    touch = true,\n    drag = true,\n    capture = false,\n    initialValue = false,\n    window = defaultWindow\n  } = options;\n  const pressed = shallowRef(initialValue);\n  const sourceType = shallowRef(null);\n  if (!window) {\n    return {\n      pressed,\n      sourceType\n    };\n  }\n  const onPressed = (srcType) => (event) => {\n    var _a;\n    pressed.value = true;\n    sourceType.value = srcType;\n    (_a = options.onPressed) == null ? void 0 : _a.call(options, event);\n  };\n  const onReleased = (event) => {\n    var _a;\n    pressed.value = false;\n    sourceType.value = null;\n    (_a = options.onReleased) == null ? void 0 : _a.call(options, event);\n  };\n  const target = computed(() => unrefElement(options.target) || window);\n  const listenerOptions = { passive: true, capture };\n  useEventListener(target, \"mousedown\", onPressed(\"mouse\"), listenerOptions);\n  useEventListener(window, \"mouseleave\", onReleased, listenerOptions);\n  useEventListener(window, \"mouseup\", onReleased, listenerOptions);\n  if (drag) {\n    useEventListener(target, \"dragstart\", onPressed(\"mouse\"), listenerOptions);\n    useEventListener(window, \"drop\", onReleased, listenerOptions);\n    useEventListener(window, \"dragend\", onReleased, listenerOptions);\n  }\n  if (touch) {\n    useEventListener(target, \"touchstart\", onPressed(\"touch\"), listenerOptions);\n    useEventListener(window, \"touchend\", onReleased, listenerOptions);\n    useEventListener(window, \"touchcancel\", onReleased, listenerOptions);\n  }\n  return {\n    pressed,\n    sourceType\n  };\n}\n\nfunction useNavigatorLanguage(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"language\" in navigator);\n  const language = shallowRef(navigator == null ? void 0 : navigator.language);\n  useEventListener(window, \"languagechange\", () => {\n    if (navigator)\n      language.value = navigator.language;\n  }, { passive: true });\n  return {\n    isSupported,\n    language\n  };\n}\n\nfunction useNetwork(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"connection\" in navigator);\n  const isOnline = shallowRef(true);\n  const saveData = shallowRef(false);\n  const offlineAt = shallowRef(void 0);\n  const onlineAt = shallowRef(void 0);\n  const downlink = shallowRef(void 0);\n  const downlinkMax = shallowRef(void 0);\n  const rtt = shallowRef(void 0);\n  const effectiveType = shallowRef(void 0);\n  const type = shallowRef(\"unknown\");\n  const connection = isSupported.value && navigator.connection;\n  function updateNetworkInformation() {\n    if (!navigator)\n      return;\n    isOnline.value = navigator.onLine;\n    offlineAt.value = isOnline.value ? void 0 : Date.now();\n    onlineAt.value = isOnline.value ? Date.now() : void 0;\n    if (connection) {\n      downlink.value = connection.downlink;\n      downlinkMax.value = connection.downlinkMax;\n      effectiveType.value = connection.effectiveType;\n      rtt.value = connection.rtt;\n      saveData.value = connection.saveData;\n      type.value = connection.type;\n    }\n  }\n  const listenerOptions = { passive: true };\n  if (window) {\n    useEventListener(window, \"offline\", () => {\n      isOnline.value = false;\n      offlineAt.value = Date.now();\n    }, listenerOptions);\n    useEventListener(window, \"online\", () => {\n      isOnline.value = true;\n      onlineAt.value = Date.now();\n    }, listenerOptions);\n  }\n  if (connection)\n    useEventListener(connection, \"change\", updateNetworkInformation, listenerOptions);\n  updateNetworkInformation();\n  return {\n    isSupported,\n    isOnline: readonly(isOnline),\n    saveData: readonly(saveData),\n    offlineAt: readonly(offlineAt),\n    onlineAt: readonly(onlineAt),\n    downlink: readonly(downlink),\n    downlinkMax: readonly(downlinkMax),\n    effectiveType: readonly(effectiveType),\n    rtt: readonly(rtt),\n    type: readonly(type)\n  };\n}\n\nfunction useNow(options = {}) {\n  const {\n    controls: exposeControls = false,\n    interval = \"requestAnimationFrame\"\n  } = options;\n  const now = ref(/* @__PURE__ */ new Date());\n  const update = () => now.value = /* @__PURE__ */ new Date();\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(update, { immediate: true }) : useIntervalFn(update, interval, { immediate: true });\n  if (exposeControls) {\n    return {\n      now,\n      ...controls\n    };\n  } else {\n    return now;\n  }\n}\n\nfunction useObjectUrl(object) {\n  const url = shallowRef();\n  const release = () => {\n    if (url.value)\n      URL.revokeObjectURL(url.value);\n    url.value = void 0;\n  };\n  watch(\n    () => toValue(object),\n    (newObject) => {\n      release();\n      if (newObject)\n        url.value = URL.createObjectURL(newObject);\n    },\n    { immediate: true }\n  );\n  tryOnScopeDispose(release);\n  return readonly(url);\n}\n\nfunction useClamp(value, min, max) {\n  if (typeof value === \"function\" || isReadonly(value))\n    return computed(() => clamp(toValue(value), toValue(min), toValue(max)));\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, toValue(min), toValue(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, toValue(min), toValue(max));\n    }\n  });\n}\n\nfunction useOffsetPagination(options) {\n  const {\n    total = Number.POSITIVE_INFINITY,\n    pageSize = 10,\n    page = 1,\n    onPageChange = noop,\n    onPageSizeChange = noop,\n    onPageCountChange = noop\n  } = options;\n  const currentPageSize = useClamp(pageSize, 1, Number.POSITIVE_INFINITY);\n  const pageCount = computed(() => Math.max(\n    1,\n    Math.ceil(toValue(total) / toValue(currentPageSize))\n  ));\n  const currentPage = useClamp(page, 1, pageCount);\n  const isFirstPage = computed(() => currentPage.value === 1);\n  const isLastPage = computed(() => currentPage.value === pageCount.value);\n  if (isRef(page)) {\n    syncRef(page, currentPage, {\n      direction: isReadonly(page) ? \"ltr\" : \"both\"\n    });\n  }\n  if (isRef(pageSize)) {\n    syncRef(pageSize, currentPageSize, {\n      direction: isReadonly(pageSize) ? \"ltr\" : \"both\"\n    });\n  }\n  function prev() {\n    currentPage.value--;\n  }\n  function next() {\n    currentPage.value++;\n  }\n  const returnValue = {\n    currentPage,\n    currentPageSize,\n    pageCount,\n    isFirstPage,\n    isLastPage,\n    prev,\n    next\n  };\n  watch(currentPage, () => {\n    onPageChange(reactive(returnValue));\n  });\n  watch(currentPageSize, () => {\n    onPageSizeChange(reactive(returnValue));\n  });\n  watch(pageCount, () => {\n    onPageCountChange(reactive(returnValue));\n  });\n  return returnValue;\n}\n\nfunction useOnline(options = {}) {\n  const { isOnline } = useNetwork(options);\n  return isOnline;\n}\n\nfunction usePageLeave(options = {}) {\n  const { window = defaultWindow } = options;\n  const isLeft = shallowRef(false);\n  const handler = (event) => {\n    if (!window)\n      return;\n    event = event || window.event;\n    const from = event.relatedTarget || event.toElement;\n    isLeft.value = !from;\n  };\n  if (window) {\n    const listenerOptions = { passive: true };\n    useEventListener(window, \"mouseout\", handler, listenerOptions);\n    useEventListener(window.document, \"mouseleave\", handler, listenerOptions);\n    useEventListener(window.document, \"mouseenter\", handler, listenerOptions);\n  }\n  return isLeft;\n}\n\nfunction useScreenOrientation(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"screen\" in window && \"orientation\" in window.screen);\n  const screenOrientation = isSupported.value ? window.screen.orientation : {};\n  const orientation = ref(screenOrientation.type);\n  const angle = shallowRef(screenOrientation.angle || 0);\n  if (isSupported.value) {\n    useEventListener(window, \"orientationchange\", () => {\n      orientation.value = screenOrientation.type;\n      angle.value = screenOrientation.angle;\n    }, { passive: true });\n  }\n  const lockOrientation = (type) => {\n    if (isSupported.value && typeof screenOrientation.lock === \"function\")\n      return screenOrientation.lock(type);\n    return Promise.reject(new Error(\"Not supported\"));\n  };\n  const unlockOrientation = () => {\n    if (isSupported.value && typeof screenOrientation.unlock === \"function\")\n      screenOrientation.unlock();\n  };\n  return {\n    isSupported,\n    orientation,\n    angle,\n    lockOrientation,\n    unlockOrientation\n  };\n}\n\nfunction useParallax(target, options = {}) {\n  const {\n    deviceOrientationTiltAdjust = (i) => i,\n    deviceOrientationRollAdjust = (i) => i,\n    mouseTiltAdjust = (i) => i,\n    mouseRollAdjust = (i) => i,\n    window = defaultWindow\n  } = options;\n  const orientation = reactive(useDeviceOrientation({ window }));\n  const screenOrientation = reactive(useScreenOrientation({ window }));\n  const {\n    elementX: x,\n    elementY: y,\n    elementWidth: width,\n    elementHeight: height\n  } = useMouseInElement(target, { handleOutside: false, window });\n  const source = computed(() => {\n    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0)) {\n      return \"deviceOrientation\";\n    }\n    return \"mouse\";\n  });\n  const roll = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      let value;\n      switch (screenOrientation.orientation) {\n        case \"landscape-primary\":\n          value = orientation.gamma / 90;\n          break;\n        case \"landscape-secondary\":\n          value = -orientation.gamma / 90;\n          break;\n        case \"portrait-primary\":\n          value = -orientation.beta / 90;\n          break;\n        case \"portrait-secondary\":\n          value = orientation.beta / 90;\n          break;\n        default:\n          value = -orientation.beta / 90;\n      }\n      return deviceOrientationRollAdjust(value);\n    } else {\n      const value = -(y.value - height.value / 2) / height.value;\n      return mouseRollAdjust(value);\n    }\n  });\n  const tilt = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      let value;\n      switch (screenOrientation.orientation) {\n        case \"landscape-primary\":\n          value = orientation.beta / 90;\n          break;\n        case \"landscape-secondary\":\n          value = -orientation.beta / 90;\n          break;\n        case \"portrait-primary\":\n          value = orientation.gamma / 90;\n          break;\n        case \"portrait-secondary\":\n          value = -orientation.gamma / 90;\n          break;\n        default:\n          value = orientation.gamma / 90;\n      }\n      return deviceOrientationTiltAdjust(value);\n    } else {\n      const value = (x.value - width.value / 2) / width.value;\n      return mouseTiltAdjust(value);\n    }\n  });\n  return { roll, tilt, source };\n}\n\nfunction useParentElement(element = useCurrentElement()) {\n  const parentElement = shallowRef();\n  const update = () => {\n    const el = unrefElement(element);\n    if (el)\n      parentElement.value = el.parentElement;\n  };\n  tryOnMounted(update);\n  watch(() => toValue(element), update);\n  return parentElement;\n}\n\nfunction usePerformanceObserver(options, callback) {\n  const {\n    window = defaultWindow,\n    immediate = true,\n    ...performanceOptions\n  } = options;\n  const isSupported = useSupported(() => window && \"PerformanceObserver\" in window);\n  let observer;\n  const stop = () => {\n    observer == null ? void 0 : observer.disconnect();\n  };\n  const start = () => {\n    if (isSupported.value) {\n      stop();\n      observer = new PerformanceObserver(callback);\n      observer.observe(performanceOptions);\n    }\n  };\n  tryOnScopeDispose(stop);\n  if (immediate)\n    start();\n  return {\n    isSupported,\n    start,\n    stop\n  };\n}\n\nconst defaultState = {\n  x: 0,\n  y: 0,\n  pointerId: 0,\n  pressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  width: 0,\n  height: 0,\n  twist: 0,\n  pointerType: null\n};\nconst keys = /* @__PURE__ */ Object.keys(defaultState);\nfunction usePointer(options = {}) {\n  const {\n    target = defaultWindow\n  } = options;\n  const isInside = shallowRef(false);\n  const state = ref(options.initialValue || {});\n  Object.assign(state.value, defaultState, state.value);\n  const handler = (event) => {\n    isInside.value = true;\n    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))\n      return;\n    state.value = objectPick(event, keys, false);\n  };\n  if (target) {\n    const listenerOptions = { passive: true };\n    useEventListener(target, [\"pointerdown\", \"pointermove\", \"pointerup\"], handler, listenerOptions);\n    useEventListener(target, \"pointerleave\", () => isInside.value = false, listenerOptions);\n  }\n  return {\n    ...toRefs(state),\n    isInside\n  };\n}\n\nfunction usePointerLock(target, options = {}) {\n  const { document = defaultDocument } = options;\n  const isSupported = useSupported(() => document && \"pointerLockElement\" in document);\n  const element = shallowRef();\n  const triggerElement = shallowRef();\n  let targetElement;\n  if (isSupported.value) {\n    const listenerOptions = { passive: true };\n    useEventListener(document, \"pointerlockchange\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        element.value = document.pointerLockElement;\n        if (!element.value)\n          targetElement = triggerElement.value = null;\n      }\n    }, listenerOptions);\n    useEventListener(document, \"pointerlockerror\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        const action = document.pointerLockElement ? \"release\" : \"acquire\";\n        throw new Error(`Failed to ${action} pointer lock.`);\n      }\n    }, listenerOptions);\n  }\n  async function lock(e) {\n    var _a;\n    if (!isSupported.value)\n      throw new Error(\"Pointer Lock API is not supported by your browser.\");\n    triggerElement.value = e instanceof Event ? e.currentTarget : null;\n    targetElement = e instanceof Event ? (_a = unrefElement(target)) != null ? _a : triggerElement.value : unrefElement(e);\n    if (!targetElement)\n      throw new Error(\"Target element undefined.\");\n    targetElement.requestPointerLock();\n    return await until(element).toBe(targetElement);\n  }\n  async function unlock() {\n    if (!element.value)\n      return false;\n    document.exitPointerLock();\n    await until(element).toBeNull();\n    return true;\n  }\n  return {\n    isSupported,\n    element,\n    triggerElement,\n    lock,\n    unlock\n  };\n}\n\nfunction usePointerSwipe(target, options = {}) {\n  const targetRef = toRef(target);\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    disableTextSelect = false\n  } = options;\n  const posStart = reactive({ x: 0, y: 0 });\n  const updatePosStart = (x, y) => {\n    posStart.x = x;\n    posStart.y = y;\n  };\n  const posEnd = reactive({ x: 0, y: 0 });\n  const updatePosEnd = (x, y) => {\n    posEnd.x = x;\n    posEnd.y = y;\n  };\n  const distanceX = computed(() => posStart.x - posEnd.x);\n  const distanceY = computed(() => posStart.y - posEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);\n  const isSwiping = shallowRef(false);\n  const isPointerDown = shallowRef(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return \"none\";\n    if (abs(distanceX.value) > abs(distanceY.value)) {\n      return distanceX.value > 0 ? \"left\" : \"right\";\n    } else {\n      return distanceY.value > 0 ? \"up\" : \"down\";\n    }\n  });\n  const eventIsAllowed = (e) => {\n    var _a, _b, _c;\n    const isReleasingButton = e.buttons === 0;\n    const isPrimaryButton = e.buttons === 1;\n    return (_c = (_b = (_a = options.pointerTypes) == null ? void 0 : _a.includes(e.pointerType)) != null ? _b : isReleasingButton || isPrimaryButton) != null ? _c : true;\n  };\n  const listenerOptions = { passive: true };\n  const stops = [\n    useEventListener(target, \"pointerdown\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      isPointerDown.value = true;\n      const eventTarget = e.target;\n      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);\n      const { clientX: x, clientY: y } = e;\n      updatePosStart(x, y);\n      updatePosEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }, listenerOptions),\n    useEventListener(target, \"pointermove\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      if (!isPointerDown.value)\n        return;\n      const { clientX: x, clientY: y } = e;\n      updatePosEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }, listenerOptions),\n    useEventListener(target, \"pointerup\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      if (isSwiping.value)\n        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n      isPointerDown.value = false;\n      isSwiping.value = false;\n    }, listenerOptions)\n  ];\n  tryOnMounted(() => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"none\");\n    if (disableTextSelect) {\n      (_d = (_c = targetRef.value) == null ? void 0 : _c.style) == null ? void 0 : _d.setProperty(\"-webkit-user-select\", \"none\");\n      (_f = (_e = targetRef.value) == null ? void 0 : _e.style) == null ? void 0 : _f.setProperty(\"-ms-user-select\", \"none\");\n      (_h = (_g = targetRef.value) == null ? void 0 : _g.style) == null ? void 0 : _h.setProperty(\"user-select\", \"none\");\n    }\n  });\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isSwiping: readonly(isSwiping),\n    direction: readonly(direction),\n    posStart: readonly(posStart),\n    posEnd: readonly(posEnd),\n    distanceX,\n    distanceY,\n    stop\n  };\n}\n\nfunction usePreferredColorScheme(options) {\n  const isLight = useMediaQuery(\"(prefers-color-scheme: light)\", options);\n  const isDark = useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n  return computed(() => {\n    if (isDark.value)\n      return \"dark\";\n    if (isLight.value)\n      return \"light\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredContrast(options) {\n  const isMore = useMediaQuery(\"(prefers-contrast: more)\", options);\n  const isLess = useMediaQuery(\"(prefers-contrast: less)\", options);\n  const isCustom = useMediaQuery(\"(prefers-contrast: custom)\", options);\n  return computed(() => {\n    if (isMore.value)\n      return \"more\";\n    if (isLess.value)\n      return \"less\";\n    if (isCustom.value)\n      return \"custom\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredLanguages(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return ref([\"en\"]);\n  const navigator = window.navigator;\n  const value = ref(navigator.languages);\n  useEventListener(window, \"languagechange\", () => {\n    value.value = navigator.languages;\n  }, { passive: true });\n  return value;\n}\n\nfunction usePreferredReducedMotion(options) {\n  const isReduced = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return computed(() => {\n    if (isReduced.value)\n      return \"reduce\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredReducedTransparency(options) {\n  const isReduced = useMediaQuery(\"(prefers-reduced-transparency: reduce)\", options);\n  return computed(() => {\n    if (isReduced.value)\n      return \"reduce\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePrevious(value, initialValue) {\n  const previous = shallowRef(initialValue);\n  watch(\n    toRef(value),\n    (_, oldValue) => {\n      previous.value = oldValue;\n    },\n    { flush: \"sync\" }\n  );\n  return readonly(previous);\n}\n\nconst topVarName = \"--vueuse-safe-area-top\";\nconst rightVarName = \"--vueuse-safe-area-right\";\nconst bottomVarName = \"--vueuse-safe-area-bottom\";\nconst leftVarName = \"--vueuse-safe-area-left\";\nfunction useScreenSafeArea() {\n  const top = shallowRef(\"\");\n  const right = shallowRef(\"\");\n  const bottom = shallowRef(\"\");\n  const left = shallowRef(\"\");\n  if (isClient) {\n    const topCssVar = useCssVar(topVarName);\n    const rightCssVar = useCssVar(rightVarName);\n    const bottomCssVar = useCssVar(bottomVarName);\n    const leftCssVar = useCssVar(leftVarName);\n    topCssVar.value = \"env(safe-area-inset-top, 0px)\";\n    rightCssVar.value = \"env(safe-area-inset-right, 0px)\";\n    bottomCssVar.value = \"env(safe-area-inset-bottom, 0px)\";\n    leftCssVar.value = \"env(safe-area-inset-left, 0px)\";\n    update();\n    useEventListener(\"resize\", useDebounceFn(update), { passive: true });\n  }\n  function update() {\n    top.value = getValue(topVarName);\n    right.value = getValue(rightVarName);\n    bottom.value = getValue(bottomVarName);\n    left.value = getValue(leftVarName);\n  }\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    update\n  };\n}\nfunction getValue(position) {\n  return getComputedStyle(document.documentElement).getPropertyValue(position);\n}\n\nfunction useScriptTag(src, onLoaded = noop, options = {}) {\n  const {\n    immediate = true,\n    manual = false,\n    type = \"text/javascript\",\n    async = true,\n    crossOrigin,\n    referrerPolicy,\n    noModule,\n    defer,\n    document = defaultDocument,\n    attrs = {}\n  } = options;\n  const scriptTag = shallowRef(null);\n  let _promise = null;\n  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {\n    const resolveWithElement = (el2) => {\n      scriptTag.value = el2;\n      resolve(el2);\n      return el2;\n    };\n    if (!document) {\n      resolve(false);\n      return;\n    }\n    let shouldAppend = false;\n    let el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\n    if (!el) {\n      el = document.createElement(\"script\");\n      el.type = type;\n      el.async = async;\n      el.src = toValue(src);\n      if (defer)\n        el.defer = defer;\n      if (crossOrigin)\n        el.crossOrigin = crossOrigin;\n      if (noModule)\n        el.noModule = noModule;\n      if (referrerPolicy)\n        el.referrerPolicy = referrerPolicy;\n      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));\n      shouldAppend = true;\n    } else if (el.hasAttribute(\"data-loaded\")) {\n      resolveWithElement(el);\n    }\n    const listenerOptions = {\n      passive: true\n    };\n    useEventListener(el, \"error\", (event) => reject(event), listenerOptions);\n    useEventListener(el, \"abort\", (event) => reject(event), listenerOptions);\n    useEventListener(el, \"load\", () => {\n      el.setAttribute(\"data-loaded\", \"true\");\n      onLoaded(el);\n      resolveWithElement(el);\n    }, listenerOptions);\n    if (shouldAppend)\n      el = document.head.appendChild(el);\n    if (!waitForScriptLoad)\n      resolveWithElement(el);\n  });\n  const load = (waitForScriptLoad = true) => {\n    if (!_promise)\n      _promise = loadScript(waitForScriptLoad);\n    return _promise;\n  };\n  const unload = () => {\n    if (!document)\n      return;\n    _promise = null;\n    if (scriptTag.value)\n      scriptTag.value = null;\n    const el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\n    if (el)\n      document.head.removeChild(el);\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnUnmounted(unload);\n  return { scriptTag, load, unload };\n}\n\nfunction checkOverflowScroll(ele) {\n  const style = window.getComputedStyle(ele);\n  if (style.overflowX === \"scroll\" || style.overflowY === \"scroll\" || style.overflowX === \"auto\" && ele.clientWidth < ele.scrollWidth || style.overflowY === \"auto\" && ele.clientHeight < ele.scrollHeight) {\n    return true;\n  } else {\n    const parent = ele.parentNode;\n    if (!parent || parent.tagName === \"BODY\")\n      return false;\n    return checkOverflowScroll(parent);\n  }\n}\nfunction preventDefault(rawEvent) {\n  const e = rawEvent || window.event;\n  const _target = e.target;\n  if (checkOverflowScroll(_target))\n    return false;\n  if (e.touches.length > 1)\n    return true;\n  if (e.preventDefault)\n    e.preventDefault();\n  return false;\n}\nconst elInitialOverflow = /* @__PURE__ */ new WeakMap();\nfunction useScrollLock(element, initialState = false) {\n  const isLocked = shallowRef(initialState);\n  let stopTouchMoveListener = null;\n  let initialOverflow = \"\";\n  watch(toRef(element), (el) => {\n    const target = resolveElement(toValue(el));\n    if (target) {\n      const ele = target;\n      if (!elInitialOverflow.get(ele))\n        elInitialOverflow.set(ele, ele.style.overflow);\n      if (ele.style.overflow !== \"hidden\")\n        initialOverflow = ele.style.overflow;\n      if (ele.style.overflow === \"hidden\")\n        return isLocked.value = true;\n      if (isLocked.value)\n        return ele.style.overflow = \"hidden\";\n    }\n  }, {\n    immediate: true\n  });\n  const lock = () => {\n    const el = resolveElement(toValue(element));\n    if (!el || isLocked.value)\n      return;\n    if (isIOS) {\n      stopTouchMoveListener = useEventListener(\n        el,\n        \"touchmove\",\n        (e) => {\n          preventDefault(e);\n        },\n        { passive: false }\n      );\n    }\n    el.style.overflow = \"hidden\";\n    isLocked.value = true;\n  };\n  const unlock = () => {\n    const el = resolveElement(toValue(element));\n    if (!el || !isLocked.value)\n      return;\n    if (isIOS)\n      stopTouchMoveListener == null ? void 0 : stopTouchMoveListener();\n    el.style.overflow = initialOverflow;\n    elInitialOverflow.delete(el);\n    isLocked.value = false;\n  };\n  tryOnScopeDispose(unlock);\n  return computed({\n    get() {\n      return isLocked.value;\n    },\n    set(v) {\n      if (v)\n        lock();\n      else unlock();\n    }\n  });\n}\n\nfunction useSessionStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);\n}\n\nfunction useShare(shareOptions = {}, options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const _navigator = navigator;\n  const isSupported = useSupported(() => _navigator && \"canShare\" in _navigator);\n  const share = async (overrideOptions = {}) => {\n    if (isSupported.value) {\n      const data = {\n        ...toValue(shareOptions),\n        ...toValue(overrideOptions)\n      };\n      let granted = true;\n      if (data.files && _navigator.canShare)\n        granted = _navigator.canShare({ files: data.files });\n      if (granted)\n        return _navigator.share(data);\n    }\n  };\n  return {\n    isSupported,\n    share\n  };\n}\n\nconst defaultSortFn = (source, compareFn) => source.sort(compareFn);\nconst defaultCompare = (a, b) => a - b;\nfunction useSorted(...args) {\n  var _a, _b, _c, _d;\n  const [source] = args;\n  let compareFn = defaultCompare;\n  let options = {};\n  if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      options = args[1];\n      compareFn = (_a = options.compareFn) != null ? _a : defaultCompare;\n    } else {\n      compareFn = (_b = args[1]) != null ? _b : defaultCompare;\n    }\n  } else if (args.length > 2) {\n    compareFn = (_c = args[1]) != null ? _c : defaultCompare;\n    options = (_d = args[2]) != null ? _d : {};\n  }\n  const {\n    dirty = false,\n    sortFn = defaultSortFn\n  } = options;\n  if (!dirty)\n    return computed(() => sortFn([...toValue(source)], compareFn));\n  watchEffect(() => {\n    const result = sortFn(toValue(source), compareFn);\n    if (isRef(source))\n      source.value = result;\n    else\n      source.splice(0, source.length, ...result);\n  });\n  return source;\n}\n\nfunction useSpeechRecognition(options = {}) {\n  const {\n    interimResults = true,\n    continuous = true,\n    maxAlternatives = 1,\n    window = defaultWindow\n  } = options;\n  const lang = toRef(options.lang || \"en-US\");\n  const isListening = shallowRef(false);\n  const isFinal = shallowRef(false);\n  const result = shallowRef(\"\");\n  const error = shallowRef(void 0);\n  let recognition;\n  const start = () => {\n    isListening.value = true;\n  };\n  const stop = () => {\n    isListening.value = false;\n  };\n  const toggle = (value = !isListening.value) => {\n    if (value) {\n      start();\n    } else {\n      stop();\n    }\n  };\n  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);\n  const isSupported = useSupported(() => SpeechRecognition);\n  if (isSupported.value) {\n    recognition = new SpeechRecognition();\n    recognition.continuous = continuous;\n    recognition.interimResults = interimResults;\n    recognition.lang = toValue(lang);\n    recognition.maxAlternatives = maxAlternatives;\n    recognition.onstart = () => {\n      isListening.value = true;\n      isFinal.value = false;\n    };\n    watch(lang, (lang2) => {\n      if (recognition && !isListening.value)\n        recognition.lang = lang2;\n    });\n    recognition.onresult = (event) => {\n      const currentResult = event.results[event.resultIndex];\n      const { transcript } = currentResult[0];\n      isFinal.value = currentResult.isFinal;\n      result.value = transcript;\n      error.value = void 0;\n    };\n    recognition.onerror = (event) => {\n      error.value = event;\n    };\n    recognition.onend = () => {\n      isListening.value = false;\n      recognition.lang = toValue(lang);\n    };\n    watch(isListening, (newValue, oldValue) => {\n      if (newValue === oldValue)\n        return;\n      if (newValue)\n        recognition.start();\n      else\n        recognition.stop();\n    });\n  }\n  tryOnScopeDispose(() => {\n    stop();\n  });\n  return {\n    isSupported,\n    isListening,\n    isFinal,\n    recognition,\n    result,\n    error,\n    toggle,\n    start,\n    stop\n  };\n}\n\nfunction useSpeechSynthesis(text, options = {}) {\n  const {\n    pitch = 1,\n    rate = 1,\n    volume = 1,\n    window = defaultWindow\n  } = options;\n  const synth = window && window.speechSynthesis;\n  const isSupported = useSupported(() => synth);\n  const isPlaying = shallowRef(false);\n  const status = shallowRef(\"init\");\n  const spokenText = toRef(text || \"\");\n  const lang = toRef(options.lang || \"en-US\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isPlaying.value) => {\n    isPlaying.value = value;\n  };\n  const bindEventsForUtterance = (utterance2) => {\n    utterance2.lang = toValue(lang);\n    utterance2.voice = toValue(options.voice) || null;\n    utterance2.pitch = toValue(pitch);\n    utterance2.rate = toValue(rate);\n    utterance2.volume = volume;\n    utterance2.onstart = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onpause = () => {\n      isPlaying.value = false;\n      status.value = \"pause\";\n    };\n    utterance2.onresume = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onend = () => {\n      isPlaying.value = false;\n      status.value = \"end\";\n    };\n    utterance2.onerror = (event) => {\n      error.value = event;\n    };\n  };\n  const utterance = computed(() => {\n    isPlaying.value = false;\n    status.value = \"init\";\n    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);\n    bindEventsForUtterance(newUtterance);\n    return newUtterance;\n  });\n  const speak = () => {\n    synth.cancel();\n    if (utterance)\n      synth.speak(utterance.value);\n  };\n  const stop = () => {\n    synth.cancel();\n    isPlaying.value = false;\n  };\n  if (isSupported.value) {\n    bindEventsForUtterance(utterance.value);\n    watch(lang, (lang2) => {\n      if (utterance.value && !isPlaying.value)\n        utterance.value.lang = lang2;\n    });\n    if (options.voice) {\n      watch(options.voice, () => {\n        synth.cancel();\n      });\n    }\n    watch(isPlaying, () => {\n      if (isPlaying.value)\n        synth.resume();\n      else\n        synth.pause();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isPlaying.value = false;\n  });\n  return {\n    isSupported,\n    isPlaying,\n    status,\n    utterance,\n    error,\n    stop,\n    toggle,\n    speak\n  };\n}\n\nfunction useStepper(steps, initialStep) {\n  const stepsRef = ref(steps);\n  const stepNames = computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));\n  const index = ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));\n  const current = computed(() => at(index.value));\n  const isFirst = computed(() => index.value === 0);\n  const isLast = computed(() => index.value === stepNames.value.length - 1);\n  const next = computed(() => stepNames.value[index.value + 1]);\n  const previous = computed(() => stepNames.value[index.value - 1]);\n  function at(index2) {\n    if (Array.isArray(stepsRef.value))\n      return stepsRef.value[index2];\n    return stepsRef.value[stepNames.value[index2]];\n  }\n  function get(step) {\n    if (!stepNames.value.includes(step))\n      return;\n    return at(stepNames.value.indexOf(step));\n  }\n  function goTo(step) {\n    if (stepNames.value.includes(step))\n      index.value = stepNames.value.indexOf(step);\n  }\n  function goToNext() {\n    if (isLast.value)\n      return;\n    index.value++;\n  }\n  function goToPrevious() {\n    if (isFirst.value)\n      return;\n    index.value--;\n  }\n  function goBackTo(step) {\n    if (isAfter(step))\n      goTo(step);\n  }\n  function isNext(step) {\n    return stepNames.value.indexOf(step) === index.value + 1;\n  }\n  function isPrevious(step) {\n    return stepNames.value.indexOf(step) === index.value - 1;\n  }\n  function isCurrent(step) {\n    return stepNames.value.indexOf(step) === index.value;\n  }\n  function isBefore(step) {\n    return index.value < stepNames.value.indexOf(step);\n  }\n  function isAfter(step) {\n    return index.value > stepNames.value.indexOf(step);\n  }\n  return {\n    steps: stepsRef,\n    stepNames,\n    index,\n    current,\n    next,\n    previous,\n    isFirst,\n    isLast,\n    at,\n    get,\n    goTo,\n    goToNext,\n    goToPrevious,\n    goBackTo,\n    isNext,\n    isPrevious,\n    isCurrent,\n    isBefore,\n    isAfter\n  };\n}\n\nfunction useStorageAsync(key, initialValue, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const rawInit = toValue(initialValue);\n  const type = guessSerializerType(rawInit);\n  const data = (shallow ? shallowRef : ref)(toValue(initialValue));\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorageAsync\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  async function read(event) {\n    if (!storage || event && event.key !== key)\n      return;\n    try {\n      const rawValue = event ? event.newValue : await storage.getItem(key);\n      if (rawValue == null) {\n        data.value = rawInit;\n        if (writeDefaults && rawInit !== null)\n          await storage.setItem(key, await serializer.write(rawInit));\n      } else if (mergeDefaults) {\n        const value = await serializer.read(rawValue);\n        if (typeof mergeDefaults === \"function\")\n          data.value = mergeDefaults(value, rawInit);\n        else if (type === \"object\" && !Array.isArray(value))\n          data.value = { ...rawInit, ...value };\n        else data.value = value;\n      } else {\n        data.value = await serializer.read(rawValue);\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  read();\n  if (window && listenToStorageChanges)\n    useEventListener(window, \"storage\", (e) => Promise.resolve().then(() => read(e)), { passive: true });\n  if (storage) {\n    watchWithFilter(\n      data,\n      async () => {\n        try {\n          if (data.value == null)\n            await storage.removeItem(key);\n          else\n            await storage.setItem(key, await serializer.write(data.value));\n        } catch (e) {\n          onError(e);\n        }\n      },\n      {\n        flush,\n        deep,\n        eventFilter\n      }\n    );\n  }\n  return data;\n}\n\nlet _id = 0;\nfunction useStyleTag(css, options = {}) {\n  const isLoaded = shallowRef(false);\n  const {\n    document = defaultDocument,\n    immediate = true,\n    manual = false,\n    id = `vueuse_styletag_${++_id}`\n  } = options;\n  const cssRef = shallowRef(css);\n  let stop = () => {\n  };\n  const load = () => {\n    if (!document)\n      return;\n    const el = document.getElementById(id) || document.createElement(\"style\");\n    if (!el.isConnected) {\n      el.id = id;\n      if (options.media)\n        el.media = options.media;\n      document.head.appendChild(el);\n    }\n    if (isLoaded.value)\n      return;\n    stop = watch(\n      cssRef,\n      (value) => {\n        el.textContent = value;\n      },\n      { immediate: true }\n    );\n    isLoaded.value = true;\n  };\n  const unload = () => {\n    if (!document || !isLoaded.value)\n      return;\n    stop();\n    document.head.removeChild(document.getElementById(id));\n    isLoaded.value = false;\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnScopeDispose(unload);\n  return {\n    id,\n    css: cssRef,\n    unload,\n    load,\n    isLoaded: readonly(isLoaded)\n  };\n}\n\nfunction useSwipe(target, options = {}) {\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    passive = true\n  } = options;\n  const coordsStart = reactive({ x: 0, y: 0 });\n  const coordsEnd = reactive({ x: 0, y: 0 });\n  const diffX = computed(() => coordsStart.x - coordsEnd.x);\n  const diffY = computed(() => coordsStart.y - coordsEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);\n  const isSwiping = shallowRef(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return \"none\";\n    if (abs(diffX.value) > abs(diffY.value)) {\n      return diffX.value > 0 ? \"left\" : \"right\";\n    } else {\n      return diffY.value > 0 ? \"up\" : \"down\";\n    }\n  });\n  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];\n  const updateCoordsStart = (x, y) => {\n    coordsStart.x = x;\n    coordsStart.y = y;\n  };\n  const updateCoordsEnd = (x, y) => {\n    coordsEnd.x = x;\n    coordsEnd.y = y;\n  };\n  const listenerOptions = { passive, capture: !passive };\n  const onTouchEnd = (e) => {\n    if (isSwiping.value)\n      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n    isSwiping.value = false;\n  };\n  const stops = [\n    useEventListener(target, \"touchstart\", (e) => {\n      if (e.touches.length !== 1)\n        return;\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsStart(x, y);\n      updateCoordsEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchmove\", (e) => {\n      if (e.touches.length !== 1)\n        return;\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsEnd(x, y);\n      if (listenerOptions.capture && !listenerOptions.passive && Math.abs(diffX.value) > Math.abs(diffY.value))\n        e.preventDefault();\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }, listenerOptions),\n    useEventListener(target, [\"touchend\", \"touchcancel\"], onTouchEnd, listenerOptions)\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isSwiping,\n    direction,\n    coordsStart,\n    coordsEnd,\n    lengthX: diffX,\n    lengthY: diffY,\n    stop,\n    // TODO: Remove in the next major version\n    isPassiveEventSupported: true\n  };\n}\n\nfunction useTemplateRefsList() {\n  const refs = ref([]);\n  refs.value.set = (el) => {\n    if (el)\n      refs.value.push(el);\n  };\n  onBeforeUpdate(() => {\n    refs.value.length = 0;\n  });\n  return refs;\n}\n\nfunction useTextDirection(options = {}) {\n  const {\n    document = defaultDocument,\n    selector = \"html\",\n    observe = false,\n    initialValue = \"ltr\"\n  } = options;\n  function getValue() {\n    var _a, _b;\n    return (_b = (_a = document == null ? void 0 : document.querySelector(selector)) == null ? void 0 : _a.getAttribute(\"dir\")) != null ? _b : initialValue;\n  }\n  const dir = ref(getValue());\n  tryOnMounted(() => dir.value = getValue());\n  if (observe && document) {\n    useMutationObserver(\n      document.querySelector(selector),\n      () => dir.value = getValue(),\n      { attributes: true }\n    );\n  }\n  return computed({\n    get() {\n      return dir.value;\n    },\n    set(v) {\n      var _a, _b;\n      dir.value = v;\n      if (!document)\n        return;\n      if (dir.value)\n        (_a = document.querySelector(selector)) == null ? void 0 : _a.setAttribute(\"dir\", dir.value);\n      else\n        (_b = document.querySelector(selector)) == null ? void 0 : _b.removeAttribute(\"dir\");\n    }\n  });\n}\n\nfunction getRangesFromSelection(selection) {\n  var _a;\n  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;\n  return Array.from({ length: rangeCount }, (_, i) => selection.getRangeAt(i));\n}\nfunction useTextSelection(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const selection = ref(null);\n  const text = computed(() => {\n    var _a, _b;\n    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : \"\";\n  });\n  const ranges = computed(() => selection.value ? getRangesFromSelection(selection.value) : []);\n  const rects = computed(() => ranges.value.map((range) => range.getBoundingClientRect()));\n  function onSelectionChange() {\n    selection.value = null;\n    if (window)\n      selection.value = window.getSelection();\n  }\n  if (window)\n    useEventListener(window.document, \"selectionchange\", onSelectionChange, { passive: true });\n  return {\n    text,\n    rects,\n    ranges,\n    selection\n  };\n}\n\nfunction tryRequestAnimationFrame(window = defaultWindow, fn) {\n  if (window && typeof window.requestAnimationFrame === \"function\") {\n    window.requestAnimationFrame(fn);\n  } else {\n    fn();\n  }\n}\nfunction useTextareaAutosize(options = {}) {\n  var _a, _b;\n  const { window = defaultWindow } = options;\n  const textarea = toRef(options == null ? void 0 : options.element);\n  const input = toRef((_a = options == null ? void 0 : options.input) != null ? _a : \"\");\n  const styleProp = (_b = options == null ? void 0 : options.styleProp) != null ? _b : \"height\";\n  const textareaScrollHeight = shallowRef(1);\n  const textareaOldWidth = shallowRef(0);\n  function triggerResize() {\n    var _a2;\n    if (!textarea.value)\n      return;\n    let height = \"\";\n    textarea.value.style[styleProp] = \"1px\";\n    textareaScrollHeight.value = (_a2 = textarea.value) == null ? void 0 : _a2.scrollHeight;\n    const _styleTarget = toValue(options == null ? void 0 : options.styleTarget);\n    if (_styleTarget)\n      _styleTarget.style[styleProp] = `${textareaScrollHeight.value}px`;\n    else\n      height = `${textareaScrollHeight.value}px`;\n    textarea.value.style[styleProp] = height;\n  }\n  watch([input, textarea], () => nextTick(triggerResize), { immediate: true });\n  watch(textareaScrollHeight, () => {\n    var _a2;\n    return (_a2 = options == null ? void 0 : options.onResize) == null ? void 0 : _a2.call(options);\n  });\n  useResizeObserver(textarea, ([{ contentRect }]) => {\n    if (textareaOldWidth.value === contentRect.width)\n      return;\n    tryRequestAnimationFrame(window, () => {\n      textareaOldWidth.value = contentRect.width;\n      triggerResize();\n    });\n  });\n  if (options == null ? void 0 : options.watch)\n    watch(options.watch, triggerResize, { immediate: true, deep: true });\n  return {\n    textarea,\n    input,\n    triggerResize\n  };\n}\n\nfunction useThrottledRefHistory(source, options = {}) {\n  const { throttle = 200, trailing = true } = options;\n  const filter = throttleFilter(throttle, trailing);\n  const history = useRefHistory(source, { ...options, eventFilter: filter });\n  return {\n    ...history\n  };\n}\n\nconst DEFAULT_UNITS = [\n  { max: 6e4, value: 1e3, name: \"second\" },\n  { max: 276e4, value: 6e4, name: \"minute\" },\n  { max: 72e6, value: 36e5, name: \"hour\" },\n  { max: 5184e5, value: 864e5, name: \"day\" },\n  { max: 24192e5, value: 6048e5, name: \"week\" },\n  { max: 28512e6, value: 2592e6, name: \"month\" },\n  { max: Number.POSITIVE_INFINITY, value: 31536e6, name: \"year\" }\n];\nconst DEFAULT_MESSAGES = {\n  justNow: \"just now\",\n  past: (n) => n.match(/\\d/) ? `${n} ago` : n,\n  future: (n) => n.match(/\\d/) ? `in ${n}` : n,\n  month: (n, past) => n === 1 ? past ? \"last month\" : \"next month\" : `${n} month${n > 1 ? \"s\" : \"\"}`,\n  year: (n, past) => n === 1 ? past ? \"last year\" : \"next year\" : `${n} year${n > 1 ? \"s\" : \"\"}`,\n  day: (n, past) => n === 1 ? past ? \"yesterday\" : \"tomorrow\" : `${n} day${n > 1 ? \"s\" : \"\"}`,\n  week: (n, past) => n === 1 ? past ? \"last week\" : \"next week\" : `${n} week${n > 1 ? \"s\" : \"\"}`,\n  hour: (n) => `${n} hour${n > 1 ? \"s\" : \"\"}`,\n  minute: (n) => `${n} minute${n > 1 ? \"s\" : \"\"}`,\n  second: (n) => `${n} second${n > 1 ? \"s\" : \"\"}`,\n  invalid: \"\"\n};\nfunction DEFAULT_FORMATTER(date) {\n  return date.toISOString().slice(0, 10);\n}\nfunction useTimeAgo(time, options = {}) {\n  const {\n    controls: exposeControls = false,\n    updateInterval = 3e4\n  } = options;\n  const { now, ...controls } = useNow({ interval: updateInterval, controls: true });\n  const timeAgo = computed(() => formatTimeAgo(new Date(toValue(time)), options, toValue(now)));\n  if (exposeControls) {\n    return {\n      timeAgo,\n      ...controls\n    };\n  } else {\n    return timeAgo;\n  }\n}\nfunction formatTimeAgo(from, options = {}, now = Date.now()) {\n  var _a;\n  const {\n    max,\n    messages = DEFAULT_MESSAGES,\n    fullDateFormatter = DEFAULT_FORMATTER,\n    units = DEFAULT_UNITS,\n    showSecond = false,\n    rounding = \"round\"\n  } = options;\n  const roundFn = typeof rounding === \"number\" ? (n) => +n.toFixed(rounding) : Math[rounding];\n  const diff = +now - +from;\n  const absDiff = Math.abs(diff);\n  function getValue(diff2, unit) {\n    return roundFn(Math.abs(diff2) / unit.value);\n  }\n  function format(diff2, unit) {\n    const val = getValue(diff2, unit);\n    const past = diff2 > 0;\n    const str = applyFormat(unit.name, val, past);\n    return applyFormat(past ? \"past\" : \"future\", str, past);\n  }\n  function applyFormat(name, val, isPast) {\n    const formatter = messages[name];\n    if (typeof formatter === \"function\")\n      return formatter(val, isPast);\n    return formatter.replace(\"{0}\", val.toString());\n  }\n  if (absDiff < 6e4 && !showSecond)\n    return messages.justNow;\n  if (typeof max === \"number\" && absDiff > max)\n    return fullDateFormatter(new Date(from));\n  if (typeof max === \"string\") {\n    const unitMax = (_a = units.find((i) => i.name === max)) == null ? void 0 : _a.max;\n    if (unitMax && absDiff > unitMax)\n      return fullDateFormatter(new Date(from));\n  }\n  for (const [idx, unit] of units.entries()) {\n    const val = getValue(diff, unit);\n    if (val <= 0 && units[idx - 1])\n      return format(diff, units[idx - 1]);\n    if (absDiff < unit.max)\n      return format(diff, unit);\n  }\n  return messages.invalid;\n}\n\nfunction useTimeoutPoll(fn, interval, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  const { start } = useTimeoutFn(loop, interval, { immediate });\n  const isActive = shallowRef(false);\n  async function loop() {\n    if (!isActive.value)\n      return;\n    await fn();\n    start();\n  }\n  function resume() {\n    if (!isActive.value) {\n      isActive.value = true;\n      if (immediateCallback)\n        fn();\n      start();\n    }\n  }\n  function pause() {\n    isActive.value = false;\n  }\n  if (immediate && isClient)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nfunction useTimestamp(options = {}) {\n  const {\n    controls: exposeControls = false,\n    offset = 0,\n    immediate = true,\n    interval = \"requestAnimationFrame\",\n    callback\n  } = options;\n  const ts = shallowRef(timestamp() + offset);\n  const update = () => ts.value = timestamp() + offset;\n  const cb = callback ? () => {\n    update();\n    callback(ts.value);\n  } : update;\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  if (exposeControls) {\n    return {\n      timestamp: ts,\n      ...controls\n    };\n  } else {\n    return ts;\n  }\n}\n\nfunction useTitle(newTitle = null, options = {}) {\n  var _a, _b, _c;\n  const {\n    document = defaultDocument,\n    restoreOnUnmount = (t) => t\n  } = options;\n  const originalTitle = (_a = document == null ? void 0 : document.title) != null ? _a : \"\";\n  const title = toRef((_b = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _b : null);\n  const isReadonly = !!(newTitle && typeof newTitle === \"function\");\n  function format(t) {\n    if (!(\"titleTemplate\" in options))\n      return t;\n    const template = options.titleTemplate || \"%s\";\n    return typeof template === \"function\" ? template(t) : toValue(template).replace(/%s/g, t);\n  }\n  watch(\n    title,\n    (newValue, oldValue) => {\n      if (newValue !== oldValue && document)\n        document.title = format(newValue != null ? newValue : \"\");\n    },\n    { immediate: true }\n  );\n  if (options.observe && !options.titleTemplate && document && !isReadonly) {\n    useMutationObserver(\n      (_c = document.head) == null ? void 0 : _c.querySelector(\"title\"),\n      () => {\n        if (document && document.title !== title.value)\n          title.value = format(document.title);\n      },\n      { childList: true }\n    );\n  }\n  tryOnScopeDispose(() => {\n    if (restoreOnUnmount) {\n      const restoredTitle = restoreOnUnmount(originalTitle, title.value || \"\");\n      if (restoredTitle != null && document)\n        document.title = restoredTitle;\n    }\n  });\n  return title;\n}\n\nconst _TransitionPresets = {\n  easeInSine: [0.12, 0, 0.39, 0],\n  easeOutSine: [0.61, 1, 0.88, 1],\n  easeInOutSine: [0.37, 0, 0.63, 1],\n  easeInQuad: [0.11, 0, 0.5, 0],\n  easeOutQuad: [0.5, 1, 0.89, 1],\n  easeInOutQuad: [0.45, 0, 0.55, 1],\n  easeInCubic: [0.32, 0, 0.67, 0],\n  easeOutCubic: [0.33, 1, 0.68, 1],\n  easeInOutCubic: [0.65, 0, 0.35, 1],\n  easeInQuart: [0.5, 0, 0.75, 0],\n  easeOutQuart: [0.25, 1, 0.5, 1],\n  easeInOutQuart: [0.76, 0, 0.24, 1],\n  easeInQuint: [0.64, 0, 0.78, 0],\n  easeOutQuint: [0.22, 1, 0.36, 1],\n  easeInOutQuint: [0.83, 0, 0.17, 1],\n  easeInExpo: [0.7, 0, 0.84, 0],\n  easeOutExpo: [0.16, 1, 0.3, 1],\n  easeInOutExpo: [0.87, 0, 0.13, 1],\n  easeInCirc: [0.55, 0, 1, 0.45],\n  easeOutCirc: [0, 0.55, 0.45, 1],\n  easeInOutCirc: [0.85, 0, 0.15, 1],\n  easeInBack: [0.36, 0, 0.66, -0.56],\n  easeOutBack: [0.34, 1.56, 0.64, 1],\n  easeInOutBack: [0.68, -0.6, 0.32, 1.6]\n};\nconst TransitionPresets = /* @__PURE__ */ Object.assign({}, { linear: identity }, _TransitionPresets);\nfunction createEasingFunction([p0, p1, p2, p3]) {\n  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;\n  const b = (a1, a2) => 3 * a2 - 6 * a1;\n  const c = (a1) => 3 * a1;\n  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\n  const getTforX = (x) => {\n    let aGuessT = x;\n    for (let i = 0; i < 4; ++i) {\n      const currentSlope = getSlope(aGuessT, p0, p2);\n      if (currentSlope === 0)\n        return aGuessT;\n      const currentX = calcBezier(aGuessT, p0, p2) - x;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);\n}\nfunction lerp(a, b, alpha) {\n  return a + alpha * (b - a);\n}\nfunction toVec(t) {\n  return (typeof t === \"number\" ? [t] : t) || [];\n}\nfunction executeTransition(source, from, to, options = {}) {\n  var _a, _b;\n  const fromVal = toValue(from);\n  const toVal = toValue(to);\n  const v1 = toVec(fromVal);\n  const v2 = toVec(toVal);\n  const duration = (_a = toValue(options.duration)) != null ? _a : 1e3;\n  const startedAt = Date.now();\n  const endAt = Date.now() + duration;\n  const trans = typeof options.transition === \"function\" ? options.transition : (_b = toValue(options.transition)) != null ? _b : identity;\n  const ease = typeof trans === \"function\" ? trans : createEasingFunction(trans);\n  return new Promise((resolve) => {\n    source.value = fromVal;\n    const tick = () => {\n      var _a2;\n      if ((_a2 = options.abort) == null ? void 0 : _a2.call(options)) {\n        resolve();\n        return;\n      }\n      const now = Date.now();\n      const alpha = ease((now - startedAt) / duration);\n      const arr = toVec(source.value).map((n, i) => lerp(v1[i], v2[i], alpha));\n      if (Array.isArray(source.value))\n        source.value = arr.map((n, i) => {\n          var _a3, _b2;\n          return lerp((_a3 = v1[i]) != null ? _a3 : 0, (_b2 = v2[i]) != null ? _b2 : 0, alpha);\n        });\n      else if (typeof source.value === \"number\")\n        source.value = arr[0];\n      if (now < endAt) {\n        requestAnimationFrame(tick);\n      } else {\n        source.value = toVal;\n        resolve();\n      }\n    };\n    tick();\n  });\n}\nfunction useTransition(source, options = {}) {\n  let currentId = 0;\n  const sourceVal = () => {\n    const v = toValue(source);\n    return typeof v === \"number\" ? v : v.map(toValue);\n  };\n  const outputRef = ref(sourceVal());\n  watch(sourceVal, async (to) => {\n    var _a, _b;\n    if (toValue(options.disabled))\n      return;\n    const id = ++currentId;\n    if (options.delay)\n      await promiseTimeout(toValue(options.delay));\n    if (id !== currentId)\n      return;\n    const toVal = Array.isArray(to) ? to.map(toValue) : toValue(to);\n    (_a = options.onStarted) == null ? void 0 : _a.call(options);\n    await executeTransition(outputRef, outputRef.value, toVal, {\n      ...options,\n      abort: () => {\n        var _a2;\n        return id !== currentId || ((_a2 = options.abort) == null ? void 0 : _a2.call(options));\n      }\n    });\n    (_b = options.onFinished) == null ? void 0 : _b.call(options);\n  }, { deep: true });\n  watch(() => toValue(options.disabled), (disabled) => {\n    if (disabled) {\n      currentId++;\n      outputRef.value = sourceVal();\n    }\n  });\n  tryOnScopeDispose(() => {\n    currentId++;\n  });\n  return computed(() => toValue(options.disabled) ? sourceVal() : outputRef.value);\n}\n\nfunction useUrlSearchParams(mode = \"history\", options = {}) {\n  const {\n    initialValue = {},\n    removeNullishValues = true,\n    removeFalsyValues = false,\n    write: enableWrite = true,\n    writeMode = \"replace\",\n    window = defaultWindow\n  } = options;\n  if (!window)\n    return reactive(initialValue);\n  const state = reactive({});\n  function getRawParams() {\n    if (mode === \"history\") {\n      return window.location.search || \"\";\n    } else if (mode === \"hash\") {\n      const hash = window.location.hash || \"\";\n      const index = hash.indexOf(\"?\");\n      return index > 0 ? hash.slice(index) : \"\";\n    } else {\n      return (window.location.hash || \"\").replace(/^#/, \"\");\n    }\n  }\n  function constructQuery(params) {\n    const stringified = params.toString();\n    if (mode === \"history\")\n      return `${stringified ? `?${stringified}` : \"\"}${window.location.hash || \"\"}`;\n    if (mode === \"hash-params\")\n      return `${window.location.search || \"\"}${stringified ? `#${stringified}` : \"\"}`;\n    const hash = window.location.hash || \"#\";\n    const index = hash.indexOf(\"?\");\n    if (index > 0)\n      return `${window.location.search || \"\"}${hash.slice(0, index)}${stringified ? `?${stringified}` : \"\"}`;\n    return `${window.location.search || \"\"}${hash}${stringified ? `?${stringified}` : \"\"}`;\n  }\n  function read() {\n    return new URLSearchParams(getRawParams());\n  }\n  function updateState(params) {\n    const unusedKeys = new Set(Object.keys(state));\n    for (const key of params.keys()) {\n      const paramsForKey = params.getAll(key);\n      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || \"\";\n      unusedKeys.delete(key);\n    }\n    Array.from(unusedKeys).forEach((key) => delete state[key]);\n  }\n  const { pause, resume } = pausableWatch(\n    state,\n    () => {\n      const params = new URLSearchParams(\"\");\n      Object.keys(state).forEach((key) => {\n        const mapEntry = state[key];\n        if (Array.isArray(mapEntry))\n          mapEntry.forEach((value) => params.append(key, value));\n        else if (removeNullishValues && mapEntry == null)\n          params.delete(key);\n        else if (removeFalsyValues && !mapEntry)\n          params.delete(key);\n        else\n          params.set(key, mapEntry);\n      });\n      write(params, false);\n    },\n    { deep: true }\n  );\n  function write(params, shouldUpdate) {\n    pause();\n    if (shouldUpdate)\n      updateState(params);\n    if (writeMode === \"replace\") {\n      window.history.replaceState(\n        window.history.state,\n        window.document.title,\n        window.location.pathname + constructQuery(params)\n      );\n    } else {\n      window.history.pushState(\n        window.history.state,\n        window.document.title,\n        window.location.pathname + constructQuery(params)\n      );\n    }\n    resume();\n  }\n  function onChanged() {\n    if (!enableWrite)\n      return;\n    write(read(), true);\n  }\n  const listenerOptions = { passive: true };\n  useEventListener(window, \"popstate\", onChanged, listenerOptions);\n  if (mode !== \"history\")\n    useEventListener(window, \"hashchange\", onChanged, listenerOptions);\n  const initial = read();\n  if (initial.keys().next().value)\n    updateState(initial);\n  else\n    Object.assign(state, initialValue);\n  return state;\n}\n\nfunction useUserMedia(options = {}) {\n  var _a, _b;\n  const enabled = shallowRef((_a = options.enabled) != null ? _a : false);\n  const autoSwitch = shallowRef((_b = options.autoSwitch) != null ? _b : true);\n  const constraints = ref(options.constraints);\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;\n  });\n  const stream = shallowRef();\n  function getDeviceOptions(type) {\n    switch (type) {\n      case \"video\": {\n        if (constraints.value)\n          return constraints.value.video || false;\n        break;\n      }\n      case \"audio\": {\n        if (constraints.value)\n          return constraints.value.audio || false;\n        break;\n      }\n    }\n  }\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getUserMedia({\n      video: getDeviceOptions(\"video\"),\n      audio: getDeviceOptions(\"audio\")\n    });\n    return stream.value;\n  }\n  function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  async function restart() {\n    _stop();\n    return await start();\n  }\n  watch(\n    enabled,\n    (v) => {\n      if (v)\n        _start();\n      else _stop();\n    },\n    { immediate: true }\n  );\n  watch(\n    constraints,\n    () => {\n      if (autoSwitch.value && stream.value)\n        restart();\n    },\n    { immediate: true }\n  );\n  tryOnScopeDispose(() => {\n    stop();\n  });\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    restart,\n    constraints,\n    enabled,\n    autoSwitch\n  };\n}\n\nfunction useVModel(props, key, emit, options = {}) {\n  var _a, _b, _c;\n  const {\n    clone = false,\n    passive = false,\n    eventName,\n    deep = false,\n    defaultValue,\n    shouldEmit\n  } = options;\n  const vm = getCurrentInstance();\n  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));\n  let event = eventName;\n  if (!key) {\n    key = \"modelValue\";\n  }\n  event = event || `update:${key.toString()}`;\n  const cloneFn = (val) => !clone ? val : typeof clone === \"function\" ? clone(val) : cloneFnJSON(val);\n  const getValue = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;\n  const triggerEmit = (value) => {\n    if (shouldEmit) {\n      if (shouldEmit(value))\n        _emit(event, value);\n    } else {\n      _emit(event, value);\n    }\n  };\n  if (passive) {\n    const initialValue = getValue();\n    const proxy = ref(initialValue);\n    let isUpdating = false;\n    watch(\n      () => props[key],\n      (v) => {\n        if (!isUpdating) {\n          isUpdating = true;\n          proxy.value = cloneFn(v);\n          nextTick(() => isUpdating = false);\n        }\n      }\n    );\n    watch(\n      proxy,\n      (v) => {\n        if (!isUpdating && (v !== props[key] || deep))\n          triggerEmit(v);\n      },\n      { deep }\n    );\n    return proxy;\n  } else {\n    return computed({\n      get() {\n        return getValue();\n      },\n      set(value) {\n        triggerEmit(value);\n      }\n    });\n  }\n}\n\nfunction useVModels(props, emit, options = {}) {\n  const ret = {};\n  for (const key in props) {\n    ret[key] = useVModel(\n      props,\n      key,\n      emit,\n      options\n    );\n  }\n  return ret;\n}\n\nfunction useVibrate(options) {\n  const {\n    pattern = [],\n    interval = 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => typeof navigator !== \"undefined\" && \"vibrate\" in navigator);\n  const patternRef = toRef(pattern);\n  let intervalControls;\n  const vibrate = (pattern2 = patternRef.value) => {\n    if (isSupported.value)\n      navigator.vibrate(pattern2);\n  };\n  const stop = () => {\n    if (isSupported.value)\n      navigator.vibrate(0);\n    intervalControls == null ? void 0 : intervalControls.pause();\n  };\n  if (interval > 0) {\n    intervalControls = useIntervalFn(\n      vibrate,\n      interval,\n      {\n        immediate: false,\n        immediateCallback: false\n      }\n    );\n  }\n  return {\n    isSupported,\n    pattern,\n    intervalControls,\n    vibrate,\n    stop\n  };\n}\n\nfunction useVirtualList(list, options) {\n  const { containerStyle, wrapperProps, scrollTo, calculateRange, currentList, containerRef } = \"itemHeight\" in options ? useVerticalVirtualList(options, list) : useHorizontalVirtualList(options, list);\n  return {\n    list: currentList,\n    scrollTo,\n    containerProps: {\n      ref: containerRef,\n      onScroll: () => {\n        calculateRange();\n      },\n      style: containerStyle\n    },\n    wrapperProps\n  };\n}\nfunction useVirtualListResources(list) {\n  const containerRef = shallowRef(null);\n  const size = useElementSize(containerRef);\n  const currentList = ref([]);\n  const source = shallowRef(list);\n  const state = ref({ start: 0, end: 10 });\n  return { state, source, currentList, size, containerRef };\n}\nfunction createGetViewCapacity(state, source, itemSize) {\n  return (containerSize) => {\n    if (typeof itemSize === \"number\")\n      return Math.ceil(containerSize / itemSize);\n    const { start = 0 } = state.value;\n    let sum = 0;\n    let capacity = 0;\n    for (let i = start; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      capacity = i;\n      if (sum > containerSize)\n        break;\n    }\n    return capacity - start;\n  };\n}\nfunction createGetOffset(source, itemSize) {\n  return (scrollDirection) => {\n    if (typeof itemSize === \"number\")\n      return Math.floor(scrollDirection / itemSize) + 1;\n    let sum = 0;\n    let offset = 0;\n    for (let i = 0; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      if (sum >= scrollDirection) {\n        offset = i;\n        break;\n      }\n    }\n    return offset + 1;\n  };\n}\nfunction createCalculateRange(type, overscan, getOffset, getViewCapacity, { containerRef, state, currentList, source }) {\n  return () => {\n    const element = containerRef.value;\n    if (element) {\n      const offset = getOffset(type === \"vertical\" ? element.scrollTop : element.scrollLeft);\n      const viewCapacity = getViewCapacity(type === \"vertical\" ? element.clientHeight : element.clientWidth);\n      const from = offset - overscan;\n      const to = offset + viewCapacity + overscan;\n      state.value = {\n        start: from < 0 ? 0 : from,\n        end: to > source.value.length ? source.value.length : to\n      };\n      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({\n        data: ele,\n        index: index + state.value.start\n      }));\n    }\n  };\n}\nfunction createGetDistance(itemSize, source) {\n  return (index) => {\n    if (typeof itemSize === \"number\") {\n      const size2 = index * itemSize;\n      return size2;\n    }\n    const size = source.value.slice(0, index).reduce((sum, _, i) => sum + itemSize(i), 0);\n    return size;\n  };\n}\nfunction useWatchForSizes(size, list, containerRef, calculateRange) {\n  watch([size.width, size.height, list, containerRef], () => {\n    calculateRange();\n  });\n}\nfunction createComputedTotalSize(itemSize, source) {\n  return computed(() => {\n    if (typeof itemSize === \"number\")\n      return source.value.length * itemSize;\n    return source.value.reduce((sum, _, index) => sum + itemSize(index), 0);\n  });\n}\nconst scrollToDictionaryForElementScrollKey = {\n  horizontal: \"scrollLeft\",\n  vertical: \"scrollTop\"\n};\nfunction createScrollTo(type, calculateRange, getDistance, containerRef) {\n  return (index) => {\n    if (containerRef.value) {\n      containerRef.value[scrollToDictionaryForElementScrollKey[type]] = getDistance(index);\n      calculateRange();\n    }\n  };\n}\nfunction useHorizontalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowX: \"auto\" };\n  const { itemWidth, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemWidth);\n  const getOffset = createGetOffset(source, itemWidth);\n  const calculateRange = createCalculateRange(\"horizontal\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceLeft = createGetDistance(itemWidth, source);\n  const offsetLeft = computed(() => getDistanceLeft(state.value.start));\n  const totalWidth = createComputedTotalSize(itemWidth, source);\n  useWatchForSizes(size, list, containerRef, calculateRange);\n  const scrollTo = createScrollTo(\"horizontal\", calculateRange, getDistanceLeft, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        height: \"100%\",\n        width: `${totalWidth.value - offsetLeft.value}px`,\n        marginLeft: `${offsetLeft.value}px`,\n        display: \"flex\"\n      }\n    };\n  });\n  return {\n    scrollTo,\n    calculateRange,\n    wrapperProps,\n    containerStyle,\n    currentList,\n    containerRef\n  };\n}\nfunction useVerticalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowY: \"auto\" };\n  const { itemHeight, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemHeight);\n  const getOffset = createGetOffset(source, itemHeight);\n  const calculateRange = createCalculateRange(\"vertical\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceTop = createGetDistance(itemHeight, source);\n  const offsetTop = computed(() => getDistanceTop(state.value.start));\n  const totalHeight = createComputedTotalSize(itemHeight, source);\n  useWatchForSizes(size, list, containerRef, calculateRange);\n  const scrollTo = createScrollTo(\"vertical\", calculateRange, getDistanceTop, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        width: \"100%\",\n        height: `${totalHeight.value - offsetTop.value}px`,\n        marginTop: `${offsetTop.value}px`\n      }\n    };\n  });\n  return {\n    calculateRange,\n    scrollTo,\n    containerStyle,\n    wrapperProps,\n    currentList,\n    containerRef\n  };\n}\n\nfunction useWakeLock(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    document = defaultDocument\n  } = options;\n  const requestedType = shallowRef(false);\n  const sentinel = shallowRef(null);\n  const documentVisibility = useDocumentVisibility({ document });\n  const isSupported = useSupported(() => navigator && \"wakeLock\" in navigator);\n  const isActive = computed(() => !!sentinel.value && documentVisibility.value === \"visible\");\n  if (isSupported.value) {\n    useEventListener(sentinel, \"release\", () => {\n      var _a, _b;\n      requestedType.value = (_b = (_a = sentinel.value) == null ? void 0 : _a.type) != null ? _b : false;\n    }, { passive: true });\n    whenever(\n      () => documentVisibility.value === \"visible\" && (document == null ? void 0 : document.visibilityState) === \"visible\" && requestedType.value,\n      (type) => {\n        requestedType.value = false;\n        forceRequest(type);\n      }\n    );\n  }\n  async function forceRequest(type) {\n    var _a;\n    await ((_a = sentinel.value) == null ? void 0 : _a.release());\n    sentinel.value = isSupported.value ? await navigator.wakeLock.request(type) : null;\n  }\n  async function request(type) {\n    if (documentVisibility.value === \"visible\")\n      await forceRequest(type);\n    else\n      requestedType.value = type;\n  }\n  async function release() {\n    requestedType.value = false;\n    const s = sentinel.value;\n    sentinel.value = null;\n    await (s == null ? void 0 : s.release());\n  }\n  return {\n    sentinel,\n    isSupported,\n    isActive,\n    request,\n    forceRequest,\n    release\n  };\n}\n\nfunction useWebNotification(options = {}) {\n  const {\n    window = defaultWindow,\n    requestPermissions: _requestForPermissions = true\n  } = options;\n  const defaultWebNotificationOptions = options;\n  const isSupported = useSupported(() => {\n    if (!window || !(\"Notification\" in window))\n      return false;\n    if (Notification.permission === \"granted\")\n      return true;\n    try {\n      const notification2 = new Notification(\"\");\n      notification2.onshow = () => {\n        notification2.close();\n      };\n    } catch (e) {\n      if (e.name === \"TypeError\")\n        return false;\n    }\n    return true;\n  });\n  const permissionGranted = shallowRef(isSupported.value && \"permission\" in Notification && Notification.permission === \"granted\");\n  const notification = ref(null);\n  const ensurePermissions = async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionGranted.value && Notification.permission !== \"denied\") {\n      const result = await Notification.requestPermission();\n      if (result === \"granted\")\n        permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  };\n  const { on: onClick, trigger: clickTrigger } = createEventHook();\n  const { on: onShow, trigger: showTrigger } = createEventHook();\n  const { on: onError, trigger: errorTrigger } = createEventHook();\n  const { on: onClose, trigger: closeTrigger } = createEventHook();\n  const show = async (overrides) => {\n    if (!isSupported.value || !permissionGranted.value)\n      return;\n    const options2 = Object.assign({}, defaultWebNotificationOptions, overrides);\n    notification.value = new Notification(options2.title || \"\", options2);\n    notification.value.onclick = clickTrigger;\n    notification.value.onshow = showTrigger;\n    notification.value.onerror = errorTrigger;\n    notification.value.onclose = closeTrigger;\n    return notification.value;\n  };\n  const close = () => {\n    if (notification.value)\n      notification.value.close();\n    notification.value = null;\n  };\n  if (_requestForPermissions)\n    tryOnMounted(ensurePermissions);\n  tryOnScopeDispose(close);\n  if (isSupported.value && window) {\n    const document = window.document;\n    useEventListener(document, \"visibilitychange\", (e) => {\n      e.preventDefault();\n      if (document.visibilityState === \"visible\") {\n        close();\n      }\n    });\n  }\n  return {\n    isSupported,\n    notification,\n    ensurePermissions,\n    permissionGranted,\n    show,\n    close,\n    onClick,\n    onShow,\n    onError,\n    onClose\n  };\n}\n\nconst DEFAULT_PING_MESSAGE = \"ping\";\nfunction resolveNestedOptions(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useWebSocket(url, options = {}) {\n  const {\n    onConnected,\n    onDisconnected,\n    onError,\n    onMessage,\n    immediate = true,\n    autoConnect = true,\n    autoClose = true,\n    protocols = []\n  } = options;\n  const data = ref(null);\n  const status = shallowRef(\"CLOSED\");\n  const wsRef = ref();\n  const urlRef = toRef(url);\n  let heartbeatPause;\n  let heartbeatResume;\n  let explicitlyClosed = false;\n  let retried = 0;\n  let bufferedData = [];\n  let retryTimeout;\n  let pongTimeoutWait;\n  const _sendBuffer = () => {\n    if (bufferedData.length && wsRef.value && status.value === \"OPEN\") {\n      for (const buffer of bufferedData)\n        wsRef.value.send(buffer);\n      bufferedData = [];\n    }\n  };\n  const resetRetry = () => {\n    if (retryTimeout != null) {\n      clearTimeout(retryTimeout);\n      retryTimeout = void 0;\n    }\n  };\n  const resetHeartbeat = () => {\n    clearTimeout(pongTimeoutWait);\n    pongTimeoutWait = void 0;\n  };\n  const close = (code = 1e3, reason) => {\n    resetRetry();\n    if (!isClient && !isWorker || !wsRef.value)\n      return;\n    explicitlyClosed = true;\n    resetHeartbeat();\n    heartbeatPause == null ? void 0 : heartbeatPause();\n    wsRef.value.close(code, reason);\n    wsRef.value = void 0;\n  };\n  const send = (data2, useBuffer = true) => {\n    if (!wsRef.value || status.value !== \"OPEN\") {\n      if (useBuffer)\n        bufferedData.push(data2);\n      return false;\n    }\n    _sendBuffer();\n    wsRef.value.send(data2);\n    return true;\n  };\n  const _init = () => {\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\n      return;\n    const ws = new WebSocket(urlRef.value, protocols);\n    wsRef.value = ws;\n    status.value = \"CONNECTING\";\n    ws.onopen = () => {\n      status.value = \"OPEN\";\n      retried = 0;\n      onConnected == null ? void 0 : onConnected(ws);\n      heartbeatResume == null ? void 0 : heartbeatResume();\n      _sendBuffer();\n    };\n    ws.onclose = (ev) => {\n      status.value = \"CLOSED\";\n      resetHeartbeat();\n      heartbeatPause == null ? void 0 : heartbeatPause();\n      onDisconnected == null ? void 0 : onDisconnected(ws, ev);\n      if (!explicitlyClosed && options.autoReconnect && (wsRef.value == null || ws === wsRef.value)) {\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions(options.autoReconnect);\n        const checkRetires = typeof retries === \"function\" ? retries : () => typeof retries === \"number\" && (retries < 0 || retried < retries);\n        if (checkRetires(retried)) {\n          retried += 1;\n          retryTimeout = setTimeout(_init, delay);\n        } else {\n          onFailed == null ? void 0 : onFailed();\n        }\n      }\n    };\n    ws.onerror = (e) => {\n      onError == null ? void 0 : onError(ws, e);\n    };\n    ws.onmessage = (e) => {\n      if (options.heartbeat) {\n        resetHeartbeat();\n        const {\n          message = DEFAULT_PING_MESSAGE,\n          responseMessage = message\n        } = resolveNestedOptions(options.heartbeat);\n        if (e.data === toValue(responseMessage))\n          return;\n      }\n      data.value = e.data;\n      onMessage == null ? void 0 : onMessage(ws, e);\n    };\n  };\n  if (options.heartbeat) {\n    const {\n      message = DEFAULT_PING_MESSAGE,\n      interval = 1e3,\n      pongTimeout = 1e3\n    } = resolveNestedOptions(options.heartbeat);\n    const { pause, resume } = useIntervalFn(\n      () => {\n        send(toValue(message), false);\n        if (pongTimeoutWait != null)\n          return;\n        pongTimeoutWait = setTimeout(() => {\n          close();\n          explicitlyClosed = false;\n        }, pongTimeout);\n      },\n      interval,\n      { immediate: false }\n    );\n    heartbeatPause = pause;\n    heartbeatResume = resume;\n  }\n  if (autoClose) {\n    if (isClient)\n      useEventListener(\"beforeunload\", () => close(), { passive: true });\n    tryOnScopeDispose(close);\n  }\n  const open = () => {\n    if (!isClient && !isWorker)\n      return;\n    close();\n    explicitlyClosed = false;\n    retried = 0;\n    _init();\n  };\n  if (immediate)\n    open();\n  if (autoConnect)\n    watch(urlRef, open);\n  return {\n    data,\n    status,\n    close,\n    send,\n    open,\n    ws: wsRef\n  };\n}\n\nfunction useWebWorker(arg0, workerOptions, options) {\n  const {\n    window = defaultWindow\n  } = options != null ? options : {};\n  const data = ref(null);\n  const worker = shallowRef();\n  const post = (...args) => {\n    if (!worker.value)\n      return;\n    worker.value.postMessage(...args);\n  };\n  const terminate = function terminate2() {\n    if (!worker.value)\n      return;\n    worker.value.terminate();\n  };\n  if (window) {\n    if (typeof arg0 === \"string\")\n      worker.value = new Worker(arg0, workerOptions);\n    else if (typeof arg0 === \"function\")\n      worker.value = arg0();\n    else\n      worker.value = arg0;\n    worker.value.onmessage = (e) => {\n      data.value = e.data;\n    };\n    tryOnScopeDispose(() => {\n      if (worker.value)\n        worker.value.terminate();\n    });\n  }\n  return {\n    data,\n    post,\n    terminate,\n    worker\n  };\n}\n\nfunction depsParser(deps, localDeps) {\n  if (deps.length === 0 && localDeps.length === 0)\n    return \"\";\n  const depsString = deps.map((dep) => `'${dep}'`).toString();\n  const depsFunctionString = localDeps.filter((dep) => typeof dep === \"function\").map((fn) => {\n    const str = fn.toString();\n    if (str.trim().startsWith(\"function\")) {\n      return str;\n    } else {\n      const name = fn.name;\n      return `const ${name} = ${str}`;\n    }\n  }).join(\";\");\n  const importString = `importScripts(${depsString});`;\n  return `${depsString.trim() === \"\" ? \"\" : importString} ${depsFunctionString}`;\n}\n\nfunction jobRunner(userFunc) {\n  return (e) => {\n    const userFuncArgs = e.data[0];\n    return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {\n      postMessage([\"SUCCESS\", result]);\n    }).catch((error) => {\n      postMessage([\"ERROR\", error]);\n    });\n  };\n}\n\nfunction createWorkerBlobUrl(fn, deps, localDeps) {\n  const blobCode = `${depsParser(deps, localDeps)}; onmessage=(${jobRunner})(${fn})`;\n  const blob = new Blob([blobCode], { type: \"text/javascript\" });\n  const url = URL.createObjectURL(blob);\n  return url;\n}\n\nfunction useWebWorkerFn(fn, options = {}) {\n  const {\n    dependencies = [],\n    localDependencies = [],\n    timeout,\n    window = defaultWindow\n  } = options;\n  const worker = ref();\n  const workerStatus = shallowRef(\"PENDING\");\n  const promise = ref({});\n  const timeoutId = shallowRef();\n  const workerTerminate = (status = \"PENDING\") => {\n    if (worker.value && worker.value._url && window) {\n      worker.value.terminate();\n      URL.revokeObjectURL(worker.value._url);\n      promise.value = {};\n      worker.value = void 0;\n      window.clearTimeout(timeoutId.value);\n      workerStatus.value = status;\n    }\n  };\n  workerTerminate();\n  tryOnScopeDispose(workerTerminate);\n  const generateWorker = () => {\n    const blobUrl = createWorkerBlobUrl(fn, dependencies, localDependencies);\n    const newWorker = new Worker(blobUrl);\n    newWorker._url = blobUrl;\n    newWorker.onmessage = (e) => {\n      const { resolve = () => {\n      }, reject = () => {\n      } } = promise.value;\n      const [status, result] = e.data;\n      switch (status) {\n        case \"SUCCESS\":\n          resolve(result);\n          workerTerminate(status);\n          break;\n        default:\n          reject(result);\n          workerTerminate(\"ERROR\");\n          break;\n      }\n    };\n    newWorker.onerror = (e) => {\n      const { reject = () => {\n      } } = promise.value;\n      e.preventDefault();\n      reject(e);\n      workerTerminate(\"ERROR\");\n    };\n    if (timeout) {\n      timeoutId.value = setTimeout(\n        () => workerTerminate(\"TIMEOUT_EXPIRED\"),\n        timeout\n      );\n    }\n    return newWorker;\n  };\n  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {\n    var _a;\n    promise.value = {\n      resolve,\n      reject\n    };\n    (_a = worker.value) == null ? void 0 : _a.postMessage([[...fnArgs]]);\n    workerStatus.value = \"RUNNING\";\n  });\n  const workerFn = (...fnArgs) => {\n    if (workerStatus.value === \"RUNNING\") {\n      console.error(\n        \"[useWebWorkerFn] You can only run one instance of the worker at a time.\"\n      );\n      return Promise.reject();\n    }\n    worker.value = generateWorker();\n    return callWorker(...fnArgs);\n  };\n  return {\n    workerFn,\n    workerStatus,\n    workerTerminate\n  };\n}\n\nfunction useWindowFocus(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return shallowRef(false);\n  const focused = shallowRef(window.document.hasFocus());\n  const listenerOptions = { passive: true };\n  useEventListener(window, \"blur\", () => {\n    focused.value = false;\n  }, listenerOptions);\n  useEventListener(window, \"focus\", () => {\n    focused.value = true;\n  }, listenerOptions);\n  return focused;\n}\n\nfunction useWindowScroll(options = {}) {\n  const { window = defaultWindow, ...rest } = options;\n  return useScroll(window, rest);\n}\n\nfunction useWindowSize(options = {}) {\n  const {\n    window = defaultWindow,\n    initialWidth = Number.POSITIVE_INFINITY,\n    initialHeight = Number.POSITIVE_INFINITY,\n    listenOrientation = true,\n    includeScrollbar = true,\n    type = \"inner\"\n  } = options;\n  const width = shallowRef(initialWidth);\n  const height = shallowRef(initialHeight);\n  const update = () => {\n    if (window) {\n      if (type === \"outer\") {\n        width.value = window.outerWidth;\n        height.value = window.outerHeight;\n      } else if (type === \"visual\" && window.visualViewport) {\n        const { width: visualViewportWidth, height: visualViewportHeight, scale } = window.visualViewport;\n        width.value = Math.round(visualViewportWidth * scale);\n        height.value = Math.round(visualViewportHeight * scale);\n      } else if (includeScrollbar) {\n        width.value = window.innerWidth;\n        height.value = window.innerHeight;\n      } else {\n        width.value = window.document.documentElement.clientWidth;\n        height.value = window.document.documentElement.clientHeight;\n      }\n    }\n  };\n  update();\n  tryOnMounted(update);\n  const listenerOptions = { passive: true };\n  useEventListener(\"resize\", update, listenerOptions);\n  if (window && type === \"visual\" && window.visualViewport) {\n    useEventListener(window.visualViewport, \"resize\", update, listenerOptions);\n  }\n  if (listenOrientation) {\n    const matches = useMediaQuery(\"(orientation: portrait)\");\n    watch(matches, () => update());\n  }\n  return { width, height };\n}\n\nexport { DefaultMagicKeysAliasMap, StorageSerializers, TransitionPresets, computedAsync as asyncComputed, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsElement, breakpointsMasterCss, breakpointsPrimeFlex, breakpointsQuasar, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, breakpointsVuetifyV2, breakpointsVuetifyV3, cloneFnJSON, computedAsync, computedInject, createFetch, createReusableTemplate, createTemplatePromise, createUnrefFn, customStorageEventName, defaultDocument, defaultLocation, defaultNavigator, defaultWindow, executeTransition, formatTimeAgo, getSSRHandler, mapGamepadToXbox360Controller, onClickOutside, onElementRemoval, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onLongPress, onStartTyping, provideSSRWidth, setSSRHandler, templateRef, unrefElement, useActiveElement, useAnimate, useAsyncQueue, useAsyncState, useBase64, useBattery, useBluetooth, useBreakpoints, useBroadcastChannel, useBrowserLocation, useCached, useClipboard, useClipboardItems, useCloned, useColorMode, useConfirmDialog, useCountdown, useCssVar, useCurrentElement, useCycleList, useDark, useDebouncedRefHistory, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDisplayMedia, useDocumentVisibility, useDraggable, useDropZone, useElementBounding, useElementByPoint, useElementHover, useElementSize, useElementVisibility, useEventBus, useEventListener, useEventSource, useEyeDropper, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useFullscreen, useGamepad, useGeolocation, useIdle, useImage, useInfiniteScroll, useIntersectionObserver, useKeyModifier, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNavigatorLanguage, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, useParallax, useParentElement, usePerformanceObserver, usePermission, usePointer, usePointerLock, usePointerSwipe, usePreferredColorScheme, usePreferredContrast, usePreferredDark, usePreferredLanguages, usePreferredReducedMotion, usePreferredReducedTransparency, usePrevious, useRafFn, useRefHistory, useResizeObserver, useSSRWidth, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSorted, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorage, useStorageAsync, useStyleTag, useSupported, useSwipe, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottledRefHistory, useTimeAgo, useTimeoutPoll, useTimestamp, useTitle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useVirtualList, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowFocus, useWindowScroll, useWindowSize };\n","import { unref, nextTick, getCurrentInstance, onMounted, onUnmounted, ref } from 'vue-demi';\n\nfunction supportsGestureEvents() {\n  try {\n    return \"constructor\" in GestureEvent;\n  } catch (e) {\n    return false;\n  }\n}\nfunction supportsTouchEvents() {\n  return typeof window !== \"undefined\" && \"ontouchstart\" in window;\n}\nfunction getEventTouches(event) {\n  if (\"pointerId\" in event)\n    return null;\n  return event.type === \"touchend\" ? event.changedTouches : event.targetTouches;\n}\nfunction getTouchIds(event) {\n  return Array.from(getEventTouches(event)).map((t) => t.identifier);\n}\nfunction getGenericEventData(event) {\n  const buttons = \"buttons\" in event ? event.buttons : 0;\n  const { shiftKey, altKey, metaKey, ctrlKey } = event;\n  return { buttons, shiftKey, altKey, metaKey, ctrlKey };\n}\nconst identity$1 = (xy) => xy;\nfunction getPointerEventValues(event, transform = identity$1) {\n  const touchEvents = getEventTouches(event);\n  const { clientX, clientY } = touchEvents ? touchEvents[0] : event;\n  return transform([clientX, clientY]);\n}\nfunction getTwoTouchesEventValues(event, pointerIds, transform = identity$1) {\n  const [A, B] = Array.from(event.touches).filter(\n    (t) => pointerIds.includes(t.identifier)\n  );\n  if (!A || !B)\n    throw Error(`The event doesn't have two pointers matching the pointerIds`);\n  const dx = B.clientX - A.clientX;\n  const dy = B.clientY - A.clientY;\n  const cx = (B.clientX + A.clientX) / 2;\n  const cy = (B.clientY + A.clientY) / 2;\n  const distance = Math.hypot(dx, dy);\n  const angle = -(Math.atan2(dx, dy) * 180) / Math.PI;\n  const values = transform([distance, angle]);\n  const origin = transform([cx, cy]);\n  return { values, origin };\n}\nfunction getScrollEventValues(event, transform = identity$1) {\n  const {\n    scrollX,\n    scrollY,\n    scrollLeft,\n    scrollTop\n  } = event.currentTarget;\n  return transform([scrollX || scrollLeft || 0, scrollY || scrollTop || 0]);\n}\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nfunction getWheelEventValues(event, transform = identity$1) {\n  let { deltaX, deltaY, deltaMode } = event;\n  if (deltaMode === 1) {\n    deltaX *= LINE_HEIGHT;\n    deltaY *= LINE_HEIGHT;\n  } else if (deltaMode === 2) {\n    deltaX *= PAGE_HEIGHT;\n    deltaY *= PAGE_HEIGHT;\n  }\n  return transform([deltaX, deltaY]);\n}\nfunction getWebkitGestureEventValues(event, transform = identity$1) {\n  return transform([event.scale, event.rotation]);\n}\n\nfunction noop() {\n}\nfunction chainFns(...fns) {\n  if (fns.length === 0)\n    return noop;\n  if (fns.length === 1)\n    return fns[0];\n  return function() {\n    var result;\n    for (let fn of fns) {\n      result = fn.apply(this, arguments) || result;\n    }\n    return result;\n  };\n}\nfunction ensureVector(value, fallback) {\n  if (value === void 0) {\n    if (fallback === void 0) {\n      throw new Error(\"Must define fallback value if undefined is expected\");\n    }\n    value = fallback;\n  }\n  if (Array.isArray(value))\n    return value;\n  return [value, value];\n}\nfunction assignDefault(value, fallback) {\n  return Object.assign({}, fallback, value || {});\n}\nfunction valueFn(v, ...args) {\n  if (typeof v === \"function\") {\n    return v(...args);\n  } else {\n    return v;\n  }\n}\n\nfunction getInitial(mixed) {\n  return {\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    _bounds: [\n      [-Infinity, Infinity],\n      [-Infinity, Infinity]\n    ],\n    _lastEventType: void 0,\n    _dragStarted: false,\n    _dragPreventScroll: false,\n    _dragIsTap: true,\n    _dragDelayed: false,\n    event: void 0,\n    intentional: false,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: void 0,\n    args: void 0,\n    ...mixed\n  };\n}\nfunction getInitialState() {\n  const shared = {\n    hovering: false,\n    scrolling: false,\n    wheeling: false,\n    dragging: false,\n    moving: false,\n    pinching: false,\n    touches: 0,\n    buttons: 0,\n    down: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    ctrlKey: false,\n    locked: false\n  };\n  const drag = getInitial({\n    _pointerId: void 0,\n    axis: void 0,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0,\n    tap: false,\n    swipe: [0, 0]\n  });\n  const pinch = getInitial({\n    // @ts-expect-error when used _pointerIds we can assert its type will be [number, number]\n    _pointerIds: [],\n    da: [0, 0],\n    vdva: [0, 0],\n    // @ts-expect-error origin can never be passed as undefined in userland\n    origin: void 0,\n    turns: 0\n  });\n  const wheel = getInitial({\n    axis: void 0,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  const move = getInitial({\n    axis: void 0,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  const scroll = getInitial({\n    axis: void 0,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  return { shared, drag, pinch, wheel, move, scroll };\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$6 = (obj, key, value) => {\n  __defNormalProp$6(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass Controller {\n  constructor(classes) {\n    this.classes = classes;\n    __publicField$6(this, \"nativeRefs\");\n    __publicField$6(this, \"config\");\n    __publicField$6(this, \"handlers\");\n    __publicField$6(this, \"state\");\n    // state for all gestures\n    __publicField$6(this, \"timeouts\");\n    // tracks timeouts of debounced gestures\n    __publicField$6(this, \"domListeners\");\n    // when config.domTarget is set, we attach events directly to the dom\n    __publicField$6(this, \"windowListeners\");\n    // keeps track of window listeners added by gestures (drag only at the moment)\n    __publicField$6(this, \"pointerIds\", /* @__PURE__ */ new Set());\n    // register Pointer Events pointerIds\n    __publicField$6(this, \"touchIds\", /* @__PURE__ */ new Set());\n    // register Touch Events identifiers\n    __publicField$6(this, \"supportsTouchEvents\", supportsTouchEvents());\n    __publicField$6(this, \"supportsGestureEvents\", supportsGestureEvents());\n    __publicField$6(this, \"bind\", (...args) => {\n      const bindings = {};\n      for (let RecognizerClass2 of this.classes)\n        new RecognizerClass2(this, args).addBindings(bindings);\n      for (let eventKey in this.nativeRefs) {\n        addBindings(\n          bindings,\n          eventKey,\n          (event) => this.nativeRefs[eventKey]({ ...this.state.shared, event, args })\n        );\n      }\n      if (this.config.domTarget) {\n        return updateDomListeners(this, bindings);\n      } else {\n        return getPropsListener(this, bindings);\n      }\n    });\n    /**\n     * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\n     */\n    __publicField$6(this, \"clean\", () => {\n      const { eventOptions, domTarget } = this.config;\n      const _target = unref(domTarget);\n      if (_target)\n        removeListeners(_target, takeAll(this.domListeners), eventOptions);\n      Object.values(this.timeouts).forEach(clearTimeout);\n      clearAllWindowListeners(this);\n    });\n    /**\n     * Resets state to the initial value.\n     */\n    __publicField$6(this, \"reset\", () => {\n      this.state = getInitialState();\n    });\n    this.classes = classes;\n    this.state = getInitialState();\n    this.timeouts = {};\n    this.domListeners = [];\n    this.windowListeners = {};\n  }\n}\nfunction addEventIds(controller, event) {\n  if (\"pointerId\" in event) {\n    controller.pointerIds.add(event.pointerId);\n  } else {\n    controller.touchIds = new Set(getTouchIds(event));\n  }\n}\nfunction removeEventIds(controller, event) {\n  if (\"pointerId\" in event) {\n    controller.pointerIds.delete(event.pointerId);\n  } else {\n    getTouchIds(event).forEach((id) => controller.touchIds.delete(id));\n  }\n}\nfunction clearAllWindowListeners(controller) {\n  const {\n    config: { window: el, eventOptions },\n    windowListeners\n  } = controller;\n  const _el = unref(el);\n  if (!_el)\n    return;\n  for (let stateKey in windowListeners) {\n    const handlers = windowListeners[stateKey];\n    removeListeners(_el, handlers, eventOptions);\n  }\n  controller.windowListeners = {};\n}\nfunction clearWindowListeners({ config, windowListeners }, stateKey, options = config.eventOptions) {\n  const _window = unref(config.window);\n  if (!_window)\n    return;\n  removeListeners(_window, windowListeners[stateKey], options);\n  delete windowListeners[stateKey];\n}\nfunction updateWindowListeners({ config, windowListeners }, stateKey, listeners = [], options = config.eventOptions) {\n  const _window = unref(config.window);\n  if (!_window)\n    return;\n  removeListeners(_window, windowListeners[stateKey], options);\n  addListeners(_window, windowListeners[stateKey] = listeners, options);\n}\nfunction updateDomListeners({ config, domListeners }, bindings) {\n  const { eventOptions, domTarget } = config;\n  const _target = unref(domTarget);\n  if (!_target)\n    throw new Error(\"domTarget must be defined\");\n  removeListeners(_target, takeAll(domListeners), eventOptions);\n  for (let [key, fns] of Object.entries(bindings)) {\n    const name = key.slice(2).toLowerCase();\n    domListeners.push([name, chainFns(...fns)]);\n  }\n  addListeners(_target, domListeners, eventOptions);\n}\nfunction getPropsListener({ config }, bindings) {\n  const props = {};\n  const captureString = config.eventOptions.capture ? \"Capture\" : \"\";\n  for (let [event, fns] of Object.entries(bindings)) {\n    const fnsArray = Array.isArray(fns) ? fns : [fns];\n    const key = event + captureString;\n    props[key] = chainFns(...fnsArray);\n  }\n  return props;\n}\nfunction takeAll(array = []) {\n  return array.splice(0, array.length);\n}\nfunction addBindings(bindings, name, fn) {\n  if (!bindings[name])\n    bindings[name] = [];\n  bindings[name].push(fn);\n}\nfunction addListeners(el, listeners = [], options = {}) {\n  if (!el)\n    return;\n  for (let [eventName, eventHandler] of listeners) {\n    el.addEventListener(eventName, eventHandler, options);\n  }\n}\nfunction removeListeners(el, listeners = [], options = {}) {\n  if (!el)\n    return;\n  for (let [eventName, eventHandler] of listeners) {\n    el.removeEventListener(eventName, eventHandler, options);\n  }\n}\n\nfunction addV(v1, v2) {\n  return v1.map((v, i) => v + v2[i]);\n}\nfunction subV(v1, v2) {\n  return v1.map((v, i) => v - v2[i]);\n}\nfunction calculateDistance(movement) {\n  return Math.hypot(...movement);\n}\nfunction calculateAllGeometry(movement, delta = movement) {\n  const dl = calculateDistance(delta);\n  const alpha = dl === 0 ? 0 : 1 / dl;\n  const direction = delta.map((v) => alpha * v);\n  const distance = calculateDistance(movement);\n  return { distance, direction };\n}\nfunction calculateAllKinematics(movement, delta, dt) {\n  const dl = calculateDistance(delta);\n  const alpha = dl === 0 ? 0 : 1 / dl;\n  const beta = dt === 0 ? 0 : 1 / dt;\n  const velocity = beta * dl;\n  const velocities = delta.map((v) => beta * v);\n  const direction = delta.map((v) => alpha * v);\n  const distance = calculateDistance(movement);\n  return { velocities, velocity, distance, direction };\n}\nfunction sign(x) {\n  if (Math.sign)\n    return Math.sign(x);\n  return Number(x > 0) - Number(x < 0) || +x;\n}\n\nfunction minMax(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\nfunction rubberband2(distance, constant) {\n  return Math.pow(distance, constant * 5);\n}\nfunction rubberband(distance, dimension, constant) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity)\n    return rubberband2(distance, constant);\n  return distance * dimension * constant / (dimension + constant * distance);\n}\nfunction rubberbandIfOutOfBounds(position, min, max, constant = 0.15) {\n  if (constant === 0)\n    return minMax(position, min, max);\n  if (position < min)\n    return -rubberband(min - position, max - min, constant) + min;\n  if (position > max)\n    return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\n\nvar __defProp$5 = Object.defineProperty;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$5 = (obj, key, value) => {\n  __defNormalProp$5(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst RecognizersMap = /* @__PURE__ */ new Map();\nconst identity = (xy) => xy;\nclass Recognizer {\n  /**\n   * Creates an instance of a gesture recognizer.\n   * @param stateKey drag, move, pinch, etc.\n   * @param controller the controller attached to the gesture\n   * @param [args] the args that should be passed to the gesture handler\n   */\n  constructor(controller, args = []) {\n    this.controller = controller;\n    this.args = args;\n    // dragging, scrolling, etc.\n    __publicField$5(this, \"debounced\", true);\n    // Convenience method to set a timeout for a given gesture\n    __publicField$5(this, \"setTimeout\", (callback, ms = 140, ...args) => {\n      clearTimeout(this.controller.timeouts[this.stateKey]);\n      this.controller.timeouts[this.stateKey] = window.setTimeout(\n        callback,\n        ms,\n        ...args\n      );\n    });\n    // Convenience method to clear a timeout for a given gesture\n    __publicField$5(this, \"clearTimeout\", () => {\n      clearTimeout(this.controller.timeouts[this.stateKey]);\n    });\n    /**\n     * Fires the gesture handler\n     */\n    __publicField$5(this, \"fireGestureHandler\", (forceFlag = false) => {\n      if (this.state._blocked) {\n        if (!this.debounced) {\n          this.state._active = false;\n          this.clean();\n        }\n        return null;\n      }\n      if (!forceFlag && !this.state.intentional && !this.config.triggerAllEvents)\n        return null;\n      if (this.state.intentional) {\n        const prev_active = this.state.active;\n        const next_active = this.state._active;\n        this.state.active = next_active;\n        this.state.first = next_active && !prev_active;\n        this.state.last = prev_active && !next_active;\n        this.controller.state.shared[this.ingKey] = next_active;\n      }\n      const touches = this.controller.pointerIds.size || this.controller.touchIds.size;\n      const down = this.controller.state.shared.buttons > 0 || touches > 0;\n      const state = {\n        ...this.controller.state.shared,\n        ...this.state,\n        ...this.mapStateValues(this.state),\n        // Sets xy or da to the gesture state values\n        locked: !!document.pointerLockElement,\n        touches,\n        down\n      };\n      const newMemo = this.handler(state);\n      this.state.memo = newMemo !== void 0 ? newMemo : this.state.memo;\n      return state;\n    });\n    this.controller = controller;\n    this.args = args;\n  }\n  // Returns the gesture config\n  get config() {\n    return this.controller.config[this.stateKey];\n  }\n  // Is the gesture enabled\n  get enabled() {\n    return this.controller.config.enabled && this.config.enabled;\n  }\n  // Returns the controller state for a given gesture\n  get state() {\n    return this.controller.state[this.stateKey];\n  }\n  // Returns the gesture handler\n  get handler() {\n    return this.controller.handlers[this.stateKey];\n  }\n  get transform() {\n    return this.config.transform || this.controller.config.transform || identity;\n  }\n  // Convenience method to update the shared state\n  updateSharedState(sharedState) {\n    Object.assign(this.controller.state.shared, sharedState);\n  }\n  // Convenience method to update the gesture state\n  updateGestureState(gestureState) {\n    Object.assign(this.state, gestureState);\n  }\n  /**\n   * Returns state properties depending on the movement and state.\n   *\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\n   * below.\n   */\n  checkIntentionality(_intentional, _movement) {\n    return { _intentional, _blocked: false };\n  }\n  /**\n   * Returns basic movement properties for the gesture based on the next values and current state.\n   */\n  getMovement(values) {\n    const { rubberband, threshold: T } = this.config;\n    const {\n      _bounds,\n      _initial,\n      _active,\n      _intentional: wasIntentional,\n      lastOffset,\n      movement: prevMovement\n    } = this.state;\n    const M = this.getInternalMovement(values, this.state);\n    const _T = this.transform(T).map(Math.abs);\n    const i0 = wasIntentional[0] === false ? getIntentionalDisplacement(M[0], _T[0]) : wasIntentional[0];\n    const i1 = wasIntentional[1] === false ? getIntentionalDisplacement(M[1], _T[1]) : wasIntentional[1];\n    const intentionalityCheck = this.checkIntentionality([i0, i1], M);\n    if (intentionalityCheck._blocked) {\n      return { ...intentionalityCheck, _movement: M, delta: [0, 0] };\n    }\n    const _intentional = intentionalityCheck._intentional;\n    const _movement = M;\n    let movement = [\n      _intentional[0] !== false ? M[0] - _intentional[0] : 0,\n      _intentional[1] !== false ? M[1] - _intentional[1] : 0\n    ];\n    const offset = addV(movement, lastOffset);\n    const _rubberband = _active ? rubberband : [0, 0];\n    movement = computeRubberband(_bounds, addV(movement, _initial), _rubberband);\n    return {\n      ...intentionalityCheck,\n      intentional: _intentional[0] !== false || _intentional[1] !== false,\n      _initial,\n      _movement,\n      movement,\n      values,\n      offset: computeRubberband(_bounds, offset, _rubberband),\n      delta: subV(movement, prevMovement)\n    };\n  }\n  // Cleans the gesture. Can be overriden by gestures.\n  clean() {\n    this.clearTimeout();\n  }\n}\nfunction getIntentionalDisplacement(movement, threshold) {\n  if (Math.abs(movement) >= threshold) {\n    return sign(movement) * threshold;\n  } else {\n    return false;\n  }\n}\nfunction computeRubberband(bounds, [Vx, Vy], [Rx, Ry]) {\n  const [[X1, X2], [Y1, Y2]] = bounds;\n  return [\n    rubberbandIfOutOfBounds(Vx, X1, X2, Rx),\n    rubberbandIfOutOfBounds(Vy, Y1, Y2, Ry)\n  ];\n}\nfunction getGenericPayload({ state }, event, isStartEvent) {\n  const { timeStamp, type: _lastEventType } = event;\n  const previous = state.values;\n  const elapsedTime = isStartEvent ? 0 : timeStamp - state.startTime;\n  return { _lastEventType, event, timeStamp, elapsedTime, previous };\n}\nfunction getStartGestureState({ state, config, stateKey, args }, values, event) {\n  const offset = state.offset;\n  const startTime = event.timeStamp;\n  const { initial, bounds } = config;\n  const _state = {\n    ...getInitialState()[stateKey],\n    _active: true,\n    args,\n    values,\n    initial: values,\n    offset,\n    lastOffset: offset,\n    startTime\n  };\n  return {\n    ..._state,\n    _initial: valueFn(initial, _state),\n    _bounds: valueFn(bounds, _state)\n  };\n}\n\nclass CoordinatesRecognizer extends Recognizer {\n  /**\n   * Returns the real movement (without taking intentionality into account)\n   */\n  getInternalMovement(values, state) {\n    return subV(values, state.initial);\n  }\n  /**\n   * In coordinates-based gesture, this function will detect the first intentional axis,\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\n   * if the first intentional axis doesn't match the specified axis in config.\n   */\n  checkIntentionality(_intentional, _movement) {\n    if (_intentional[0] === false && _intentional[1] === false) {\n      return { _intentional, axis: this.state.axis };\n    }\n    const [absX, absY] = _movement.map(Math.abs);\n    const axis = this.state.axis || (absX > absY ? \"x\" : absX < absY ? \"y\" : void 0);\n    if (!this.config.axis && !this.config.lockDirection)\n      return { _intentional, _blocked: false, axis };\n    if (!axis)\n      return { _intentional: [false, false], _blocked: false, axis };\n    if (!!this.config.axis && axis !== this.config.axis)\n      return { _intentional, _blocked: true, axis };\n    _intentional[axis === \"x\" ? 1 : 0] = false;\n    return { _intentional, _blocked: false, axis };\n  }\n  getKinematics(values, event) {\n    const state = this.getMovement(values);\n    if (!state._blocked) {\n      const dt = event.timeStamp - this.state.timeStamp;\n      Object.assign(\n        state,\n        calculateAllKinematics(state.movement, state.delta, dt)\n      );\n    }\n    return state;\n  }\n  mapStateValues(state) {\n    return { xy: state.values, vxvy: state.velocities };\n  }\n}\n\nvar __defProp$4 = Object.defineProperty;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$4 = (obj, key, value) => {\n  __defNormalProp$4(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst TAP_DISTANCE_THRESHOLD = 3;\nfunction persistEvent(event) {\n  \"persist\" in event && typeof event.persist === \"function\" && event.persist();\n}\nclass DragRecognizer extends CoordinatesRecognizer {\n  constructor() {\n    super(...arguments);\n    __publicField$4(this, \"ingKey\", \"dragging\");\n    __publicField$4(this, \"stateKey\", \"drag\");\n    // TODO: add back when setPointerCapture is widely supported\n    // https://caniuse.com/#search=setPointerCapture\n    __publicField$4(this, \"setPointerCapture\", (event) => {\n      if (this.config.useTouch || document.pointerLockElement)\n        return;\n      const { target, pointerId } = event;\n      if (target && \"setPointerCapture\" in target) {\n        target.setPointerCapture(pointerId);\n      }\n      this.updateGestureState({\n        _dragTarget: target,\n        _dragPointerId: pointerId\n      });\n    });\n    __publicField$4(this, \"releasePointerCapture\", () => {\n      if (this.config.useTouch || document.pointerLockElement)\n        return;\n      const { _dragTarget, _dragPointerId } = this.state;\n      if (_dragPointerId && _dragTarget && \"releasePointerCapture\" in _dragTarget) {\n        if (!(\"hasPointerCapture\" in _dragTarget) || _dragTarget.hasPointerCapture(_dragPointerId))\n          try {\n            _dragTarget.releasePointerCapture(_dragPointerId);\n          } catch (e) {\n          }\n      }\n    });\n    __publicField$4(this, \"preventScroll\", (event) => {\n      if (this.state._dragPreventScroll && event.cancelable) {\n        event.preventDefault();\n      }\n    });\n    __publicField$4(this, \"getEventId\", (event) => {\n      if (this.config.useTouch)\n        return event.changedTouches[0].identifier;\n      return event.pointerId;\n    });\n    __publicField$4(this, \"isValidEvent\", (event) => {\n      return this.state._pointerId === this.getEventId(event);\n    });\n    __publicField$4(this, \"shouldPreventWindowScrollY\", this.config.preventWindowScrollY && this.controller.supportsTouchEvents);\n    __publicField$4(this, \"setUpWindowScrollDetection\", (event) => {\n      persistEvent(event);\n      updateWindowListeners(\n        this.controller,\n        this.stateKey,\n        [\n          [\"touchmove\", this.preventScroll],\n          [\"touchend\", this.clean.bind(this)],\n          [\"touchcancel\", this.clean.bind(this)]\n        ],\n        { passive: false }\n      );\n      this.setTimeout(this.startDrag.bind(this), 250, event);\n    });\n    __publicField$4(this, \"setUpDelayedDragTrigger\", (event) => {\n      this.state._dragDelayed = true;\n      persistEvent(event);\n      this.setTimeout(this.startDrag.bind(this), this.config.delay, event);\n    });\n    __publicField$4(this, \"setStartState\", (event) => {\n      const values = getPointerEventValues(event, this.transform);\n      this.updateSharedState(getGenericEventData(event));\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        _pointerId: this.getEventId(event)\n        // setting pointerId locks the gesture to this specific event\n      });\n      this.updateGestureState(this.getMovement(values));\n    });\n    __publicField$4(this, \"onDragStart\", (event) => {\n      addEventIds(this.controller, event);\n      if (!this.enabled || this.state._active)\n        return;\n      this.setStartState(event);\n      this.setPointerCapture(event);\n      if (this.shouldPreventWindowScrollY)\n        this.setUpWindowScrollDetection(event);\n      else if (this.config.delay > 0)\n        this.setUpDelayedDragTrigger(event);\n      else\n        this.startDrag(event, true);\n    });\n    __publicField$4(this, \"onDragChange\", (event) => {\n      if (\n        // if the gesture was canceled or\n        this.state.canceled || // if onDragStart wasn't fired or\n        !this.state._active || // if the event pointerId doesn't match the one that initiated the drag\n        !this.isValidEvent(event) || // if the event has the same timestamp as the previous event\n        // note that checking type equality is ONLY for tests ¯\\_(ツ)_/¯\n        this.state._lastEventType === event.type && event.timeStamp === this.state.timeStamp\n      )\n        return;\n      let values;\n      if (document.pointerLockElement) {\n        const { movementX, movementY } = event;\n        values = addV(this.transform([movementX, movementY]), this.state.values);\n      } else\n        values = getPointerEventValues(event, this.transform);\n      const kinematics = this.getKinematics(values, event);\n      if (!this.state._dragStarted) {\n        if (this.state._dragDelayed) {\n          this.startDrag(event);\n          return;\n        }\n        if (this.shouldPreventWindowScrollY) {\n          if (!this.state._dragPreventScroll && kinematics.axis) {\n            if (kinematics.axis === \"x\") {\n              this.startDrag(event);\n            } else {\n              this.state._active = false;\n              return;\n            }\n          } else\n            return;\n        } else\n          return;\n      }\n      const genericEventData = getGenericEventData(event);\n      this.updateSharedState(genericEventData);\n      const genericPayload = getGenericPayload(this, event);\n      const realDistance = calculateDistance(kinematics._movement);\n      let { _dragIsTap } = this.state;\n      if (_dragIsTap && realDistance >= TAP_DISTANCE_THRESHOLD)\n        _dragIsTap = false;\n      this.updateGestureState({ ...genericPayload, ...kinematics, _dragIsTap });\n      this.fireGestureHandler();\n    });\n    __publicField$4(this, \"onDragEnd\", (event) => {\n      removeEventIds(this.controller, event);\n      if (!this.isValidEvent(event))\n        return;\n      this.clean();\n      if (!this.state._active)\n        return;\n      this.state._active = false;\n      const tap = this.state._dragIsTap;\n      const [vx, vy] = this.state.velocities;\n      const [mx, my] = this.state.movement;\n      const [ix, iy] = this.state._intentional;\n      const [svx, svy] = this.config.swipeVelocity;\n      const [sx, sy] = this.config.swipeDistance;\n      const sd = this.config.swipeDuration;\n      const endState = {\n        ...getGenericPayload(this, event),\n        ...this.getMovement(this.state.values)\n      };\n      const swipe = [0, 0];\n      if (endState.elapsedTime < sd) {\n        if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx)\n          swipe[0] = sign(vx);\n        if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy)\n          swipe[1] = sign(vy);\n      }\n      this.updateSharedState({ buttons: 0 });\n      this.updateGestureState({ ...endState, tap, swipe });\n      this.fireGestureHandler(this.config.filterTaps && tap === true);\n    });\n    __publicField$4(this, \"clean\", () => {\n      super.clean();\n      this.state._dragStarted = false;\n      this.releasePointerCapture();\n      clearWindowListeners(this.controller, this.stateKey);\n    });\n    __publicField$4(this, \"onCancel\", () => {\n      if (this.state.canceled)\n        return;\n      this.updateGestureState({ canceled: true, _active: false });\n      this.updateSharedState({ buttons: 0 });\n      nextTick(this.fireGestureHandler);\n    });\n    __publicField$4(this, \"onClick\", (event) => {\n      if (!this.state._dragIsTap)\n        event.stopPropagation();\n    });\n  }\n  startDrag(event, onDragIsStart = false) {\n    if (\n      // if the gesture isn't active (probably means)\n      !this.state._active || // if the drag has already started we should ignore subsequent attempts\n      this.state._dragStarted\n    )\n      return;\n    if (!onDragIsStart)\n      this.setStartState(event);\n    this.updateGestureState({\n      _dragStarted: true,\n      _dragPreventScroll: true,\n      cancel: this.onCancel\n    });\n    this.clearTimeout();\n    this.fireGestureHandler();\n  }\n  addBindings(bindings) {\n    if (this.config.useTouch) {\n      addBindings(bindings, \"onTouchStart\", this.onDragStart);\n      addBindings(bindings, \"onTouchMove\", this.onDragChange);\n      addBindings(bindings, \"onTouchEnd\", this.onDragEnd);\n      addBindings(bindings, \"onTouchCancel\", this.onDragEnd);\n    } else {\n      addBindings(bindings, \"onPointerDown\", this.onDragStart);\n      addBindings(bindings, \"onPointerMove\", this.onDragChange);\n      addBindings(bindings, \"onPointerUp\", this.onDragEnd);\n      addBindings(bindings, \"onPointerCancel\", this.onDragEnd);\n    }\n    if (this.config.filterTaps) {\n      const handler = this.controller.config.eventOptions.capture ? \"onClick\" : \"onClickCapture\";\n      addBindings(bindings, handler, this.onClick);\n    }\n  }\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n  let lastThis;\n  let lastArgs = [];\n  let lastResult;\n  let calledOnce = false;\n  function memoized(...newArgs) {\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  }\n  return memoized;\n}\n\nfunction equal(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!equal(a[i], b[i]))\n          return false;\n      return true;\n    }\n    let it;\n    if (typeof Map === \"function\" && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size)\n        return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0]))\n          return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0])))\n          return false;\n      return true;\n    }\n    if (typeof Set === \"function\" && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size)\n        return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0]))\n          return false;\n      return true;\n    }\n    if (a.constructor === RegExp)\n      return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    if (typeof Element !== \"undefined\" && a instanceof Element)\n      return false;\n    for (i = length; i-- !== 0; ) {\n      if (keys[i] === \"_owner\" && a.$$typeof)\n        continue;\n      if (!equal(a[keys[i]], b[keys[i]]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\nfunction isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message || \"\").match(/stack|recursion/i)) {\n      console.warn(\"react-fast-compare cannot handle circular refs\");\n      return false;\n    }\n    throw error;\n  }\n}\n\nfunction resolveWith(config = {}, resolvers) {\n  const result = {};\n  for (const [key, resolver] of Object.entries(resolvers))\n    switch (typeof resolver) {\n      case \"function\":\n        result[key] = resolver.call(result, config[key], key, config);\n        break;\n      case \"object\":\n        result[key] = resolveWith(config[key], resolver);\n        break;\n      case \"boolean\":\n        if (resolver)\n          result[key] = config[key];\n        break;\n    }\n  return result;\n}\n\nconst DEFAULT_DRAG_DELAY = 180;\nconst DEFAULT_RUBBERBAND = 0.15;\nconst DEFAULT_SWIPE_VELOCITY = 0.5;\nconst DEFAULT_SWIPE_DISTANCE = 50;\nconst DEFAULT_SWIPE_DURATION = 250;\nconst InternalGestureOptionsNormalizers = {\n  threshold(value = 0) {\n    return ensureVector(value);\n  },\n  rubberband(value = 0) {\n    switch (value) {\n      case true:\n        return ensureVector(DEFAULT_RUBBERBAND);\n      case false:\n        return ensureVector(0);\n      default:\n        return ensureVector(value);\n    }\n  },\n  enabled(value = true) {\n    return value;\n  },\n  triggerAllEvents(value = false) {\n    return value;\n  },\n  initial(value = 0) {\n    if (typeof value === \"function\")\n      return value;\n    return ensureVector(value);\n  },\n  transform: true\n};\nconst InternalCoordinatesOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n  axis: true,\n  lockDirection(value = false) {\n    return value;\n  },\n  bounds(value = {}) {\n    if (typeof value === \"function\")\n      return (state) => InternalCoordinatesOptionsNormalizers.bounds(value(state));\n    const {\n      left = -Infinity,\n      right = Infinity,\n      top = -Infinity,\n      bottom = Infinity\n    } = value;\n    return [\n      [left, right],\n      [top, bottom]\n    ];\n  }\n};\nconst isBrowser = typeof window !== \"undefined\" && window.document && window.document.createElement;\nconst InternalGenericOptionsNormalizers = {\n  enabled(value = true) {\n    return value;\n  },\n  domTarget: true,\n  window(value = isBrowser ? window : void 0) {\n    return value;\n  },\n  eventOptions({ passive = true, capture = false } = {}) {\n    return { passive, capture };\n  },\n  transform: true\n};\nconst InternalDistanceAngleOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n  bounds(_value, _key, { distanceBounds = {}, angleBounds = {} }) {\n    const _distanceBounds = (state) => {\n      const D = assignDefault(valueFn(distanceBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [D.min, D.max];\n    };\n    const _angleBounds = (state) => {\n      const A = assignDefault(valueFn(angleBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [A.min, A.max];\n    };\n    if (typeof distanceBounds !== \"function\" && typeof angleBounds !== \"function\")\n      return [_distanceBounds(), _angleBounds()];\n    return (state) => [_distanceBounds(state), _angleBounds(state)];\n  }\n};\nconst InternalDragOptionsNormalizers = {\n  ...InternalCoordinatesOptionsNormalizers,\n  useTouch(value = true) {\n    return value && supportsTouchEvents();\n  },\n  preventWindowScrollY(value = false) {\n    return value;\n  },\n  threshold(v, _k, { filterTaps = false, lockDirection = false, axis = void 0 }) {\n    const A = ensureVector(\n      v,\n      filterTaps ? 3 : lockDirection ? 1 : axis ? 1 : 0\n    );\n    this.filterTaps = filterTaps;\n    return A;\n  },\n  swipeVelocity(v = DEFAULT_SWIPE_VELOCITY) {\n    return ensureVector(v);\n  },\n  swipeDistance(v = DEFAULT_SWIPE_DISTANCE) {\n    return ensureVector(v);\n  },\n  swipeDuration(value = DEFAULT_SWIPE_DURATION) {\n    return value;\n  },\n  delay(value = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY;\n      case false:\n        return 0;\n      default:\n        return value;\n    }\n  }\n};\nfunction getInternalGenericOptions(config) {\n  return resolveWith(\n    config,\n    InternalGenericOptionsNormalizers\n  );\n}\nfunction getInternalCoordinatesOptions(config = {}) {\n  return resolveWith(\n    config,\n    InternalCoordinatesOptionsNormalizers\n  );\n}\nfunction getInternalDistanceAngleOptions(config = {}) {\n  return resolveWith(\n    config,\n    InternalDistanceAngleOptionsNormalizers\n  );\n}\nfunction getInternalDragOptions(config = {}) {\n  return resolveWith(\n    config,\n    InternalDragOptionsNormalizers\n  );\n}\n\nfunction _buildMoveConfig({\n  domTarget,\n  eventOptions,\n  window,\n  enabled,\n  ...rest\n}) {\n  const opts = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    window,\n    enabled\n  });\n  opts.move = getInternalCoordinatesOptions(rest);\n  return opts;\n}\nfunction _buildHoverConfig({\n  domTarget,\n  eventOptions,\n  window,\n  enabled,\n  ...rest\n}) {\n  const opts = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    window,\n    enabled\n  });\n  opts.hover = { enabled: true, ...rest };\n  return opts;\n}\nfunction _buildDragConfig({\n  domTarget,\n  eventOptions,\n  window,\n  enabled,\n  ...rest\n}) {\n  const opts = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    window,\n    enabled\n  });\n  opts.drag = getInternalDragOptions(rest);\n  return opts;\n}\nfunction _buildPinchConfig({\n  domTarget,\n  eventOptions,\n  window,\n  enabled,\n  ...rest\n}) {\n  const opts = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    window,\n    enabled\n  });\n  opts.pinch = getInternalDistanceAngleOptions(rest);\n  return opts;\n}\nfunction _buildScrollConfig({\n  domTarget,\n  eventOptions,\n  window,\n  enabled,\n  ...rest\n}) {\n  const opts = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    window,\n    enabled\n  });\n  opts.scroll = getInternalCoordinatesOptions(rest);\n  return opts;\n}\nfunction _buildWheelConfig({\n  domTarget,\n  eventOptions,\n  window,\n  enabled,\n  ...rest\n}) {\n  const opts = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    window,\n    enabled\n  });\n  opts.wheel = getInternalCoordinatesOptions(rest);\n  return opts;\n}\nfunction buildComplexConfig(config, actions = /* @__PURE__ */ new Set()) {\n  const {\n    drag,\n    wheel,\n    move,\n    scroll,\n    pinch,\n    hover,\n    eventOptions,\n    window,\n    transform,\n    domTarget,\n    enabled\n  } = config;\n  const mergedConfig = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    transform,\n    window,\n    enabled\n  });\n  if (actions.has(\"onDrag\"))\n    mergedConfig.drag = getInternalDragOptions(drag);\n  if (actions.has(\"onWheel\"))\n    mergedConfig.wheel = getInternalCoordinatesOptions(wheel);\n  if (actions.has(\"onScroll\"))\n    mergedConfig.scroll = getInternalCoordinatesOptions(scroll);\n  if (actions.has(\"onMove\"))\n    mergedConfig.move = getInternalCoordinatesOptions(move);\n  if (actions.has(\"onPinch\"))\n    mergedConfig.pinch = getInternalDistanceAngleOptions(pinch);\n  if (actions.has(\"onHover\"))\n    mergedConfig.hover = { enabled: true, ...hover };\n  return mergedConfig;\n}\n\nfunction useRecognizers(handlers, config, nativeHandlers = {}) {\n  const classes = resolveClasses(handlers);\n  const controller = new Controller(classes);\n  controller.config = config;\n  controller.handlers = handlers;\n  controller.nativeRefs = nativeHandlers;\n  if (getCurrentInstance() && !config.manual) {\n    onMounted(controller.bind);\n    onUnmounted(controller.clean);\n  }\n  return controller;\n}\nfunction resolveClasses(internalHandlers) {\n  const classes = /* @__PURE__ */ new Set();\n  if (internalHandlers.drag)\n    classes.add(RecognizersMap.get(\"drag\"));\n  if (internalHandlers.wheel)\n    classes.add(RecognizersMap.get(\"wheel\"));\n  if (internalHandlers.scroll)\n    classes.add(RecognizersMap.get(\"scroll\"));\n  if (internalHandlers.move)\n    classes.add(RecognizersMap.get(\"move\"));\n  if (internalHandlers.pinch)\n    classes.add(RecognizersMap.get(\"pinch\"));\n  if (internalHandlers.hover)\n    classes.add(RecognizersMap.get(\"hover\"));\n  return classes;\n}\n\nfunction useDrag(handler, config = {}) {\n  RecognizersMap.set(\"drag\", DragRecognizer);\n  const buildDragConfig = ref();\n  if (!buildDragConfig.value) {\n    buildDragConfig.value = memoizeOne(_buildDragConfig, isEqual);\n  }\n  return useRecognizers({ drag: handler }, buildDragConfig.value(config));\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$3 = (obj, key, value) => {\n  __defNormalProp$3(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass MoveRecognizer extends CoordinatesRecognizer {\n  constructor() {\n    super(...arguments);\n    __publicField$3(this, \"ingKey\", \"moving\");\n    __publicField$3(this, \"stateKey\", \"move\");\n    __publicField$3(this, \"debounced\", true);\n    __publicField$3(this, \"onMove\", (event) => {\n      if (!this.enabled)\n        return;\n      this.setTimeout(this.onMoveEnd);\n      if (!this.state._active)\n        this.onMoveStart(event);\n      else\n        this.onMoveChange(event);\n    });\n    __publicField$3(this, \"onMoveStart\", (event) => {\n      this.updateSharedState(getGenericEventData(event));\n      const values = getPointerEventValues(event, this.transform);\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true)\n      });\n      this.updateGestureState(this.getMovement(values));\n      this.fireGestureHandler();\n    });\n    __publicField$3(this, \"onMoveChange\", (event) => {\n      this.updateSharedState(getGenericEventData(event));\n      const values = getPointerEventValues(event, this.transform);\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event)\n      });\n      this.fireGestureHandler();\n    });\n    __publicField$3(this, \"onMoveEnd\", () => {\n      this.clean();\n      if (!this.state._active)\n        return;\n      const values = this.state.values;\n      this.updateGestureState(this.getMovement(values));\n      this.updateGestureState({ velocities: [0, 0], velocity: 0, _active: false });\n      this.fireGestureHandler();\n    });\n    __publicField$3(this, \"hoverTransform\", () => {\n      return this.controller.config.hover.transform || this.controller.config.transform;\n    });\n    __publicField$3(this, \"onPointerEnter\", (event) => {\n      this.controller.state.shared.hovering = true;\n      if (!this.controller.config.enabled)\n        return;\n      if (this.controller.config.hover.enabled) {\n        const values = getPointerEventValues(event, this.hoverTransform());\n        const state = {\n          ...this.controller.state.shared,\n          ...this.state,\n          ...getGenericPayload(this, event, true),\n          args: this.args,\n          values,\n          active: true,\n          hovering: true\n        };\n        this.controller.handlers.hover({\n          ...state,\n          ...this.mapStateValues(state)\n        });\n      }\n      if (\"move\" in this.controller.handlers)\n        this.onMoveStart(event);\n    });\n    __publicField$3(this, \"onPointerLeave\", (event) => {\n      this.controller.state.shared.hovering = false;\n      if (\"move\" in this.controller.handlers)\n        this.onMoveEnd();\n      if (!this.controller.config.hover.enabled)\n        return;\n      const values = getPointerEventValues(event, this.hoverTransform());\n      const state = {\n        ...this.controller.state.shared,\n        ...this.state,\n        ...getGenericPayload(this, event),\n        args: this.args,\n        values,\n        active: false\n      };\n      this.controller.handlers.hover({ ...state, ...this.mapStateValues(state) });\n    });\n  }\n  addBindings(bindings) {\n    if (\"move\" in this.controller.handlers) {\n      addBindings(bindings, \"onPointerMove\", this.onMove);\n    }\n    if (\"hover\" in this.controller.handlers) {\n      addBindings(bindings, \"onPointerEnter\", this.onPointerEnter);\n      addBindings(bindings, \"onPointerLeave\", this.onPointerLeave);\n    }\n  }\n}\n\nclass DistanceAngleRecognizer extends Recognizer {\n  getInternalMovement(values, state) {\n    const prev_a = state.values[1];\n    let [d, a = prev_a] = values;\n    let delta_a = a - prev_a;\n    let next_turns = state.turns;\n    if (Math.abs(delta_a) > 270)\n      next_turns += sign(delta_a);\n    return subV([d, a - 360 * next_turns], state.initial);\n  }\n  getKinematics(values, event) {\n    const state = this.getMovement(values);\n    const turns = (values[1] - state._movement[1] - this.state.initial[1]) / 360;\n    const dt = event.timeStamp - this.state.timeStamp;\n    const { distance, velocity, ...kinematics } = calculateAllKinematics(\n      state.movement,\n      state.delta,\n      dt\n    );\n    return { turns, ...state, ...kinematics };\n  }\n  mapStateValues(state) {\n    return { da: state.values, vdva: state.velocities };\n  }\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$2 = (obj, key, value) => {\n  __defNormalProp$2(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst ZOOM_CONSTANT = 7;\nconst WEBKIT_DISTANCE_SCALE_FACTOR = 260;\nclass PinchRecognizer extends DistanceAngleRecognizer {\n  constructor() {\n    super(...arguments);\n    __publicField$2(this, \"ingKey\", \"pinching\");\n    __publicField$2(this, \"stateKey\", \"pinch\");\n    __publicField$2(this, \"onPinchStart\", (event) => {\n      addEventIds(this.controller, event);\n      const touchIds = this.controller.touchIds;\n      if (!this.enabled)\n        return;\n      if (this.state._active) {\n        if (this.state._pointerIds.every((id) => touchIds.has(id)))\n          return;\n      }\n      if (touchIds.size < 2)\n        return;\n      const _pointerIds = Array.from(touchIds).slice(0, 2);\n      const { values, origin } = getTwoTouchesEventValues(\n        event,\n        _pointerIds,\n        this.transform\n      );\n      this.updateSharedState(getGenericEventData(event));\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        _pointerIds,\n        cancel: this.onCancel,\n        origin\n      });\n      this.updateGestureState(this.getMovement(values));\n      this.fireGestureHandler();\n    });\n    __publicField$2(this, \"onPinchChange\", (event) => {\n      const { canceled, _active } = this.state;\n      if (canceled || !_active || // if the event has the same timestamp as the previous event\n      event.timeStamp === this.state.timeStamp)\n        return;\n      const genericEventData = getGenericEventData(event);\n      this.updateSharedState(genericEventData);\n      try {\n        const { values, origin } = getTwoTouchesEventValues(\n          event,\n          this.state._pointerIds,\n          this.transform\n        );\n        const kinematics = this.getKinematics(values, event);\n        this.updateGestureState({\n          ...getGenericPayload(this, event),\n          ...kinematics,\n          origin\n        });\n        this.fireGestureHandler();\n      } catch (e) {\n        this.onPinchEnd(event);\n      }\n    });\n    __publicField$2(this, \"onPinchEnd\", (event) => {\n      removeEventIds(this.controller, event);\n      const pointerIds = getTouchIds(event);\n      if (this.state._pointerIds.every((id) => !pointerIds.includes(id)))\n        return;\n      this.clean();\n      if (!this.state._active)\n        return;\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getMovement(this.state.values),\n        _active: false\n      });\n      this.fireGestureHandler();\n    });\n    __publicField$2(this, \"onCancel\", () => {\n      if (this.state.canceled)\n        return;\n      this.updateGestureState({ _active: false, canceled: true });\n      this.fireGestureHandler();\n    });\n    /**\n     * PINCH WITH WEBKIT GESTURES\n     */\n    __publicField$2(this, \"onGestureStart\", (event) => {\n      if (!this.enabled)\n        return;\n      event.preventDefault();\n      const values = getWebkitGestureEventValues(event, this.transform);\n      this.updateSharedState(getGenericEventData(event));\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        origin: [event.clientX, event.clientY],\n        // only used on dekstop\n        cancel: this.onCancel\n      });\n      this.updateGestureState(this.getMovement(values));\n      this.fireGestureHandler();\n    });\n    __publicField$2(this, \"onGestureChange\", (event) => {\n      const { canceled, _active } = this.state;\n      if (canceled || !_active)\n        return;\n      event.preventDefault();\n      const genericEventData = getGenericEventData(event);\n      this.updateSharedState(genericEventData);\n      const values = getWebkitGestureEventValues(event, this.transform);\n      values[0] = (values[0] - this.state.event.scale) * WEBKIT_DISTANCE_SCALE_FACTOR + this.state.values[0];\n      const kinematics = this.getKinematics(values, event);\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...kinematics,\n        origin: [event.clientX, event.clientY]\n        // only used on dekstop\n      });\n      this.fireGestureHandler();\n    });\n    __publicField$2(this, \"onGestureEnd\", (event) => {\n      this.clean();\n      if (!this.state._active)\n        return;\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getMovement(this.state.values),\n        _active: false,\n        origin: [event.clientX, event.clientY]\n        // only used on dekstop\n      });\n      this.fireGestureHandler();\n    });\n    /**\n     * PINCH WITH WHEEL\n     */\n    __publicField$2(this, \"wheelShouldRun\", (event) => {\n      return this.enabled && event.ctrlKey;\n    });\n    __publicField$2(this, \"getWheelValuesFromEvent\", (event) => {\n      const [, delta_d] = getWheelEventValues(event, this.transform);\n      const {\n        values: [prev_d, prev_a]\n      } = this.state;\n      const d = prev_d - delta_d * ZOOM_CONSTANT;\n      const a = prev_a !== void 0 ? prev_a : 0;\n      return {\n        values: [d, a],\n        origin: [event.clientX, event.clientY],\n        delta: [0, delta_d]\n      };\n    });\n    __publicField$2(this, \"onWheel\", (event) => {\n      if (!this.wheelShouldRun(event))\n        return;\n      this.setTimeout(this.onWheelEnd);\n      if (!this.state._active)\n        this.onWheelStart(event);\n      else\n        this.onWheelChange(event);\n    });\n    __publicField$2(this, \"onWheelStart\", (event) => {\n      const { values, delta, origin } = this.getWheelValuesFromEvent(event);\n      if (event.cancelable)\n        event.preventDefault();\n      else if (process.env.NODE_ENV === \"development\") {\n        console.warn(\n          \"To properly support zoom on trackpads, try using the `domTarget` option and `config.eventOptions.passive` set to `false`. This message will only appear in development mode.\"\n        );\n      }\n      this.updateSharedState(getGenericEventData(event));\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        initial: this.state.values,\n        offset: values,\n        delta,\n        origin\n      });\n      this.updateGestureState(this.getMovement(values));\n      this.fireGestureHandler();\n    });\n    __publicField$2(this, \"onWheelChange\", (event) => {\n      if (event.cancelable)\n        event.preventDefault();\n      this.updateSharedState(getGenericEventData(event));\n      const { values, origin, delta } = this.getWheelValuesFromEvent(event);\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n        origin,\n        delta\n      });\n      this.fireGestureHandler();\n    });\n    __publicField$2(this, \"onWheelEnd\", () => {\n      this.clean();\n      if (!this.state._active)\n        return;\n      this.state._active = false;\n      this.updateGestureState(this.getMovement(this.state.values));\n      this.fireGestureHandler();\n    });\n  }\n  addBindings(bindings) {\n    if (this.controller.config.domTarget && !this.controller.supportsTouchEvents && this.controller.supportsGestureEvents) {\n      addBindings(bindings, \"onGestureStart\", this.onGestureStart);\n      addBindings(bindings, \"onGestureChange\", this.onGestureChange);\n      addBindings(bindings, \"onGestureEnd\", this.onGestureEnd);\n    } else {\n      addBindings(bindings, \"onTouchStart\", this.onPinchStart);\n      addBindings(bindings, \"onTouchMove\", this.onPinchChange);\n      addBindings(bindings, \"onTouchEnd\", this.onPinchEnd);\n      addBindings(bindings, \"onTouchCancel\", this.onPinchEnd);\n      addBindings(bindings, \"onWheel\", this.onWheel);\n    }\n  }\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass ScrollRecognizer extends CoordinatesRecognizer {\n  constructor() {\n    super(...arguments);\n    __publicField$1(this, \"ingKey\", \"scrolling\");\n    __publicField$1(this, \"stateKey\", \"scroll\");\n    __publicField$1(this, \"debounced\", true);\n    __publicField$1(this, \"handleEvent\", (event) => {\n      if (!this.enabled)\n        return;\n      this.clearTimeout();\n      this.setTimeout(this.onEnd);\n      const values = getScrollEventValues(event, this.transform);\n      this.updateSharedState(getGenericEventData(event));\n      if (!this.state._active) {\n        this.updateGestureState({\n          ...getStartGestureState(this, values, event),\n          ...getGenericPayload(this, event, true),\n          initial: this.state.values\n        });\n        const movementDetection = this.getMovement(values);\n        const geometry = calculateAllGeometry(movementDetection.delta);\n        this.updateGestureState(movementDetection);\n        this.updateGestureState(geometry);\n      } else {\n        this.updateGestureState({\n          ...getGenericPayload(this, event),\n          ...this.getKinematics(values, event)\n        });\n      }\n      this.fireGestureHandler();\n    });\n    __publicField$1(this, \"onEnd\", () => {\n      this.clean();\n      if (!this.state._active)\n        return;\n      this.updateGestureState({\n        ...this.getMovement(this.state.values),\n        _active: false,\n        velocities: [0, 0],\n        velocity: 0\n      });\n      this.fireGestureHandler();\n    });\n  }\n  addBindings(bindings) {\n    addBindings(bindings, \"onScroll\", this.handleEvent);\n  }\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass WheelRecognizer extends CoordinatesRecognizer {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"ingKey\", \"wheeling\");\n    __publicField(this, \"stateKey\", \"wheel\");\n    __publicField(this, \"debounced\", true);\n    __publicField(this, \"handleEvent\", (event) => {\n      if (event.ctrlKey && \"pinch\" in this.controller.handlers)\n        return;\n      if (!this.enabled)\n        return;\n      this.setTimeout(this.onEnd);\n      this.updateSharedState(getGenericEventData(event));\n      const values = addV(\n        getWheelEventValues(event, this.transform),\n        this.state.values\n      );\n      if (!this.state._active) {\n        this.updateGestureState({\n          ...getStartGestureState(this, values, event),\n          ...getGenericPayload(this, event, true),\n          initial: this.state.values\n        });\n        const movement = this.getMovement(values);\n        const geometry = calculateAllGeometry(movement.delta);\n        this.updateGestureState(movement);\n        this.updateGestureState(geometry);\n      } else {\n        this.updateGestureState({\n          ...getGenericPayload(this, event),\n          ...this.getKinematics(values, event)\n        });\n      }\n      this.fireGestureHandler();\n    });\n    __publicField(this, \"onEnd\", () => {\n      this.clean();\n      if (!this.state._active)\n        return;\n      const movement = this.getMovement(this.state.values);\n      this.updateGestureState(movement);\n      this.updateGestureState({ _active: false, velocities: [0, 0], velocity: 0 });\n      this.fireGestureHandler();\n    });\n  }\n  addBindings(bindings) {\n    addBindings(bindings, \"onWheel\", this.handleEvent);\n  }\n}\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\nfunction sortHandlers(handlers) {\n  const native = {};\n  const handle = {};\n  const actions = /* @__PURE__ */ new Set();\n  for (let key in handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handle[key] = handlers[key];\n    } else {\n      native[key] = handlers[key];\n    }\n  }\n  return [handle, native, actions];\n}\nfunction useGesture(_handlers, config) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(_handlers);\n  RecognizersMap.set(\"drag\", DragRecognizer);\n  RecognizersMap.set(\"hover\", MoveRecognizer);\n  RecognizersMap.set(\"move\", MoveRecognizer);\n  RecognizersMap.set(\"pinch\", PinchRecognizer);\n  RecognizersMap.set(\"scroll\", ScrollRecognizer);\n  RecognizersMap.set(\"wheel\", WheelRecognizer);\n  const mergedConfig = buildComplexConfig(config, actions);\n  const internalHandlers = {};\n  if (actions.has(\"onDrag\"))\n    internalHandlers.drag = includeStartEndHandlers(handlers, \"onDrag\");\n  if (actions.has(\"onWheel\"))\n    internalHandlers.wheel = includeStartEndHandlers(handlers, \"onWheel\");\n  if (actions.has(\"onScroll\"))\n    internalHandlers.scroll = includeStartEndHandlers(handlers, \"onScroll\");\n  if (actions.has(\"onMove\"))\n    internalHandlers.move = includeStartEndHandlers(handlers, \"onMove\");\n  if (actions.has(\"onPinch\"))\n    internalHandlers.pinch = includeStartEndHandlers(handlers, \"onPinch\");\n  if (actions.has(\"onHover\"))\n    internalHandlers.hover = handlers.onHover;\n  return useRecognizers(internalHandlers, mergedConfig, nativeHandlers);\n}\nfunction includeStartEndHandlers(handlers, handlerKey) {\n  const startKey = handlerKey + \"Start\";\n  const endKey = handlerKey + \"End\";\n  const fn = (state) => {\n    let memo = void 0;\n    if (state.first && startKey in handlers)\n      handlers[startKey](state);\n    if (handlerKey in handlers)\n      memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers)\n      handlers[endKey](state);\n    return memo;\n  };\n  return fn;\n}\n\nfunction useHover(handler, config = {}) {\n  RecognizersMap.set(\"hover\", MoveRecognizer);\n  const buildHoverConfig = ref();\n  if (!buildHoverConfig.value) {\n    buildHoverConfig.value = memoizeOne(_buildHoverConfig, isEqual);\n  }\n  return useRecognizers({ hover: handler }, buildHoverConfig.value(config));\n}\n\nfunction useMove(handler, config = {}) {\n  RecognizersMap.set(\"move\", MoveRecognizer);\n  const buildMoveConfig = ref();\n  if (!buildMoveConfig.value) {\n    buildMoveConfig.value = memoizeOne(_buildMoveConfig, isEqual);\n  }\n  return useRecognizers({ move: handler }, buildMoveConfig.value(config));\n}\n\nfunction usePinch(handler, config = {}) {\n  RecognizersMap.set(\"pinch\", PinchRecognizer);\n  const buildPinchConfig = ref();\n  if (!buildPinchConfig.value) {\n    buildPinchConfig.value = memoizeOne(_buildPinchConfig, isEqual);\n  }\n  return useRecognizers({ pinch: handler }, buildPinchConfig.value(config));\n}\n\nfunction useScroll(handler, config = {}) {\n  RecognizersMap.set(\"scroll\", ScrollRecognizer);\n  const buildScrollConfig = ref();\n  if (!buildScrollConfig.value) {\n    buildScrollConfig.value = memoizeOne(_buildScrollConfig, isEqual);\n  }\n  return useRecognizers({ scroll: handler }, buildScrollConfig.value(config));\n}\n\nfunction useWheel(handler, config = {}) {\n  RecognizersMap.set(\"wheel\", WheelRecognizer);\n  const buildWheelConfig = ref();\n  if (!buildWheelConfig.value) {\n    buildWheelConfig.value = memoizeOne(_buildWheelConfig, isEqual);\n  }\n  return useRecognizers({ wheel: handler }, buildWheelConfig.value(config));\n}\n\nconst directive = (register, unregister) => {\n  return {\n    // Vue 3 Directive Hooks\n    created: register,\n    unmounted: unregister,\n    // Vue 2 Directive Hooks\n    // @ts-expect-error\n    bind: register,\n    unbind: unregister\n  };\n};\n\nconst errorMessage = (type) => `Your v-${type} directive must have a handler specified as a value`;\nconst drag = () => {\n  const register = (el, binding, node) => {\n    if (!binding.value) {\n      throw new Error(errorMessage(\"drag\"));\n    }\n    if (!el.gestures) {\n      el.gestures = {};\n    }\n    const controller = useDrag(binding.value, {\n      domTarget: el,\n      manual: true\n    });\n    controller.bind();\n    el.gestures.drag = controller;\n  };\n  const unregister = (el, binding, node) => {\n    if (!el.gestures || !el.gestures.drag)\n      return;\n    el.gestures.drag.clean();\n  };\n  return directive(register, unregister);\n};\nconst move = () => {\n  const register = (el, binding, node) => {\n    if (!binding.value) {\n      throw new Error(errorMessage(\"move\"));\n    }\n    if (!el.gestures) {\n      el.gestures = {};\n    }\n    const controller = useMove(binding.value, {\n      domTarget: el,\n      manual: true\n    });\n    controller.bind();\n    el.gestures.move = controller;\n  };\n  const unregister = (el, binding, node) => {\n    if (!el.gestures || !el.gestures.move)\n      return;\n    el.gestures.move.clean();\n  };\n  return directive(register, unregister);\n};\nconst hover = () => {\n  const register = (el, binding, node) => {\n    if (!binding.value) {\n      throw new Error(errorMessage(\"hover\"));\n    }\n    if (!el.gestures) {\n      el.gestures = {};\n    }\n    const controller = useHover(binding.value, {\n      domTarget: el,\n      manual: true\n    });\n    controller.bind();\n    el.gestures.hover = controller;\n  };\n  const unregister = (el, binding, node) => {\n    if (!el.gestures || !el.gestures.hover)\n      return;\n    el.gestures.hover.clean();\n  };\n  return directive(register, unregister);\n};\nconst pinch = () => {\n  const register = (el, binding, node) => {\n    if (!binding.value) {\n      throw new Error(errorMessage(\"pinch\"));\n    }\n    if (!el.gestures) {\n      el.gestures = {};\n    }\n    const controller = usePinch(binding.value, {\n      domTarget: el,\n      manual: true\n    });\n    controller.bind();\n    el.gestures.pinch = controller;\n  };\n  const unregister = (el, binding, node) => {\n    if (!el.gestures || !el.gestures.pinch)\n      return;\n    el.gestures.pinch.clean();\n  };\n  return directive(register, unregister);\n};\nconst wheel = () => {\n  const register = (el, binding, node) => {\n    if (!binding.value) {\n      throw new Error(errorMessage(\"wheel\"));\n    }\n    if (!el.gestures) {\n      el.gestures = {};\n    }\n    const controller = useWheel(binding.value, {\n      domTarget: el,\n      manual: true\n    });\n    controller.bind();\n    el.gestures.wheel = controller;\n  };\n  const unregister = (el, binding, node) => {\n    if (!el.gestures || !el.gestures.wheel)\n      return;\n    el.gestures.wheel.clean();\n  };\n  return directive(register, unregister);\n};\nconst scroll = () => {\n  const register = (el, binding, node) => {\n    if (!binding.value) {\n      throw new Error(errorMessage(\"scroll\"));\n    }\n    if (!el.gestures) {\n      el.gestures = {};\n    }\n    const controller = useScroll(binding.value, {\n      domTarget: el,\n      manual: true\n    });\n    controller.bind();\n    el.gestures.drag = controller;\n  };\n  const unregister = (el, binding, node) => {\n    if (!el.gestures || !el.gestures.drag)\n      return;\n    el.gestures.drag.clean();\n  };\n  return directive(register, unregister);\n};\n\nconst GesturePlugin = {\n  install(app, options) {\n    const directives = { drag, hover, move, pinch, scroll, wheel };\n    Object.entries(directives).forEach(\n      ([key, directive]) => app.directive(key, directive())\n    );\n  }\n};\n\nexport { GesturePlugin, addV, drag as dragDirective, hover as hoverDirective, move as moveDirective, pinch as pinchDirective, rubberbandIfOutOfBounds, scroll as scrollDirective, subV, useDrag, useGesture, useHover, useMove, usePinch, useScroll, useWheel, wheel as wheelDirective };\n","import { shallowRef, watchEffect, readonly, ref, watch, customRef, getCurrentScope, onScopeDispose, effectScope, getCurrentInstance, provide, inject, isVue3, version, isRef, unref, computed, reactive, toRefs as toRefs$1, toRef as toRef$1, isVue2, set as set$1, onBeforeMount, nextTick, onBeforeUnmount, onMounted, onUnmounted, isReactive } from 'vue-demi';\n\nfunction computedEager(fn, options) {\n  var _a;\n  const result = shallowRef();\n  watchEffect(() => {\n    result.value = fn();\n  }, {\n    ...options,\n    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : \"sync\"\n  });\n  return readonly(result);\n}\n\nfunction computedWithControl(source, fn) {\n  let v = void 0;\n  let track;\n  let trigger;\n  const dirty = ref(true);\n  const update = () => {\n    dirty.value = true;\n    trigger();\n  };\n  watch(source, update, { flush: \"sync\" });\n  const get = typeof fn === \"function\" ? fn : fn.get;\n  const set = typeof fn === \"function\" ? void 0 : fn.set;\n  const result = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        if (dirty.value) {\n          v = get();\n          dirty.value = false;\n        }\n        track();\n        return v;\n      },\n      set(v2) {\n        set == null ? void 0 : set(v2);\n      }\n    };\n  });\n  if (Object.isExtensible(result))\n    result.trigger = update;\n  return result;\n}\n\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n\nfunction createEventHook() {\n  const fns = /* @__PURE__ */ new Set();\n  const off = (fn) => {\n    fns.delete(fn);\n  };\n  const on = (fn) => {\n    fns.add(fn);\n    const offFn = () => off(fn);\n    tryOnScopeDispose(offFn);\n    return {\n      off: offFn\n    };\n  };\n  const trigger = (...args) => {\n    return Promise.all(Array.from(fns).map((fn) => fn(...args)));\n  };\n  return {\n    on,\n    off,\n    trigger\n  };\n}\n\nfunction createGlobalState(stateFactory) {\n  let initialized = false;\n  let state;\n  const scope = effectScope(true);\n  return (...args) => {\n    if (!initialized) {\n      state = scope.run(() => stateFactory(...args));\n      initialized = true;\n    }\n    return state;\n  };\n}\n\nconst localProvidedStateMap = /* @__PURE__ */ new WeakMap();\n\nconst provideLocal = (key, value) => {\n  var _a;\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\n  if (instance == null)\n    throw new Error(\"provideLocal must be called in setup\");\n  if (!localProvidedStateMap.has(instance))\n    localProvidedStateMap.set(instance, /* @__PURE__ */ Object.create(null));\n  const localProvidedState = localProvidedStateMap.get(instance);\n  localProvidedState[key] = value;\n  provide(key, value);\n};\n\nconst injectLocal = (...args) => {\n  var _a;\n  const key = args[0];\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\n  if (instance == null)\n    throw new Error(\"injectLocal must be called in setup\");\n  if (localProvidedStateMap.has(instance) && key in localProvidedStateMap.get(instance))\n    return localProvidedStateMap.get(instance)[key];\n  return inject(...args);\n};\n\nfunction createInjectionState(composable, options) {\n  const key = (options == null ? void 0 : options.injectionKey) || Symbol(composable.name || \"InjectionState\");\n  const defaultValue = options == null ? void 0 : options.defaultValue;\n  const useProvidingState = (...args) => {\n    const state = composable(...args);\n    provideLocal(key, state);\n    return state;\n  };\n  const useInjectedState = () => injectLocal(key, defaultValue);\n  return [useProvidingState, useInjectedState];\n}\n\nfunction createSharedComposable(composable) {\n  let subscribers = 0;\n  let state;\n  let scope;\n  const dispose = () => {\n    subscribers -= 1;\n    if (scope && subscribers <= 0) {\n      scope.stop();\n      state = void 0;\n      scope = void 0;\n    }\n  };\n  return (...args) => {\n    subscribers += 1;\n    if (!state) {\n      scope = effectScope(true);\n      state = scope.run(() => composable(...args));\n    }\n    tryOnScopeDispose(dispose);\n    return state;\n  };\n}\n\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\n  if (!isVue3 && !version.startsWith(\"2.7.\")) {\n    if (process.env.NODE_ENV !== \"production\")\n      throw new Error(\"[VueUse] extendRef only works in Vue 2.7 or above.\");\n    return;\n  }\n  for (const [key, value] of Object.entries(extend)) {\n    if (key === \"value\")\n      continue;\n    if (isRef(value) && unwrap) {\n      Object.defineProperty(ref, key, {\n        get() {\n          return value.value;\n        },\n        set(v) {\n          value.value = v;\n        },\n        enumerable\n      });\n    } else {\n      Object.defineProperty(ref, key, { value, enumerable });\n    }\n  }\n  return ref;\n}\n\nfunction get(obj, key) {\n  if (key == null)\n    return unref(obj);\n  return unref(obj)[key];\n}\n\nfunction isDefined(v) {\n  return unref(v) != null;\n}\n\nfunction makeDestructurable(obj, arr) {\n  if (typeof Symbol !== \"undefined\") {\n    const clone = { ...obj };\n    Object.defineProperty(clone, Symbol.iterator, {\n      enumerable: false,\n      value() {\n        let index = 0;\n        return {\n          next: () => ({\n            value: arr[index++],\n            done: index > arr.length\n          })\n        };\n      }\n    });\n    return clone;\n  } else {\n    return Object.assign([...arr], obj);\n  }\n}\n\nfunction toValue(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\nconst resolveUnref = toValue;\n\nfunction reactify(fn, options) {\n  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : toValue;\n  return function(...args) {\n    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));\n  };\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\n  let keys = [];\n  let options;\n  if (Array.isArray(optionsOrKeys)) {\n    keys = optionsOrKeys;\n  } else {\n    options = optionsOrKeys;\n    const { includeOwnProperties = true } = optionsOrKeys;\n    keys.push(...Object.keys(obj));\n    if (includeOwnProperties)\n      keys.push(...Object.getOwnPropertyNames(obj));\n  }\n  return Object.fromEntries(\n    keys.map((key) => {\n      const value = obj[key];\n      return [\n        key,\n        typeof value === \"function\" ? reactify(value.bind(obj), options) : value\n      ];\n    })\n  );\n}\n\nfunction toReactive(objectRef) {\n  if (!isRef(objectRef))\n    return reactive(objectRef);\n  const proxy = new Proxy({}, {\n    get(_, p, receiver) {\n      return unref(Reflect.get(objectRef.value, p, receiver));\n    },\n    set(_, p, value) {\n      if (isRef(objectRef.value[p]) && !isRef(value))\n        objectRef.value[p].value = value;\n      else\n        objectRef.value[p] = value;\n      return true;\n    },\n    deleteProperty(_, p) {\n      return Reflect.deleteProperty(objectRef.value, p);\n    },\n    has(_, p) {\n      return Reflect.has(objectRef.value, p);\n    },\n    ownKeys() {\n      return Object.keys(objectRef.value);\n    },\n    getOwnPropertyDescriptor() {\n      return {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  });\n  return reactive(proxy);\n}\n\nfunction reactiveComputed(fn) {\n  return toReactive(computed(fn));\n}\n\nfunction reactiveOmit(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => !predicate(toValue(v), k))) : Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0]))));\n}\n\nconst isClient = typeof window !== \"undefined\" && typeof document !== \"undefined\";\nconst isWorker = typeof WorkerGlobalScope !== \"undefined\" && globalThis instanceof WorkerGlobalScope;\nconst isDef = (val) => typeof val !== \"undefined\";\nconst notNullish = (val) => val != null;\nconst assert = (condition, ...infos) => {\n  if (!condition)\n    console.warn(...infos);\n};\nconst toString = Object.prototype.toString;\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\nconst now = () => Date.now();\nconst timestamp = () => +Date.now();\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\nconst noop = () => {\n};\nconst rand = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\nconst isIOS = /* @__PURE__ */ getIsIOS();\nfunction getIsIOS() {\n  var _a, _b;\n  return isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && (/iP(?:ad|hone|od)/.test(window.navigator.userAgent) || ((_b = window == null ? void 0 : window.navigator) == null ? void 0 : _b.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));\n}\n\nfunction createFilterWrapper(filter, fn) {\n  function wrapper(...args) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve).catch(reject);\n    });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction debounceFilter(ms, options = {}) {\n  let timer;\n  let maxTimer;\n  let lastRejector = noop;\n  const _clearTimeout = (timer2) => {\n    clearTimeout(timer2);\n    lastRejector();\n    lastRejector = noop;\n  };\n  const filter = (invoke) => {\n    const duration = toValue(ms);\n    const maxDuration = toValue(options.maxWait);\n    if (timer)\n      _clearTimeout(timer);\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\n      if (maxTimer) {\n        _clearTimeout(maxTimer);\n        maxTimer = null;\n      }\n      return Promise.resolve(invoke());\n    }\n    return new Promise((resolve, reject) => {\n      lastRejector = options.rejectOnCancel ? reject : resolve;\n      if (maxDuration && !maxTimer) {\n        maxTimer = setTimeout(() => {\n          if (timer)\n            _clearTimeout(timer);\n          maxTimer = null;\n          resolve(invoke());\n        }, maxDuration);\n      }\n      timer = setTimeout(() => {\n        if (maxTimer)\n          _clearTimeout(maxTimer);\n        maxTimer = null;\n        resolve(invoke());\n      }, duration);\n    });\n  };\n  return filter;\n}\nfunction throttleFilter(...args) {\n  let lastExec = 0;\n  let timer;\n  let isLeading = true;\n  let lastRejector = noop;\n  let lastValue;\n  let ms;\n  let trailing;\n  let leading;\n  let rejectOnCancel;\n  if (!isRef(args[0]) && typeof args[0] === \"object\")\n    ({ delay: ms, trailing = true, leading = true, rejectOnCancel = false } = args[0]);\n  else\n    [ms, trailing = true, leading = true, rejectOnCancel = false] = args;\n  const clear = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n      lastRejector();\n      lastRejector = noop;\n    }\n  };\n  const filter = (_invoke) => {\n    const duration = toValue(ms);\n    const elapsed = Date.now() - lastExec;\n    const invoke = () => {\n      return lastValue = _invoke();\n    };\n    clear();\n    if (duration <= 0) {\n      lastExec = Date.now();\n      return invoke();\n    }\n    if (elapsed > duration && (leading || !isLeading)) {\n      lastExec = Date.now();\n      invoke();\n    } else if (trailing) {\n      lastValue = new Promise((resolve, reject) => {\n        lastRejector = rejectOnCancel ? reject : resolve;\n        timer = setTimeout(() => {\n          lastExec = Date.now();\n          isLeading = true;\n          resolve(invoke());\n          clear();\n        }, Math.max(0, duration - elapsed));\n      });\n    }\n    if (!leading && !timer)\n      timer = setTimeout(() => isLeading = true, duration);\n    isLeading = false;\n    return lastValue;\n  };\n  return filter;\n}\nfunction pausableFilter(extendFilter = bypassFilter) {\n  const isActive = ref(true);\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive: readonly(isActive), pause, resume, eventFilter };\n}\n\nconst directiveHooks = {\n  mounted: isVue3 ? \"mounted\" : \"inserted\",\n  updated: isVue3 ? \"updated\" : \"componentUpdated\",\n  unmounted: isVue3 ? \"unmounted\" : \"unbind\"\n};\n\nfunction cacheStringFunction(fn) {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, \"-$1\").toLowerCase());\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\n  return new Promise((resolve, reject) => {\n    if (throwOnTimeout)\n      setTimeout(() => reject(reason), ms);\n    else\n      setTimeout(resolve, ms);\n  });\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction containsProp(obj, ...props) {\n  return props.some((k) => k in obj);\n}\nfunction increaseWithUnit(target, delta) {\n  var _a;\n  if (typeof target === \"number\")\n    return target + delta;\n  const value = ((_a = target.match(/^-?\\d+\\.?\\d*/)) == null ? void 0 : _a[0]) || \"\";\n  const unit = target.slice(value.length);\n  const result = Number.parseFloat(value) + delta;\n  if (Number.isNaN(result))\n    return target;\n  return result + unit;\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\nfunction objectOmit(obj, keys, omitUndefined = false) {\n  return Object.fromEntries(Object.entries(obj).filter(([key, value]) => {\n    return (!omitUndefined || value !== void 0) && !keys.includes(key);\n  }));\n}\nfunction objectEntries(obj) {\n  return Object.entries(obj);\n}\nfunction getLifeCycleTarget(target) {\n  return target || getCurrentInstance();\n}\n\nfunction toRef(...args) {\n  if (args.length !== 1)\n    return toRef$1(...args);\n  const r = args[0];\n  return typeof r === \"function\" ? readonly(customRef(() => ({ get: r, set: noop }))) : ref(r);\n}\nconst resolveRef = toRef;\n\nfunction reactivePick(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => predicate(toValue(v), k))) : Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));\n}\n\nfunction refAutoReset(defaultValue, afterMs = 1e4) {\n  return customRef((track, trigger) => {\n    let value = toValue(defaultValue);\n    let timer;\n    const resetAfter = () => setTimeout(() => {\n      value = toValue(defaultValue);\n      trigger();\n    }, toValue(afterMs));\n    tryOnScopeDispose(() => {\n      clearTimeout(timer);\n    });\n    return {\n      get() {\n        track();\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        trigger();\n        clearTimeout(timer);\n        timer = resetAfter();\n      }\n    };\n  });\n}\n\nfunction useDebounceFn(fn, ms = 200, options = {}) {\n  return createFilterWrapper(\n    debounceFilter(ms, options),\n    fn\n  );\n}\n\nfunction refDebounced(value, ms = 200, options = {}) {\n  const debounced = ref(value.value);\n  const updater = useDebounceFn(() => {\n    debounced.value = value.value;\n  }, ms, options);\n  watch(value, () => updater());\n  return debounced;\n}\n\nfunction refDefault(source, defaultValue) {\n  return computed({\n    get() {\n      var _a;\n      return (_a = source.value) != null ? _a : defaultValue;\n    },\n    set(value) {\n      source.value = value;\n    }\n  });\n}\n\nfunction useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {\n  return createFilterWrapper(\n    throttleFilter(ms, trailing, leading, rejectOnCancel),\n    fn\n  );\n}\n\nfunction refThrottled(value, delay = 200, trailing = true, leading = true) {\n  if (delay <= 0)\n    return value;\n  const throttled = ref(value.value);\n  const updater = useThrottleFn(() => {\n    throttled.value = value.value;\n  }, delay, trailing, leading);\n  watch(value, () => updater());\n  return throttled;\n}\n\nfunction refWithControl(initial, options = {}) {\n  let source = initial;\n  let track;\n  let trigger;\n  const ref = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        return get();\n      },\n      set(v) {\n        set(v);\n      }\n    };\n  });\n  function get(tracking = true) {\n    if (tracking)\n      track();\n    return source;\n  }\n  function set(value, triggering = true) {\n    var _a, _b;\n    if (value === source)\n      return;\n    const old = source;\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\n      return;\n    source = value;\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\n    if (triggering)\n      trigger();\n  }\n  const untrackedGet = () => get(false);\n  const silentSet = (v) => set(v, false);\n  const peek = () => get(false);\n  const lay = (v) => set(v, false);\n  return extendRef(\n    ref,\n    {\n      get,\n      set,\n      untrackedGet,\n      silentSet,\n      peek,\n      lay\n    },\n    { enumerable: true }\n  );\n}\nconst controlledRef = refWithControl;\n\nfunction set(...args) {\n  if (args.length === 2) {\n    const [ref, value] = args;\n    ref.value = value;\n  }\n  if (args.length === 3) {\n    if (isVue2) {\n      set$1(...args);\n    } else {\n      const [target, key, value] = args;\n      target[key] = value;\n    }\n  }\n}\n\nfunction watchWithFilter(source, cb, options = {}) {\n  const {\n    eventFilter = bypassFilter,\n    ...watchOptions\n  } = options;\n  return watch(\n    source,\n    createFilterWrapper(\n      eventFilter,\n      cb\n    ),\n    watchOptions\n  );\n}\n\nfunction watchPausable(source, cb, options = {}) {\n  const {\n    eventFilter: filter,\n    ...watchOptions\n  } = options;\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\n  const stop = watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter\n    }\n  );\n  return { stop, pause, resume, isActive };\n}\n\nfunction syncRef(left, right, ...[options]) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true,\n    direction = \"both\",\n    transform = {}\n  } = options || {};\n  const watchers = [];\n  const transformLTR = \"ltr\" in transform && transform.ltr || ((v) => v);\n  const transformRTL = \"rtl\" in transform && transform.rtl || ((v) => v);\n  if (direction === \"both\" || direction === \"ltr\") {\n    watchers.push(watchPausable(\n      left,\n      (newValue) => {\n        watchers.forEach((w) => w.pause());\n        right.value = transformLTR(newValue);\n        watchers.forEach((w) => w.resume());\n      },\n      { flush, deep, immediate }\n    ));\n  }\n  if (direction === \"both\" || direction === \"rtl\") {\n    watchers.push(watchPausable(\n      right,\n      (newValue) => {\n        watchers.forEach((w) => w.pause());\n        left.value = transformRTL(newValue);\n        watchers.forEach((w) => w.resume());\n      },\n      { flush, deep, immediate }\n    ));\n  }\n  const stop = () => {\n    watchers.forEach((w) => w.stop());\n  };\n  return stop;\n}\n\nfunction syncRefs(source, targets, options = {}) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true\n  } = options;\n  if (!Array.isArray(targets))\n    targets = [targets];\n  return watch(\n    source,\n    (newValue) => targets.forEach((target) => target.value = newValue),\n    { flush, deep, immediate }\n  );\n}\n\nfunction toRefs(objectRef, options = {}) {\n  if (!isRef(objectRef))\n    return toRefs$1(objectRef);\n  const result = Array.isArray(objectRef.value) ? Array.from({ length: objectRef.value.length }) : {};\n  for (const key in objectRef.value) {\n    result[key] = customRef(() => ({\n      get() {\n        return objectRef.value[key];\n      },\n      set(v) {\n        var _a;\n        const replaceRef = (_a = toValue(options.replaceRef)) != null ? _a : true;\n        if (replaceRef) {\n          if (Array.isArray(objectRef.value)) {\n            const copy = [...objectRef.value];\n            copy[key] = v;\n            objectRef.value = copy;\n          } else {\n            const newObject = { ...objectRef.value, [key]: v };\n            Object.setPrototypeOf(newObject, Object.getPrototypeOf(objectRef.value));\n            objectRef.value = newObject;\n          }\n        } else {\n          objectRef.value[key] = v;\n        }\n      }\n    }));\n  }\n  return result;\n}\n\nfunction tryOnBeforeMount(fn, sync = true, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onBeforeMount(fn, target);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnBeforeUnmount(fn, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onBeforeUnmount(fn, target);\n}\n\nfunction tryOnMounted(fn, sync = true, target) {\n  const instance = getLifeCycleTarget();\n  if (instance)\n    onMounted(fn, target);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnUnmounted(fn, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onUnmounted(fn, target);\n}\n\nfunction createUntil(r, isNot = false) {\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        r,\n        (v) => {\n          if (condition(v) !== isNot) {\n            stop == null ? void 0 : stop();\n            resolve(v);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => stop == null ? void 0 : stop())\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBe(value, options) {\n    if (!isRef(value))\n      return toMatch((v) => v === value, options);\n    const { flush = \"sync\", deep = false, timeout, throwOnTimeout } = options != null ? options : {};\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        [r, value],\n        ([v1, v2]) => {\n          if (isNot !== (v1 === v2)) {\n            stop == null ? void 0 : stop();\n            resolve(v1);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => {\n          stop == null ? void 0 : stop();\n          return toValue(r);\n        })\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBeTruthy(options) {\n    return toMatch((v) => Boolean(v), options);\n  }\n  function toBeNull(options) {\n    return toBe(null, options);\n  }\n  function toBeUndefined(options) {\n    return toBe(void 0, options);\n  }\n  function toBeNaN(options) {\n    return toMatch(Number.isNaN, options);\n  }\n  function toContains(value, options) {\n    return toMatch((v) => {\n      const array = Array.from(v);\n      return array.includes(value) || array.includes(toValue(value));\n    }, options);\n  }\n  function changed(options) {\n    return changedTimes(1, options);\n  }\n  function changedTimes(n = 1, options) {\n    let count = -1;\n    return toMatch(() => {\n      count += 1;\n      return count >= n;\n    }, options);\n  }\n  if (Array.isArray(toValue(r))) {\n    const instance = {\n      toMatch,\n      toContains,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  } else {\n    const instance = {\n      toMatch,\n      toBe,\n      toBeTruthy,\n      toBeNull,\n      toBeNaN,\n      toBeUndefined,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  }\n}\nfunction until(r) {\n  return createUntil(r);\n}\n\nfunction defaultComparator(value, othVal) {\n  return value === othVal;\n}\nfunction useArrayDifference(...args) {\n  var _a;\n  const list = args[0];\n  const values = args[1];\n  let compareFn = (_a = args[2]) != null ? _a : defaultComparator;\n  if (typeof compareFn === \"string\") {\n    const key = compareFn;\n    compareFn = (value, othVal) => value[key] === othVal[key];\n  }\n  return computed(() => toValue(list).filter((x) => toValue(values).findIndex((y) => compareFn(x, y)) === -1));\n}\n\nfunction useArrayEvery(list, fn) {\n  return computed(() => toValue(list).every((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction useArrayFilter(list, fn) {\n  return computed(() => toValue(list).map((i) => toValue(i)).filter(fn));\n}\n\nfunction useArrayFind(list, fn) {\n  return computed(() => toValue(\n    toValue(list).find((element, index, array) => fn(toValue(element), index, array))\n  ));\n}\n\nfunction useArrayFindIndex(list, fn) {\n  return computed(() => toValue(list).findIndex((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction findLast(arr, cb) {\n  let index = arr.length;\n  while (index-- > 0) {\n    if (cb(arr[index], index, arr))\n      return arr[index];\n  }\n  return void 0;\n}\nfunction useArrayFindLast(list, fn) {\n  return computed(() => toValue(\n    !Array.prototype.findLast ? findLast(toValue(list), (element, index, array) => fn(toValue(element), index, array)) : toValue(list).findLast((element, index, array) => fn(toValue(element), index, array))\n  ));\n}\n\nfunction isArrayIncludesOptions(obj) {\n  return isObject(obj) && containsProp(obj, \"formIndex\", \"comparator\");\n}\nfunction useArrayIncludes(...args) {\n  var _a;\n  const list = args[0];\n  const value = args[1];\n  let comparator = args[2];\n  let formIndex = 0;\n  if (isArrayIncludesOptions(comparator)) {\n    formIndex = (_a = comparator.fromIndex) != null ? _a : 0;\n    comparator = comparator.comparator;\n  }\n  if (typeof comparator === \"string\") {\n    const key = comparator;\n    comparator = (element, value2) => element[key] === toValue(value2);\n  }\n  comparator = comparator != null ? comparator : (element, value2) => element === toValue(value2);\n  return computed(() => toValue(list).slice(formIndex).some((element, index, array) => comparator(\n    toValue(element),\n    toValue(value),\n    index,\n    toValue(array)\n  )));\n}\n\nfunction useArrayJoin(list, separator) {\n  return computed(() => toValue(list).map((i) => toValue(i)).join(toValue(separator)));\n}\n\nfunction useArrayMap(list, fn) {\n  return computed(() => toValue(list).map((i) => toValue(i)).map(fn));\n}\n\nfunction useArrayReduce(list, reducer, ...args) {\n  const reduceCallback = (sum, value, index) => reducer(toValue(sum), toValue(value), index);\n  return computed(() => {\n    const resolved = toValue(list);\n    return args.length ? resolved.reduce(reduceCallback, toValue(args[0])) : resolved.reduce(reduceCallback);\n  });\n}\n\nfunction useArraySome(list, fn) {\n  return computed(() => toValue(list).some((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction uniqueElementsBy(array, fn) {\n  return array.reduce((acc, v) => {\n    if (!acc.some((x) => fn(v, x, array)))\n      acc.push(v);\n    return acc;\n  }, []);\n}\nfunction useArrayUnique(list, compareFn) {\n  return computed(() => {\n    const resolvedList = toValue(list).map((element) => toValue(element));\n    return compareFn ? uniqueElementsBy(resolvedList, compareFn) : uniq(resolvedList);\n  });\n}\n\nfunction useCounter(initialValue = 0, options = {}) {\n  let _initialValue = unref(initialValue);\n  const count = ref(initialValue);\n  const {\n    max = Number.POSITIVE_INFINITY,\n    min = Number.NEGATIVE_INFINITY\n  } = options;\n  const inc = (delta = 1) => count.value = Math.max(Math.min(max, count.value + delta), min);\n  const dec = (delta = 1) => count.value = Math.min(Math.max(min, count.value - delta), max);\n  const get = () => count.value;\n  const set = (val) => count.value = Math.max(min, Math.min(max, val));\n  const reset = (val = _initialValue) => {\n    _initialValue = val;\n    return set(val);\n  };\n  return { count, inc, dec, get, set, reset };\n}\n\nconst REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[T\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/i;\nconst REGEX_FORMAT = /[YMDHhms]o|\\[([^\\]]+)\\]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\nfunction defaultMeridiem(hours, minutes, isLowercase, hasPeriod) {\n  let m = hours < 12 ? \"AM\" : \"PM\";\n  if (hasPeriod)\n    m = m.split(\"\").reduce((acc, curr) => acc += `${curr}.`, \"\");\n  return isLowercase ? m.toLowerCase() : m;\n}\nfunction formatOrdinal(num) {\n  const suffixes = [\"th\", \"st\", \"nd\", \"rd\"];\n  const v = num % 100;\n  return num + (suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]);\n}\nfunction formatDate(date, formatStr, options = {}) {\n  var _a;\n  const years = date.getFullYear();\n  const month = date.getMonth();\n  const days = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n  const day = date.getDay();\n  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;\n  const matches = {\n    Yo: () => formatOrdinal(years),\n    YY: () => String(years).slice(-2),\n    YYYY: () => years,\n    M: () => month + 1,\n    Mo: () => formatOrdinal(month + 1),\n    MM: () => `${month + 1}`.padStart(2, \"0\"),\n    MMM: () => date.toLocaleDateString(options.locales, { month: \"short\" }),\n    MMMM: () => date.toLocaleDateString(options.locales, { month: \"long\" }),\n    D: () => String(days),\n    Do: () => formatOrdinal(days),\n    DD: () => `${days}`.padStart(2, \"0\"),\n    H: () => String(hours),\n    Ho: () => formatOrdinal(hours),\n    HH: () => `${hours}`.padStart(2, \"0\"),\n    h: () => `${hours % 12 || 12}`.padStart(1, \"0\"),\n    ho: () => formatOrdinal(hours % 12 || 12),\n    hh: () => `${hours % 12 || 12}`.padStart(2, \"0\"),\n    m: () => String(minutes),\n    mo: () => formatOrdinal(minutes),\n    mm: () => `${minutes}`.padStart(2, \"0\"),\n    s: () => String(seconds),\n    so: () => formatOrdinal(seconds),\n    ss: () => `${seconds}`.padStart(2, \"0\"),\n    SSS: () => `${milliseconds}`.padStart(3, \"0\"),\n    d: () => day,\n    dd: () => date.toLocaleDateString(options.locales, { weekday: \"narrow\" }),\n    ddd: () => date.toLocaleDateString(options.locales, { weekday: \"short\" }),\n    dddd: () => date.toLocaleDateString(options.locales, { weekday: \"long\" }),\n    A: () => meridiem(hours, minutes),\n    AA: () => meridiem(hours, minutes, false, true),\n    a: () => meridiem(hours, minutes, true),\n    aa: () => meridiem(hours, minutes, true, true)\n  };\n  return formatStr.replace(REGEX_FORMAT, (match, $1) => {\n    var _a2, _b;\n    return (_b = $1 != null ? $1 : (_a2 = matches[match]) == null ? void 0 : _a2.call(matches)) != null ? _b : match;\n  });\n}\nfunction normalizeDate(date) {\n  if (date === null)\n    return new Date(Number.NaN);\n  if (date === void 0)\n    return /* @__PURE__ */ new Date();\n  if (date instanceof Date)\n    return new Date(date);\n  if (typeof date === \"string\" && !/Z$/i.test(date)) {\n    const d = date.match(REGEX_PARSE);\n    if (d) {\n      const m = d[2] - 1 || 0;\n      const ms = (d[7] || \"0\").substring(0, 3);\n      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);\n    }\n  }\n  return new Date(date);\n}\nfunction useDateFormat(date, formatStr = \"HH:mm:ss\", options = {}) {\n  return computed(() => formatDate(normalizeDate(toValue(date)), toValue(formatStr), options));\n}\n\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  let timer = null;\n  const isActive = ref(false);\n  function clean() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    const intervalValue = toValue(interval);\n    if (intervalValue <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    timer = setInterval(cb, intervalValue);\n  }\n  if (immediate && isClient)\n    resume();\n  if (isRef(interval) || typeof interval === \"function\") {\n    const stopWatch = watch(interval, () => {\n      if (isActive.value && isClient)\n        resume();\n    });\n    tryOnScopeDispose(stopWatch);\n  }\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nfunction useInterval(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    immediate = true,\n    callback\n  } = options;\n  const counter = ref(0);\n  const update = () => counter.value += 1;\n  const reset = () => {\n    counter.value = 0;\n  };\n  const controls = useIntervalFn(\n    callback ? () => {\n      update();\n      callback(counter.value);\n    } : update,\n    interval,\n    { immediate }\n  );\n  if (exposeControls) {\n    return {\n      counter,\n      reset,\n      ...controls\n    };\n  } else {\n    return counter;\n  }\n}\n\nfunction useLastChanged(source, options = {}) {\n  var _a;\n  const ms = ref((_a = options.initialValue) != null ? _a : null);\n  watch(\n    source,\n    () => ms.value = timestamp(),\n    options\n  );\n  return ms;\n}\n\nfunction useTimeoutFn(cb, interval, options = {}) {\n  const {\n    immediate = true\n  } = options;\n  const isPending = ref(false);\n  let timer = null;\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function stop() {\n    isPending.value = false;\n    clear();\n  }\n  function start(...args) {\n    clear();\n    isPending.value = true;\n    timer = setTimeout(() => {\n      isPending.value = false;\n      timer = null;\n      cb(...args);\n    }, toValue(interval));\n  }\n  if (immediate) {\n    isPending.value = true;\n    if (isClient)\n      start();\n  }\n  tryOnScopeDispose(stop);\n  return {\n    isPending: readonly(isPending),\n    start,\n    stop\n  };\n}\n\nfunction useTimeout(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    callback\n  } = options;\n  const controls = useTimeoutFn(\n    callback != null ? callback : noop,\n    interval,\n    options\n  );\n  const ready = computed(() => !controls.isPending.value);\n  if (exposeControls) {\n    return {\n      ready,\n      ...controls\n    };\n  } else {\n    return ready;\n  }\n}\n\nfunction useToNumber(value, options = {}) {\n  const {\n    method = \"parseFloat\",\n    radix,\n    nanToZero\n  } = options;\n  return computed(() => {\n    let resolved = toValue(value);\n    if (typeof resolved === \"string\")\n      resolved = Number[method](resolved, radix);\n    if (nanToZero && Number.isNaN(resolved))\n      resolved = 0;\n    return resolved;\n  });\n}\n\nfunction useToString(value) {\n  return computed(() => `${toValue(value)}`);\n}\n\nfunction useToggle(initialValue = false, options = {}) {\n  const {\n    truthyValue = true,\n    falsyValue = false\n  } = options;\n  const valueIsRef = isRef(initialValue);\n  const _value = ref(initialValue);\n  function toggle(value) {\n    if (arguments.length) {\n      _value.value = value;\n      return _value.value;\n    } else {\n      const truthy = toValue(truthyValue);\n      _value.value = _value.value === truthy ? toValue(falsyValue) : truthy;\n      return _value.value;\n    }\n  }\n  if (valueIsRef)\n    return toggle;\n  else\n    return [_value, toggle];\n}\n\nfunction watchArray(source, cb, options) {\n  let oldList = (options == null ? void 0 : options.immediate) ? [] : [...source instanceof Function ? source() : Array.isArray(source) ? source : toValue(source)];\n  return watch(source, (newList, _, onCleanup) => {\n    const oldListRemains = Array.from({ length: oldList.length });\n    const added = [];\n    for (const obj of newList) {\n      let found = false;\n      for (let i = 0; i < oldList.length; i++) {\n        if (!oldListRemains[i] && obj === oldList[i]) {\n          oldListRemains[i] = true;\n          found = true;\n          break;\n        }\n      }\n      if (!found)\n        added.push(obj);\n    }\n    const removed = oldList.filter((_2, i) => !oldListRemains[i]);\n    cb(newList, oldList, added, removed, onCleanup);\n    oldList = [...newList];\n  }, options);\n}\n\nfunction watchAtMost(source, cb, options) {\n  const {\n    count,\n    ...watchOptions\n  } = options;\n  const current = ref(0);\n  const stop = watchWithFilter(\n    source,\n    (...args) => {\n      current.value += 1;\n      if (current.value >= toValue(count))\n        nextTick(() => stop());\n      cb(...args);\n    },\n    watchOptions\n  );\n  return { count: current, stop };\n}\n\nfunction watchDebounced(source, cb, options = {}) {\n  const {\n    debounce = 0,\n    maxWait = void 0,\n    ...watchOptions\n  } = options;\n  return watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter: debounceFilter(debounce, { maxWait })\n    }\n  );\n}\n\nfunction watchDeep(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    {\n      ...options,\n      deep: true\n    }\n  );\n}\n\nfunction watchIgnorable(source, cb, options = {}) {\n  const {\n    eventFilter = bypassFilter,\n    ...watchOptions\n  } = options;\n  const filteredCb = createFilterWrapper(\n    eventFilter,\n    cb\n  );\n  let ignoreUpdates;\n  let ignorePrevAsyncUpdates;\n  let stop;\n  if (watchOptions.flush === \"sync\") {\n    const ignore = ref(false);\n    ignorePrevAsyncUpdates = () => {\n    };\n    ignoreUpdates = (updater) => {\n      ignore.value = true;\n      updater();\n      ignore.value = false;\n    };\n    stop = watch(\n      source,\n      (...args) => {\n        if (!ignore.value)\n          filteredCb(...args);\n      },\n      watchOptions\n    );\n  } else {\n    const disposables = [];\n    const ignoreCounter = ref(0);\n    const syncCounter = ref(0);\n    ignorePrevAsyncUpdates = () => {\n      ignoreCounter.value = syncCounter.value;\n    };\n    disposables.push(\n      watch(\n        source,\n        () => {\n          syncCounter.value++;\n        },\n        { ...watchOptions, flush: \"sync\" }\n      )\n    );\n    ignoreUpdates = (updater) => {\n      const syncCounterPrev = syncCounter.value;\n      updater();\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\n    };\n    disposables.push(\n      watch(\n        source,\n        (...args) => {\n          const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\n          ignoreCounter.value = 0;\n          syncCounter.value = 0;\n          if (ignore)\n            return;\n          filteredCb(...args);\n        },\n        watchOptions\n      )\n    );\n    stop = () => {\n      disposables.forEach((fn) => fn());\n    };\n  }\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\n}\n\nfunction watchImmediate(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    {\n      ...options,\n      immediate: true\n    }\n  );\n}\n\nfunction watchOnce(source, cb, options) {\n  const stop = watch(source, (...args) => {\n    nextTick(() => stop());\n    return cb(...args);\n  }, options);\n  return stop;\n}\n\nfunction watchThrottled(source, cb, options = {}) {\n  const {\n    throttle = 0,\n    trailing = true,\n    leading = true,\n    ...watchOptions\n  } = options;\n  return watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter: throttleFilter(throttle, trailing, leading)\n    }\n  );\n}\n\nfunction watchTriggerable(source, cb, options = {}) {\n  let cleanupFn;\n  function onEffect() {\n    if (!cleanupFn)\n      return;\n    const fn = cleanupFn;\n    cleanupFn = void 0;\n    fn();\n  }\n  function onCleanup(callback) {\n    cleanupFn = callback;\n  }\n  const _cb = (value, oldValue) => {\n    onEffect();\n    return cb(value, oldValue, onCleanup);\n  };\n  const res = watchIgnorable(source, _cb, options);\n  const { ignoreUpdates } = res;\n  const trigger = () => {\n    let res2;\n    ignoreUpdates(() => {\n      res2 = _cb(getWatchSources(source), getOldValue(source));\n    });\n    return res2;\n  };\n  return {\n    ...res,\n    trigger\n  };\n}\nfunction getWatchSources(sources) {\n  if (isReactive(sources))\n    return sources;\n  if (Array.isArray(sources))\n    return sources.map((item) => toValue(item));\n  return toValue(sources);\n}\nfunction getOldValue(source) {\n  return Array.isArray(source) ? source.map(() => void 0) : void 0;\n}\n\nfunction whenever(source, cb, options) {\n  const stop = watch(\n    source,\n    (v, ov, onInvalidate) => {\n      if (v) {\n        if (options == null ? void 0 : options.once)\n          nextTick(() => stop());\n        cb(v, ov, onInvalidate);\n      }\n    },\n    {\n      ...options,\n      once: false\n    }\n  );\n  return stop;\n}\n\nexport { assert, refAutoReset as autoResetRef, bypassFilter, camelize, clamp, computedEager, computedWithControl, containsProp, computedWithControl as controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, createInjectionState, reactify as createReactiveFn, createSharedComposable, createSingletonPromise, debounceFilter, refDebounced as debouncedRef, watchDebounced as debouncedWatch, directiveHooks, computedEager as eagerComputed, extendRef, formatDate, get, getLifeCycleTarget, hasOwn, hyphenate, identity, watchIgnorable as ignorableWatch, increaseWithUnit, injectLocal, invoke, isClient, isDef, isDefined, isIOS, isObject, isWorker, makeDestructurable, noop, normalizeDate, notNullish, now, objectEntries, objectOmit, objectPick, pausableFilter, watchPausable as pausableWatch, promiseTimeout, provideLocal, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRef, syncRefs, throttleFilter, refThrottled as throttledRef, watchThrottled as throttledWatch, timestamp, toReactive, toRef, toRefs, toValue, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useCounter, useDateFormat, refDebounced as useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, refThrottled as useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToNumber, useToString, useToggle, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever };\n","import { noop, makeDestructurable, camelize, toValue, isClient, isObject, tryOnScopeDispose, isIOS, tryOnMounted, notNullish, objectOmit, promiseTimeout, until, increaseWithUnit, objectEntries, createSingletonPromise, useTimeoutFn, pausableWatch, toRef, createEventHook, computedWithControl, timestamp, pausableFilter, watchIgnorable, debounceFilter, createFilterWrapper, bypassFilter, toRefs, useIntervalFn, containsProp, hasOwn, throttleFilter, useDebounceFn, useThrottleFn, clamp, syncRef, objectPick, tryOnUnmounted, watchWithFilter, tryOnBeforeUnmount, identity, isDef, isWorker } from '@vueuse/shared';\nexport * from '@vueuse/shared';\nimport { isRef, ref, shallowRef, watchEffect, computed, inject, isVue3, version, defineComponent, h, TransitionGroup, shallowReactive, Fragment, watch, getCurrentInstance, customRef, onUpdated, onMounted, isVue2, readonly, nextTick, reactive, markRaw, unref, getCurrentScope, set, del, isReadonly, onBeforeUpdate } from 'vue-demi';\n\nfunction computedAsync(evaluationCallback, initialState, optionsOrRef) {\n  let options;\n  if (isRef(optionsOrRef)) {\n    options = {\n      evaluating: optionsOrRef\n    };\n  } else {\n    options = optionsOrRef || {};\n  }\n  const {\n    lazy = false,\n    evaluating = void 0,\n    shallow = true,\n    onError = noop\n  } = options;\n  const started = ref(!lazy);\n  const current = shallow ? shallowRef(initialState) : ref(initialState);\n  let counter = 0;\n  watchEffect(async (onInvalidate) => {\n    if (!started.value)\n      return;\n    counter++;\n    const counterAtBeginning = counter;\n    let hasFinished = false;\n    if (evaluating) {\n      Promise.resolve().then(() => {\n        evaluating.value = true;\n      });\n    }\n    try {\n      const result = await evaluationCallback((cancelCallback) => {\n        onInvalidate(() => {\n          if (evaluating)\n            evaluating.value = false;\n          if (!hasFinished)\n            cancelCallback();\n        });\n      });\n      if (counterAtBeginning === counter)\n        current.value = result;\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (evaluating && counterAtBeginning === counter)\n        evaluating.value = false;\n      hasFinished = true;\n    }\n  });\n  if (lazy) {\n    return computed(() => {\n      started.value = true;\n      return current.value;\n    });\n  } else {\n    return current;\n  }\n}\n\nfunction computedInject(key, options, defaultSource, treatDefaultAsFactory) {\n  let source = inject(key);\n  if (defaultSource)\n    source = inject(key, defaultSource);\n  if (treatDefaultAsFactory)\n    source = inject(key, defaultSource, treatDefaultAsFactory);\n  if (typeof options === \"function\") {\n    return computed((ctx) => options(source, ctx));\n  } else {\n    return computed({\n      get: (ctx) => options.get(source, ctx),\n      set: options.set\n    });\n  }\n}\n\nfunction createReusableTemplate(options = {}) {\n  if (!isVue3 && !version.startsWith(\"2.7.\")) {\n    if (process.env.NODE_ENV !== \"production\")\n      throw new Error(\"[VueUse] createReusableTemplate only works in Vue 2.7 or above.\");\n    return;\n  }\n  const {\n    inheritAttrs = true\n  } = options;\n  const render = shallowRef();\n  const define = /* #__PURE__ */ defineComponent({\n    setup(_, { slots }) {\n      return () => {\n        render.value = slots.default;\n      };\n    }\n  });\n  const reuse = /* #__PURE__ */ defineComponent({\n    inheritAttrs,\n    setup(_, { attrs, slots }) {\n      return () => {\n        var _a;\n        if (!render.value && process.env.NODE_ENV !== \"production\")\n          throw new Error(\"[VueUse] Failed to find the definition of reusable template\");\n        const vnode = (_a = render.value) == null ? void 0 : _a.call(render, { ...keysToCamelKebabCase(attrs), $slots: slots });\n        return inheritAttrs && (vnode == null ? void 0 : vnode.length) === 1 ? vnode[0] : vnode;\n      };\n    }\n  });\n  return makeDestructurable(\n    { define, reuse },\n    [define, reuse]\n  );\n}\nfunction keysToCamelKebabCase(obj) {\n  const newObj = {};\n  for (const key in obj)\n    newObj[camelize(key)] = obj[key];\n  return newObj;\n}\n\nfunction createTemplatePromise(options = {}) {\n  if (!isVue3) {\n    if (process.env.NODE_ENV !== \"production\")\n      throw new Error(\"[VueUse] createTemplatePromise only works in Vue 3 or above.\");\n    return;\n  }\n  let index = 0;\n  const instances = ref([]);\n  function create(...args) {\n    const props = shallowReactive({\n      key: index++,\n      args,\n      promise: void 0,\n      resolve: () => {\n      },\n      reject: () => {\n      },\n      isResolving: false,\n      options\n    });\n    instances.value.push(props);\n    props.promise = new Promise((_resolve, _reject) => {\n      props.resolve = (v) => {\n        props.isResolving = true;\n        return _resolve(v);\n      };\n      props.reject = _reject;\n    }).finally(() => {\n      props.promise = void 0;\n      const index2 = instances.value.indexOf(props);\n      if (index2 !== -1)\n        instances.value.splice(index2, 1);\n    });\n    return props.promise;\n  }\n  function start(...args) {\n    if (options.singleton && instances.value.length > 0)\n      return instances.value[0].promise;\n    return create(...args);\n  }\n  const component = /* #__PURE__ */ defineComponent((_, { slots }) => {\n    const renderList = () => instances.value.map((props) => {\n      var _a;\n      return h(Fragment, { key: props.key }, (_a = slots.default) == null ? void 0 : _a.call(slots, props));\n    });\n    if (options.transition)\n      return () => h(TransitionGroup, options.transition, renderList);\n    return renderList;\n  });\n  component.start = start;\n  return component;\n}\n\nfunction createUnrefFn(fn) {\n  return function(...args) {\n    return fn.apply(this, args.map((i) => toValue(i)));\n  };\n}\n\nfunction unrefElement(elRef) {\n  var _a;\n  const plain = toValue(elRef);\n  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;\n}\n\nconst defaultWindow = isClient ? window : void 0;\nconst defaultDocument = isClient ? window.document : void 0;\nconst defaultNavigator = isClient ? window.navigator : void 0;\nconst defaultLocation = isClient ? window.location : void 0;\n\nfunction useEventListener(...args) {\n  let target;\n  let events;\n  let listeners;\n  let options;\n  if (typeof args[0] === \"string\" || Array.isArray(args[0])) {\n    [events, listeners, options] = args;\n    target = defaultWindow;\n  } else {\n    [target, events, listeners, options] = args;\n  }\n  if (!target)\n    return noop;\n  if (!Array.isArray(events))\n    events = [events];\n  if (!Array.isArray(listeners))\n    listeners = [listeners];\n  const cleanups = [];\n  const cleanup = () => {\n    cleanups.forEach((fn) => fn());\n    cleanups.length = 0;\n  };\n  const register = (el, event, listener, options2) => {\n    el.addEventListener(event, listener, options2);\n    return () => el.removeEventListener(event, listener, options2);\n  };\n  const stopWatch = watch(\n    () => [unrefElement(target), toValue(options)],\n    ([el, options2]) => {\n      cleanup();\n      if (!el)\n        return;\n      const optionsClone = isObject(options2) ? { ...options2 } : options2;\n      cleanups.push(\n        ...events.flatMap((event) => {\n          return listeners.map((listener) => register(el, event, listener, optionsClone));\n        })\n      );\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return stop;\n}\n\nlet _iOSWorkaround = false;\nfunction onClickOutside(target, handler, options = {}) {\n  const { window = defaultWindow, ignore = [], capture = true, detectIframe = false } = options;\n  if (!window)\n    return noop;\n  if (isIOS && !_iOSWorkaround) {\n    _iOSWorkaround = true;\n    Array.from(window.document.body.children).forEach((el) => el.addEventListener(\"click\", noop));\n    window.document.documentElement.addEventListener(\"click\", noop);\n  }\n  let shouldListen = true;\n  const shouldIgnore = (event) => {\n    return ignore.some((target2) => {\n      if (typeof target2 === \"string\") {\n        return Array.from(window.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));\n      } else {\n        const el = unrefElement(target2);\n        return el && (event.target === el || event.composedPath().includes(el));\n      }\n    });\n  };\n  const listener = (event) => {\n    const el = unrefElement(target);\n    if (!el || el === event.target || event.composedPath().includes(el))\n      return;\n    if (event.detail === 0)\n      shouldListen = !shouldIgnore(event);\n    if (!shouldListen) {\n      shouldListen = true;\n      return;\n    }\n    handler(event);\n  };\n  const cleanup = [\n    useEventListener(window, \"click\", listener, { passive: true, capture }),\n    useEventListener(window, \"pointerdown\", (e) => {\n      const el = unrefElement(target);\n      shouldListen = !shouldIgnore(e) && !!(el && !e.composedPath().includes(el));\n    }, { passive: true }),\n    detectIframe && useEventListener(window, \"blur\", (event) => {\n      setTimeout(() => {\n        var _a;\n        const el = unrefElement(target);\n        if (((_a = window.document.activeElement) == null ? void 0 : _a.tagName) === \"IFRAME\" && !(el == null ? void 0 : el.contains(window.document.activeElement))) {\n          handler(event);\n        }\n      }, 0);\n    })\n  ].filter(Boolean);\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nfunction createKeyPredicate(keyFilter) {\n  if (typeof keyFilter === \"function\")\n    return keyFilter;\n  else if (typeof keyFilter === \"string\")\n    return (event) => event.key === keyFilter;\n  else if (Array.isArray(keyFilter))\n    return (event) => keyFilter.includes(event.key);\n  return () => true;\n}\nfunction onKeyStroke(...args) {\n  let key;\n  let handler;\n  let options = {};\n  if (args.length === 3) {\n    key = args[0];\n    handler = args[1];\n    options = args[2];\n  } else if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      key = true;\n      handler = args[0];\n      options = args[1];\n    } else {\n      key = args[0];\n      handler = args[1];\n    }\n  } else {\n    key = true;\n    handler = args[0];\n  }\n  const {\n    target = defaultWindow,\n    eventName = \"keydown\",\n    passive = false,\n    dedupe = false\n  } = options;\n  const predicate = createKeyPredicate(key);\n  const listener = (e) => {\n    if (e.repeat && toValue(dedupe))\n      return;\n    if (predicate(e))\n      handler(e);\n  };\n  return useEventListener(target, eventName, listener, passive);\n}\nfunction onKeyDown(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keydown\" });\n}\nfunction onKeyPressed(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keypress\" });\n}\nfunction onKeyUp(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keyup\" });\n}\n\nconst DEFAULT_DELAY = 500;\nconst DEFAULT_THRESHOLD = 10;\nfunction onLongPress(target, handler, options) {\n  var _a, _b;\n  const elementRef = computed(() => unrefElement(target));\n  let timeout;\n  let posStart;\n  let startTimestamp;\n  let hasLongPressed = false;\n  function clear() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = void 0;\n    }\n    posStart = void 0;\n    startTimestamp = void 0;\n    hasLongPressed = false;\n  }\n  function onRelease(ev) {\n    var _a2, _b2, _c;\n    const [_startTimestamp, _posStart, _hasLongPressed] = [startTimestamp, posStart, hasLongPressed];\n    clear();\n    if (!(options == null ? void 0 : options.onMouseUp) || !_posStart || !_startTimestamp)\n      return;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    const dx = ev.x - _posStart.x;\n    const dy = ev.y - _posStart.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    options.onMouseUp(ev.timeStamp - _startTimestamp, distance, _hasLongPressed);\n  }\n  function onDown(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    clear();\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    posStart = {\n      x: ev.x,\n      y: ev.y\n    };\n    startTimestamp = ev.timeStamp;\n    timeout = setTimeout(\n      () => {\n        hasLongPressed = true;\n        handler(ev);\n      },\n      (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY\n    );\n  }\n  function onMove(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    if (!posStart || (options == null ? void 0 : options.distanceThreshold) === false)\n      return;\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    const dx = ev.x - posStart.x;\n    const dy = ev.y - posStart.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance >= ((_d = options == null ? void 0 : options.distanceThreshold) != null ? _d : DEFAULT_THRESHOLD))\n      clear();\n  }\n  const listenerOptions = {\n    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,\n    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once\n  };\n  const cleanup = [\n    useEventListener(elementRef, \"pointerdown\", onDown, listenerOptions),\n    useEventListener(elementRef, \"pointermove\", onMove, listenerOptions),\n    useEventListener(elementRef, [\"pointerup\", \"pointerleave\"], onRelease, listenerOptions)\n  ];\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nfunction isFocusedElementEditable() {\n  const { activeElement, body } = document;\n  if (!activeElement)\n    return false;\n  if (activeElement === body)\n    return false;\n  switch (activeElement.tagName) {\n    case \"INPUT\":\n    case \"TEXTAREA\":\n      return true;\n  }\n  return activeElement.hasAttribute(\"contenteditable\");\n}\nfunction isTypedCharValid({\n  keyCode,\n  metaKey,\n  ctrlKey,\n  altKey\n}) {\n  if (metaKey || ctrlKey || altKey)\n    return false;\n  if (keyCode >= 48 && keyCode <= 57)\n    return true;\n  if (keyCode >= 65 && keyCode <= 90)\n    return true;\n  if (keyCode >= 97 && keyCode <= 122)\n    return true;\n  return false;\n}\nfunction onStartTyping(callback, options = {}) {\n  const { document: document2 = defaultDocument } = options;\n  const keydown = (event) => {\n    !isFocusedElementEditable() && isTypedCharValid(event) && callback(event);\n  };\n  if (document2)\n    useEventListener(document2, \"keydown\", keydown, { passive: true });\n}\n\nfunction templateRef(key, initialValue = null) {\n  const instance = getCurrentInstance();\n  let _trigger = () => {\n  };\n  const element = customRef((track, trigger) => {\n    _trigger = trigger;\n    return {\n      get() {\n        var _a, _b;\n        track();\n        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;\n      },\n      set() {\n      }\n    };\n  });\n  tryOnMounted(_trigger);\n  onUpdated(_trigger);\n  return element;\n}\n\nfunction useMounted() {\n  const isMounted = ref(false);\n  const instance = getCurrentInstance();\n  if (instance) {\n    onMounted(() => {\n      isMounted.value = true;\n    }, isVue2 ? void 0 : instance);\n  }\n  return isMounted;\n}\n\nfunction useSupported(callback) {\n  const isMounted = useMounted();\n  return computed(() => {\n    isMounted.value;\n    return Boolean(callback());\n  });\n}\n\nfunction useMutationObserver(target, callback, options = {}) {\n  const { window = defaultWindow, ...mutationOptions } = options;\n  let observer;\n  const isSupported = useSupported(() => window && \"MutationObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(() => {\n    const value = toValue(target);\n    const items = (Array.isArray(value) ? value : [value]).map(unrefElement).filter(notNullish);\n    return new Set(items);\n  });\n  const stopWatch = watch(\n    () => targets.value,\n    (targets2) => {\n      cleanup();\n      if (isSupported.value && targets2.size) {\n        observer = new MutationObserver(callback);\n        targets2.forEach((el) => observer.observe(el, mutationOptions));\n      }\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const takeRecords = () => {\n    return observer == null ? void 0 : observer.takeRecords();\n  };\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop,\n    takeRecords\n  };\n}\n\nfunction useActiveElement(options = {}) {\n  var _a;\n  const {\n    window = defaultWindow,\n    deep = true,\n    triggerOnRemoval = false\n  } = options;\n  const document = (_a = options.document) != null ? _a : window == null ? void 0 : window.document;\n  const getDeepActiveElement = () => {\n    var _a2;\n    let element = document == null ? void 0 : document.activeElement;\n    if (deep) {\n      while (element == null ? void 0 : element.shadowRoot)\n        element = (_a2 = element == null ? void 0 : element.shadowRoot) == null ? void 0 : _a2.activeElement;\n    }\n    return element;\n  };\n  const activeElement = ref();\n  const trigger = () => {\n    activeElement.value = getDeepActiveElement();\n  };\n  if (window) {\n    useEventListener(window, \"blur\", (event) => {\n      if (event.relatedTarget !== null)\n        return;\n      trigger();\n    }, true);\n    useEventListener(window, \"focus\", trigger, true);\n  }\n  if (triggerOnRemoval) {\n    useMutationObserver(document, (mutations) => {\n      mutations.filter((m) => m.removedNodes.length).map((n) => Array.from(n.removedNodes)).flat().forEach((node) => {\n        if (node === activeElement.value)\n          trigger();\n      });\n    }, {\n      childList: true,\n      subtree: true\n    });\n  }\n  trigger();\n  return activeElement;\n}\n\nfunction useRafFn(fn, options = {}) {\n  const {\n    immediate = true,\n    fpsLimit = void 0,\n    window = defaultWindow\n  } = options;\n  const isActive = ref(false);\n  const intervalLimit = fpsLimit ? 1e3 / fpsLimit : null;\n  let previousFrameTimestamp = 0;\n  let rafId = null;\n  function loop(timestamp) {\n    if (!isActive.value || !window)\n      return;\n    if (!previousFrameTimestamp)\n      previousFrameTimestamp = timestamp;\n    const delta = timestamp - previousFrameTimestamp;\n    if (intervalLimit && delta < intervalLimit) {\n      rafId = window.requestAnimationFrame(loop);\n      return;\n    }\n    previousFrameTimestamp = timestamp;\n    fn({ delta, timestamp });\n    rafId = window.requestAnimationFrame(loop);\n  }\n  function resume() {\n    if (!isActive.value && window) {\n      isActive.value = true;\n      previousFrameTimestamp = 0;\n      rafId = window.requestAnimationFrame(loop);\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    if (rafId != null && window) {\n      window.cancelAnimationFrame(rafId);\n      rafId = null;\n    }\n  }\n  if (immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive: readonly(isActive),\n    pause,\n    resume\n  };\n}\n\nfunction useAnimate(target, keyframes, options) {\n  let config;\n  let animateOptions;\n  if (isObject(options)) {\n    config = options;\n    animateOptions = objectOmit(options, [\"window\", \"immediate\", \"commitStyles\", \"persist\", \"onReady\", \"onError\"]);\n  } else {\n    config = { duration: options };\n    animateOptions = options;\n  }\n  const {\n    window = defaultWindow,\n    immediate = true,\n    commitStyles,\n    persist,\n    playbackRate: _playbackRate = 1,\n    onReady,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = config;\n  const isSupported = useSupported(() => window && HTMLElement && \"animate\" in HTMLElement.prototype);\n  const animate = shallowRef(void 0);\n  const store = shallowReactive({\n    startTime: null,\n    currentTime: null,\n    timeline: null,\n    playbackRate: _playbackRate,\n    pending: false,\n    playState: immediate ? \"idle\" : \"paused\",\n    replaceState: \"active\"\n  });\n  const pending = computed(() => store.pending);\n  const playState = computed(() => store.playState);\n  const replaceState = computed(() => store.replaceState);\n  const startTime = computed({\n    get() {\n      return store.startTime;\n    },\n    set(value) {\n      store.startTime = value;\n      if (animate.value)\n        animate.value.startTime = value;\n    }\n  });\n  const currentTime = computed({\n    get() {\n      return store.currentTime;\n    },\n    set(value) {\n      store.currentTime = value;\n      if (animate.value) {\n        animate.value.currentTime = value;\n        syncResume();\n      }\n    }\n  });\n  const timeline = computed({\n    get() {\n      return store.timeline;\n    },\n    set(value) {\n      store.timeline = value;\n      if (animate.value)\n        animate.value.timeline = value;\n    }\n  });\n  const playbackRate = computed({\n    get() {\n      return store.playbackRate;\n    },\n    set(value) {\n      store.playbackRate = value;\n      if (animate.value)\n        animate.value.playbackRate = value;\n    }\n  });\n  const play = () => {\n    if (animate.value) {\n      try {\n        animate.value.play();\n        syncResume();\n      } catch (e) {\n        syncPause();\n        onError(e);\n      }\n    } else {\n      update();\n    }\n  };\n  const pause = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.pause();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  const reverse = () => {\n    var _a;\n    !animate.value && update();\n    try {\n      (_a = animate.value) == null ? void 0 : _a.reverse();\n      syncResume();\n    } catch (e) {\n      syncPause();\n      onError(e);\n    }\n  };\n  const finish = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.finish();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  const cancel = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.cancel();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  watch(() => unrefElement(target), (el) => {\n    el && update();\n  });\n  watch(() => keyframes, (value) => {\n    !animate.value && update();\n    if (!unrefElement(target) && animate.value) {\n      animate.value.effect = new KeyframeEffect(\n        unrefElement(target),\n        toValue(value),\n        animateOptions\n      );\n    }\n  }, { deep: true });\n  tryOnMounted(() => {\n    nextTick(() => update(true));\n  });\n  tryOnScopeDispose(cancel);\n  function update(init) {\n    const el = unrefElement(target);\n    if (!isSupported.value || !el)\n      return;\n    if (!animate.value)\n      animate.value = el.animate(toValue(keyframes), animateOptions);\n    if (persist)\n      animate.value.persist();\n    if (_playbackRate !== 1)\n      animate.value.playbackRate = _playbackRate;\n    if (init && !immediate)\n      animate.value.pause();\n    else\n      syncResume();\n    onReady == null ? void 0 : onReady(animate.value);\n  }\n  useEventListener(animate, [\"cancel\", \"finish\", \"remove\"], syncPause);\n  useEventListener(animate, \"finish\", () => {\n    var _a;\n    if (commitStyles)\n      (_a = animate.value) == null ? void 0 : _a.commitStyles();\n  });\n  const { resume: resumeRef, pause: pauseRef } = useRafFn(() => {\n    if (!animate.value)\n      return;\n    store.pending = animate.value.pending;\n    store.playState = animate.value.playState;\n    store.replaceState = animate.value.replaceState;\n    store.startTime = animate.value.startTime;\n    store.currentTime = animate.value.currentTime;\n    store.timeline = animate.value.timeline;\n    store.playbackRate = animate.value.playbackRate;\n  }, { immediate: false });\n  function syncResume() {\n    if (isSupported.value)\n      resumeRef();\n  }\n  function syncPause() {\n    if (isSupported.value && window)\n      window.requestAnimationFrame(pauseRef);\n  }\n  return {\n    isSupported,\n    animate,\n    // actions\n    play,\n    pause,\n    reverse,\n    finish,\n    cancel,\n    // state\n    pending,\n    playState,\n    replaceState,\n    startTime,\n    currentTime,\n    timeline,\n    playbackRate\n  };\n}\n\nfunction useAsyncQueue(tasks, options) {\n  const {\n    interrupt = true,\n    onError = noop,\n    onFinished = noop,\n    signal\n  } = options || {};\n  const promiseState = {\n    aborted: \"aborted\",\n    fulfilled: \"fulfilled\",\n    pending: \"pending\",\n    rejected: \"rejected\"\n  };\n  const initialResult = Array.from(Array.from({ length: tasks.length }), () => ({ state: promiseState.pending, data: null }));\n  const result = reactive(initialResult);\n  const activeIndex = ref(-1);\n  if (!tasks || tasks.length === 0) {\n    onFinished();\n    return {\n      activeIndex,\n      result\n    };\n  }\n  function updateResult(state, res) {\n    activeIndex.value++;\n    result[activeIndex.value].data = res;\n    result[activeIndex.value].state = state;\n  }\n  tasks.reduce((prev, curr) => {\n    return prev.then((prevRes) => {\n      var _a;\n      if (signal == null ? void 0 : signal.aborted) {\n        updateResult(promiseState.aborted, new Error(\"aborted\"));\n        return;\n      }\n      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {\n        onFinished();\n        return;\n      }\n      const done = curr(prevRes).then((currentRes) => {\n        updateResult(promiseState.fulfilled, currentRes);\n        activeIndex.value === tasks.length - 1 && onFinished();\n        return currentRes;\n      });\n      if (!signal)\n        return done;\n      return Promise.race([done, whenAborted(signal)]);\n    }).catch((e) => {\n      if (signal == null ? void 0 : signal.aborted) {\n        updateResult(promiseState.aborted, e);\n        return e;\n      }\n      updateResult(promiseState.rejected, e);\n      onError();\n      return e;\n    });\n  }, Promise.resolve());\n  return {\n    activeIndex,\n    result\n  };\n}\nfunction whenAborted(signal) {\n  return new Promise((resolve, reject) => {\n    const error = new Error(\"aborted\");\n    if (signal.aborted)\n      reject(error);\n    else\n      signal.addEventListener(\"abort\", () => reject(error), { once: true });\n  });\n}\n\nfunction useAsyncState(promise, initialState, options) {\n  const {\n    immediate = true,\n    delay = 0,\n    onError = noop,\n    onSuccess = noop,\n    resetOnExecute = true,\n    shallow = true,\n    throwError\n  } = options != null ? options : {};\n  const state = shallow ? shallowRef(initialState) : ref(initialState);\n  const isReady = ref(false);\n  const isLoading = ref(false);\n  const error = shallowRef(void 0);\n  async function execute(delay2 = 0, ...args) {\n    if (resetOnExecute)\n      state.value = initialState;\n    error.value = void 0;\n    isReady.value = false;\n    isLoading.value = true;\n    if (delay2 > 0)\n      await promiseTimeout(delay2);\n    const _promise = typeof promise === \"function\" ? promise(...args) : promise;\n    try {\n      const data = await _promise;\n      state.value = data;\n      isReady.value = true;\n      onSuccess(data);\n    } catch (e) {\n      error.value = e;\n      onError(e);\n      if (throwError)\n        throw e;\n    } finally {\n      isLoading.value = false;\n    }\n    return state.value;\n  }\n  if (immediate)\n    execute(delay);\n  const shell = {\n    state,\n    isReady,\n    isLoading,\n    error,\n    execute\n  };\n  function waitUntilIsLoaded() {\n    return new Promise((resolve, reject) => {\n      until(isLoading).toBe(false).then(() => resolve(shell)).catch(reject);\n    });\n  }\n  return {\n    ...shell,\n    then(onFulfilled, onRejected) {\n      return waitUntilIsLoaded().then(onFulfilled, onRejected);\n    }\n  };\n}\n\nconst defaults = {\n  array: (v) => JSON.stringify(v),\n  object: (v) => JSON.stringify(v),\n  set: (v) => JSON.stringify(Array.from(v)),\n  map: (v) => JSON.stringify(Object.fromEntries(v)),\n  null: () => \"\"\n};\nfunction getDefaultSerialization(target) {\n  if (!target)\n    return defaults.null;\n  if (target instanceof Map)\n    return defaults.map;\n  else if (target instanceof Set)\n    return defaults.set;\n  else if (Array.isArray(target))\n    return defaults.array;\n  else\n    return defaults.object;\n}\n\nfunction useBase64(target, options) {\n  const base64 = ref(\"\");\n  const promise = ref();\n  function execute() {\n    if (!isClient)\n      return;\n    promise.value = new Promise((resolve, reject) => {\n      try {\n        const _target = toValue(target);\n        if (_target == null) {\n          resolve(\"\");\n        } else if (typeof _target === \"string\") {\n          resolve(blobToBase64(new Blob([_target], { type: \"text/plain\" })));\n        } else if (_target instanceof Blob) {\n          resolve(blobToBase64(_target));\n        } else if (_target instanceof ArrayBuffer) {\n          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));\n        } else if (_target instanceof HTMLCanvasElement) {\n          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n        } else if (_target instanceof HTMLImageElement) {\n          const img = _target.cloneNode(false);\n          img.crossOrigin = \"Anonymous\";\n          imgLoaded(img).then(() => {\n            const canvas = document.createElement(\"canvas\");\n            const ctx = canvas.getContext(\"2d\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n          }).catch(reject);\n        } else if (typeof _target === \"object\") {\n          const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);\n          const serialized = _serializeFn(_target);\n          return resolve(blobToBase64(new Blob([serialized], { type: \"application/json\" })));\n        } else {\n          reject(new Error(\"target is unsupported types\"));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n    promise.value.then((res) => base64.value = res);\n    return promise.value;\n  }\n  if (isRef(target) || typeof target === \"function\")\n    watch(target, execute, { immediate: true });\n  else\n    execute();\n  return {\n    base64,\n    promise,\n    execute\n  };\n}\nfunction imgLoaded(img) {\n  return new Promise((resolve, reject) => {\n    if (!img.complete) {\n      img.onload = () => {\n        resolve();\n      };\n      img.onerror = reject;\n    } else {\n      resolve();\n    }\n  });\n}\nfunction blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      resolve(e.target.result);\n    };\n    fr.onerror = reject;\n    fr.readAsDataURL(blob);\n  });\n}\n\nfunction useBattery(options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const events = [\"chargingchange\", \"chargingtimechange\", \"dischargingtimechange\", \"levelchange\"];\n  const isSupported = useSupported(() => navigator && \"getBattery\" in navigator && typeof navigator.getBattery === \"function\");\n  const charging = ref(false);\n  const chargingTime = ref(0);\n  const dischargingTime = ref(0);\n  const level = ref(1);\n  let battery;\n  function updateBatteryInfo() {\n    charging.value = this.charging;\n    chargingTime.value = this.chargingTime || 0;\n    dischargingTime.value = this.dischargingTime || 0;\n    level.value = this.level;\n  }\n  if (isSupported.value) {\n    navigator.getBattery().then((_battery) => {\n      battery = _battery;\n      updateBatteryInfo.call(battery);\n      useEventListener(battery, events, updateBatteryInfo, { passive: true });\n    });\n  }\n  return {\n    isSupported,\n    charging,\n    chargingTime,\n    dischargingTime,\n    level\n  };\n}\n\nfunction useBluetooth(options) {\n  let {\n    acceptAllDevices = false\n  } = options || {};\n  const {\n    filters = void 0,\n    optionalServices = void 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => navigator && \"bluetooth\" in navigator);\n  const device = shallowRef(void 0);\n  const error = shallowRef(null);\n  watch(device, () => {\n    connectToBluetoothGATTServer();\n  });\n  async function requestDevice() {\n    if (!isSupported.value)\n      return;\n    error.value = null;\n    if (filters && filters.length > 0)\n      acceptAllDevices = false;\n    try {\n      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({\n        acceptAllDevices,\n        filters,\n        optionalServices\n      }));\n    } catch (err) {\n      error.value = err;\n    }\n  }\n  const server = ref();\n  const isConnected = computed(() => {\n    var _a;\n    return ((_a = server.value) == null ? void 0 : _a.connected) || false;\n  });\n  async function connectToBluetoothGATTServer() {\n    error.value = null;\n    if (device.value && device.value.gatt) {\n      device.value.addEventListener(\"gattserverdisconnected\", () => {\n      });\n      try {\n        server.value = await device.value.gatt.connect();\n      } catch (err) {\n        error.value = err;\n      }\n    }\n  }\n  tryOnMounted(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.connect();\n  });\n  tryOnScopeDispose(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();\n  });\n  return {\n    isSupported,\n    isConnected,\n    // Device:\n    device,\n    requestDevice,\n    // Server:\n    server,\n    // Errors:\n    error\n  };\n}\n\nfunction useMediaQuery(query, options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"matchMedia\" in window && typeof window.matchMedia === \"function\");\n  let mediaQuery;\n  const matches = ref(false);\n  const handler = (event) => {\n    matches.value = event.matches;\n  };\n  const cleanup = () => {\n    if (!mediaQuery)\n      return;\n    if (\"removeEventListener\" in mediaQuery)\n      mediaQuery.removeEventListener(\"change\", handler);\n    else\n      mediaQuery.removeListener(handler);\n  };\n  const stopWatch = watchEffect(() => {\n    if (!isSupported.value)\n      return;\n    cleanup();\n    mediaQuery = window.matchMedia(toValue(query));\n    if (\"addEventListener\" in mediaQuery)\n      mediaQuery.addEventListener(\"change\", handler);\n    else\n      mediaQuery.addListener(handler);\n    matches.value = mediaQuery.matches;\n  });\n  tryOnScopeDispose(() => {\n    stopWatch();\n    cleanup();\n    mediaQuery = void 0;\n  });\n  return matches;\n}\n\nconst breakpointsTailwind = {\n  \"sm\": 640,\n  \"md\": 768,\n  \"lg\": 1024,\n  \"xl\": 1280,\n  \"2xl\": 1536\n};\nconst breakpointsBootstrapV5 = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n};\nconst breakpointsVuetifyV2 = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1264,\n  xl: 1904\n};\nconst breakpointsVuetifyV3 = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n  xxl: 2560\n};\nconst breakpointsVuetify = breakpointsVuetifyV2;\nconst breakpointsAntDesign = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600\n};\nconst breakpointsQuasar = {\n  xs: 0,\n  sm: 600,\n  md: 1024,\n  lg: 1440,\n  xl: 1920\n};\nconst breakpointsSematic = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop4K: 2560\n};\nconst breakpointsMasterCss = {\n  \"3xs\": 360,\n  \"2xs\": 480,\n  \"xs\": 600,\n  \"sm\": 768,\n  \"md\": 1024,\n  \"lg\": 1280,\n  \"xl\": 1440,\n  \"2xl\": 1600,\n  \"3xl\": 1920,\n  \"4xl\": 2560\n};\nconst breakpointsPrimeFlex = {\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n};\n\nfunction useBreakpoints(breakpoints, options = {}) {\n  function getValue(k, delta) {\n    let v = toValue(breakpoints[toValue(k)]);\n    if (delta != null)\n      v = increaseWithUnit(v, delta);\n    if (typeof v === \"number\")\n      v = `${v}px`;\n    return v;\n  }\n  const { window = defaultWindow, strategy = \"min-width\" } = options;\n  function match(query) {\n    if (!window)\n      return false;\n    return window.matchMedia(query).matches;\n  }\n  const greaterOrEqual = (k) => {\n    return useMediaQuery(() => `(min-width: ${getValue(k)})`, options);\n  };\n  const smallerOrEqual = (k) => {\n    return useMediaQuery(() => `(max-width: ${getValue(k)})`, options);\n  };\n  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {\n    Object.defineProperty(shortcuts, k, {\n      get: () => strategy === \"min-width\" ? greaterOrEqual(k) : smallerOrEqual(k),\n      enumerable: true,\n      configurable: true\n    });\n    return shortcuts;\n  }, {});\n  function current() {\n    const points = Object.keys(breakpoints).map((i) => [i, greaterOrEqual(i)]);\n    return computed(() => points.filter(([, v]) => v.value).map(([k]) => k));\n  }\n  return Object.assign(shortcutMethods, {\n    greaterOrEqual,\n    smallerOrEqual,\n    greater(k) {\n      return useMediaQuery(() => `(min-width: ${getValue(k, 0.1)})`, options);\n    },\n    smaller(k) {\n      return useMediaQuery(() => `(max-width: ${getValue(k, -0.1)})`, options);\n    },\n    between(a, b) {\n      return useMediaQuery(() => `(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);\n    },\n    isGreater(k) {\n      return match(`(min-width: ${getValue(k, 0.1)})`);\n    },\n    isGreaterOrEqual(k) {\n      return match(`(min-width: ${getValue(k)})`);\n    },\n    isSmaller(k) {\n      return match(`(max-width: ${getValue(k, -0.1)})`);\n    },\n    isSmallerOrEqual(k) {\n      return match(`(max-width: ${getValue(k)})`);\n    },\n    isInBetween(a, b) {\n      return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);\n    },\n    current,\n    active() {\n      const bps = current();\n      return computed(() => bps.value.length === 0 ? \"\" : bps.value.at(-1));\n    }\n  });\n}\n\nfunction useBroadcastChannel(options) {\n  const {\n    name,\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"BroadcastChannel\" in window);\n  const isClosed = ref(false);\n  const channel = ref();\n  const data = ref();\n  const error = shallowRef(null);\n  const post = (data2) => {\n    if (channel.value)\n      channel.value.postMessage(data2);\n  };\n  const close = () => {\n    if (channel.value)\n      channel.value.close();\n    isClosed.value = true;\n  };\n  if (isSupported.value) {\n    tryOnMounted(() => {\n      error.value = null;\n      channel.value = new BroadcastChannel(name);\n      channel.value.addEventListener(\"message\", (e) => {\n        data.value = e.data;\n      }, { passive: true });\n      channel.value.addEventListener(\"messageerror\", (e) => {\n        error.value = e;\n      }, { passive: true });\n      channel.value.addEventListener(\"close\", () => {\n        isClosed.value = true;\n      });\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    isSupported,\n    channel,\n    data,\n    post,\n    close,\n    error,\n    isClosed\n  };\n}\n\nconst WRITABLE_PROPERTIES = [\n  \"hash\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"search\"\n];\nfunction useBrowserLocation(options = {}) {\n  const { window = defaultWindow } = options;\n  const refs = Object.fromEntries(\n    WRITABLE_PROPERTIES.map((key) => [key, ref()])\n  );\n  for (const [key, ref2] of objectEntries(refs)) {\n    watch(ref2, (value) => {\n      if (!(window == null ? void 0 : window.location) || window.location[key] === value)\n        return;\n      window.location[key] = value;\n    });\n  }\n  const buildState = (trigger) => {\n    var _a;\n    const { state: state2, length } = (window == null ? void 0 : window.history) || {};\n    const { origin } = (window == null ? void 0 : window.location) || {};\n    for (const key of WRITABLE_PROPERTIES)\n      refs[key].value = (_a = window == null ? void 0 : window.location) == null ? void 0 : _a[key];\n    return reactive({\n      trigger,\n      state: state2,\n      length,\n      origin,\n      ...refs\n    });\n  };\n  const state = ref(buildState(\"load\"));\n  if (window) {\n    useEventListener(window, \"popstate\", () => state.value = buildState(\"popstate\"), { passive: true });\n    useEventListener(window, \"hashchange\", () => state.value = buildState(\"hashchange\"), { passive: true });\n  }\n  return state;\n}\n\nfunction useCached(refValue, comparator = (a, b) => a === b, watchOptions) {\n  const cachedValue = ref(refValue.value);\n  watch(() => refValue.value, (value) => {\n    if (!comparator(value, cachedValue.value))\n      cachedValue.value = value;\n  }, watchOptions);\n  return cachedValue;\n}\n\nfunction usePermission(permissionDesc, options = {}) {\n  const {\n    controls = false,\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"permissions\" in navigator);\n  let permissionStatus;\n  const desc = typeof permissionDesc === \"string\" ? { name: permissionDesc } : permissionDesc;\n  const state = ref();\n  const onChange = () => {\n    if (permissionStatus)\n      state.value = permissionStatus.state;\n  };\n  const query = createSingletonPromise(async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionStatus) {\n      try {\n        permissionStatus = await navigator.permissions.query(desc);\n        useEventListener(permissionStatus, \"change\", onChange);\n        onChange();\n      } catch (e) {\n        state.value = \"prompt\";\n      }\n    }\n    return permissionStatus;\n  });\n  query();\n  if (controls) {\n    return {\n      state,\n      isSupported,\n      query\n    };\n  } else {\n    return state;\n  }\n}\n\nfunction useClipboard(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500,\n    legacy = false\n  } = options;\n  const isClipboardApiSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const permissionRead = usePermission(\"clipboard-read\");\n  const permissionWrite = usePermission(\"clipboard-write\");\n  const isSupported = computed(() => isClipboardApiSupported.value || legacy);\n  const text = ref(\"\");\n  const copied = ref(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\n  function updateText() {\n    if (isClipboardApiSupported.value && isAllowed(permissionRead.value)) {\n      navigator.clipboard.readText().then((value) => {\n        text.value = value;\n      });\n    } else {\n      text.value = legacyRead();\n    }\n  }\n  if (isSupported.value && read)\n    useEventListener([\"copy\", \"cut\"], updateText);\n  async function copy(value = toValue(source)) {\n    if (isSupported.value && value != null) {\n      if (isClipboardApiSupported.value && isAllowed(permissionWrite.value))\n        await navigator.clipboard.writeText(value);\n      else\n        legacyCopy(value);\n      text.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  function legacyCopy(value) {\n    const ta = document.createElement(\"textarea\");\n    ta.value = value != null ? value : \"\";\n    ta.style.position = \"absolute\";\n    ta.style.opacity = \"0\";\n    document.body.appendChild(ta);\n    ta.select();\n    document.execCommand(\"copy\");\n    ta.remove();\n  }\n  function legacyRead() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = document == null ? void 0 : document.getSelection) == null ? void 0 : _a.call(document)) == null ? void 0 : _b.toString()) != null ? _c : \"\";\n  }\n  function isAllowed(status) {\n    return status === \"granted\" || status === \"prompt\";\n  }\n  return {\n    isSupported,\n    text,\n    copied,\n    copy\n  };\n}\n\nfunction useClipboardItems(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500\n  } = options;\n  const isSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const content = ref([]);\n  const copied = ref(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\n  function updateContent() {\n    if (isSupported.value) {\n      navigator.clipboard.read().then((items) => {\n        content.value = items;\n      });\n    }\n  }\n  if (isSupported.value && read)\n    useEventListener([\"copy\", \"cut\"], updateContent);\n  async function copy(value = toValue(source)) {\n    if (isSupported.value && value != null) {\n      await navigator.clipboard.write(value);\n      content.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  return {\n    isSupported,\n    content,\n    copied,\n    copy\n  };\n}\n\nfunction cloneFnJSON(source) {\n  return JSON.parse(JSON.stringify(source));\n}\nfunction useCloned(source, options = {}) {\n  const cloned = ref({});\n  const {\n    manual,\n    clone = cloneFnJSON,\n    // watch options\n    deep = true,\n    immediate = true\n  } = options;\n  function sync() {\n    cloned.value = clone(toValue(source));\n  }\n  if (!manual && (isRef(source) || typeof source === \"function\")) {\n    watch(source, sync, {\n      ...options,\n      deep,\n      immediate\n    });\n  } else {\n    sync();\n  }\n  return { cloned, sync };\n}\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__vueuse_ssr_handlers__\";\nconst handlers = /* @__PURE__ */ getHandlers();\nfunction getHandlers() {\n  if (!(globalKey in _global))\n    _global[globalKey] = _global[globalKey] || {};\n  return _global[globalKey];\n}\nfunction getSSRHandler(key, fallback) {\n  return handlers[key] || fallback;\n}\nfunction setSSRHandler(key, fn) {\n  handlers[key] = fn;\n}\n\nfunction guessSerializerType(rawInit) {\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\n}\n\nconst StorageSerializers = {\n  boolean: {\n    read: (v) => v === \"true\",\n    write: (v) => String(v)\n  },\n  object: {\n    read: (v) => JSON.parse(v),\n    write: (v) => JSON.stringify(v)\n  },\n  number: {\n    read: (v) => Number.parseFloat(v),\n    write: (v) => String(v)\n  },\n  any: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  string: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  map: {\n    read: (v) => new Map(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v.entries()))\n  },\n  set: {\n    read: (v) => new Set(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v))\n  },\n  date: {\n    read: (v) => new Date(v),\n    write: (v) => v.toISOString()\n  }\n};\nconst customStorageEventName = \"vueuse-storage\";\nfunction useStorage(key, defaults, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    },\n    initOnMounted\n  } = options;\n  const data = (shallow ? shallowRef : ref)(typeof defaults === \"function\" ? defaults() : defaults);\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  if (!storage)\n    return data;\n  const rawInit = toValue(defaults);\n  const type = guessSerializerType(rawInit);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  const { pause: pauseWatch, resume: resumeWatch } = pausableWatch(\n    data,\n    () => write(data.value),\n    { flush, deep, eventFilter }\n  );\n  if (window && listenToStorageChanges) {\n    tryOnMounted(() => {\n      useEventListener(window, \"storage\", update);\n      useEventListener(window, customStorageEventName, updateFromCustomEvent);\n      if (initOnMounted)\n        update();\n    });\n  }\n  if (!initOnMounted)\n    update();\n  function dispatchWriteEvent(oldValue, newValue) {\n    if (window) {\n      window.dispatchEvent(new CustomEvent(customStorageEventName, {\n        detail: {\n          key,\n          oldValue,\n          newValue,\n          storageArea: storage\n        }\n      }));\n    }\n  }\n  function write(v) {\n    try {\n      const oldValue = storage.getItem(key);\n      if (v == null) {\n        dispatchWriteEvent(oldValue, null);\n        storage.removeItem(key);\n      } else {\n        const serialized = serializer.write(v);\n        if (oldValue !== serialized) {\n          storage.setItem(key, serialized);\n          dispatchWriteEvent(oldValue, serialized);\n        }\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  function read(event) {\n    const rawValue = event ? event.newValue : storage.getItem(key);\n    if (rawValue == null) {\n      if (writeDefaults && rawInit != null)\n        storage.setItem(key, serializer.write(rawInit));\n      return rawInit;\n    } else if (!event && mergeDefaults) {\n      const value = serializer.read(rawValue);\n      if (typeof mergeDefaults === \"function\")\n        return mergeDefaults(value, rawInit);\n      else if (type === \"object\" && !Array.isArray(value))\n        return { ...rawInit, ...value };\n      return value;\n    } else if (typeof rawValue !== \"string\") {\n      return rawValue;\n    } else {\n      return serializer.read(rawValue);\n    }\n  }\n  function update(event) {\n    if (event && event.storageArea !== storage)\n      return;\n    if (event && event.key == null) {\n      data.value = rawInit;\n      return;\n    }\n    if (event && event.key !== key)\n      return;\n    pauseWatch();\n    try {\n      if ((event == null ? void 0 : event.newValue) !== serializer.write(data.value))\n        data.value = read(event);\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (event)\n        nextTick(resumeWatch);\n      else\n        resumeWatch();\n    }\n  }\n  function updateFromCustomEvent(event) {\n    update(event.detail);\n  }\n  return data;\n}\n\nfunction usePreferredDark(options) {\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n}\n\nfunction useColorMode(options = {}) {\n  const {\n    selector = \"html\",\n    attribute = \"class\",\n    initialValue = \"auto\",\n    window = defaultWindow,\n    storage,\n    storageKey = \"vueuse-color-scheme\",\n    listenToStorageChanges = true,\n    storageRef,\n    emitAuto,\n    disableTransition = true\n  } = options;\n  const modes = {\n    auto: \"\",\n    light: \"light\",\n    dark: \"dark\",\n    ...options.modes || {}\n  };\n  const preferredDark = usePreferredDark({ window });\n  const system = computed(() => preferredDark.value ? \"dark\" : \"light\");\n  const store = storageRef || (storageKey == null ? toRef(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));\n  const state = computed(() => store.value === \"auto\" ? system.value : store.value);\n  const updateHTMLAttrs = getSSRHandler(\n    \"updateHTMLAttrs\",\n    (selector2, attribute2, value) => {\n      const el = typeof selector2 === \"string\" ? window == null ? void 0 : window.document.querySelector(selector2) : unrefElement(selector2);\n      if (!el)\n        return;\n      let style;\n      if (disableTransition) {\n        style = window.document.createElement(\"style\");\n        const styleString = \"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\";\n        style.appendChild(document.createTextNode(styleString));\n        window.document.head.appendChild(style);\n      }\n      if (attribute2 === \"class\") {\n        const current = value.split(/\\s/g);\n        Object.values(modes).flatMap((i) => (i || \"\").split(/\\s/g)).filter(Boolean).forEach((v) => {\n          if (current.includes(v))\n            el.classList.add(v);\n          else\n            el.classList.remove(v);\n        });\n      } else {\n        el.setAttribute(attribute2, value);\n      }\n      if (disableTransition) {\n        window.getComputedStyle(style).opacity;\n        document.head.removeChild(style);\n      }\n    }\n  );\n  function defaultOnChanged(mode) {\n    var _a;\n    updateHTMLAttrs(selector, attribute, (_a = modes[mode]) != null ? _a : mode);\n  }\n  function onChanged(mode) {\n    if (options.onChanged)\n      options.onChanged(mode, defaultOnChanged);\n    else\n      defaultOnChanged(mode);\n  }\n  watch(state, onChanged, { flush: \"post\", immediate: true });\n  tryOnMounted(() => onChanged(state.value));\n  const auto = computed({\n    get() {\n      return emitAuto ? store.value : state.value;\n    },\n    set(v) {\n      store.value = v;\n    }\n  });\n  try {\n    return Object.assign(auto, { store, system, state });\n  } catch (e) {\n    return auto;\n  }\n}\n\nfunction useConfirmDialog(revealed = ref(false)) {\n  const confirmHook = createEventHook();\n  const cancelHook = createEventHook();\n  const revealHook = createEventHook();\n  let _resolve = noop;\n  const reveal = (data) => {\n    revealHook.trigger(data);\n    revealed.value = true;\n    return new Promise((resolve) => {\n      _resolve = resolve;\n    });\n  };\n  const confirm = (data) => {\n    revealed.value = false;\n    confirmHook.trigger(data);\n    _resolve({ data, isCanceled: false });\n  };\n  const cancel = (data) => {\n    revealed.value = false;\n    cancelHook.trigger(data);\n    _resolve({ data, isCanceled: true });\n  };\n  return {\n    isRevealed: computed(() => revealed.value),\n    reveal,\n    confirm,\n    cancel,\n    onReveal: revealHook.on,\n    onConfirm: confirmHook.on,\n    onCancel: cancelHook.on\n  };\n}\n\nfunction useCssVar(prop, target, options = {}) {\n  const { window = defaultWindow, initialValue = \"\", observe = false } = options;\n  const variable = ref(initialValue);\n  const elRef = computed(() => {\n    var _a;\n    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\n  });\n  function updateCssVar() {\n    var _a;\n    const key = toValue(prop);\n    const el = toValue(elRef);\n    if (el && window) {\n      const value = (_a = window.getComputedStyle(el).getPropertyValue(key)) == null ? void 0 : _a.trim();\n      variable.value = value || initialValue;\n    }\n  }\n  if (observe) {\n    useMutationObserver(elRef, updateCssVar, {\n      attributeFilter: [\"style\", \"class\"],\n      window\n    });\n  }\n  watch(\n    [elRef, () => toValue(prop)],\n    updateCssVar,\n    { immediate: true }\n  );\n  watch(\n    variable,\n    (val) => {\n      var _a;\n      if ((_a = elRef.value) == null ? void 0 : _a.style)\n        elRef.value.style.setProperty(toValue(prop), val);\n    }\n  );\n  return variable;\n}\n\nfunction useCurrentElement(rootComponent) {\n  const vm = getCurrentInstance();\n  const currentElement = computedWithControl(\n    () => null,\n    () => rootComponent ? unrefElement(rootComponent) : vm.proxy.$el\n  );\n  onUpdated(currentElement.trigger);\n  onMounted(currentElement.trigger);\n  return currentElement;\n}\n\nfunction useCycleList(list, options) {\n  const state = shallowRef(getInitialValue());\n  const listRef = toRef(list);\n  const index = computed({\n    get() {\n      var _a;\n      const targetList = listRef.value;\n      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, targetList) : targetList.indexOf(state.value);\n      if (index2 < 0)\n        index2 = (_a = options == null ? void 0 : options.fallbackIndex) != null ? _a : 0;\n      return index2;\n    },\n    set(v) {\n      set(v);\n    }\n  });\n  function set(i) {\n    const targetList = listRef.value;\n    const length = targetList.length;\n    const index2 = (i % length + length) % length;\n    const value = targetList[index2];\n    state.value = value;\n    return value;\n  }\n  function shift(delta = 1) {\n    return set(index.value + delta);\n  }\n  function next(n = 1) {\n    return shift(n);\n  }\n  function prev(n = 1) {\n    return shift(-n);\n  }\n  function getInitialValue() {\n    var _a, _b;\n    return (_b = toValue((_a = options == null ? void 0 : options.initialValue) != null ? _a : toValue(list)[0])) != null ? _b : void 0;\n  }\n  watch(listRef, () => set(index.value));\n  return {\n    state,\n    index,\n    next,\n    prev,\n    go: set\n  };\n}\n\nfunction useDark(options = {}) {\n  const {\n    valueDark = \"dark\",\n    valueLight = \"\",\n    window = defaultWindow\n  } = options;\n  const mode = useColorMode({\n    ...options,\n    onChanged: (mode2, defaultHandler) => {\n      var _a;\n      if (options.onChanged)\n        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === \"dark\", defaultHandler, mode2);\n      else\n        defaultHandler(mode2);\n    },\n    modes: {\n      dark: valueDark,\n      light: valueLight\n    }\n  });\n  const system = computed(() => {\n    if (mode.system) {\n      return mode.system.value;\n    } else {\n      const preferredDark = usePreferredDark({ window });\n      return preferredDark.value ? \"dark\" : \"light\";\n    }\n  });\n  const isDark = computed({\n    get() {\n      return mode.value === \"dark\";\n    },\n    set(v) {\n      const modeVal = v ? \"dark\" : \"light\";\n      if (system.value === modeVal)\n        mode.value = \"auto\";\n      else\n        mode.value = modeVal;\n    }\n  });\n  return isDark;\n}\n\nfunction fnBypass(v) {\n  return v;\n}\nfunction fnSetSource(source, value) {\n  return source.value = value;\n}\nfunction defaultDump(clone) {\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\n}\nfunction defaultParse(clone) {\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\n}\nfunction useManualRefHistory(source, options = {}) {\n  const {\n    clone = false,\n    dump = defaultDump(clone),\n    parse = defaultParse(clone),\n    setSource = fnSetSource\n  } = options;\n  function _createHistoryRecord() {\n    return markRaw({\n      snapshot: dump(source.value),\n      timestamp: timestamp()\n    });\n  }\n  const last = ref(_createHistoryRecord());\n  const undoStack = ref([]);\n  const redoStack = ref([]);\n  const _setSource = (record) => {\n    setSource(source, parse(record.snapshot));\n    last.value = record;\n  };\n  const commit = () => {\n    undoStack.value.unshift(last.value);\n    last.value = _createHistoryRecord();\n    if (options.capacity && undoStack.value.length > options.capacity)\n      undoStack.value.splice(options.capacity, Number.POSITIVE_INFINITY);\n    if (redoStack.value.length)\n      redoStack.value.splice(0, redoStack.value.length);\n  };\n  const clear = () => {\n    undoStack.value.splice(0, undoStack.value.length);\n    redoStack.value.splice(0, redoStack.value.length);\n  };\n  const undo = () => {\n    const state = undoStack.value.shift();\n    if (state) {\n      redoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const redo = () => {\n    const state = redoStack.value.shift();\n    if (state) {\n      undoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const reset = () => {\n    _setSource(last.value);\n  };\n  const history = computed(() => [last.value, ...undoStack.value]);\n  const canUndo = computed(() => undoStack.value.length > 0);\n  const canRedo = computed(() => redoStack.value.length > 0);\n  return {\n    source,\n    undoStack,\n    redoStack,\n    last,\n    history,\n    canUndo,\n    canRedo,\n    clear,\n    commit,\n    reset,\n    undo,\n    redo\n  };\n}\n\nfunction useRefHistory(source, options = {}) {\n  const {\n    deep = false,\n    flush = \"pre\",\n    eventFilter\n  } = options;\n  const {\n    eventFilter: composedFilter,\n    pause,\n    resume: resumeTracking,\n    isActive: isTracking\n  } = pausableFilter(eventFilter);\n  const {\n    ignoreUpdates,\n    ignorePrevAsyncUpdates,\n    stop\n  } = watchIgnorable(\n    source,\n    commit,\n    { deep, flush, eventFilter: composedFilter }\n  );\n  function setSource(source2, value) {\n    ignorePrevAsyncUpdates();\n    ignoreUpdates(() => {\n      source2.value = value;\n    });\n  }\n  const manualHistory = useManualRefHistory(source, { ...options, clone: options.clone || deep, setSource });\n  const { clear, commit: manualCommit } = manualHistory;\n  function commit() {\n    ignorePrevAsyncUpdates();\n    manualCommit();\n  }\n  function resume(commitNow) {\n    resumeTracking();\n    if (commitNow)\n      commit();\n  }\n  function batch(fn) {\n    let canceled = false;\n    const cancel = () => canceled = true;\n    ignoreUpdates(() => {\n      fn(cancel);\n    });\n    if (!canceled)\n      commit();\n  }\n  function dispose() {\n    stop();\n    clear();\n  }\n  return {\n    ...manualHistory,\n    isTracking,\n    pause,\n    resume,\n    commit,\n    batch,\n    dispose\n  };\n}\n\nfunction useDebouncedRefHistory(source, options = {}) {\n  const filter = options.debounce ? debounceFilter(options.debounce) : void 0;\n  const history = useRefHistory(source, { ...options, eventFilter: filter });\n  return {\n    ...history\n  };\n}\n\nfunction useDeviceMotion(options = {}) {\n  const {\n    window = defaultWindow,\n    eventFilter = bypassFilter\n  } = options;\n  const acceleration = ref({ x: null, y: null, z: null });\n  const rotationRate = ref({ alpha: null, beta: null, gamma: null });\n  const interval = ref(0);\n  const accelerationIncludingGravity = ref({\n    x: null,\n    y: null,\n    z: null\n  });\n  if (window) {\n    const onDeviceMotion = createFilterWrapper(\n      eventFilter,\n      (event) => {\n        acceleration.value = event.acceleration;\n        accelerationIncludingGravity.value = event.accelerationIncludingGravity;\n        rotationRate.value = event.rotationRate;\n        interval.value = event.interval;\n      }\n    );\n    useEventListener(window, \"devicemotion\", onDeviceMotion);\n  }\n  return {\n    acceleration,\n    accelerationIncludingGravity,\n    rotationRate,\n    interval\n  };\n}\n\nfunction useDeviceOrientation(options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"DeviceOrientationEvent\" in window);\n  const isAbsolute = ref(false);\n  const alpha = ref(null);\n  const beta = ref(null);\n  const gamma = ref(null);\n  if (window && isSupported.value) {\n    useEventListener(window, \"deviceorientation\", (event) => {\n      isAbsolute.value = event.absolute;\n      alpha.value = event.alpha;\n      beta.value = event.beta;\n      gamma.value = event.gamma;\n    });\n  }\n  return {\n    isSupported,\n    isAbsolute,\n    alpha,\n    beta,\n    gamma\n  };\n}\n\nfunction useDevicePixelRatio(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const pixelRatio = ref(1);\n  if (window) {\n    let observe2 = function() {\n      pixelRatio.value = window.devicePixelRatio;\n      cleanup2();\n      media = window.matchMedia(`(resolution: ${pixelRatio.value}dppx)`);\n      media.addEventListener(\"change\", observe2, { once: true });\n    }, cleanup2 = function() {\n      media == null ? void 0 : media.removeEventListener(\"change\", observe2);\n    };\n    let media;\n    observe2();\n    tryOnScopeDispose(cleanup2);\n  }\n  return { pixelRatio };\n}\n\nfunction useDevicesList(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    requestPermissions = false,\n    constraints = { audio: true, video: true },\n    onUpdated\n  } = options;\n  const devices = ref([]);\n  const videoInputs = computed(() => devices.value.filter((i) => i.kind === \"videoinput\"));\n  const audioInputs = computed(() => devices.value.filter((i) => i.kind === \"audioinput\"));\n  const audioOutputs = computed(() => devices.value.filter((i) => i.kind === \"audiooutput\"));\n  const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\n  const permissionGranted = ref(false);\n  let stream;\n  async function update() {\n    if (!isSupported.value)\n      return;\n    devices.value = await navigator.mediaDevices.enumerateDevices();\n    onUpdated == null ? void 0 : onUpdated(devices.value);\n    if (stream) {\n      stream.getTracks().forEach((t) => t.stop());\n      stream = null;\n    }\n  }\n  async function ensurePermissions() {\n    if (!isSupported.value)\n      return false;\n    if (permissionGranted.value)\n      return true;\n    const { state, query } = usePermission(\"camera\", { controls: true });\n    await query();\n    if (state.value !== \"granted\") {\n      stream = await navigator.mediaDevices.getUserMedia(constraints);\n      update();\n      permissionGranted.value = true;\n    } else {\n      permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  }\n  if (isSupported.value) {\n    if (requestPermissions)\n      ensurePermissions();\n    useEventListener(navigator.mediaDevices, \"devicechange\", update);\n    update();\n  }\n  return {\n    devices,\n    ensurePermissions,\n    permissionGranted,\n    videoInputs,\n    audioInputs,\n    audioOutputs,\n    isSupported\n  };\n}\n\nfunction useDisplayMedia(options = {}) {\n  var _a;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const video = options.video;\n  const audio = options.audio;\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;\n  });\n  const constraint = { audio, video };\n  const stream = shallowRef();\n  async function _start() {\n    var _a2;\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.addEventListener(\"ended\", stop));\n    return stream.value;\n  }\n  async function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  watch(\n    enabled,\n    (v) => {\n      if (v)\n        _start();\n      else\n        _stop();\n    },\n    { immediate: true }\n  );\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    enabled\n  };\n}\n\nfunction useDocumentVisibility(options = {}) {\n  const { document = defaultDocument } = options;\n  if (!document)\n    return ref(\"visible\");\n  const visibility = ref(document.visibilityState);\n  useEventListener(document, \"visibilitychange\", () => {\n    visibility.value = document.visibilityState;\n  });\n  return visibility;\n}\n\nfunction useDraggable(target, options = {}) {\n  var _a, _b;\n  const {\n    pointerTypes,\n    preventDefault,\n    stopPropagation,\n    exact,\n    onMove,\n    onEnd,\n    onStart,\n    initialValue,\n    axis = \"both\",\n    draggingElement = defaultWindow,\n    containerElement,\n    handle: draggingHandle = target\n  } = options;\n  const position = ref(\n    (_a = toValue(initialValue)) != null ? _a : { x: 0, y: 0 }\n  );\n  const pressedDelta = ref();\n  const filterEvent = (e) => {\n    if (pointerTypes)\n      return pointerTypes.includes(e.pointerType);\n    return true;\n  };\n  const handleEvent = (e) => {\n    if (toValue(preventDefault))\n      e.preventDefault();\n    if (toValue(stopPropagation))\n      e.stopPropagation();\n  };\n  const start = (e) => {\n    var _a2;\n    if (e.button !== 0)\n      return;\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (toValue(exact) && e.target !== toValue(target))\n      return;\n    const container = toValue(containerElement);\n    const containerRect = (_a2 = container == null ? void 0 : container.getBoundingClientRect) == null ? void 0 : _a2.call(container);\n    const targetRect = toValue(target).getBoundingClientRect();\n    const pos = {\n      x: e.clientX - (container ? targetRect.left - containerRect.left + container.scrollLeft : targetRect.left),\n      y: e.clientY - (container ? targetRect.top - containerRect.top + container.scrollTop : targetRect.top)\n    };\n    if ((onStart == null ? void 0 : onStart(pos, e)) === false)\n      return;\n    pressedDelta.value = pos;\n    handleEvent(e);\n  };\n  const move = (e) => {\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    const container = toValue(containerElement);\n    const targetRect = toValue(target).getBoundingClientRect();\n    let { x, y } = position.value;\n    if (axis === \"x\" || axis === \"both\") {\n      x = e.clientX - pressedDelta.value.x;\n      if (container)\n        x = Math.min(Math.max(0, x), container.scrollWidth - targetRect.width);\n    }\n    if (axis === \"y\" || axis === \"both\") {\n      y = e.clientY - pressedDelta.value.y;\n      if (container)\n        y = Math.min(Math.max(0, y), container.scrollHeight - targetRect.height);\n    }\n    position.value = {\n      x,\n      y\n    };\n    onMove == null ? void 0 : onMove(position.value, e);\n    handleEvent(e);\n  };\n  const end = (e) => {\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    pressedDelta.value = void 0;\n    onEnd == null ? void 0 : onEnd(position.value, e);\n    handleEvent(e);\n  };\n  if (isClient) {\n    const config = { capture: (_b = options.capture) != null ? _b : true };\n    useEventListener(draggingHandle, \"pointerdown\", start, config);\n    useEventListener(draggingElement, \"pointermove\", move, config);\n    useEventListener(draggingElement, \"pointerup\", end, config);\n  }\n  return {\n    ...toRefs(position),\n    position,\n    isDragging: computed(() => !!pressedDelta.value),\n    style: computed(\n      () => `left:${position.value.x}px;top:${position.value.y}px;`\n    )\n  };\n}\n\nfunction useDropZone(target, options = {}) {\n  const isOverDropZone = ref(false);\n  const files = shallowRef(null);\n  let counter = 0;\n  let isDataTypeIncluded = true;\n  if (isClient) {\n    const _options = typeof options === \"function\" ? { onDrop: options } : options;\n    const getFiles = (event) => {\n      var _a, _b;\n      const list = Array.from((_b = (_a = event.dataTransfer) == null ? void 0 : _a.files) != null ? _b : []);\n      return files.value = list.length === 0 ? null : list;\n    };\n    useEventListener(target, \"dragenter\", (event) => {\n      var _a, _b;\n      const types = Array.from(((_a = event == null ? void 0 : event.dataTransfer) == null ? void 0 : _a.items) || []).map((i) => i.kind === \"file\" ? i.type : null).filter(notNullish);\n      if (_options.dataTypes && event.dataTransfer) {\n        const dataTypes = unref(_options.dataTypes);\n        isDataTypeIncluded = typeof dataTypes === \"function\" ? dataTypes(types) : dataTypes ? dataTypes.some((item) => types.includes(item)) : true;\n        if (!isDataTypeIncluded)\n          return;\n      }\n      event.preventDefault();\n      counter += 1;\n      isOverDropZone.value = true;\n      (_b = _options.onEnter) == null ? void 0 : _b.call(_options, getFiles(event), event);\n    });\n    useEventListener(target, \"dragover\", (event) => {\n      var _a;\n      if (!isDataTypeIncluded)\n        return;\n      event.preventDefault();\n      (_a = _options.onOver) == null ? void 0 : _a.call(_options, getFiles(event), event);\n    });\n    useEventListener(target, \"dragleave\", (event) => {\n      var _a;\n      if (!isDataTypeIncluded)\n        return;\n      event.preventDefault();\n      counter -= 1;\n      if (counter === 0)\n        isOverDropZone.value = false;\n      (_a = _options.onLeave) == null ? void 0 : _a.call(_options, getFiles(event), event);\n    });\n    useEventListener(target, \"drop\", (event) => {\n      var _a;\n      event.preventDefault();\n      counter = 0;\n      isOverDropZone.value = false;\n      (_a = _options.onDrop) == null ? void 0 : _a.call(_options, getFiles(event), event);\n    });\n  }\n  return {\n    files,\n    isOverDropZone\n  };\n}\n\nfunction useResizeObserver(target, callback, options = {}) {\n  const { window = defaultWindow, ...observerOptions } = options;\n  let observer;\n  const isSupported = useSupported(() => window && \"ResizeObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(() => Array.isArray(target) ? target.map((el) => unrefElement(el)) : [unrefElement(target)]);\n  const stopWatch = watch(\n    targets,\n    (els) => {\n      cleanup();\n      if (isSupported.value && window) {\n        observer = new ResizeObserver(callback);\n        for (const _el of els)\n          _el && observer.observe(_el, observerOptions);\n      }\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nfunction useElementBounding(target, options = {}) {\n  const {\n    reset = true,\n    windowResize = true,\n    windowScroll = true,\n    immediate = true\n  } = options;\n  const height = ref(0);\n  const bottom = ref(0);\n  const left = ref(0);\n  const right = ref(0);\n  const top = ref(0);\n  const width = ref(0);\n  const x = ref(0);\n  const y = ref(0);\n  function update() {\n    const el = unrefElement(target);\n    if (!el) {\n      if (reset) {\n        height.value = 0;\n        bottom.value = 0;\n        left.value = 0;\n        right.value = 0;\n        top.value = 0;\n        width.value = 0;\n        x.value = 0;\n        y.value = 0;\n      }\n      return;\n    }\n    const rect = el.getBoundingClientRect();\n    height.value = rect.height;\n    bottom.value = rect.bottom;\n    left.value = rect.left;\n    right.value = rect.right;\n    top.value = rect.top;\n    width.value = rect.width;\n    x.value = rect.x;\n    y.value = rect.y;\n  }\n  useResizeObserver(target, update);\n  watch(() => unrefElement(target), (ele) => !ele && update());\n  useMutationObserver(target, update, {\n    attributeFilter: [\"style\", \"class\"]\n  });\n  if (windowScroll)\n    useEventListener(\"scroll\", update, { capture: true, passive: true });\n  if (windowResize)\n    useEventListener(\"resize\", update, { passive: true });\n  tryOnMounted(() => {\n    if (immediate)\n      update();\n  });\n  return {\n    height,\n    bottom,\n    left,\n    right,\n    top,\n    width,\n    x,\n    y,\n    update\n  };\n}\n\nfunction useElementByPoint(options) {\n  const {\n    x,\n    y,\n    document = defaultDocument,\n    multiple,\n    interval = \"requestAnimationFrame\",\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => {\n    if (toValue(multiple))\n      return document && \"elementsFromPoint\" in document;\n    return document && \"elementFromPoint\" in document;\n  });\n  const element = ref(null);\n  const cb = () => {\n    var _a, _b;\n    element.value = toValue(multiple) ? (_a = document == null ? void 0 : document.elementsFromPoint(toValue(x), toValue(y))) != null ? _a : [] : (_b = document == null ? void 0 : document.elementFromPoint(toValue(x), toValue(y))) != null ? _b : null;\n  };\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  return {\n    isSupported,\n    element,\n    ...controls\n  };\n}\n\nfunction useElementHover(el, options = {}) {\n  const {\n    delayEnter = 0,\n    delayLeave = 0,\n    window = defaultWindow\n  } = options;\n  const isHovered = ref(false);\n  let timer;\n  const toggle = (entering) => {\n    const delay = entering ? delayEnter : delayLeave;\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n    }\n    if (delay)\n      timer = setTimeout(() => isHovered.value = entering, delay);\n    else\n      isHovered.value = entering;\n  };\n  if (!window)\n    return isHovered;\n  useEventListener(el, \"mouseenter\", () => toggle(true), { passive: true });\n  useEventListener(el, \"mouseleave\", () => toggle(false), { passive: true });\n  return isHovered;\n}\n\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\n  const { window = defaultWindow, box = \"content-box\" } = options;\n  const isSVG = computed(() => {\n    var _a, _b;\n    return (_b = (_a = unrefElement(target)) == null ? void 0 : _a.namespaceURI) == null ? void 0 : _b.includes(\"svg\");\n  });\n  const width = ref(initialSize.width);\n  const height = ref(initialSize.height);\n  const { stop: stop1 } = useResizeObserver(\n    target,\n    ([entry]) => {\n      const boxSize = box === \"border-box\" ? entry.borderBoxSize : box === \"content-box\" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;\n      if (window && isSVG.value) {\n        const $elem = unrefElement(target);\n        if ($elem) {\n          const rect = $elem.getBoundingClientRect();\n          width.value = rect.width;\n          height.value = rect.height;\n        }\n      } else {\n        if (boxSize) {\n          const formatBoxSize = Array.isArray(boxSize) ? boxSize : [boxSize];\n          width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);\n          height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);\n        } else {\n          width.value = entry.contentRect.width;\n          height.value = entry.contentRect.height;\n        }\n      }\n    },\n    options\n  );\n  tryOnMounted(() => {\n    const ele = unrefElement(target);\n    if (ele) {\n      width.value = \"offsetWidth\" in ele ? ele.offsetWidth : initialSize.width;\n      height.value = \"offsetHeight\" in ele ? ele.offsetHeight : initialSize.height;\n    }\n  });\n  const stop2 = watch(\n    () => unrefElement(target),\n    (ele) => {\n      width.value = ele ? initialSize.width : 0;\n      height.value = ele ? initialSize.height : 0;\n    }\n  );\n  function stop() {\n    stop1();\n    stop2();\n  }\n  return {\n    width,\n    height,\n    stop\n  };\n}\n\nfunction useIntersectionObserver(target, callback, options = {}) {\n  const {\n    root,\n    rootMargin = \"0px\",\n    threshold = 0.1,\n    window = defaultWindow,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => window && \"IntersectionObserver\" in window);\n  const targets = computed(() => {\n    const _target = toValue(target);\n    return (Array.isArray(_target) ? _target : [_target]).map(unrefElement).filter(notNullish);\n  });\n  let cleanup = noop;\n  const isActive = ref(immediate);\n  const stopWatch = isSupported.value ? watch(\n    () => [targets.value, unrefElement(root), isActive.value],\n    ([targets2, root2]) => {\n      cleanup();\n      if (!isActive.value)\n        return;\n      if (!targets2.length)\n        return;\n      const observer = new IntersectionObserver(\n        callback,\n        {\n          root: unrefElement(root2),\n          rootMargin,\n          threshold\n        }\n      );\n      targets2.forEach((el) => el && observer.observe(el));\n      cleanup = () => {\n        observer.disconnect();\n        cleanup = noop;\n      };\n    },\n    { immediate, flush: \"post\" }\n  ) : noop;\n  const stop = () => {\n    cleanup();\n    stopWatch();\n    isActive.value = false;\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    isActive,\n    pause() {\n      cleanup();\n      isActive.value = false;\n    },\n    resume() {\n      isActive.value = true;\n    },\n    stop\n  };\n}\n\nfunction useElementVisibility(element, options = {}) {\n  const { window = defaultWindow, scrollTarget, threshold = 0 } = options;\n  const elementIsVisible = ref(false);\n  useIntersectionObserver(\n    element,\n    (intersectionObserverEntries) => {\n      let isIntersecting = elementIsVisible.value;\n      let latestTime = 0;\n      for (const entry of intersectionObserverEntries) {\n        if (entry.time >= latestTime) {\n          latestTime = entry.time;\n          isIntersecting = entry.isIntersecting;\n        }\n      }\n      elementIsVisible.value = isIntersecting;\n    },\n    {\n      root: scrollTarget,\n      window,\n      threshold\n    }\n  );\n  return elementIsVisible;\n}\n\nconst events = /* @__PURE__ */ new Map();\n\nfunction useEventBus(key) {\n  const scope = getCurrentScope();\n  function on(listener) {\n    var _a;\n    const listeners = events.get(key) || /* @__PURE__ */ new Set();\n    listeners.add(listener);\n    events.set(key, listeners);\n    const _off = () => off(listener);\n    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);\n    return _off;\n  }\n  function once(listener) {\n    function _listener(...args) {\n      off(_listener);\n      listener(...args);\n    }\n    return on(_listener);\n  }\n  function off(listener) {\n    const listeners = events.get(key);\n    if (!listeners)\n      return;\n    listeners.delete(listener);\n    if (!listeners.size)\n      reset();\n  }\n  function reset() {\n    events.delete(key);\n  }\n  function emit(event, payload) {\n    var _a;\n    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));\n  }\n  return { on, once, off, emit, reset };\n}\n\nfunction resolveNestedOptions$1(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useEventSource(url, events = [], options = {}) {\n  const event = ref(null);\n  const data = ref(null);\n  const status = ref(\"CONNECTING\");\n  const eventSource = ref(null);\n  const error = shallowRef(null);\n  const urlRef = toRef(url);\n  const lastEventId = shallowRef(null);\n  let explicitlyClosed = false;\n  let retried = 0;\n  const {\n    withCredentials = false,\n    immediate = true\n  } = options;\n  const close = () => {\n    if (isClient && eventSource.value) {\n      eventSource.value.close();\n      eventSource.value = null;\n      status.value = \"CLOSED\";\n      explicitlyClosed = true;\n    }\n  };\n  const _init = () => {\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\n      return;\n    const es = new EventSource(urlRef.value, { withCredentials });\n    status.value = \"CONNECTING\";\n    eventSource.value = es;\n    es.onopen = () => {\n      status.value = \"OPEN\";\n      error.value = null;\n    };\n    es.onerror = (e) => {\n      status.value = \"CLOSED\";\n      error.value = e;\n      if (es.readyState === 2 && !explicitlyClosed && options.autoReconnect) {\n        es.close();\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions$1(options.autoReconnect);\n        retried += 1;\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\n          setTimeout(_init, delay);\n        else if (typeof retries === \"function\" && retries())\n          setTimeout(_init, delay);\n        else\n          onFailed == null ? void 0 : onFailed();\n      }\n    };\n    es.onmessage = (e) => {\n      event.value = null;\n      data.value = e.data;\n      lastEventId.value = e.lastEventId;\n    };\n    for (const event_name of events) {\n      useEventListener(es, event_name, (e) => {\n        event.value = event_name;\n        data.value = e.data || null;\n      });\n    }\n  };\n  const open = () => {\n    if (!isClient)\n      return;\n    close();\n    explicitlyClosed = false;\n    retried = 0;\n    _init();\n  };\n  if (immediate)\n    watch(urlRef, open, { immediate: true });\n  tryOnScopeDispose(close);\n  return {\n    eventSource,\n    event,\n    data,\n    status,\n    error,\n    open,\n    close,\n    lastEventId\n  };\n}\n\nfunction useEyeDropper(options = {}) {\n  const { initialValue = \"\" } = options;\n  const isSupported = useSupported(() => typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  const sRGBHex = ref(initialValue);\n  async function open(openOptions) {\n    if (!isSupported.value)\n      return;\n    const eyeDropper = new window.EyeDropper();\n    const result = await eyeDropper.open(openOptions);\n    sRGBHex.value = result.sRGBHex;\n    return result;\n  }\n  return { isSupported, sRGBHex, open };\n}\n\nfunction useFavicon(newIcon = null, options = {}) {\n  const {\n    baseUrl = \"\",\n    rel = \"icon\",\n    document = defaultDocument\n  } = options;\n  const favicon = toRef(newIcon);\n  const applyIcon = (icon) => {\n    const elements = document == null ? void 0 : document.head.querySelectorAll(`link[rel*=\"${rel}\"]`);\n    if (!elements || elements.length === 0) {\n      const link = document == null ? void 0 : document.createElement(\"link\");\n      if (link) {\n        link.rel = rel;\n        link.href = `${baseUrl}${icon}`;\n        link.type = `image/${icon.split(\".\").pop()}`;\n        document == null ? void 0 : document.head.append(link);\n      }\n      return;\n    }\n    elements == null ? void 0 : elements.forEach((el) => el.href = `${baseUrl}${icon}`);\n  };\n  watch(\n    favicon,\n    (i, o) => {\n      if (typeof i === \"string\" && i !== o)\n        applyIcon(i);\n    },\n    { immediate: true }\n  );\n  return favicon;\n}\n\nconst payloadMapping = {\n  json: \"application/json\",\n  text: \"text/plain\"\n};\nfunction isFetchOptions(obj) {\n  return obj && containsProp(obj, \"immediate\", \"refetch\", \"initialData\", \"timeout\", \"beforeFetch\", \"afterFetch\", \"onFetchError\", \"fetch\", \"updateDataOnError\");\n}\nconst reAbsolute = /^(?:[a-z][a-z\\d+\\-.]*:)?\\/\\//i;\nfunction isAbsoluteURL(url) {\n  return reAbsolute.test(url);\n}\nfunction headersToObject(headers) {\n  if (typeof Headers !== \"undefined\" && headers instanceof Headers)\n    return Object.fromEntries(headers.entries());\n  return headers;\n}\nfunction combineCallbacks(combination, ...callbacks) {\n  if (combination === \"overwrite\") {\n    return async (ctx) => {\n      const callback = callbacks[callbacks.length - 1];\n      if (callback)\n        return { ...ctx, ...await callback(ctx) };\n      return ctx;\n    };\n  } else {\n    return async (ctx) => {\n      for (const callback of callbacks) {\n        if (callback)\n          ctx = { ...ctx, ...await callback(ctx) };\n      }\n      return ctx;\n    };\n  }\n}\nfunction createFetch(config = {}) {\n  const _combination = config.combination || \"chain\";\n  const _options = config.options || {};\n  const _fetchOptions = config.fetchOptions || {};\n  function useFactoryFetch(url, ...args) {\n    const computedUrl = computed(() => {\n      const baseUrl = toValue(config.baseUrl);\n      const targetUrl = toValue(url);\n      return baseUrl && !isAbsoluteURL(targetUrl) ? joinPaths(baseUrl, targetUrl) : targetUrl;\n    });\n    let options = _options;\n    let fetchOptions = _fetchOptions;\n    if (args.length > 0) {\n      if (isFetchOptions(args[0])) {\n        options = {\n          ...options,\n          ...args[0],\n          beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[0].beforeFetch),\n          afterFetch: combineCallbacks(_combination, _options.afterFetch, args[0].afterFetch),\n          onFetchError: combineCallbacks(_combination, _options.onFetchError, args[0].onFetchError)\n        };\n      } else {\n        fetchOptions = {\n          ...fetchOptions,\n          ...args[0],\n          headers: {\n            ...headersToObject(fetchOptions.headers) || {},\n            ...headersToObject(args[0].headers) || {}\n          }\n        };\n      }\n    }\n    if (args.length > 1 && isFetchOptions(args[1])) {\n      options = {\n        ...options,\n        ...args[1],\n        beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[1].beforeFetch),\n        afterFetch: combineCallbacks(_combination, _options.afterFetch, args[1].afterFetch),\n        onFetchError: combineCallbacks(_combination, _options.onFetchError, args[1].onFetchError)\n      };\n    }\n    return useFetch(computedUrl, fetchOptions, options);\n  }\n  return useFactoryFetch;\n}\nfunction useFetch(url, ...args) {\n  var _a;\n  const supportsAbort = typeof AbortController === \"function\";\n  let fetchOptions = {};\n  let options = {\n    immediate: true,\n    refetch: false,\n    timeout: 0,\n    updateDataOnError: false\n  };\n  const config = {\n    method: \"GET\",\n    type: \"text\",\n    payload: void 0\n  };\n  if (args.length > 0) {\n    if (isFetchOptions(args[0]))\n      options = { ...options, ...args[0] };\n    else\n      fetchOptions = args[0];\n  }\n  if (args.length > 1) {\n    if (isFetchOptions(args[1]))\n      options = { ...options, ...args[1] };\n  }\n  const {\n    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,\n    initialData,\n    timeout\n  } = options;\n  const responseEvent = createEventHook();\n  const errorEvent = createEventHook();\n  const finallyEvent = createEventHook();\n  const isFinished = ref(false);\n  const isFetching = ref(false);\n  const aborted = ref(false);\n  const statusCode = ref(null);\n  const response = shallowRef(null);\n  const error = shallowRef(null);\n  const data = shallowRef(initialData || null);\n  const canAbort = computed(() => supportsAbort && isFetching.value);\n  let controller;\n  let timer;\n  const abort = () => {\n    if (supportsAbort) {\n      controller == null ? void 0 : controller.abort();\n      controller = new AbortController();\n      controller.signal.onabort = () => aborted.value = true;\n      fetchOptions = {\n        ...fetchOptions,\n        signal: controller.signal\n      };\n    }\n  };\n  const loading = (isLoading) => {\n    isFetching.value = isLoading;\n    isFinished.value = !isLoading;\n  };\n  if (timeout)\n    timer = useTimeoutFn(abort, timeout, { immediate: false });\n  let executeCounter = 0;\n  const execute = async (throwOnFailed = false) => {\n    var _a2, _b;\n    abort();\n    loading(true);\n    error.value = null;\n    statusCode.value = null;\n    aborted.value = false;\n    executeCounter += 1;\n    const currentExecuteCounter = executeCounter;\n    const defaultFetchOptions = {\n      method: config.method,\n      headers: {}\n    };\n    if (config.payload) {\n      const headers = headersToObject(defaultFetchOptions.headers);\n      const payload = toValue(config.payload);\n      if (!config.payloadType && payload && Object.getPrototypeOf(payload) === Object.prototype && !(payload instanceof FormData))\n        config.payloadType = \"json\";\n      if (config.payloadType)\n        headers[\"Content-Type\"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;\n      defaultFetchOptions.body = config.payloadType === \"json\" ? JSON.stringify(payload) : payload;\n    }\n    let isCanceled = false;\n    const context = {\n      url: toValue(url),\n      options: {\n        ...defaultFetchOptions,\n        ...fetchOptions\n      },\n      cancel: () => {\n        isCanceled = true;\n      }\n    };\n    if (options.beforeFetch)\n      Object.assign(context, await options.beforeFetch(context));\n    if (isCanceled || !fetch) {\n      loading(false);\n      return Promise.resolve(null);\n    }\n    let responseData = null;\n    if (timer)\n      timer.start();\n    return fetch(\n      context.url,\n      {\n        ...defaultFetchOptions,\n        ...context.options,\n        headers: {\n          ...headersToObject(defaultFetchOptions.headers),\n          ...headersToObject((_b = context.options) == null ? void 0 : _b.headers)\n        }\n      }\n    ).then(async (fetchResponse) => {\n      response.value = fetchResponse;\n      statusCode.value = fetchResponse.status;\n      responseData = await fetchResponse.clone()[config.type]();\n      if (!fetchResponse.ok) {\n        data.value = initialData || null;\n        throw new Error(fetchResponse.statusText);\n      }\n      if (options.afterFetch) {\n        ({ data: responseData } = await options.afterFetch({\n          data: responseData,\n          response: fetchResponse\n        }));\n      }\n      data.value = responseData;\n      responseEvent.trigger(fetchResponse);\n      return fetchResponse;\n    }).catch(async (fetchError) => {\n      let errorData = fetchError.message || fetchError.name;\n      if (options.onFetchError) {\n        ({ error: errorData, data: responseData } = await options.onFetchError({\n          data: responseData,\n          error: fetchError,\n          response: response.value\n        }));\n      }\n      error.value = errorData;\n      if (options.updateDataOnError)\n        data.value = responseData;\n      errorEvent.trigger(fetchError);\n      if (throwOnFailed)\n        throw fetchError;\n      return null;\n    }).finally(() => {\n      if (currentExecuteCounter === executeCounter)\n        loading(false);\n      if (timer)\n        timer.stop();\n      finallyEvent.trigger(null);\n    });\n  };\n  const refetch = toRef(options.refetch);\n  watch(\n    [\n      refetch,\n      toRef(url)\n    ],\n    ([refetch2]) => refetch2 && execute(),\n    { deep: true }\n  );\n  const shell = {\n    isFinished: readonly(isFinished),\n    isFetching: readonly(isFetching),\n    statusCode,\n    response,\n    error,\n    data,\n    canAbort,\n    aborted,\n    abort,\n    execute,\n    onFetchResponse: responseEvent.on,\n    onFetchError: errorEvent.on,\n    onFetchFinally: finallyEvent.on,\n    // method\n    get: setMethod(\"GET\"),\n    put: setMethod(\"PUT\"),\n    post: setMethod(\"POST\"),\n    delete: setMethod(\"DELETE\"),\n    patch: setMethod(\"PATCH\"),\n    head: setMethod(\"HEAD\"),\n    options: setMethod(\"OPTIONS\"),\n    // type\n    json: setType(\"json\"),\n    text: setType(\"text\"),\n    blob: setType(\"blob\"),\n    arrayBuffer: setType(\"arrayBuffer\"),\n    formData: setType(\"formData\")\n  };\n  function setMethod(method) {\n    return (payload, payloadType) => {\n      if (!isFetching.value) {\n        config.method = method;\n        config.payload = payload;\n        config.payloadType = payloadType;\n        if (isRef(config.payload)) {\n          watch(\n            [\n              refetch,\n              toRef(config.payload)\n            ],\n            ([refetch2]) => refetch2 && execute(),\n            { deep: true }\n          );\n        }\n        return {\n          ...shell,\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        };\n      }\n      return void 0;\n    };\n  }\n  function waitUntilFinished() {\n    return new Promise((resolve, reject) => {\n      until(isFinished).toBe(true).then(() => resolve(shell)).catch((error2) => reject(error2));\n    });\n  }\n  function setType(type) {\n    return () => {\n      if (!isFetching.value) {\n        config.type = type;\n        return {\n          ...shell,\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        };\n      }\n      return void 0;\n    };\n  }\n  if (options.immediate)\n    Promise.resolve().then(() => execute());\n  return {\n    ...shell,\n    then(onFulfilled, onRejected) {\n      return waitUntilFinished().then(onFulfilled, onRejected);\n    }\n  };\n}\nfunction joinPaths(start, end) {\n  if (!start.endsWith(\"/\") && !end.startsWith(\"/\"))\n    return `${start}/${end}`;\n  return `${start}${end}`;\n}\n\nconst DEFAULT_OPTIONS = {\n  multiple: true,\n  accept: \"*\",\n  reset: false,\n  directory: false\n};\nfunction useFileDialog(options = {}) {\n  const {\n    document = defaultDocument\n  } = options;\n  const files = ref(null);\n  const { on: onChange, trigger } = createEventHook();\n  let input;\n  if (document) {\n    input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (event) => {\n      const result = event.target;\n      files.value = result.files;\n      trigger(files.value);\n    };\n  }\n  const reset = () => {\n    files.value = null;\n    if (input && input.value) {\n      input.value = \"\";\n      trigger(null);\n    }\n  };\n  const open = (localOptions) => {\n    if (!input)\n      return;\n    const _options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n      ...localOptions\n    };\n    input.multiple = _options.multiple;\n    input.accept = _options.accept;\n    input.webkitdirectory = _options.directory;\n    if (hasOwn(_options, \"capture\"))\n      input.capture = _options.capture;\n    if (_options.reset)\n      reset();\n    input.click();\n  };\n  return {\n    files: readonly(files),\n    open,\n    reset,\n    onChange\n  };\n}\n\nfunction useFileSystemAccess(options = {}) {\n  const {\n    window: _window = defaultWindow,\n    dataType = \"Text\"\n  } = options;\n  const window = _window;\n  const isSupported = useSupported(() => window && \"showSaveFilePicker\" in window && \"showOpenFilePicker\" in window);\n  const fileHandle = ref();\n  const data = ref();\n  const file = ref();\n  const fileName = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : \"\";\n  });\n  const fileMIME = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : \"\";\n  });\n  const fileSize = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;\n  });\n  const fileLastModified = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;\n  });\n  async function open(_options = {}) {\n    if (!isSupported.value)\n      return;\n    const [handle] = await window.showOpenFilePicker({ ...toValue(options), ..._options });\n    fileHandle.value = handle;\n    await updateData();\n  }\n  async function create(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });\n    data.value = void 0;\n    await updateData();\n  }\n  async function save(_options = {}) {\n    if (!isSupported.value)\n      return;\n    if (!fileHandle.value)\n      return saveAs(_options);\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function saveAs(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function updateFile() {\n    var _a;\n    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());\n  }\n  async function updateData() {\n    var _a, _b;\n    await updateFile();\n    const type = toValue(dataType);\n    if (type === \"Text\")\n      data.value = await ((_a = file.value) == null ? void 0 : _a.text());\n    else if (type === \"ArrayBuffer\")\n      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());\n    else if (type === \"Blob\")\n      data.value = file.value;\n  }\n  watch(() => toValue(dataType), updateData);\n  return {\n    isSupported,\n    data,\n    file,\n    fileName,\n    fileMIME,\n    fileSize,\n    fileLastModified,\n    open,\n    create,\n    save,\n    saveAs,\n    updateData\n  };\n}\n\nfunction useFocus(target, options = {}) {\n  const { initialValue = false, focusVisible = false, preventScroll = false } = options;\n  const innerFocused = ref(false);\n  const targetElement = computed(() => unrefElement(target));\n  useEventListener(targetElement, \"focus\", (event) => {\n    var _a, _b;\n    if (!focusVisible || ((_b = (_a = event.target).matches) == null ? void 0 : _b.call(_a, \":focus-visible\")))\n      innerFocused.value = true;\n  });\n  useEventListener(targetElement, \"blur\", () => innerFocused.value = false);\n  const focused = computed({\n    get: () => innerFocused.value,\n    set(value) {\n      var _a, _b;\n      if (!value && innerFocused.value)\n        (_a = targetElement.value) == null ? void 0 : _a.blur();\n      else if (value && !innerFocused.value)\n        (_b = targetElement.value) == null ? void 0 : _b.focus({ preventScroll });\n    }\n  });\n  watch(\n    targetElement,\n    () => {\n      focused.value = initialValue;\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  return { focused };\n}\n\nfunction useFocusWithin(target, options = {}) {\n  const activeElement = useActiveElement(options);\n  const targetElement = computed(() => unrefElement(target));\n  const focused = computed(() => targetElement.value && activeElement.value ? targetElement.value.contains(activeElement.value) : false);\n  return { focused };\n}\n\nfunction useFps(options) {\n  var _a;\n  const fps = ref(0);\n  if (typeof performance === \"undefined\")\n    return fps;\n  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;\n  let last = performance.now();\n  let ticks = 0;\n  useRafFn(() => {\n    ticks += 1;\n    if (ticks >= every) {\n      const now = performance.now();\n      const diff = now - last;\n      fps.value = Math.round(1e3 / (diff / ticks));\n      last = now;\n      ticks = 0;\n    }\n  });\n  return fps;\n}\n\nconst eventHandlers = [\n  \"fullscreenchange\",\n  \"webkitfullscreenchange\",\n  \"webkitendfullscreen\",\n  \"mozfullscreenchange\",\n  \"MSFullscreenChange\"\n];\nfunction useFullscreen(target, options = {}) {\n  const {\n    document = defaultDocument,\n    autoExit = false\n  } = options;\n  const targetRef = computed(() => {\n    var _a;\n    return (_a = unrefElement(target)) != null ? _a : document == null ? void 0 : document.querySelector(\"html\");\n  });\n  const isFullscreen = ref(false);\n  const requestMethod = computed(() => {\n    return [\n      \"requestFullscreen\",\n      \"webkitRequestFullscreen\",\n      \"webkitEnterFullscreen\",\n      \"webkitEnterFullScreen\",\n      \"webkitRequestFullScreen\",\n      \"mozRequestFullScreen\",\n      \"msRequestFullscreen\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const exitMethod = computed(() => {\n    return [\n      \"exitFullscreen\",\n      \"webkitExitFullscreen\",\n      \"webkitExitFullScreen\",\n      \"webkitCancelFullScreen\",\n      \"mozCancelFullScreen\",\n      \"msExitFullscreen\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const fullscreenEnabled = computed(() => {\n    return [\n      \"fullScreen\",\n      \"webkitIsFullScreen\",\n      \"webkitDisplayingFullscreen\",\n      \"mozFullScreen\",\n      \"msFullscreenElement\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const fullscreenElementMethod = [\n    \"fullscreenElement\",\n    \"webkitFullscreenElement\",\n    \"mozFullScreenElement\",\n    \"msFullscreenElement\"\n  ].find((m) => document && m in document);\n  const isSupported = useSupported(() => targetRef.value && document && requestMethod.value !== void 0 && exitMethod.value !== void 0 && fullscreenEnabled.value !== void 0);\n  const isCurrentElementFullScreen = () => {\n    if (fullscreenElementMethod)\n      return (document == null ? void 0 : document[fullscreenElementMethod]) === targetRef.value;\n    return false;\n  };\n  const isElementFullScreen = () => {\n    if (fullscreenEnabled.value) {\n      if (document && document[fullscreenEnabled.value] != null) {\n        return document[fullscreenEnabled.value];\n      } else {\n        const target2 = targetRef.value;\n        if ((target2 == null ? void 0 : target2[fullscreenEnabled.value]) != null) {\n          return Boolean(target2[fullscreenEnabled.value]);\n        }\n      }\n    }\n    return false;\n  };\n  async function exit() {\n    if (!isSupported.value || !isFullscreen.value)\n      return;\n    if (exitMethod.value) {\n      if ((document == null ? void 0 : document[exitMethod.value]) != null) {\n        await document[exitMethod.value]();\n      } else {\n        const target2 = targetRef.value;\n        if ((target2 == null ? void 0 : target2[exitMethod.value]) != null)\n          await target2[exitMethod.value]();\n      }\n    }\n    isFullscreen.value = false;\n  }\n  async function enter() {\n    if (!isSupported.value || isFullscreen.value)\n      return;\n    if (isElementFullScreen())\n      await exit();\n    const target2 = targetRef.value;\n    if (requestMethod.value && (target2 == null ? void 0 : target2[requestMethod.value]) != null) {\n      await target2[requestMethod.value]();\n      isFullscreen.value = true;\n    }\n  }\n  async function toggle() {\n    await (isFullscreen.value ? exit() : enter());\n  }\n  const handlerCallback = () => {\n    const isElementFullScreenValue = isElementFullScreen();\n    if (!isElementFullScreenValue || isElementFullScreenValue && isCurrentElementFullScreen())\n      isFullscreen.value = isElementFullScreenValue;\n  };\n  useEventListener(document, eventHandlers, handlerCallback, false);\n  useEventListener(() => unrefElement(targetRef), eventHandlers, handlerCallback, false);\n  if (autoExit)\n    tryOnScopeDispose(exit);\n  return {\n    isSupported,\n    isFullscreen,\n    enter,\n    exit,\n    toggle\n  };\n}\n\nfunction mapGamepadToXbox360Controller(gamepad) {\n  return computed(() => {\n    if (gamepad.value) {\n      return {\n        buttons: {\n          a: gamepad.value.buttons[0],\n          b: gamepad.value.buttons[1],\n          x: gamepad.value.buttons[2],\n          y: gamepad.value.buttons[3]\n        },\n        bumper: {\n          left: gamepad.value.buttons[4],\n          right: gamepad.value.buttons[5]\n        },\n        triggers: {\n          left: gamepad.value.buttons[6],\n          right: gamepad.value.buttons[7]\n        },\n        stick: {\n          left: {\n            horizontal: gamepad.value.axes[0],\n            vertical: gamepad.value.axes[1],\n            button: gamepad.value.buttons[10]\n          },\n          right: {\n            horizontal: gamepad.value.axes[2],\n            vertical: gamepad.value.axes[3],\n            button: gamepad.value.buttons[11]\n          }\n        },\n        dpad: {\n          up: gamepad.value.buttons[12],\n          down: gamepad.value.buttons[13],\n          left: gamepad.value.buttons[14],\n          right: gamepad.value.buttons[15]\n        },\n        back: gamepad.value.buttons[8],\n        start: gamepad.value.buttons[9]\n      };\n    }\n    return null;\n  });\n}\nfunction useGamepad(options = {}) {\n  const {\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"getGamepads\" in navigator);\n  const gamepads = ref([]);\n  const onConnectedHook = createEventHook();\n  const onDisconnectedHook = createEventHook();\n  const stateFromGamepad = (gamepad) => {\n    const hapticActuators = [];\n    const vibrationActuator = \"vibrationActuator\" in gamepad ? gamepad.vibrationActuator : null;\n    if (vibrationActuator)\n      hapticActuators.push(vibrationActuator);\n    if (gamepad.hapticActuators)\n      hapticActuators.push(...gamepad.hapticActuators);\n    return {\n      id: gamepad.id,\n      index: gamepad.index,\n      connected: gamepad.connected,\n      mapping: gamepad.mapping,\n      timestamp: gamepad.timestamp,\n      vibrationActuator: gamepad.vibrationActuator,\n      hapticActuators,\n      axes: gamepad.axes.map((axes) => axes),\n      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value }))\n    };\n  };\n  const updateGamepadState = () => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (const gamepad of _gamepads) {\n      if (gamepad && gamepads.value[gamepad.index])\n        gamepads.value[gamepad.index] = stateFromGamepad(gamepad);\n    }\n  };\n  const { isActive, pause, resume } = useRafFn(updateGamepadState);\n  const onGamepadConnected = (gamepad) => {\n    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {\n      gamepads.value.push(stateFromGamepad(gamepad));\n      onConnectedHook.trigger(gamepad.index);\n    }\n    resume();\n  };\n  const onGamepadDisconnected = (gamepad) => {\n    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);\n    onDisconnectedHook.trigger(gamepad.index);\n  };\n  useEventListener(\"gamepadconnected\", (e) => onGamepadConnected(e.gamepad));\n  useEventListener(\"gamepaddisconnected\", (e) => onGamepadDisconnected(e.gamepad));\n  tryOnMounted(() => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (const gamepad of _gamepads) {\n      if (gamepad && gamepads.value[gamepad.index])\n        onGamepadConnected(gamepad);\n    }\n  });\n  pause();\n  return {\n    isSupported,\n    onConnected: onConnectedHook.on,\n    onDisconnected: onDisconnectedHook.on,\n    gamepads,\n    pause,\n    resume,\n    isActive\n  };\n}\n\nfunction useGeolocation(options = {}) {\n  const {\n    enableHighAccuracy = true,\n    maximumAge = 3e4,\n    timeout = 27e3,\n    navigator = defaultNavigator,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => navigator && \"geolocation\" in navigator);\n  const locatedAt = ref(null);\n  const error = shallowRef(null);\n  const coords = ref({\n    accuracy: 0,\n    latitude: Number.POSITIVE_INFINITY,\n    longitude: Number.POSITIVE_INFINITY,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null\n  });\n  function updatePosition(position) {\n    locatedAt.value = position.timestamp;\n    coords.value = position.coords;\n    error.value = null;\n  }\n  let watcher;\n  function resume() {\n    if (isSupported.value) {\n      watcher = navigator.geolocation.watchPosition(\n        updatePosition,\n        (err) => error.value = err,\n        {\n          enableHighAccuracy,\n          maximumAge,\n          timeout\n        }\n      );\n    }\n  }\n  if (immediate)\n    resume();\n  function pause() {\n    if (watcher && navigator)\n      navigator.geolocation.clearWatch(watcher);\n  }\n  tryOnScopeDispose(() => {\n    pause();\n  });\n  return {\n    isSupported,\n    coords,\n    locatedAt,\n    error,\n    resume,\n    pause\n  };\n}\n\nconst defaultEvents$1 = [\"mousemove\", \"mousedown\", \"resize\", \"keydown\", \"touchstart\", \"wheel\"];\nconst oneMinute = 6e4;\nfunction useIdle(timeout = oneMinute, options = {}) {\n  const {\n    initialState = false,\n    listenForVisibilityChange = true,\n    events = defaultEvents$1,\n    window = defaultWindow,\n    eventFilter = throttleFilter(50)\n  } = options;\n  const idle = ref(initialState);\n  const lastActive = ref(timestamp());\n  let timer;\n  const reset = () => {\n    idle.value = false;\n    clearTimeout(timer);\n    timer = setTimeout(() => idle.value = true, timeout);\n  };\n  const onEvent = createFilterWrapper(\n    eventFilter,\n    () => {\n      lastActive.value = timestamp();\n      reset();\n    }\n  );\n  if (window) {\n    const document = window.document;\n    for (const event of events)\n      useEventListener(window, event, onEvent, { passive: true });\n    if (listenForVisibilityChange) {\n      useEventListener(document, \"visibilitychange\", () => {\n        if (!document.hidden)\n          onEvent();\n      });\n    }\n    reset();\n  }\n  return {\n    idle,\n    lastActive,\n    reset\n  };\n}\n\nasync function loadImage(options) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    const { src, srcset, sizes, class: clazz, loading, crossorigin, referrerPolicy } = options;\n    img.src = src;\n    if (srcset)\n      img.srcset = srcset;\n    if (sizes)\n      img.sizes = sizes;\n    if (clazz)\n      img.className = clazz;\n    if (loading)\n      img.loading = loading;\n    if (crossorigin)\n      img.crossOrigin = crossorigin;\n    if (referrerPolicy)\n      img.referrerPolicy = referrerPolicy;\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\nfunction useImage(options, asyncStateOptions = {}) {\n  const state = useAsyncState(\n    () => loadImage(toValue(options)),\n    void 0,\n    {\n      resetOnExecute: true,\n      ...asyncStateOptions\n    }\n  );\n  watch(\n    () => toValue(options),\n    () => state.execute(asyncStateOptions.delay),\n    { deep: true }\n  );\n  return state;\n}\n\nconst ARRIVED_STATE_THRESHOLD_PIXELS = 1;\nfunction useScroll(element, options = {}) {\n  const {\n    throttle = 0,\n    idle = 200,\n    onStop = noop,\n    onScroll = noop,\n    offset = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    },\n    eventListenerOptions = {\n      capture: false,\n      passive: true\n    },\n    behavior = \"auto\",\n    window = defaultWindow,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const internalX = ref(0);\n  const internalY = ref(0);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo(x2, void 0);\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo(void 0, y2);\n    }\n  });\n  function scrollTo(_x, _y) {\n    var _a, _b, _c, _d;\n    if (!window)\n      return;\n    const _element = toValue(element);\n    if (!_element)\n      return;\n    (_c = _element instanceof Document ? window.document.body : _element) == null ? void 0 : _c.scrollTo({\n      top: (_a = toValue(_y)) != null ? _a : y.value,\n      left: (_b = toValue(_x)) != null ? _b : x.value,\n      behavior: toValue(behavior)\n    });\n    const scrollContainer = ((_d = _element == null ? void 0 : _element.document) == null ? void 0 : _d.documentElement) || (_element == null ? void 0 : _element.documentElement) || _element;\n    if (x != null)\n      internalX.value = scrollContainer.scrollLeft;\n    if (y != null)\n      internalY.value = scrollContainer.scrollTop;\n  }\n  const isScrolling = ref(false);\n  const arrivedState = reactive({\n    left: true,\n    right: false,\n    top: true,\n    bottom: false\n  });\n  const directions = reactive({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  });\n  const onScrollEnd = (e) => {\n    if (!isScrolling.value)\n      return;\n    isScrolling.value = false;\n    directions.left = false;\n    directions.right = false;\n    directions.top = false;\n    directions.bottom = false;\n    onStop(e);\n  };\n  const onScrollEndDebounced = useDebounceFn(onScrollEnd, throttle + idle);\n  const setArrivedState = (target) => {\n    var _a;\n    if (!window)\n      return;\n    const el = ((_a = target == null ? void 0 : target.document) == null ? void 0 : _a.documentElement) || (target == null ? void 0 : target.documentElement) || unrefElement(target);\n    const { display, flexDirection } = getComputedStyle(el);\n    const scrollLeft = el.scrollLeft;\n    directions.left = scrollLeft < internalX.value;\n    directions.right = scrollLeft > internalX.value;\n    const left = Math.abs(scrollLeft) <= (offset.left || 0);\n    const right = Math.abs(scrollLeft) + el.clientWidth >= el.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"row-reverse\") {\n      arrivedState.left = right;\n      arrivedState.right = left;\n    } else {\n      arrivedState.left = left;\n      arrivedState.right = right;\n    }\n    internalX.value = scrollLeft;\n    let scrollTop = el.scrollTop;\n    if (target === window.document && !scrollTop)\n      scrollTop = window.document.body.scrollTop;\n    directions.top = scrollTop < internalY.value;\n    directions.bottom = scrollTop > internalY.value;\n    const top = Math.abs(scrollTop) <= (offset.top || 0);\n    const bottom = Math.abs(scrollTop) + el.clientHeight >= el.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"column-reverse\") {\n      arrivedState.top = bottom;\n      arrivedState.bottom = top;\n    } else {\n      arrivedState.top = top;\n      arrivedState.bottom = bottom;\n    }\n    internalY.value = scrollTop;\n  };\n  const onScrollHandler = (e) => {\n    var _a;\n    if (!window)\n      return;\n    const eventTarget = (_a = e.target.documentElement) != null ? _a : e.target;\n    setArrivedState(eventTarget);\n    isScrolling.value = true;\n    onScrollEndDebounced(e);\n    onScroll(e);\n  };\n  useEventListener(\n    element,\n    \"scroll\",\n    throttle ? useThrottleFn(onScrollHandler, throttle, true, false) : onScrollHandler,\n    eventListenerOptions\n  );\n  tryOnMounted(() => {\n    try {\n      const _element = toValue(element);\n      if (!_element)\n        return;\n      setArrivedState(_element);\n    } catch (e) {\n      onError(e);\n    }\n  });\n  useEventListener(\n    element,\n    \"scrollend\",\n    onScrollEnd,\n    eventListenerOptions\n  );\n  return {\n    x,\n    y,\n    isScrolling,\n    arrivedState,\n    directions,\n    measure() {\n      const _element = toValue(element);\n      if (window && _element)\n        setArrivedState(_element);\n    }\n  };\n}\n\nfunction resolveElement(el) {\n  if (typeof Window !== \"undefined\" && el instanceof Window)\n    return el.document.documentElement;\n  if (typeof Document !== \"undefined\" && el instanceof Document)\n    return el.documentElement;\n  return el;\n}\n\nfunction useInfiniteScroll(element, onLoadMore, options = {}) {\n  var _a;\n  const {\n    direction = \"bottom\",\n    interval = 100,\n    canLoadMore = () => true\n  } = options;\n  const state = reactive(useScroll(\n    element,\n    {\n      ...options,\n      offset: {\n        [direction]: (_a = options.distance) != null ? _a : 0,\n        ...options.offset\n      }\n    }\n  ));\n  const promise = ref();\n  const isLoading = computed(() => !!promise.value);\n  const observedElement = computed(() => {\n    return resolveElement(toValue(element));\n  });\n  const isElementVisible = useElementVisibility(observedElement);\n  function checkAndLoad() {\n    state.measure();\n    if (!observedElement.value || !isElementVisible.value || !canLoadMore(observedElement.value))\n      return;\n    const { scrollHeight, clientHeight, scrollWidth, clientWidth } = observedElement.value;\n    const isNarrower = direction === \"bottom\" || direction === \"top\" ? scrollHeight <= clientHeight : scrollWidth <= clientWidth;\n    if (state.arrivedState[direction] || isNarrower) {\n      if (!promise.value) {\n        promise.value = Promise.all([\n          onLoadMore(state),\n          new Promise((resolve) => setTimeout(resolve, interval))\n        ]).finally(() => {\n          promise.value = null;\n          nextTick(() => checkAndLoad());\n        });\n      }\n    }\n  }\n  watch(\n    () => [state.arrivedState[direction], isElementVisible.value],\n    checkAndLoad,\n    { immediate: true }\n  );\n  return {\n    isLoading\n  };\n}\n\nconst defaultEvents = [\"mousedown\", \"mouseup\", \"keydown\", \"keyup\"];\nfunction useKeyModifier(modifier, options = {}) {\n  const {\n    events = defaultEvents,\n    document = defaultDocument,\n    initial = null\n  } = options;\n  const state = ref(initial);\n  if (document) {\n    events.forEach((listenerEvent) => {\n      useEventListener(document, listenerEvent, (evt) => {\n        if (typeof evt.getModifierState === \"function\")\n          state.value = evt.getModifierState(modifier);\n      });\n    });\n  }\n  return state;\n}\n\nfunction useLocalStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);\n}\n\nconst DefaultMagicKeysAliasMap = {\n  ctrl: \"control\",\n  command: \"meta\",\n  cmd: \"meta\",\n  option: \"alt\",\n  up: \"arrowup\",\n  down: \"arrowdown\",\n  left: \"arrowleft\",\n  right: \"arrowright\"\n};\n\nfunction useMagicKeys(options = {}) {\n  const {\n    reactive: useReactive = false,\n    target = defaultWindow,\n    aliasMap = DefaultMagicKeysAliasMap,\n    passive = true,\n    onEventFired = noop\n  } = options;\n  const current = reactive(/* @__PURE__ */ new Set());\n  const obj = {\n    toJSON() {\n      return {};\n    },\n    current\n  };\n  const refs = useReactive ? reactive(obj) : obj;\n  const metaDeps = /* @__PURE__ */ new Set();\n  const usedKeys = /* @__PURE__ */ new Set();\n  function setRefs(key, value) {\n    if (key in refs) {\n      if (useReactive)\n        refs[key] = value;\n      else\n        refs[key].value = value;\n    }\n  }\n  function reset() {\n    current.clear();\n    for (const key of usedKeys)\n      setRefs(key, false);\n  }\n  function updateRefs(e, value) {\n    var _a, _b;\n    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();\n    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();\n    const values = [code, key].filter(Boolean);\n    if (key) {\n      if (value)\n        current.add(key);\n      else\n        current.delete(key);\n    }\n    for (const key2 of values) {\n      usedKeys.add(key2);\n      setRefs(key2, value);\n    }\n    if (key === \"meta\" && !value) {\n      metaDeps.forEach((key2) => {\n        current.delete(key2);\n        setRefs(key2, false);\n      });\n      metaDeps.clear();\n    } else if (typeof e.getModifierState === \"function\" && e.getModifierState(\"Meta\") && value) {\n      [...current, ...values].forEach((key2) => metaDeps.add(key2));\n    }\n  }\n  useEventListener(target, \"keydown\", (e) => {\n    updateRefs(e, true);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(target, \"keyup\", (e) => {\n    updateRefs(e, false);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(\"blur\", reset, { passive: true });\n  useEventListener(\"focus\", reset, { passive: true });\n  const proxy = new Proxy(\n    refs,\n    {\n      get(target2, prop, rec) {\n        if (typeof prop !== \"string\")\n          return Reflect.get(target2, prop, rec);\n        prop = prop.toLowerCase();\n        if (prop in aliasMap)\n          prop = aliasMap[prop];\n        if (!(prop in refs)) {\n          if (/[+_-]/.test(prop)) {\n            const keys = prop.split(/[+_-]/g).map((i) => i.trim());\n            refs[prop] = computed(() => keys.every((key) => toValue(proxy[key])));\n          } else {\n            refs[prop] = ref(false);\n          }\n        }\n        const r = Reflect.get(target2, prop, rec);\n        return useReactive ? toValue(r) : r;\n      }\n    }\n  );\n  return proxy;\n}\n\nfunction usingElRef(source, cb) {\n  if (toValue(source))\n    cb(toValue(source));\n}\nfunction timeRangeToArray(timeRanges) {\n  let ranges = [];\n  for (let i = 0; i < timeRanges.length; ++i)\n    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];\n  return ranges;\n}\nfunction tracksToArray(tracks) {\n  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));\n}\nconst defaultOptions = {\n  src: \"\",\n  tracks: []\n};\nfunction useMediaControls(target, options = {}) {\n  target = toRef(target);\n  options = {\n    ...defaultOptions,\n    ...options\n  };\n  const {\n    document = defaultDocument\n  } = options;\n  const currentTime = ref(0);\n  const duration = ref(0);\n  const seeking = ref(false);\n  const volume = ref(1);\n  const waiting = ref(false);\n  const ended = ref(false);\n  const playing = ref(false);\n  const rate = ref(1);\n  const stalled = ref(false);\n  const buffered = ref([]);\n  const tracks = ref([]);\n  const selectedTrack = ref(-1);\n  const isPictureInPicture = ref(false);\n  const muted = ref(false);\n  const supportsPictureInPicture = document && \"pictureInPictureEnabled\" in document;\n  const sourceErrorEvent = createEventHook();\n  const disableTrack = (track) => {\n    usingElRef(target, (el) => {\n      if (track) {\n        const id = typeof track === \"number\" ? track : track.id;\n        el.textTracks[id].mode = \"disabled\";\n      } else {\n        for (let i = 0; i < el.textTracks.length; ++i)\n          el.textTracks[i].mode = \"disabled\";\n      }\n      selectedTrack.value = -1;\n    });\n  };\n  const enableTrack = (track, disableTracks = true) => {\n    usingElRef(target, (el) => {\n      const id = typeof track === \"number\" ? track : track.id;\n      if (disableTracks)\n        disableTrack();\n      el.textTracks[id].mode = \"showing\";\n      selectedTrack.value = id;\n    });\n  };\n  const togglePictureInPicture = () => {\n    return new Promise((resolve, reject) => {\n      usingElRef(target, async (el) => {\n        if (supportsPictureInPicture) {\n          if (!isPictureInPicture.value) {\n            el.requestPictureInPicture().then(resolve).catch(reject);\n          } else {\n            document.exitPictureInPicture().then(resolve).catch(reject);\n          }\n        }\n      });\n    });\n  };\n  watchEffect(() => {\n    if (!document)\n      return;\n    const el = toValue(target);\n    if (!el)\n      return;\n    const src = toValue(options.src);\n    let sources = [];\n    if (!src)\n      return;\n    if (typeof src === \"string\")\n      sources = [{ src }];\n    else if (Array.isArray(src))\n      sources = src;\n    else if (isObject(src))\n      sources = [src];\n    el.querySelectorAll(\"source\").forEach((e) => {\n      e.removeEventListener(\"error\", sourceErrorEvent.trigger);\n      e.remove();\n    });\n    sources.forEach(({ src: src2, type }) => {\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", src2);\n      source.setAttribute(\"type\", type || \"\");\n      source.addEventListener(\"error\", sourceErrorEvent.trigger);\n      el.appendChild(source);\n    });\n    el.load();\n  });\n  tryOnScopeDispose(() => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.querySelectorAll(\"source\").forEach((e) => e.removeEventListener(\"error\", sourceErrorEvent.trigger));\n  });\n  watch([target, volume], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.volume = volume.value;\n  });\n  watch([target, muted], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.muted = muted.value;\n  });\n  watch([target, rate], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.playbackRate = rate.value;\n  });\n  watchEffect(() => {\n    if (!document)\n      return;\n    const textTracks = toValue(options.tracks);\n    const el = toValue(target);\n    if (!textTracks || !textTracks.length || !el)\n      return;\n    el.querySelectorAll(\"track\").forEach((e) => e.remove());\n    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {\n      const track = document.createElement(\"track\");\n      track.default = isDefault || false;\n      track.kind = kind;\n      track.label = label;\n      track.src = src;\n      track.srclang = srcLang;\n      if (track.default)\n        selectedTrack.value = i;\n      el.appendChild(track);\n    });\n  });\n  const { ignoreUpdates: ignoreCurrentTimeUpdates } = watchIgnorable(currentTime, (time) => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.currentTime = time;\n  });\n  const { ignoreUpdates: ignorePlayingUpdates } = watchIgnorable(playing, (isPlaying) => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    isPlaying ? el.play() : el.pause();\n  });\n  useEventListener(target, \"timeupdate\", () => ignoreCurrentTimeUpdates(() => currentTime.value = toValue(target).currentTime));\n  useEventListener(target, \"durationchange\", () => duration.value = toValue(target).duration);\n  useEventListener(target, \"progress\", () => buffered.value = timeRangeToArray(toValue(target).buffered));\n  useEventListener(target, \"seeking\", () => seeking.value = true);\n  useEventListener(target, \"seeked\", () => seeking.value = false);\n  useEventListener(target, [\"waiting\", \"loadstart\"], () => {\n    waiting.value = true;\n    ignorePlayingUpdates(() => playing.value = false);\n  });\n  useEventListener(target, \"loadeddata\", () => waiting.value = false);\n  useEventListener(target, \"playing\", () => {\n    waiting.value = false;\n    ended.value = false;\n    ignorePlayingUpdates(() => playing.value = true);\n  });\n  useEventListener(target, \"ratechange\", () => rate.value = toValue(target).playbackRate);\n  useEventListener(target, \"stalled\", () => stalled.value = true);\n  useEventListener(target, \"ended\", () => ended.value = true);\n  useEventListener(target, \"pause\", () => ignorePlayingUpdates(() => playing.value = false));\n  useEventListener(target, \"play\", () => ignorePlayingUpdates(() => playing.value = true));\n  useEventListener(target, \"enterpictureinpicture\", () => isPictureInPicture.value = true);\n  useEventListener(target, \"leavepictureinpicture\", () => isPictureInPicture.value = false);\n  useEventListener(target, \"volumechange\", () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    volume.value = el.volume;\n    muted.value = el.muted;\n  });\n  const listeners = [];\n  const stop = watch([target], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    stop();\n    listeners[0] = useEventListener(el.textTracks, \"addtrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[1] = useEventListener(el.textTracks, \"removetrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[2] = useEventListener(el.textTracks, \"change\", () => tracks.value = tracksToArray(el.textTracks));\n  });\n  tryOnScopeDispose(() => listeners.forEach((listener) => listener()));\n  return {\n    currentTime,\n    duration,\n    waiting,\n    seeking,\n    ended,\n    stalled,\n    buffered,\n    playing,\n    rate,\n    // Volume\n    volume,\n    muted,\n    // Tracks\n    tracks,\n    selectedTrack,\n    enableTrack,\n    disableTrack,\n    // Picture in Picture\n    supportsPictureInPicture,\n    togglePictureInPicture,\n    isPictureInPicture,\n    // Events\n    onSourceError: sourceErrorEvent.on\n  };\n}\n\nfunction getMapVue2Compat() {\n  const data = shallowReactive({});\n  return {\n    get: (key) => data[key],\n    set: (key, value) => set(data, key, value),\n    has: (key) => hasOwn(data, key),\n    delete: (key) => del(data, key),\n    clear: () => {\n      Object.keys(data).forEach((key) => {\n        del(data, key);\n      });\n    }\n  };\n}\nfunction useMemoize(resolver, options) {\n  const initCache = () => {\n    if (options == null ? void 0 : options.cache)\n      return shallowReactive(options.cache);\n    if (isVue2)\n      return getMapVue2Compat();\n    return shallowReactive(/* @__PURE__ */ new Map());\n  };\n  const cache = initCache();\n  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);\n  const _loadData = (key, ...args) => {\n    cache.set(key, resolver(...args));\n    return cache.get(key);\n  };\n  const loadData = (...args) => _loadData(generateKey(...args), ...args);\n  const deleteData = (...args) => {\n    cache.delete(generateKey(...args));\n  };\n  const clearData = () => {\n    cache.clear();\n  };\n  const memoized = (...args) => {\n    const key = generateKey(...args);\n    if (cache.has(key))\n      return cache.get(key);\n    return _loadData(key, ...args);\n  };\n  memoized.load = loadData;\n  memoized.delete = deleteData;\n  memoized.clear = clearData;\n  memoized.generateKey = generateKey;\n  memoized.cache = cache;\n  return memoized;\n}\n\nfunction useMemory(options = {}) {\n  const memory = ref();\n  const isSupported = useSupported(() => typeof performance !== \"undefined\" && \"memory\" in performance);\n  if (isSupported.value) {\n    const { interval = 1e3 } = options;\n    useIntervalFn(() => {\n      memory.value = performance.memory;\n    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });\n  }\n  return { isSupported, memory };\n}\n\nconst UseMouseBuiltinExtractors = {\n  page: (event) => [event.pageX, event.pageY],\n  client: (event) => [event.clientX, event.clientY],\n  screen: (event) => [event.screenX, event.screenY],\n  movement: (event) => event instanceof Touch ? null : [event.movementX, event.movementY]\n};\nfunction useMouse(options = {}) {\n  const {\n    type = \"page\",\n    touch = true,\n    resetOnTouchEnds = false,\n    initialValue = { x: 0, y: 0 },\n    window = defaultWindow,\n    target = window,\n    scroll = true,\n    eventFilter\n  } = options;\n  let _prevMouseEvent = null;\n  const x = ref(initialValue.x);\n  const y = ref(initialValue.y);\n  const sourceType = ref(null);\n  const extractor = typeof type === \"function\" ? type : UseMouseBuiltinExtractors[type];\n  const mouseHandler = (event) => {\n    const result = extractor(event);\n    _prevMouseEvent = event;\n    if (result) {\n      [x.value, y.value] = result;\n      sourceType.value = \"mouse\";\n    }\n  };\n  const touchHandler = (event) => {\n    if (event.touches.length > 0) {\n      const result = extractor(event.touches[0]);\n      if (result) {\n        [x.value, y.value] = result;\n        sourceType.value = \"touch\";\n      }\n    }\n  };\n  const scrollHandler = () => {\n    if (!_prevMouseEvent || !window)\n      return;\n    const pos = extractor(_prevMouseEvent);\n    if (_prevMouseEvent instanceof MouseEvent && pos) {\n      x.value = pos[0] + window.scrollX;\n      y.value = pos[1] + window.scrollY;\n    }\n  };\n  const reset = () => {\n    x.value = initialValue.x;\n    y.value = initialValue.y;\n  };\n  const mouseHandlerWrapper = eventFilter ? (event) => eventFilter(() => mouseHandler(event), {}) : (event) => mouseHandler(event);\n  const touchHandlerWrapper = eventFilter ? (event) => eventFilter(() => touchHandler(event), {}) : (event) => touchHandler(event);\n  const scrollHandlerWrapper = eventFilter ? () => eventFilter(() => scrollHandler(), {}) : () => scrollHandler();\n  if (target) {\n    const listenerOptions = { passive: true };\n    useEventListener(target, [\"mousemove\", \"dragover\"], mouseHandlerWrapper, listenerOptions);\n    if (touch && type !== \"movement\") {\n      useEventListener(target, [\"touchstart\", \"touchmove\"], touchHandlerWrapper, listenerOptions);\n      if (resetOnTouchEnds)\n        useEventListener(target, \"touchend\", reset, listenerOptions);\n    }\n    if (scroll && type === \"page\")\n      useEventListener(window, \"scroll\", scrollHandlerWrapper, { passive: true });\n  }\n  return {\n    x,\n    y,\n    sourceType\n  };\n}\n\nfunction useMouseInElement(target, options = {}) {\n  const {\n    handleOutside = true,\n    window = defaultWindow\n  } = options;\n  const type = options.type || \"page\";\n  const { x, y, sourceType } = useMouse(options);\n  const targetRef = ref(target != null ? target : window == null ? void 0 : window.document.body);\n  const elementX = ref(0);\n  const elementY = ref(0);\n  const elementPositionX = ref(0);\n  const elementPositionY = ref(0);\n  const elementHeight = ref(0);\n  const elementWidth = ref(0);\n  const isOutside = ref(true);\n  let stop = () => {\n  };\n  if (window) {\n    stop = watch(\n      [targetRef, x, y],\n      () => {\n        const el = unrefElement(targetRef);\n        if (!el)\n          return;\n        const {\n          left,\n          top,\n          width,\n          height\n        } = el.getBoundingClientRect();\n        elementPositionX.value = left + (type === \"page\" ? window.pageXOffset : 0);\n        elementPositionY.value = top + (type === \"page\" ? window.pageYOffset : 0);\n        elementHeight.value = height;\n        elementWidth.value = width;\n        const elX = x.value - elementPositionX.value;\n        const elY = y.value - elementPositionY.value;\n        isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;\n        if (handleOutside || !isOutside.value) {\n          elementX.value = elX;\n          elementY.value = elY;\n        }\n      },\n      { immediate: true }\n    );\n    useEventListener(document, \"mouseleave\", () => {\n      isOutside.value = true;\n    });\n  }\n  return {\n    x,\n    y,\n    sourceType,\n    elementX,\n    elementY,\n    elementPositionX,\n    elementPositionY,\n    elementHeight,\n    elementWidth,\n    isOutside,\n    stop\n  };\n}\n\nfunction useMousePressed(options = {}) {\n  const {\n    touch = true,\n    drag = true,\n    capture = false,\n    initialValue = false,\n    window = defaultWindow\n  } = options;\n  const pressed = ref(initialValue);\n  const sourceType = ref(null);\n  if (!window) {\n    return {\n      pressed,\n      sourceType\n    };\n  }\n  const onPressed = (srcType) => () => {\n    pressed.value = true;\n    sourceType.value = srcType;\n  };\n  const onReleased = () => {\n    pressed.value = false;\n    sourceType.value = null;\n  };\n  const target = computed(() => unrefElement(options.target) || window);\n  useEventListener(target, \"mousedown\", onPressed(\"mouse\"), { passive: true, capture });\n  useEventListener(window, \"mouseleave\", onReleased, { passive: true, capture });\n  useEventListener(window, \"mouseup\", onReleased, { passive: true, capture });\n  if (drag) {\n    useEventListener(target, \"dragstart\", onPressed(\"mouse\"), { passive: true, capture });\n    useEventListener(window, \"drop\", onReleased, { passive: true, capture });\n    useEventListener(window, \"dragend\", onReleased, { passive: true, capture });\n  }\n  if (touch) {\n    useEventListener(target, \"touchstart\", onPressed(\"touch\"), { passive: true, capture });\n    useEventListener(window, \"touchend\", onReleased, { passive: true, capture });\n    useEventListener(window, \"touchcancel\", onReleased, { passive: true, capture });\n  }\n  return {\n    pressed,\n    sourceType\n  };\n}\n\nfunction useNavigatorLanguage(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"language\" in navigator);\n  const language = ref(navigator == null ? void 0 : navigator.language);\n  useEventListener(window, \"languagechange\", () => {\n    if (navigator)\n      language.value = navigator.language;\n  });\n  return {\n    isSupported,\n    language\n  };\n}\n\nfunction useNetwork(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"connection\" in navigator);\n  const isOnline = ref(true);\n  const saveData = ref(false);\n  const offlineAt = ref(void 0);\n  const onlineAt = ref(void 0);\n  const downlink = ref(void 0);\n  const downlinkMax = ref(void 0);\n  const rtt = ref(void 0);\n  const effectiveType = ref(void 0);\n  const type = ref(\"unknown\");\n  const connection = isSupported.value && navigator.connection;\n  function updateNetworkInformation() {\n    if (!navigator)\n      return;\n    isOnline.value = navigator.onLine;\n    offlineAt.value = isOnline.value ? void 0 : Date.now();\n    onlineAt.value = isOnline.value ? Date.now() : void 0;\n    if (connection) {\n      downlink.value = connection.downlink;\n      downlinkMax.value = connection.downlinkMax;\n      effectiveType.value = connection.effectiveType;\n      rtt.value = connection.rtt;\n      saveData.value = connection.saveData;\n      type.value = connection.type;\n    }\n  }\n  if (window) {\n    useEventListener(window, \"offline\", () => {\n      isOnline.value = false;\n      offlineAt.value = Date.now();\n    });\n    useEventListener(window, \"online\", () => {\n      isOnline.value = true;\n      onlineAt.value = Date.now();\n    });\n  }\n  if (connection)\n    useEventListener(connection, \"change\", updateNetworkInformation, false);\n  updateNetworkInformation();\n  return {\n    isSupported,\n    isOnline,\n    saveData,\n    offlineAt,\n    onlineAt,\n    downlink,\n    downlinkMax,\n    effectiveType,\n    rtt,\n    type\n  };\n}\n\nfunction useNow(options = {}) {\n  const {\n    controls: exposeControls = false,\n    interval = \"requestAnimationFrame\"\n  } = options;\n  const now = ref(/* @__PURE__ */ new Date());\n  const update = () => now.value = /* @__PURE__ */ new Date();\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(update, { immediate: true }) : useIntervalFn(update, interval, { immediate: true });\n  if (exposeControls) {\n    return {\n      now,\n      ...controls\n    };\n  } else {\n    return now;\n  }\n}\n\nfunction useObjectUrl(object) {\n  const url = ref();\n  const release = () => {\n    if (url.value)\n      URL.revokeObjectURL(url.value);\n    url.value = void 0;\n  };\n  watch(\n    () => toValue(object),\n    (newObject) => {\n      release();\n      if (newObject)\n        url.value = URL.createObjectURL(newObject);\n    },\n    { immediate: true }\n  );\n  tryOnScopeDispose(release);\n  return readonly(url);\n}\n\nfunction useClamp(value, min, max) {\n  if (typeof value === \"function\" || isReadonly(value))\n    return computed(() => clamp(toValue(value), toValue(min), toValue(max)));\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, toValue(min), toValue(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, toValue(min), toValue(max));\n    }\n  });\n}\n\nfunction useOffsetPagination(options) {\n  const {\n    total = Number.POSITIVE_INFINITY,\n    pageSize = 10,\n    page = 1,\n    onPageChange = noop,\n    onPageSizeChange = noop,\n    onPageCountChange = noop\n  } = options;\n  const currentPageSize = useClamp(pageSize, 1, Number.POSITIVE_INFINITY);\n  const pageCount = computed(() => Math.max(\n    1,\n    Math.ceil(toValue(total) / toValue(currentPageSize))\n  ));\n  const currentPage = useClamp(page, 1, pageCount);\n  const isFirstPage = computed(() => currentPage.value === 1);\n  const isLastPage = computed(() => currentPage.value === pageCount.value);\n  if (isRef(page)) {\n    syncRef(page, currentPage, {\n      direction: isReadonly(page) ? \"ltr\" : \"both\"\n    });\n  }\n  if (isRef(pageSize)) {\n    syncRef(pageSize, currentPageSize, {\n      direction: isReadonly(pageSize) ? \"ltr\" : \"both\"\n    });\n  }\n  function prev() {\n    currentPage.value--;\n  }\n  function next() {\n    currentPage.value++;\n  }\n  const returnValue = {\n    currentPage,\n    currentPageSize,\n    pageCount,\n    isFirstPage,\n    isLastPage,\n    prev,\n    next\n  };\n  watch(currentPage, () => {\n    onPageChange(reactive(returnValue));\n  });\n  watch(currentPageSize, () => {\n    onPageSizeChange(reactive(returnValue));\n  });\n  watch(pageCount, () => {\n    onPageCountChange(reactive(returnValue));\n  });\n  return returnValue;\n}\n\nfunction useOnline(options = {}) {\n  const { isOnline } = useNetwork(options);\n  return isOnline;\n}\n\nfunction usePageLeave(options = {}) {\n  const { window = defaultWindow } = options;\n  const isLeft = ref(false);\n  const handler = (event) => {\n    if (!window)\n      return;\n    event = event || window.event;\n    const from = event.relatedTarget || event.toElement;\n    isLeft.value = !from;\n  };\n  if (window) {\n    useEventListener(window, \"mouseout\", handler, { passive: true });\n    useEventListener(window.document, \"mouseleave\", handler, { passive: true });\n    useEventListener(window.document, \"mouseenter\", handler, { passive: true });\n  }\n  return isLeft;\n}\n\nfunction useScreenOrientation(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"screen\" in window && \"orientation\" in window.screen);\n  const screenOrientation = isSupported.value ? window.screen.orientation : {};\n  const orientation = ref(screenOrientation.type);\n  const angle = ref(screenOrientation.angle || 0);\n  if (isSupported.value) {\n    useEventListener(window, \"orientationchange\", () => {\n      orientation.value = screenOrientation.type;\n      angle.value = screenOrientation.angle;\n    });\n  }\n  const lockOrientation = (type) => {\n    if (isSupported.value && typeof screenOrientation.lock === \"function\")\n      return screenOrientation.lock(type);\n    return Promise.reject(new Error(\"Not supported\"));\n  };\n  const unlockOrientation = () => {\n    if (isSupported.value && typeof screenOrientation.unlock === \"function\")\n      screenOrientation.unlock();\n  };\n  return {\n    isSupported,\n    orientation,\n    angle,\n    lockOrientation,\n    unlockOrientation\n  };\n}\n\nfunction useParallax(target, options = {}) {\n  const {\n    deviceOrientationTiltAdjust = (i) => i,\n    deviceOrientationRollAdjust = (i) => i,\n    mouseTiltAdjust = (i) => i,\n    mouseRollAdjust = (i) => i,\n    window = defaultWindow\n  } = options;\n  const orientation = reactive(useDeviceOrientation({ window }));\n  const screenOrientation = reactive(useScreenOrientation({ window }));\n  const {\n    elementX: x,\n    elementY: y,\n    elementWidth: width,\n    elementHeight: height\n  } = useMouseInElement(target, { handleOutside: false, window });\n  const source = computed(() => {\n    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0)) {\n      return \"deviceOrientation\";\n    }\n    return \"mouse\";\n  });\n  const roll = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      let value;\n      switch (screenOrientation.orientation) {\n        case \"landscape-primary\":\n          value = orientation.gamma / 90;\n          break;\n        case \"landscape-secondary\":\n          value = -orientation.gamma / 90;\n          break;\n        case \"portrait-primary\":\n          value = -orientation.beta / 90;\n          break;\n        case \"portrait-secondary\":\n          value = orientation.beta / 90;\n          break;\n        default:\n          value = -orientation.beta / 90;\n      }\n      return deviceOrientationRollAdjust(value);\n    } else {\n      const value = -(y.value - height.value / 2) / height.value;\n      return mouseRollAdjust(value);\n    }\n  });\n  const tilt = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      let value;\n      switch (screenOrientation.orientation) {\n        case \"landscape-primary\":\n          value = orientation.beta / 90;\n          break;\n        case \"landscape-secondary\":\n          value = -orientation.beta / 90;\n          break;\n        case \"portrait-primary\":\n          value = orientation.gamma / 90;\n          break;\n        case \"portrait-secondary\":\n          value = -orientation.gamma / 90;\n          break;\n        default:\n          value = orientation.gamma / 90;\n      }\n      return deviceOrientationTiltAdjust(value);\n    } else {\n      const value = (x.value - width.value / 2) / width.value;\n      return mouseTiltAdjust(value);\n    }\n  });\n  return { roll, tilt, source };\n}\n\nfunction useParentElement(element = useCurrentElement()) {\n  const parentElement = shallowRef();\n  const update = () => {\n    const el = unrefElement(element);\n    if (el)\n      parentElement.value = el.parentElement;\n  };\n  tryOnMounted(update);\n  watch(() => toValue(element), update);\n  return parentElement;\n}\n\nfunction usePerformanceObserver(options, callback) {\n  const {\n    window = defaultWindow,\n    immediate = true,\n    ...performanceOptions\n  } = options;\n  const isSupported = useSupported(() => window && \"PerformanceObserver\" in window);\n  let observer;\n  const stop = () => {\n    observer == null ? void 0 : observer.disconnect();\n  };\n  const start = () => {\n    if (isSupported.value) {\n      stop();\n      observer = new PerformanceObserver(callback);\n      observer.observe(performanceOptions);\n    }\n  };\n  tryOnScopeDispose(stop);\n  if (immediate)\n    start();\n  return {\n    isSupported,\n    start,\n    stop\n  };\n}\n\nconst defaultState = {\n  x: 0,\n  y: 0,\n  pointerId: 0,\n  pressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  width: 0,\n  height: 0,\n  twist: 0,\n  pointerType: null\n};\nconst keys = /* @__PURE__ */ Object.keys(defaultState);\nfunction usePointer(options = {}) {\n  const {\n    target = defaultWindow\n  } = options;\n  const isInside = ref(false);\n  const state = ref(options.initialValue || {});\n  Object.assign(state.value, defaultState, state.value);\n  const handler = (event) => {\n    isInside.value = true;\n    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))\n      return;\n    state.value = objectPick(event, keys, false);\n  };\n  if (target) {\n    const listenerOptions = { passive: true };\n    useEventListener(target, [\"pointerdown\", \"pointermove\", \"pointerup\"], handler, listenerOptions);\n    useEventListener(target, \"pointerleave\", () => isInside.value = false, listenerOptions);\n  }\n  return {\n    ...toRefs(state),\n    isInside\n  };\n}\n\nfunction usePointerLock(target, options = {}) {\n  const { document = defaultDocument } = options;\n  const isSupported = useSupported(() => document && \"pointerLockElement\" in document);\n  const element = ref();\n  const triggerElement = ref();\n  let targetElement;\n  if (isSupported.value) {\n    useEventListener(document, \"pointerlockchange\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        element.value = document.pointerLockElement;\n        if (!element.value)\n          targetElement = triggerElement.value = null;\n      }\n    });\n    useEventListener(document, \"pointerlockerror\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        const action = document.pointerLockElement ? \"release\" : \"acquire\";\n        throw new Error(`Failed to ${action} pointer lock.`);\n      }\n    });\n  }\n  async function lock(e) {\n    var _a;\n    if (!isSupported.value)\n      throw new Error(\"Pointer Lock API is not supported by your browser.\");\n    triggerElement.value = e instanceof Event ? e.currentTarget : null;\n    targetElement = e instanceof Event ? (_a = unrefElement(target)) != null ? _a : triggerElement.value : unrefElement(e);\n    if (!targetElement)\n      throw new Error(\"Target element undefined.\");\n    targetElement.requestPointerLock();\n    return await until(element).toBe(targetElement);\n  }\n  async function unlock() {\n    if (!element.value)\n      return false;\n    document.exitPointerLock();\n    await until(element).toBeNull();\n    return true;\n  }\n  return {\n    isSupported,\n    element,\n    triggerElement,\n    lock,\n    unlock\n  };\n}\n\nfunction usePointerSwipe(target, options = {}) {\n  const targetRef = toRef(target);\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    disableTextSelect = false\n  } = options;\n  const posStart = reactive({ x: 0, y: 0 });\n  const updatePosStart = (x, y) => {\n    posStart.x = x;\n    posStart.y = y;\n  };\n  const posEnd = reactive({ x: 0, y: 0 });\n  const updatePosEnd = (x, y) => {\n    posEnd.x = x;\n    posEnd.y = y;\n  };\n  const distanceX = computed(() => posStart.x - posEnd.x);\n  const distanceY = computed(() => posStart.y - posEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const isPointerDown = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return \"none\";\n    if (abs(distanceX.value) > abs(distanceY.value)) {\n      return distanceX.value > 0 ? \"left\" : \"right\";\n    } else {\n      return distanceY.value > 0 ? \"up\" : \"down\";\n    }\n  });\n  const eventIsAllowed = (e) => {\n    var _a, _b, _c;\n    const isReleasingButton = e.buttons === 0;\n    const isPrimaryButton = e.buttons === 1;\n    return (_c = (_b = (_a = options.pointerTypes) == null ? void 0 : _a.includes(e.pointerType)) != null ? _b : isReleasingButton || isPrimaryButton) != null ? _c : true;\n  };\n  const stops = [\n    useEventListener(target, \"pointerdown\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      isPointerDown.value = true;\n      const eventTarget = e.target;\n      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);\n      const { clientX: x, clientY: y } = e;\n      updatePosStart(x, y);\n      updatePosEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }),\n    useEventListener(target, \"pointermove\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      if (!isPointerDown.value)\n        return;\n      const { clientX: x, clientY: y } = e;\n      updatePosEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }),\n    useEventListener(target, \"pointerup\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      if (isSwiping.value)\n        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n      isPointerDown.value = false;\n      isSwiping.value = false;\n    })\n  ];\n  tryOnMounted(() => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"none\");\n    if (disableTextSelect) {\n      (_d = (_c = targetRef.value) == null ? void 0 : _c.style) == null ? void 0 : _d.setProperty(\"-webkit-user-select\", \"none\");\n      (_f = (_e = targetRef.value) == null ? void 0 : _e.style) == null ? void 0 : _f.setProperty(\"-ms-user-select\", \"none\");\n      (_h = (_g = targetRef.value) == null ? void 0 : _g.style) == null ? void 0 : _h.setProperty(\"user-select\", \"none\");\n    }\n  });\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isSwiping: readonly(isSwiping),\n    direction: readonly(direction),\n    posStart: readonly(posStart),\n    posEnd: readonly(posEnd),\n    distanceX,\n    distanceY,\n    stop\n  };\n}\n\nfunction usePreferredColorScheme(options) {\n  const isLight = useMediaQuery(\"(prefers-color-scheme: light)\", options);\n  const isDark = useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n  return computed(() => {\n    if (isDark.value)\n      return \"dark\";\n    if (isLight.value)\n      return \"light\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredContrast(options) {\n  const isMore = useMediaQuery(\"(prefers-contrast: more)\", options);\n  const isLess = useMediaQuery(\"(prefers-contrast: less)\", options);\n  const isCustom = useMediaQuery(\"(prefers-contrast: custom)\", options);\n  return computed(() => {\n    if (isMore.value)\n      return \"more\";\n    if (isLess.value)\n      return \"less\";\n    if (isCustom.value)\n      return \"custom\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredLanguages(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return ref([\"en\"]);\n  const navigator = window.navigator;\n  const value = ref(navigator.languages);\n  useEventListener(window, \"languagechange\", () => {\n    value.value = navigator.languages;\n  });\n  return value;\n}\n\nfunction usePreferredReducedMotion(options) {\n  const isReduced = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return computed(() => {\n    if (isReduced.value)\n      return \"reduce\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePrevious(value, initialValue) {\n  const previous = shallowRef(initialValue);\n  watch(\n    toRef(value),\n    (_, oldValue) => {\n      previous.value = oldValue;\n    },\n    { flush: \"sync\" }\n  );\n  return readonly(previous);\n}\n\nconst topVarName = \"--vueuse-safe-area-top\";\nconst rightVarName = \"--vueuse-safe-area-right\";\nconst bottomVarName = \"--vueuse-safe-area-bottom\";\nconst leftVarName = \"--vueuse-safe-area-left\";\nfunction useScreenSafeArea() {\n  const top = ref(\"\");\n  const right = ref(\"\");\n  const bottom = ref(\"\");\n  const left = ref(\"\");\n  if (isClient) {\n    const topCssVar = useCssVar(topVarName);\n    const rightCssVar = useCssVar(rightVarName);\n    const bottomCssVar = useCssVar(bottomVarName);\n    const leftCssVar = useCssVar(leftVarName);\n    topCssVar.value = \"env(safe-area-inset-top, 0px)\";\n    rightCssVar.value = \"env(safe-area-inset-right, 0px)\";\n    bottomCssVar.value = \"env(safe-area-inset-bottom, 0px)\";\n    leftCssVar.value = \"env(safe-area-inset-left, 0px)\";\n    update();\n    useEventListener(\"resize\", useDebounceFn(update));\n  }\n  function update() {\n    top.value = getValue(topVarName);\n    right.value = getValue(rightVarName);\n    bottom.value = getValue(bottomVarName);\n    left.value = getValue(leftVarName);\n  }\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    update\n  };\n}\nfunction getValue(position) {\n  return getComputedStyle(document.documentElement).getPropertyValue(position);\n}\n\nfunction useScriptTag(src, onLoaded = noop, options = {}) {\n  const {\n    immediate = true,\n    manual = false,\n    type = \"text/javascript\",\n    async = true,\n    crossOrigin,\n    referrerPolicy,\n    noModule,\n    defer,\n    document = defaultDocument,\n    attrs = {}\n  } = options;\n  const scriptTag = ref(null);\n  let _promise = null;\n  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {\n    const resolveWithElement = (el2) => {\n      scriptTag.value = el2;\n      resolve(el2);\n      return el2;\n    };\n    if (!document) {\n      resolve(false);\n      return;\n    }\n    let shouldAppend = false;\n    let el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\n    if (!el) {\n      el = document.createElement(\"script\");\n      el.type = type;\n      el.async = async;\n      el.src = toValue(src);\n      if (defer)\n        el.defer = defer;\n      if (crossOrigin)\n        el.crossOrigin = crossOrigin;\n      if (noModule)\n        el.noModule = noModule;\n      if (referrerPolicy)\n        el.referrerPolicy = referrerPolicy;\n      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));\n      shouldAppend = true;\n    } else if (el.hasAttribute(\"data-loaded\")) {\n      resolveWithElement(el);\n    }\n    el.addEventListener(\"error\", (event) => reject(event));\n    el.addEventListener(\"abort\", (event) => reject(event));\n    el.addEventListener(\"load\", () => {\n      el.setAttribute(\"data-loaded\", \"true\");\n      onLoaded(el);\n      resolveWithElement(el);\n    });\n    if (shouldAppend)\n      el = document.head.appendChild(el);\n    if (!waitForScriptLoad)\n      resolveWithElement(el);\n  });\n  const load = (waitForScriptLoad = true) => {\n    if (!_promise)\n      _promise = loadScript(waitForScriptLoad);\n    return _promise;\n  };\n  const unload = () => {\n    if (!document)\n      return;\n    _promise = null;\n    if (scriptTag.value)\n      scriptTag.value = null;\n    const el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\n    if (el)\n      document.head.removeChild(el);\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnUnmounted(unload);\n  return { scriptTag, load, unload };\n}\n\nfunction checkOverflowScroll(ele) {\n  const style = window.getComputedStyle(ele);\n  if (style.overflowX === \"scroll\" || style.overflowY === \"scroll\" || style.overflowX === \"auto\" && ele.clientWidth < ele.scrollWidth || style.overflowY === \"auto\" && ele.clientHeight < ele.scrollHeight) {\n    return true;\n  } else {\n    const parent = ele.parentNode;\n    if (!parent || parent.tagName === \"BODY\")\n      return false;\n    return checkOverflowScroll(parent);\n  }\n}\nfunction preventDefault(rawEvent) {\n  const e = rawEvent || window.event;\n  const _target = e.target;\n  if (checkOverflowScroll(_target))\n    return false;\n  if (e.touches.length > 1)\n    return true;\n  if (e.preventDefault)\n    e.preventDefault();\n  return false;\n}\nconst elInitialOverflow = /* @__PURE__ */ new WeakMap();\nfunction useScrollLock(element, initialState = false) {\n  const isLocked = ref(initialState);\n  let stopTouchMoveListener = null;\n  let initialOverflow = \"\";\n  watch(toRef(element), (el) => {\n    const target = resolveElement(toValue(el));\n    if (target) {\n      const ele = target;\n      if (!elInitialOverflow.get(ele))\n        elInitialOverflow.set(ele, ele.style.overflow);\n      if (ele.style.overflow !== \"hidden\")\n        initialOverflow = ele.style.overflow;\n      if (ele.style.overflow === \"hidden\")\n        return isLocked.value = true;\n      if (isLocked.value)\n        return ele.style.overflow = \"hidden\";\n    }\n  }, {\n    immediate: true\n  });\n  const lock = () => {\n    const el = resolveElement(toValue(element));\n    if (!el || isLocked.value)\n      return;\n    if (isIOS) {\n      stopTouchMoveListener = useEventListener(\n        el,\n        \"touchmove\",\n        (e) => {\n          preventDefault(e);\n        },\n        { passive: false }\n      );\n    }\n    el.style.overflow = \"hidden\";\n    isLocked.value = true;\n  };\n  const unlock = () => {\n    const el = resolveElement(toValue(element));\n    if (!el || !isLocked.value)\n      return;\n    isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());\n    el.style.overflow = initialOverflow;\n    elInitialOverflow.delete(el);\n    isLocked.value = false;\n  };\n  tryOnScopeDispose(unlock);\n  return computed({\n    get() {\n      return isLocked.value;\n    },\n    set(v) {\n      if (v)\n        lock();\n      else unlock();\n    }\n  });\n}\n\nfunction useSessionStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);\n}\n\nfunction useShare(shareOptions = {}, options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const _navigator = navigator;\n  const isSupported = useSupported(() => _navigator && \"canShare\" in _navigator);\n  const share = async (overrideOptions = {}) => {\n    if (isSupported.value) {\n      const data = {\n        ...toValue(shareOptions),\n        ...toValue(overrideOptions)\n      };\n      let granted = true;\n      if (data.files && _navigator.canShare)\n        granted = _navigator.canShare({ files: data.files });\n      if (granted)\n        return _navigator.share(data);\n    }\n  };\n  return {\n    isSupported,\n    share\n  };\n}\n\nconst defaultSortFn = (source, compareFn) => source.sort(compareFn);\nconst defaultCompare = (a, b) => a - b;\nfunction useSorted(...args) {\n  var _a, _b, _c, _d;\n  const [source] = args;\n  let compareFn = defaultCompare;\n  let options = {};\n  if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      options = args[1];\n      compareFn = (_a = options.compareFn) != null ? _a : defaultCompare;\n    } else {\n      compareFn = (_b = args[1]) != null ? _b : defaultCompare;\n    }\n  } else if (args.length > 2) {\n    compareFn = (_c = args[1]) != null ? _c : defaultCompare;\n    options = (_d = args[2]) != null ? _d : {};\n  }\n  const {\n    dirty = false,\n    sortFn = defaultSortFn\n  } = options;\n  if (!dirty)\n    return computed(() => sortFn([...toValue(source)], compareFn));\n  watchEffect(() => {\n    const result = sortFn(toValue(source), compareFn);\n    if (isRef(source))\n      source.value = result;\n    else\n      source.splice(0, source.length, ...result);\n  });\n  return source;\n}\n\nfunction useSpeechRecognition(options = {}) {\n  const {\n    interimResults = true,\n    continuous = true,\n    window = defaultWindow\n  } = options;\n  const lang = toRef(options.lang || \"en-US\");\n  const isListening = ref(false);\n  const isFinal = ref(false);\n  const result = ref(\"\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isListening.value) => {\n    isListening.value = value;\n  };\n  const start = () => {\n    isListening.value = true;\n  };\n  const stop = () => {\n    isListening.value = false;\n  };\n  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);\n  const isSupported = useSupported(() => SpeechRecognition);\n  let recognition;\n  if (isSupported.value) {\n    recognition = new SpeechRecognition();\n    recognition.continuous = continuous;\n    recognition.interimResults = interimResults;\n    recognition.lang = toValue(lang);\n    recognition.onstart = () => {\n      isFinal.value = false;\n    };\n    watch(lang, (lang2) => {\n      if (recognition && !isListening.value)\n        recognition.lang = lang2;\n    });\n    recognition.onresult = (event) => {\n      const currentResult = event.results[event.resultIndex];\n      const { transcript } = currentResult[0];\n      isFinal.value = currentResult.isFinal;\n      result.value = transcript;\n      error.value = void 0;\n    };\n    recognition.onerror = (event) => {\n      error.value = event;\n    };\n    recognition.onend = () => {\n      isListening.value = false;\n      recognition.lang = toValue(lang);\n    };\n    watch(isListening, () => {\n      if (isListening.value)\n        recognition.start();\n      else\n        recognition.stop();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isListening.value = false;\n  });\n  return {\n    isSupported,\n    isListening,\n    isFinal,\n    recognition,\n    result,\n    error,\n    toggle,\n    start,\n    stop\n  };\n}\n\nfunction useSpeechSynthesis(text, options = {}) {\n  const {\n    pitch = 1,\n    rate = 1,\n    volume = 1,\n    window = defaultWindow\n  } = options;\n  const synth = window && window.speechSynthesis;\n  const isSupported = useSupported(() => synth);\n  const isPlaying = ref(false);\n  const status = ref(\"init\");\n  const spokenText = toRef(text || \"\");\n  const lang = toRef(options.lang || \"en-US\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isPlaying.value) => {\n    isPlaying.value = value;\n  };\n  const bindEventsForUtterance = (utterance2) => {\n    utterance2.lang = toValue(lang);\n    utterance2.voice = toValue(options.voice) || null;\n    utterance2.pitch = toValue(pitch);\n    utterance2.rate = toValue(rate);\n    utterance2.volume = volume;\n    utterance2.onstart = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onpause = () => {\n      isPlaying.value = false;\n      status.value = \"pause\";\n    };\n    utterance2.onresume = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onend = () => {\n      isPlaying.value = false;\n      status.value = \"end\";\n    };\n    utterance2.onerror = (event) => {\n      error.value = event;\n    };\n  };\n  const utterance = computed(() => {\n    isPlaying.value = false;\n    status.value = \"init\";\n    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);\n    bindEventsForUtterance(newUtterance);\n    return newUtterance;\n  });\n  const speak = () => {\n    synth.cancel();\n    utterance && synth.speak(utterance.value);\n  };\n  const stop = () => {\n    synth.cancel();\n    isPlaying.value = false;\n  };\n  if (isSupported.value) {\n    bindEventsForUtterance(utterance.value);\n    watch(lang, (lang2) => {\n      if (utterance.value && !isPlaying.value)\n        utterance.value.lang = lang2;\n    });\n    if (options.voice) {\n      watch(options.voice, () => {\n        synth.cancel();\n      });\n    }\n    watch(isPlaying, () => {\n      if (isPlaying.value)\n        synth.resume();\n      else\n        synth.pause();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isPlaying.value = false;\n  });\n  return {\n    isSupported,\n    isPlaying,\n    status,\n    utterance,\n    error,\n    stop,\n    toggle,\n    speak\n  };\n}\n\nfunction useStepper(steps, initialStep) {\n  const stepsRef = ref(steps);\n  const stepNames = computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));\n  const index = ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));\n  const current = computed(() => at(index.value));\n  const isFirst = computed(() => index.value === 0);\n  const isLast = computed(() => index.value === stepNames.value.length - 1);\n  const next = computed(() => stepNames.value[index.value + 1]);\n  const previous = computed(() => stepNames.value[index.value - 1]);\n  function at(index2) {\n    if (Array.isArray(stepsRef.value))\n      return stepsRef.value[index2];\n    return stepsRef.value[stepNames.value[index2]];\n  }\n  function get(step) {\n    if (!stepNames.value.includes(step))\n      return;\n    return at(stepNames.value.indexOf(step));\n  }\n  function goTo(step) {\n    if (stepNames.value.includes(step))\n      index.value = stepNames.value.indexOf(step);\n  }\n  function goToNext() {\n    if (isLast.value)\n      return;\n    index.value++;\n  }\n  function goToPrevious() {\n    if (isFirst.value)\n      return;\n    index.value--;\n  }\n  function goBackTo(step) {\n    if (isAfter(step))\n      goTo(step);\n  }\n  function isNext(step) {\n    return stepNames.value.indexOf(step) === index.value + 1;\n  }\n  function isPrevious(step) {\n    return stepNames.value.indexOf(step) === index.value - 1;\n  }\n  function isCurrent(step) {\n    return stepNames.value.indexOf(step) === index.value;\n  }\n  function isBefore(step) {\n    return index.value < stepNames.value.indexOf(step);\n  }\n  function isAfter(step) {\n    return index.value > stepNames.value.indexOf(step);\n  }\n  return {\n    steps: stepsRef,\n    stepNames,\n    index,\n    current,\n    next,\n    previous,\n    isFirst,\n    isLast,\n    at,\n    get,\n    goTo,\n    goToNext,\n    goToPrevious,\n    goBackTo,\n    isNext,\n    isPrevious,\n    isCurrent,\n    isBefore,\n    isAfter\n  };\n}\n\nfunction useStorageAsync(key, initialValue, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const rawInit = toValue(initialValue);\n  const type = guessSerializerType(rawInit);\n  const data = (shallow ? shallowRef : ref)(initialValue);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorageAsync\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  async function read(event) {\n    if (!storage || event && event.key !== key)\n      return;\n    try {\n      const rawValue = event ? event.newValue : await storage.getItem(key);\n      if (rawValue == null) {\n        data.value = rawInit;\n        if (writeDefaults && rawInit !== null)\n          await storage.setItem(key, await serializer.write(rawInit));\n      } else if (mergeDefaults) {\n        const value = await serializer.read(rawValue);\n        if (typeof mergeDefaults === \"function\")\n          data.value = mergeDefaults(value, rawInit);\n        else if (type === \"object\" && !Array.isArray(value))\n          data.value = { ...rawInit, ...value };\n        else data.value = value;\n      } else {\n        data.value = await serializer.read(rawValue);\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  read();\n  if (window && listenToStorageChanges)\n    useEventListener(window, \"storage\", (e) => Promise.resolve().then(() => read(e)));\n  if (storage) {\n    watchWithFilter(\n      data,\n      async () => {\n        try {\n          if (data.value == null)\n            await storage.removeItem(key);\n          else\n            await storage.setItem(key, await serializer.write(data.value));\n        } catch (e) {\n          onError(e);\n        }\n      },\n      {\n        flush,\n        deep,\n        eventFilter\n      }\n    );\n  }\n  return data;\n}\n\nlet _id = 0;\nfunction useStyleTag(css, options = {}) {\n  const isLoaded = ref(false);\n  const {\n    document = defaultDocument,\n    immediate = true,\n    manual = false,\n    id = `vueuse_styletag_${++_id}`\n  } = options;\n  const cssRef = ref(css);\n  let stop = () => {\n  };\n  const load = () => {\n    if (!document)\n      return;\n    const el = document.getElementById(id) || document.createElement(\"style\");\n    if (!el.isConnected) {\n      el.id = id;\n      if (options.media)\n        el.media = options.media;\n      document.head.appendChild(el);\n    }\n    if (isLoaded.value)\n      return;\n    stop = watch(\n      cssRef,\n      (value) => {\n        el.textContent = value;\n      },\n      { immediate: true }\n    );\n    isLoaded.value = true;\n  };\n  const unload = () => {\n    if (!document || !isLoaded.value)\n      return;\n    stop();\n    document.head.removeChild(document.getElementById(id));\n    isLoaded.value = false;\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnScopeDispose(unload);\n  return {\n    id,\n    css: cssRef,\n    unload,\n    load,\n    isLoaded: readonly(isLoaded)\n  };\n}\n\nfunction useSwipe(target, options = {}) {\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    passive = true,\n    window = defaultWindow\n  } = options;\n  const coordsStart = reactive({ x: 0, y: 0 });\n  const coordsEnd = reactive({ x: 0, y: 0 });\n  const diffX = computed(() => coordsStart.x - coordsEnd.x);\n  const diffY = computed(() => coordsStart.y - coordsEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return \"none\";\n    if (abs(diffX.value) > abs(diffY.value)) {\n      return diffX.value > 0 ? \"left\" : \"right\";\n    } else {\n      return diffY.value > 0 ? \"up\" : \"down\";\n    }\n  });\n  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];\n  const updateCoordsStart = (x, y) => {\n    coordsStart.x = x;\n    coordsStart.y = y;\n  };\n  const updateCoordsEnd = (x, y) => {\n    coordsEnd.x = x;\n    coordsEnd.y = y;\n  };\n  let listenerOptions;\n  const isPassiveEventSupported = checkPassiveEventSupport(window == null ? void 0 : window.document);\n  if (!passive)\n    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };\n  else\n    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };\n  const onTouchEnd = (e) => {\n    if (isSwiping.value)\n      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n    isSwiping.value = false;\n  };\n  const stops = [\n    useEventListener(target, \"touchstart\", (e) => {\n      if (e.touches.length !== 1)\n        return;\n      if (listenerOptions.capture && !listenerOptions.passive)\n        e.preventDefault();\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsStart(x, y);\n      updateCoordsEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchmove\", (e) => {\n      if (e.touches.length !== 1)\n        return;\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }, listenerOptions),\n    useEventListener(target, [\"touchend\", \"touchcancel\"], onTouchEnd, listenerOptions)\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isPassiveEventSupported,\n    isSwiping,\n    direction,\n    coordsStart,\n    coordsEnd,\n    lengthX: diffX,\n    lengthY: diffY,\n    stop\n  };\n}\nfunction checkPassiveEventSupport(document) {\n  if (!document)\n    return false;\n  let supportsPassive = false;\n  const optionsBlock = {\n    get passive() {\n      supportsPassive = true;\n      return false;\n    }\n  };\n  document.addEventListener(\"x\", noop, optionsBlock);\n  document.removeEventListener(\"x\", noop);\n  return supportsPassive;\n}\n\nfunction useTemplateRefsList() {\n  const refs = ref([]);\n  refs.value.set = (el) => {\n    if (el)\n      refs.value.push(el);\n  };\n  onBeforeUpdate(() => {\n    refs.value.length = 0;\n  });\n  return refs;\n}\n\nfunction useTextDirection(options = {}) {\n  const {\n    document = defaultDocument,\n    selector = \"html\",\n    observe = false,\n    initialValue = \"ltr\"\n  } = options;\n  function getValue() {\n    var _a, _b;\n    return (_b = (_a = document == null ? void 0 : document.querySelector(selector)) == null ? void 0 : _a.getAttribute(\"dir\")) != null ? _b : initialValue;\n  }\n  const dir = ref(getValue());\n  tryOnMounted(() => dir.value = getValue());\n  if (observe && document) {\n    useMutationObserver(\n      document.querySelector(selector),\n      () => dir.value = getValue(),\n      { attributes: true }\n    );\n  }\n  return computed({\n    get() {\n      return dir.value;\n    },\n    set(v) {\n      var _a, _b;\n      dir.value = v;\n      if (!document)\n        return;\n      if (dir.value)\n        (_a = document.querySelector(selector)) == null ? void 0 : _a.setAttribute(\"dir\", dir.value);\n      else\n        (_b = document.querySelector(selector)) == null ? void 0 : _b.removeAttribute(\"dir\");\n    }\n  });\n}\n\nfunction getRangesFromSelection(selection) {\n  var _a;\n  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;\n  return Array.from({ length: rangeCount }, (_, i) => selection.getRangeAt(i));\n}\nfunction useTextSelection(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const selection = ref(null);\n  const text = computed(() => {\n    var _a, _b;\n    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : \"\";\n  });\n  const ranges = computed(() => selection.value ? getRangesFromSelection(selection.value) : []);\n  const rects = computed(() => ranges.value.map((range) => range.getBoundingClientRect()));\n  function onSelectionChange() {\n    selection.value = null;\n    if (window)\n      selection.value = window.getSelection();\n  }\n  if (window)\n    useEventListener(window.document, \"selectionchange\", onSelectionChange);\n  return {\n    text,\n    rects,\n    ranges,\n    selection\n  };\n}\n\nfunction useTextareaAutosize(options) {\n  var _a;\n  const textarea = ref(options == null ? void 0 : options.element);\n  const input = ref(options == null ? void 0 : options.input);\n  const styleProp = (_a = options == null ? void 0 : options.styleProp) != null ? _a : \"height\";\n  const textareaScrollHeight = ref(1);\n  function triggerResize() {\n    var _a2;\n    if (!textarea.value)\n      return;\n    let height = \"\";\n    textarea.value.style[styleProp] = \"1px\";\n    textareaScrollHeight.value = (_a2 = textarea.value) == null ? void 0 : _a2.scrollHeight;\n    if (options == null ? void 0 : options.styleTarget)\n      toValue(options.styleTarget).style[styleProp] = `${textareaScrollHeight.value}px`;\n    else\n      height = `${textareaScrollHeight.value}px`;\n    textarea.value.style[styleProp] = height;\n  }\n  watch([input, textarea], () => nextTick(triggerResize), { immediate: true });\n  watch(textareaScrollHeight, () => {\n    var _a2;\n    return (_a2 = options == null ? void 0 : options.onResize) == null ? void 0 : _a2.call(options);\n  });\n  useResizeObserver(textarea, () => triggerResize());\n  if (options == null ? void 0 : options.watch)\n    watch(options.watch, triggerResize, { immediate: true, deep: true });\n  return {\n    textarea,\n    input,\n    triggerResize\n  };\n}\n\nfunction useThrottledRefHistory(source, options = {}) {\n  const { throttle = 200, trailing = true } = options;\n  const filter = throttleFilter(throttle, trailing);\n  const history = useRefHistory(source, { ...options, eventFilter: filter });\n  return {\n    ...history\n  };\n}\n\nconst DEFAULT_UNITS = [\n  { max: 6e4, value: 1e3, name: \"second\" },\n  { max: 276e4, value: 6e4, name: \"minute\" },\n  { max: 72e6, value: 36e5, name: \"hour\" },\n  { max: 5184e5, value: 864e5, name: \"day\" },\n  { max: 24192e5, value: 6048e5, name: \"week\" },\n  { max: 28512e6, value: 2592e6, name: \"month\" },\n  { max: Number.POSITIVE_INFINITY, value: 31536e6, name: \"year\" }\n];\nconst DEFAULT_MESSAGES = {\n  justNow: \"just now\",\n  past: (n) => n.match(/\\d/) ? `${n} ago` : n,\n  future: (n) => n.match(/\\d/) ? `in ${n}` : n,\n  month: (n, past) => n === 1 ? past ? \"last month\" : \"next month\" : `${n} month${n > 1 ? \"s\" : \"\"}`,\n  year: (n, past) => n === 1 ? past ? \"last year\" : \"next year\" : `${n} year${n > 1 ? \"s\" : \"\"}`,\n  day: (n, past) => n === 1 ? past ? \"yesterday\" : \"tomorrow\" : `${n} day${n > 1 ? \"s\" : \"\"}`,\n  week: (n, past) => n === 1 ? past ? \"last week\" : \"next week\" : `${n} week${n > 1 ? \"s\" : \"\"}`,\n  hour: (n) => `${n} hour${n > 1 ? \"s\" : \"\"}`,\n  minute: (n) => `${n} minute${n > 1 ? \"s\" : \"\"}`,\n  second: (n) => `${n} second${n > 1 ? \"s\" : \"\"}`,\n  invalid: \"\"\n};\nfunction DEFAULT_FORMATTER(date) {\n  return date.toISOString().slice(0, 10);\n}\nfunction useTimeAgo(time, options = {}) {\n  const {\n    controls: exposeControls = false,\n    updateInterval = 3e4\n  } = options;\n  const { now, ...controls } = useNow({ interval: updateInterval, controls: true });\n  const timeAgo = computed(() => formatTimeAgo(new Date(toValue(time)), options, toValue(now)));\n  if (exposeControls) {\n    return {\n      timeAgo,\n      ...controls\n    };\n  } else {\n    return timeAgo;\n  }\n}\nfunction formatTimeAgo(from, options = {}, now = Date.now()) {\n  var _a;\n  const {\n    max,\n    messages = DEFAULT_MESSAGES,\n    fullDateFormatter = DEFAULT_FORMATTER,\n    units = DEFAULT_UNITS,\n    showSecond = false,\n    rounding = \"round\"\n  } = options;\n  const roundFn = typeof rounding === \"number\" ? (n) => +n.toFixed(rounding) : Math[rounding];\n  const diff = +now - +from;\n  const absDiff = Math.abs(diff);\n  function getValue(diff2, unit) {\n    return roundFn(Math.abs(diff2) / unit.value);\n  }\n  function format(diff2, unit) {\n    const val = getValue(diff2, unit);\n    const past = diff2 > 0;\n    const str = applyFormat(unit.name, val, past);\n    return applyFormat(past ? \"past\" : \"future\", str, past);\n  }\n  function applyFormat(name, val, isPast) {\n    const formatter = messages[name];\n    if (typeof formatter === \"function\")\n      return formatter(val, isPast);\n    return formatter.replace(\"{0}\", val.toString());\n  }\n  if (absDiff < 6e4 && !showSecond)\n    return messages.justNow;\n  if (typeof max === \"number\" && absDiff > max)\n    return fullDateFormatter(new Date(from));\n  if (typeof max === \"string\") {\n    const unitMax = (_a = units.find((i) => i.name === max)) == null ? void 0 : _a.max;\n    if (unitMax && absDiff > unitMax)\n      return fullDateFormatter(new Date(from));\n  }\n  for (const [idx, unit] of units.entries()) {\n    const val = getValue(diff, unit);\n    if (val <= 0 && units[idx - 1])\n      return format(diff, units[idx - 1]);\n    if (absDiff < unit.max)\n      return format(diff, unit);\n  }\n  return messages.invalid;\n}\n\nfunction useTimeoutPoll(fn, interval, timeoutPollOptions) {\n  const { start } = useTimeoutFn(loop, interval, { immediate: false });\n  const isActive = ref(false);\n  async function loop() {\n    if (!isActive.value)\n      return;\n    await fn();\n    start();\n  }\n  function resume() {\n    if (!isActive.value) {\n      isActive.value = true;\n      loop();\n    }\n  }\n  function pause() {\n    isActive.value = false;\n  }\n  if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nfunction useTimestamp(options = {}) {\n  const {\n    controls: exposeControls = false,\n    offset = 0,\n    immediate = true,\n    interval = \"requestAnimationFrame\",\n    callback\n  } = options;\n  const ts = ref(timestamp() + offset);\n  const update = () => ts.value = timestamp() + offset;\n  const cb = callback ? () => {\n    update();\n    callback(ts.value);\n  } : update;\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  if (exposeControls) {\n    return {\n      timestamp: ts,\n      ...controls\n    };\n  } else {\n    return ts;\n  }\n}\n\nfunction useTitle(newTitle = null, options = {}) {\n  var _a, _b, _c;\n  const {\n    document = defaultDocument,\n    restoreOnUnmount = (t) => t\n  } = options;\n  const originalTitle = (_a = document == null ? void 0 : document.title) != null ? _a : \"\";\n  const title = toRef((_b = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _b : null);\n  const isReadonly = newTitle && typeof newTitle === \"function\";\n  function format(t) {\n    if (!(\"titleTemplate\" in options))\n      return t;\n    const template = options.titleTemplate || \"%s\";\n    return typeof template === \"function\" ? template(t) : toValue(template).replace(/%s/g, t);\n  }\n  watch(\n    title,\n    (t, o) => {\n      if (t !== o && document)\n        document.title = format(typeof t === \"string\" ? t : \"\");\n    },\n    { immediate: true }\n  );\n  if (options.observe && !options.titleTemplate && document && !isReadonly) {\n    useMutationObserver(\n      (_c = document.head) == null ? void 0 : _c.querySelector(\"title\"),\n      () => {\n        if (document && document.title !== title.value)\n          title.value = format(document.title);\n      },\n      { childList: true }\n    );\n  }\n  tryOnBeforeUnmount(() => {\n    if (restoreOnUnmount) {\n      const restoredTitle = restoreOnUnmount(originalTitle, title.value || \"\");\n      if (restoredTitle != null && document)\n        document.title = restoredTitle;\n    }\n  });\n  return title;\n}\n\nconst _TransitionPresets = {\n  easeInSine: [0.12, 0, 0.39, 0],\n  easeOutSine: [0.61, 1, 0.88, 1],\n  easeInOutSine: [0.37, 0, 0.63, 1],\n  easeInQuad: [0.11, 0, 0.5, 0],\n  easeOutQuad: [0.5, 1, 0.89, 1],\n  easeInOutQuad: [0.45, 0, 0.55, 1],\n  easeInCubic: [0.32, 0, 0.67, 0],\n  easeOutCubic: [0.33, 1, 0.68, 1],\n  easeInOutCubic: [0.65, 0, 0.35, 1],\n  easeInQuart: [0.5, 0, 0.75, 0],\n  easeOutQuart: [0.25, 1, 0.5, 1],\n  easeInOutQuart: [0.76, 0, 0.24, 1],\n  easeInQuint: [0.64, 0, 0.78, 0],\n  easeOutQuint: [0.22, 1, 0.36, 1],\n  easeInOutQuint: [0.83, 0, 0.17, 1],\n  easeInExpo: [0.7, 0, 0.84, 0],\n  easeOutExpo: [0.16, 1, 0.3, 1],\n  easeInOutExpo: [0.87, 0, 0.13, 1],\n  easeInCirc: [0.55, 0, 1, 0.45],\n  easeOutCirc: [0, 0.55, 0.45, 1],\n  easeInOutCirc: [0.85, 0, 0.15, 1],\n  easeInBack: [0.36, 0, 0.66, -0.56],\n  easeOutBack: [0.34, 1.56, 0.64, 1],\n  easeInOutBack: [0.68, -0.6, 0.32, 1.6]\n};\nconst TransitionPresets = /* @__PURE__ */ Object.assign({}, { linear: identity }, _TransitionPresets);\nfunction createEasingFunction([p0, p1, p2, p3]) {\n  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;\n  const b = (a1, a2) => 3 * a2 - 6 * a1;\n  const c = (a1) => 3 * a1;\n  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\n  const getTforX = (x) => {\n    let aGuessT = x;\n    for (let i = 0; i < 4; ++i) {\n      const currentSlope = getSlope(aGuessT, p0, p2);\n      if (currentSlope === 0)\n        return aGuessT;\n      const currentX = calcBezier(aGuessT, p0, p2) - x;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);\n}\nfunction lerp(a, b, alpha) {\n  return a + alpha * (b - a);\n}\nfunction toVec(t) {\n  return (typeof t === \"number\" ? [t] : t) || [];\n}\nfunction executeTransition(source, from, to, options = {}) {\n  var _a, _b;\n  const fromVal = toValue(from);\n  const toVal = toValue(to);\n  const v1 = toVec(fromVal);\n  const v2 = toVec(toVal);\n  const duration = (_a = toValue(options.duration)) != null ? _a : 1e3;\n  const startedAt = Date.now();\n  const endAt = Date.now() + duration;\n  const trans = typeof options.transition === \"function\" ? options.transition : (_b = toValue(options.transition)) != null ? _b : identity;\n  const ease = typeof trans === \"function\" ? trans : createEasingFunction(trans);\n  return new Promise((resolve) => {\n    source.value = fromVal;\n    const tick = () => {\n      var _a2;\n      if ((_a2 = options.abort) == null ? void 0 : _a2.call(options)) {\n        resolve();\n        return;\n      }\n      const now = Date.now();\n      const alpha = ease((now - startedAt) / duration);\n      const arr = toVec(source.value).map((n, i) => lerp(v1[i], v2[i], alpha));\n      if (Array.isArray(source.value))\n        source.value = arr.map((n, i) => {\n          var _a3, _b2;\n          return lerp((_a3 = v1[i]) != null ? _a3 : 0, (_b2 = v2[i]) != null ? _b2 : 0, alpha);\n        });\n      else if (typeof source.value === \"number\")\n        source.value = arr[0];\n      if (now < endAt) {\n        requestAnimationFrame(tick);\n      } else {\n        source.value = toVal;\n        resolve();\n      }\n    };\n    tick();\n  });\n}\nfunction useTransition(source, options = {}) {\n  let currentId = 0;\n  const sourceVal = () => {\n    const v = toValue(source);\n    return typeof v === \"number\" ? v : v.map(toValue);\n  };\n  const outputRef = ref(sourceVal());\n  watch(sourceVal, async (to) => {\n    var _a, _b;\n    if (toValue(options.disabled))\n      return;\n    const id = ++currentId;\n    if (options.delay)\n      await promiseTimeout(toValue(options.delay));\n    if (id !== currentId)\n      return;\n    const toVal = Array.isArray(to) ? to.map(toValue) : toValue(to);\n    (_a = options.onStarted) == null ? void 0 : _a.call(options);\n    await executeTransition(outputRef, outputRef.value, toVal, {\n      ...options,\n      abort: () => {\n        var _a2;\n        return id !== currentId || ((_a2 = options.abort) == null ? void 0 : _a2.call(options));\n      }\n    });\n    (_b = options.onFinished) == null ? void 0 : _b.call(options);\n  }, { deep: true });\n  watch(() => toValue(options.disabled), (disabled) => {\n    if (disabled) {\n      currentId++;\n      outputRef.value = sourceVal();\n    }\n  });\n  tryOnScopeDispose(() => {\n    currentId++;\n  });\n  return computed(() => toValue(options.disabled) ? sourceVal() : outputRef.value);\n}\n\nfunction useUrlSearchParams(mode = \"history\", options = {}) {\n  const {\n    initialValue = {},\n    removeNullishValues = true,\n    removeFalsyValues = false,\n    write: enableWrite = true,\n    window = defaultWindow\n  } = options;\n  if (!window)\n    return reactive(initialValue);\n  const state = reactive({});\n  function getRawParams() {\n    if (mode === \"history\") {\n      return window.location.search || \"\";\n    } else if (mode === \"hash\") {\n      const hash = window.location.hash || \"\";\n      const index = hash.indexOf(\"?\");\n      return index > 0 ? hash.slice(index) : \"\";\n    } else {\n      return (window.location.hash || \"\").replace(/^#/, \"\");\n    }\n  }\n  function constructQuery(params) {\n    const stringified = params.toString();\n    if (mode === \"history\")\n      return `${stringified ? `?${stringified}` : \"\"}${window.location.hash || \"\"}`;\n    if (mode === \"hash-params\")\n      return `${window.location.search || \"\"}${stringified ? `#${stringified}` : \"\"}`;\n    const hash = window.location.hash || \"#\";\n    const index = hash.indexOf(\"?\");\n    if (index > 0)\n      return `${hash.slice(0, index)}${stringified ? `?${stringified}` : \"\"}`;\n    return `${hash}${stringified ? `?${stringified}` : \"\"}`;\n  }\n  function read() {\n    return new URLSearchParams(getRawParams());\n  }\n  function updateState(params) {\n    const unusedKeys = new Set(Object.keys(state));\n    for (const key of params.keys()) {\n      const paramsForKey = params.getAll(key);\n      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || \"\";\n      unusedKeys.delete(key);\n    }\n    Array.from(unusedKeys).forEach((key) => delete state[key]);\n  }\n  const { pause, resume } = pausableWatch(\n    state,\n    () => {\n      const params = new URLSearchParams(\"\");\n      Object.keys(state).forEach((key) => {\n        const mapEntry = state[key];\n        if (Array.isArray(mapEntry))\n          mapEntry.forEach((value) => params.append(key, value));\n        else if (removeNullishValues && mapEntry == null)\n          params.delete(key);\n        else if (removeFalsyValues && !mapEntry)\n          params.delete(key);\n        else\n          params.set(key, mapEntry);\n      });\n      write(params);\n    },\n    { deep: true }\n  );\n  function write(params, shouldUpdate) {\n    pause();\n    if (shouldUpdate)\n      updateState(params);\n    window.history.replaceState(\n      window.history.state,\n      window.document.title,\n      window.location.pathname + constructQuery(params)\n    );\n    resume();\n  }\n  function onChanged() {\n    if (!enableWrite)\n      return;\n    write(read(), true);\n  }\n  useEventListener(window, \"popstate\", onChanged, false);\n  if (mode !== \"history\")\n    useEventListener(window, \"hashchange\", onChanged, false);\n  const initial = read();\n  if (initial.keys().next().value)\n    updateState(initial);\n  else\n    Object.assign(state, initialValue);\n  return state;\n}\n\nfunction useUserMedia(options = {}) {\n  var _a, _b;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const autoSwitch = ref((_b = options.autoSwitch) != null ? _b : true);\n  const constraints = ref(options.constraints);\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;\n  });\n  const stream = shallowRef();\n  function getDeviceOptions(type) {\n    switch (type) {\n      case \"video\": {\n        if (constraints.value)\n          return constraints.value.video || false;\n        break;\n      }\n      case \"audio\": {\n        if (constraints.value)\n          return constraints.value.audio || false;\n        break;\n      }\n    }\n  }\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getUserMedia({\n      video: getDeviceOptions(\"video\"),\n      audio: getDeviceOptions(\"audio\")\n    });\n    return stream.value;\n  }\n  function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  async function restart() {\n    _stop();\n    return await start();\n  }\n  watch(\n    enabled,\n    (v) => {\n      if (v)\n        _start();\n      else _stop();\n    },\n    { immediate: true }\n  );\n  watch(\n    constraints,\n    () => {\n      if (autoSwitch.value && stream.value)\n        restart();\n    },\n    { immediate: true }\n  );\n  tryOnScopeDispose(() => {\n    stop();\n  });\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    restart,\n    constraints,\n    enabled,\n    autoSwitch\n  };\n}\n\nfunction useVModel(props, key, emit, options = {}) {\n  var _a, _b, _c, _d, _e;\n  const {\n    clone = false,\n    passive = false,\n    eventName,\n    deep = false,\n    defaultValue,\n    shouldEmit\n  } = options;\n  const vm = getCurrentInstance();\n  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));\n  let event = eventName;\n  if (!key) {\n    if (isVue2) {\n      const modelOptions = (_e = (_d = vm == null ? void 0 : vm.proxy) == null ? void 0 : _d.$options) == null ? void 0 : _e.model;\n      key = (modelOptions == null ? void 0 : modelOptions.value) || \"value\";\n      if (!eventName)\n        event = (modelOptions == null ? void 0 : modelOptions.event) || \"input\";\n    } else {\n      key = \"modelValue\";\n    }\n  }\n  event = event || `update:${key.toString()}`;\n  const cloneFn = (val) => !clone ? val : typeof clone === \"function\" ? clone(val) : cloneFnJSON(val);\n  const getValue = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;\n  const triggerEmit = (value) => {\n    if (shouldEmit) {\n      if (shouldEmit(value))\n        _emit(event, value);\n    } else {\n      _emit(event, value);\n    }\n  };\n  if (passive) {\n    const initialValue = getValue();\n    const proxy = ref(initialValue);\n    let isUpdating = false;\n    watch(\n      () => props[key],\n      (v) => {\n        if (!isUpdating) {\n          isUpdating = true;\n          proxy.value = cloneFn(v);\n          nextTick(() => isUpdating = false);\n        }\n      }\n    );\n    watch(\n      proxy,\n      (v) => {\n        if (!isUpdating && (v !== props[key] || deep))\n          triggerEmit(v);\n      },\n      { deep }\n    );\n    return proxy;\n  } else {\n    return computed({\n      get() {\n        return getValue();\n      },\n      set(value) {\n        triggerEmit(value);\n      }\n    });\n  }\n}\n\nfunction useVModels(props, emit, options = {}) {\n  const ret = {};\n  for (const key in props) {\n    ret[key] = useVModel(\n      props,\n      key,\n      emit,\n      options\n    );\n  }\n  return ret;\n}\n\nfunction useVibrate(options) {\n  const {\n    pattern = [],\n    interval = 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => typeof navigator !== \"undefined\" && \"vibrate\" in navigator);\n  const patternRef = toRef(pattern);\n  let intervalControls;\n  const vibrate = (pattern2 = patternRef.value) => {\n    if (isSupported.value)\n      navigator.vibrate(pattern2);\n  };\n  const stop = () => {\n    if (isSupported.value)\n      navigator.vibrate(0);\n    intervalControls == null ? void 0 : intervalControls.pause();\n  };\n  if (interval > 0) {\n    intervalControls = useIntervalFn(\n      vibrate,\n      interval,\n      {\n        immediate: false,\n        immediateCallback: false\n      }\n    );\n  }\n  return {\n    isSupported,\n    pattern,\n    intervalControls,\n    vibrate,\n    stop\n  };\n}\n\nfunction useVirtualList(list, options) {\n  const { containerStyle, wrapperProps, scrollTo, calculateRange, currentList, containerRef } = \"itemHeight\" in options ? useVerticalVirtualList(options, list) : useHorizontalVirtualList(options, list);\n  return {\n    list: currentList,\n    scrollTo,\n    containerProps: {\n      ref: containerRef,\n      onScroll: () => {\n        calculateRange();\n      },\n      style: containerStyle\n    },\n    wrapperProps\n  };\n}\nfunction useVirtualListResources(list) {\n  const containerRef = ref(null);\n  const size = useElementSize(containerRef);\n  const currentList = ref([]);\n  const source = shallowRef(list);\n  const state = ref({ start: 0, end: 10 });\n  return { state, source, currentList, size, containerRef };\n}\nfunction createGetViewCapacity(state, source, itemSize) {\n  return (containerSize) => {\n    if (typeof itemSize === \"number\")\n      return Math.ceil(containerSize / itemSize);\n    const { start = 0 } = state.value;\n    let sum = 0;\n    let capacity = 0;\n    for (let i = start; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      capacity = i;\n      if (sum > containerSize)\n        break;\n    }\n    return capacity - start;\n  };\n}\nfunction createGetOffset(source, itemSize) {\n  return (scrollDirection) => {\n    if (typeof itemSize === \"number\")\n      return Math.floor(scrollDirection / itemSize) + 1;\n    let sum = 0;\n    let offset = 0;\n    for (let i = 0; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      if (sum >= scrollDirection) {\n        offset = i;\n        break;\n      }\n    }\n    return offset + 1;\n  };\n}\nfunction createCalculateRange(type, overscan, getOffset, getViewCapacity, { containerRef, state, currentList, source }) {\n  return () => {\n    const element = containerRef.value;\n    if (element) {\n      const offset = getOffset(type === \"vertical\" ? element.scrollTop : element.scrollLeft);\n      const viewCapacity = getViewCapacity(type === \"vertical\" ? element.clientHeight : element.clientWidth);\n      const from = offset - overscan;\n      const to = offset + viewCapacity + overscan;\n      state.value = {\n        start: from < 0 ? 0 : from,\n        end: to > source.value.length ? source.value.length : to\n      };\n      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({\n        data: ele,\n        index: index + state.value.start\n      }));\n    }\n  };\n}\nfunction createGetDistance(itemSize, source) {\n  return (index) => {\n    if (typeof itemSize === \"number\") {\n      const size2 = index * itemSize;\n      return size2;\n    }\n    const size = source.value.slice(0, index).reduce((sum, _, i) => sum + itemSize(i), 0);\n    return size;\n  };\n}\nfunction useWatchForSizes(size, list, containerRef, calculateRange) {\n  watch([size.width, size.height, list, containerRef], () => {\n    calculateRange();\n  });\n}\nfunction createComputedTotalSize(itemSize, source) {\n  return computed(() => {\n    if (typeof itemSize === \"number\")\n      return source.value.length * itemSize;\n    return source.value.reduce((sum, _, index) => sum + itemSize(index), 0);\n  });\n}\nconst scrollToDictionaryForElementScrollKey = {\n  horizontal: \"scrollLeft\",\n  vertical: \"scrollTop\"\n};\nfunction createScrollTo(type, calculateRange, getDistance, containerRef) {\n  return (index) => {\n    if (containerRef.value) {\n      containerRef.value[scrollToDictionaryForElementScrollKey[type]] = getDistance(index);\n      calculateRange();\n    }\n  };\n}\nfunction useHorizontalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowX: \"auto\" };\n  const { itemWidth, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemWidth);\n  const getOffset = createGetOffset(source, itemWidth);\n  const calculateRange = createCalculateRange(\"horizontal\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceLeft = createGetDistance(itemWidth, source);\n  const offsetLeft = computed(() => getDistanceLeft(state.value.start));\n  const totalWidth = createComputedTotalSize(itemWidth, source);\n  useWatchForSizes(size, list, containerRef, calculateRange);\n  const scrollTo = createScrollTo(\"horizontal\", calculateRange, getDistanceLeft, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        height: \"100%\",\n        width: `${totalWidth.value - offsetLeft.value}px`,\n        marginLeft: `${offsetLeft.value}px`,\n        display: \"flex\"\n      }\n    };\n  });\n  return {\n    scrollTo,\n    calculateRange,\n    wrapperProps,\n    containerStyle,\n    currentList,\n    containerRef\n  };\n}\nfunction useVerticalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowY: \"auto\" };\n  const { itemHeight, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemHeight);\n  const getOffset = createGetOffset(source, itemHeight);\n  const calculateRange = createCalculateRange(\"vertical\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceTop = createGetDistance(itemHeight, source);\n  const offsetTop = computed(() => getDistanceTop(state.value.start));\n  const totalHeight = createComputedTotalSize(itemHeight, source);\n  useWatchForSizes(size, list, containerRef, calculateRange);\n  const scrollTo = createScrollTo(\"vertical\", calculateRange, getDistanceTop, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        width: \"100%\",\n        height: `${totalHeight.value - offsetTop.value}px`,\n        marginTop: `${offsetTop.value}px`\n      }\n    };\n  });\n  return {\n    calculateRange,\n    scrollTo,\n    containerStyle,\n    wrapperProps,\n    currentList,\n    containerRef\n  };\n}\n\nfunction useWakeLock(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    document = defaultDocument\n  } = options;\n  let wakeLock;\n  const isSupported = useSupported(() => navigator && \"wakeLock\" in navigator);\n  const isActive = ref(false);\n  async function onVisibilityChange() {\n    if (!isSupported.value || !wakeLock)\n      return;\n    if (document && document.visibilityState === \"visible\")\n      wakeLock = await navigator.wakeLock.request(\"screen\");\n    isActive.value = !wakeLock.released;\n  }\n  if (document)\n    useEventListener(document, \"visibilitychange\", onVisibilityChange, { passive: true });\n  async function request(type) {\n    if (!isSupported.value)\n      return;\n    wakeLock = await navigator.wakeLock.request(type);\n    isActive.value = !wakeLock.released;\n  }\n  async function release() {\n    if (!isSupported.value || !wakeLock)\n      return;\n    await wakeLock.release();\n    isActive.value = !wakeLock.released;\n    wakeLock = null;\n  }\n  return {\n    isSupported,\n    isActive,\n    request,\n    release\n  };\n}\n\nfunction useWebNotification(options = {}) {\n  const {\n    window = defaultWindow,\n    requestPermissions: _requestForPermissions = true\n  } = options;\n  const defaultWebNotificationOptions = options;\n  const isSupported = useSupported(() => {\n    if (!window || !(\"Notification\" in window))\n      return false;\n    try {\n      new Notification(\"\");\n    } catch (e) {\n      return false;\n    }\n    return true;\n  });\n  const permissionGranted = ref(isSupported.value && \"permission\" in Notification && Notification.permission === \"granted\");\n  const notification = ref(null);\n  const ensurePermissions = async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionGranted.value && Notification.permission !== \"denied\") {\n      const result = await Notification.requestPermission();\n      if (result === \"granted\")\n        permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  };\n  const { on: onClick, trigger: clickTrigger } = createEventHook();\n  const { on: onShow, trigger: showTrigger } = createEventHook();\n  const { on: onError, trigger: errorTrigger } = createEventHook();\n  const { on: onClose, trigger: closeTrigger } = createEventHook();\n  const show = async (overrides) => {\n    if (!isSupported.value || !permissionGranted.value)\n      return;\n    const options2 = Object.assign({}, defaultWebNotificationOptions, overrides);\n    notification.value = new Notification(options2.title || \"\", options2);\n    notification.value.onclick = clickTrigger;\n    notification.value.onshow = showTrigger;\n    notification.value.onerror = errorTrigger;\n    notification.value.onclose = closeTrigger;\n    return notification.value;\n  };\n  const close = () => {\n    if (notification.value)\n      notification.value.close();\n    notification.value = null;\n  };\n  if (_requestForPermissions)\n    tryOnMounted(ensurePermissions);\n  tryOnScopeDispose(close);\n  if (isSupported.value && window) {\n    const document = window.document;\n    useEventListener(document, \"visibilitychange\", (e) => {\n      e.preventDefault();\n      if (document.visibilityState === \"visible\") {\n        close();\n      }\n    });\n  }\n  return {\n    isSupported,\n    notification,\n    ensurePermissions,\n    permissionGranted,\n    show,\n    close,\n    onClick,\n    onShow,\n    onError,\n    onClose\n  };\n}\n\nconst DEFAULT_PING_MESSAGE = \"ping\";\nfunction resolveNestedOptions(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useWebSocket(url, options = {}) {\n  const {\n    onConnected,\n    onDisconnected,\n    onError,\n    onMessage,\n    immediate = true,\n    autoClose = true,\n    protocols = []\n  } = options;\n  const data = ref(null);\n  const status = ref(\"CLOSED\");\n  const wsRef = ref();\n  const urlRef = toRef(url);\n  let heartbeatPause;\n  let heartbeatResume;\n  let explicitlyClosed = false;\n  let retried = 0;\n  let bufferedData = [];\n  let pongTimeoutWait;\n  const _sendBuffer = () => {\n    if (bufferedData.length && wsRef.value && status.value === \"OPEN\") {\n      for (const buffer of bufferedData)\n        wsRef.value.send(buffer);\n      bufferedData = [];\n    }\n  };\n  const resetHeartbeat = () => {\n    clearTimeout(pongTimeoutWait);\n    pongTimeoutWait = void 0;\n  };\n  const close = (code = 1e3, reason) => {\n    if (!isClient || !wsRef.value)\n      return;\n    explicitlyClosed = true;\n    resetHeartbeat();\n    heartbeatPause == null ? void 0 : heartbeatPause();\n    wsRef.value.close(code, reason);\n    wsRef.value = void 0;\n  };\n  const send = (data2, useBuffer = true) => {\n    if (!wsRef.value || status.value !== \"OPEN\") {\n      if (useBuffer)\n        bufferedData.push(data2);\n      return false;\n    }\n    _sendBuffer();\n    wsRef.value.send(data2);\n    return true;\n  };\n  const _init = () => {\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\n      return;\n    const ws = new WebSocket(urlRef.value, protocols);\n    wsRef.value = ws;\n    status.value = \"CONNECTING\";\n    ws.onopen = () => {\n      status.value = \"OPEN\";\n      onConnected == null ? void 0 : onConnected(ws);\n      heartbeatResume == null ? void 0 : heartbeatResume();\n      _sendBuffer();\n    };\n    ws.onclose = (ev) => {\n      status.value = \"CLOSED\";\n      onDisconnected == null ? void 0 : onDisconnected(ws, ev);\n      if (!explicitlyClosed && options.autoReconnect) {\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions(options.autoReconnect);\n        retried += 1;\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\n          setTimeout(_init, delay);\n        else if (typeof retries === \"function\" && retries())\n          setTimeout(_init, delay);\n        else\n          onFailed == null ? void 0 : onFailed();\n      }\n    };\n    ws.onerror = (e) => {\n      onError == null ? void 0 : onError(ws, e);\n    };\n    ws.onmessage = (e) => {\n      if (options.heartbeat) {\n        resetHeartbeat();\n        const {\n          message = DEFAULT_PING_MESSAGE\n        } = resolveNestedOptions(options.heartbeat);\n        if (e.data === message)\n          return;\n      }\n      data.value = e.data;\n      onMessage == null ? void 0 : onMessage(ws, e);\n    };\n  };\n  if (options.heartbeat) {\n    const {\n      message = DEFAULT_PING_MESSAGE,\n      interval = 1e3,\n      pongTimeout = 1e3\n    } = resolveNestedOptions(options.heartbeat);\n    const { pause, resume } = useIntervalFn(\n      () => {\n        send(message, false);\n        if (pongTimeoutWait != null)\n          return;\n        pongTimeoutWait = setTimeout(() => {\n          close();\n          explicitlyClosed = false;\n        }, pongTimeout);\n      },\n      interval,\n      { immediate: false }\n    );\n    heartbeatPause = pause;\n    heartbeatResume = resume;\n  }\n  if (autoClose) {\n    if (isClient)\n      useEventListener(\"beforeunload\", () => close());\n    tryOnScopeDispose(close);\n  }\n  const open = () => {\n    if (!isClient && !isWorker)\n      return;\n    close();\n    explicitlyClosed = false;\n    retried = 0;\n    _init();\n  };\n  if (immediate)\n    open();\n  watch(urlRef, open);\n  return {\n    data,\n    status,\n    close,\n    send,\n    open,\n    ws: wsRef\n  };\n}\n\nfunction useWebWorker(arg0, workerOptions, options) {\n  const {\n    window = defaultWindow\n  } = options != null ? options : {};\n  const data = ref(null);\n  const worker = shallowRef();\n  const post = (...args) => {\n    if (!worker.value)\n      return;\n    worker.value.postMessage(...args);\n  };\n  const terminate = function terminate2() {\n    if (!worker.value)\n      return;\n    worker.value.terminate();\n  };\n  if (window) {\n    if (typeof arg0 === \"string\")\n      worker.value = new Worker(arg0, workerOptions);\n    else if (typeof arg0 === \"function\")\n      worker.value = arg0();\n    else\n      worker.value = arg0;\n    worker.value.onmessage = (e) => {\n      data.value = e.data;\n    };\n    tryOnScopeDispose(() => {\n      if (worker.value)\n        worker.value.terminate();\n    });\n  }\n  return {\n    data,\n    post,\n    terminate,\n    worker\n  };\n}\n\nfunction jobRunner(userFunc) {\n  return (e) => {\n    const userFuncArgs = e.data[0];\n    return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {\n      postMessage([\"SUCCESS\", result]);\n    }).catch((error) => {\n      postMessage([\"ERROR\", error]);\n    });\n  };\n}\n\nfunction depsParser(deps, localDeps) {\n  if (deps.length === 0 && localDeps.length === 0)\n    return \"\";\n  const depsString = deps.map((dep) => `'${dep}'`).toString();\n  const depsFunctionString = localDeps.filter((dep) => typeof dep === \"function\").map((fn) => {\n    const str = fn.toString();\n    if (str.trim().startsWith(\"function\")) {\n      return str;\n    } else {\n      const name = fn.name;\n      return `const ${name} = ${str}`;\n    }\n  }).join(\";\");\n  const importString = `importScripts(${depsString});`;\n  return `${depsString.trim() === \"\" ? \"\" : importString} ${depsFunctionString}`;\n}\n\nfunction createWorkerBlobUrl(fn, deps, localDeps) {\n  const blobCode = `${depsParser(deps, localDeps)}; onmessage=(${jobRunner})(${fn})`;\n  const blob = new Blob([blobCode], { type: \"text/javascript\" });\n  const url = URL.createObjectURL(blob);\n  return url;\n}\n\nfunction useWebWorkerFn(fn, options = {}) {\n  const {\n    dependencies = [],\n    localDependencies = [],\n    timeout,\n    window = defaultWindow\n  } = options;\n  const worker = ref();\n  const workerStatus = ref(\"PENDING\");\n  const promise = ref({});\n  const timeoutId = ref();\n  const workerTerminate = (status = \"PENDING\") => {\n    if (worker.value && worker.value._url && window) {\n      worker.value.terminate();\n      URL.revokeObjectURL(worker.value._url);\n      promise.value = {};\n      worker.value = void 0;\n      window.clearTimeout(timeoutId.value);\n      workerStatus.value = status;\n    }\n  };\n  workerTerminate();\n  tryOnScopeDispose(workerTerminate);\n  const generateWorker = () => {\n    const blobUrl = createWorkerBlobUrl(fn, dependencies, localDependencies);\n    const newWorker = new Worker(blobUrl);\n    newWorker._url = blobUrl;\n    newWorker.onmessage = (e) => {\n      const { resolve = () => {\n      }, reject = () => {\n      } } = promise.value;\n      const [status, result] = e.data;\n      switch (status) {\n        case \"SUCCESS\":\n          resolve(result);\n          workerTerminate(status);\n          break;\n        default:\n          reject(result);\n          workerTerminate(\"ERROR\");\n          break;\n      }\n    };\n    newWorker.onerror = (e) => {\n      const { reject = () => {\n      } } = promise.value;\n      e.preventDefault();\n      reject(e);\n      workerTerminate(\"ERROR\");\n    };\n    if (timeout) {\n      timeoutId.value = setTimeout(\n        () => workerTerminate(\"TIMEOUT_EXPIRED\"),\n        timeout\n      );\n    }\n    return newWorker;\n  };\n  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {\n    promise.value = {\n      resolve,\n      reject\n    };\n    worker.value && worker.value.postMessage([[...fnArgs]]);\n    workerStatus.value = \"RUNNING\";\n  });\n  const workerFn = (...fnArgs) => {\n    if (workerStatus.value === \"RUNNING\") {\n      console.error(\n        \"[useWebWorkerFn] You can only run one instance of the worker at a time.\"\n      );\n      return Promise.reject();\n    }\n    worker.value = generateWorker();\n    return callWorker(...fnArgs);\n  };\n  return {\n    workerFn,\n    workerStatus,\n    workerTerminate\n  };\n}\n\nfunction useWindowFocus(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return ref(false);\n  const focused = ref(window.document.hasFocus());\n  useEventListener(window, \"blur\", () => {\n    focused.value = false;\n  });\n  useEventListener(window, \"focus\", () => {\n    focused.value = true;\n  });\n  return focused;\n}\n\nfunction useWindowScroll(options = {}) {\n  const { window = defaultWindow, behavior = \"auto\" } = options;\n  if (!window) {\n    return {\n      x: ref(0),\n      y: ref(0)\n    };\n  }\n  const internalX = ref(window.scrollX);\n  const internalY = ref(window.scrollY);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo({ left: x2, behavior });\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo({ top: y2, behavior });\n    }\n  });\n  useEventListener(\n    window,\n    \"scroll\",\n    () => {\n      internalX.value = window.scrollX;\n      internalY.value = window.scrollY;\n    },\n    {\n      capture: false,\n      passive: true\n    }\n  );\n  return { x, y };\n}\n\nfunction useWindowSize(options = {}) {\n  const {\n    window = defaultWindow,\n    initialWidth = Number.POSITIVE_INFINITY,\n    initialHeight = Number.POSITIVE_INFINITY,\n    listenOrientation = true,\n    includeScrollbar = true\n  } = options;\n  const width = ref(initialWidth);\n  const height = ref(initialHeight);\n  const update = () => {\n    if (window) {\n      if (includeScrollbar) {\n        width.value = window.innerWidth;\n        height.value = window.innerHeight;\n      } else {\n        width.value = window.document.documentElement.clientWidth;\n        height.value = window.document.documentElement.clientHeight;\n      }\n    }\n  };\n  update();\n  tryOnMounted(update);\n  useEventListener(\"resize\", update, { passive: true });\n  if (listenOrientation) {\n    const matches = useMediaQuery(\"(orientation: portrait)\");\n    watch(matches, () => update());\n  }\n  return { width, height };\n}\n\nexport { DefaultMagicKeysAliasMap, StorageSerializers, TransitionPresets, computedAsync as asyncComputed, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsMasterCss, breakpointsPrimeFlex, breakpointsQuasar, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, breakpointsVuetifyV2, breakpointsVuetifyV3, cloneFnJSON, computedAsync, computedInject, createFetch, createReusableTemplate, createTemplatePromise, createUnrefFn, customStorageEventName, defaultDocument, defaultLocation, defaultNavigator, defaultWindow, executeTransition, formatTimeAgo, getSSRHandler, mapGamepadToXbox360Controller, onClickOutside, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onLongPress, onStartTyping, setSSRHandler, templateRef, unrefElement, useActiveElement, useAnimate, useAsyncQueue, useAsyncState, useBase64, useBattery, useBluetooth, useBreakpoints, useBroadcastChannel, useBrowserLocation, useCached, useClipboard, useClipboardItems, useCloned, useColorMode, useConfirmDialog, useCssVar, useCurrentElement, useCycleList, useDark, useDebouncedRefHistory, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDisplayMedia, useDocumentVisibility, useDraggable, useDropZone, useElementBounding, useElementByPoint, useElementHover, useElementSize, useElementVisibility, useEventBus, useEventListener, useEventSource, useEyeDropper, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useFullscreen, useGamepad, useGeolocation, useIdle, useImage, useInfiniteScroll, useIntersectionObserver, useKeyModifier, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNavigatorLanguage, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, useParallax, useParentElement, usePerformanceObserver, usePermission, usePointer, usePointerLock, usePointerSwipe, usePreferredColorScheme, usePreferredContrast, usePreferredDark, usePreferredLanguages, usePreferredReducedMotion, usePrevious, useRafFn, useRefHistory, useResizeObserver, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSorted, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorage, useStorageAsync, useStyleTag, useSupported, useSwipe, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottledRefHistory, useTimeAgo, useTimeoutPoll, useTimestamp, useTitle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useVirtualList, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowFocus, useWindowScroll, useWindowSize };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { __rest } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = Object.assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var { from = 0.0, to = 1.0, restSpeed = 2, restDelta } = _a, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","const progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","const mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","function hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { hsla, rgba, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nconst notAnimatable = (color) => `'${color}' is not an animatable color. Use the equivalent color code instead.`;\nconst mixColor = (from, to) => {\n    let fromColorType = getColorType(from);\n    let toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    let fromColor = fromColorType.parse(from);\n    let toColor = toColorType.parse(to);\n    if (fromColorType === hsla) {\n        fromColor = hslaToRgba(fromColor);\n        fromColorType = rgba;\n    }\n    if (toColorType === hsla) {\n        toColor = hslaToRgba(toColor);\n        toColorType = rgba;\n    }\n    const blended = Object.assign({}, fromColor);\n    return (v) => {\n        for (const key in blended) {\n            if (key !== \"alpha\") {\n                blended[key] = mixLinearColor(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nconst isNum = (v) => typeof v === 'number';\n\nexport { isNum, zeroPoint };\n","const combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { isNum } from './inc.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = Object.assign(Object.assign({}, origin), target);\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numRGB = 0;\n    let numHSL = 0;\n    for (let i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed, numNumbers, numRGB, numHSL };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { progress } from './progress.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { invariant } from 'hey-listen';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate([from, to], [mixer]) {\n    return (v) => mixer(progress(from, to, v));\n}\nfunction slowInterpolate(input, mixers) {\n    const inputLength = input.length;\n    const lastInputIndex = inputLength - 1;\n    return (v) => {\n        let mixerIndex = 0;\n        let foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            let i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const reverseEasing = easing => p => 1 - easing(1 - p);\nconst mirrorEasing = easing => p => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\nconst createExpoIn = (power) => p => Math.pow(p, power);\nconst createBackIn = (power) => p => p * p * ((power + 1) * p - power);\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return p => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\n\nexport { createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing };\n","import { createExpoIn, reverseEasing, mirrorEasing, createBackIn, createAnticipate } from './utils.mjs';\n\nconst DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nconst BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nconst BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nconst BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nconst linear = p => p;\nconst easeIn = createExpoIn(2);\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\nconst circIn = p => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\nconst backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\nconst anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nconst ca = 4356.0 / 361.0;\nconst cb = 35442.0 / 1805.0;\nconst cc = 16061.0 / 1805.0;\nconst bounceOut = (p) => {\n    if (p === 1 || p === 0)\n        return p;\n    const p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD\n        ? 7.5625 * p2\n        : p < BOUNCE_SECOND_THRESHOLD\n            ? 9.075 * p2 - 9.9 * p + 3.4\n            : p < BOUNCE_THIRD_THRESHOLD\n                ? ca * p2 - cb * p + cc\n                : 10.8 * p * p - 20.52 * p + 10.72;\n};\nconst bounceIn = reverseEasing(bounceOut);\nconst bounceInOut = (p) => p < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\n    : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n\nexport { anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear };\n","import { interpolate } from '../../utils/interpolate.mjs';\nimport { easeInOut } from '../../easing/index.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    const state = { done: false, value: from };\n    const values = Array.isArray(to) ? to : [from, to];\n    const times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","import { spring } from '../generators/spring.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { decay } from '../generators/decay.mjs';\n\nconst types = { keyframes, spring, decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    }\n    else if (types[config.type]) {\n        return types[config.type];\n    }\n    const keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") ||\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\n        return keyframes;\n    }\n    else if (keys.has(\"dampingRatio\") ||\n        keys.has(\"stiffness\") ||\n        keys.has(\"mass\") ||\n        keys.has(\"damping\") ||\n        keys.has(\"restSpeed\") ||\n        keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nexport { detectAnimationFromOptions };\n","function loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nexport { hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","import { __rest } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.mjs';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\n\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options.duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n","function velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete,\n            onStop }));\n    }\n    function startSpring(options) {\n        startAnimation(Object.assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { linear } from './index.mjs';\n\nconst a = (a1, a2) => 1.0 - 3.0 * a2 + 3.0 * a1;\nconst b = (a1, a2) => 3.0 * a2 - 6.0 * a1;\nconst c = (a1) => 3.0 * a1;\nconst calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\nconst getSlope = (t, a1, a2) => 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nconst newtonIterations = 8;\nconst newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (let i = 0; i < newtonIterations; ++i) {\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    const sampleValues = new Float32Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import defu from 'defu';\nimport { ref, unref, watch, computed, reactive, toRaw, inject, onUpdated, nextTick, defineComponent, useSlots, h, Fragment, isRef } from 'vue';\nimport { isObject as isObject$1, useEventListener, useIntersectionObserver, unrefElement, useMediaQuery } from '@vueuse/core';\nimport { tryOnUnmounted } from '@vueuse/shared';\nimport sync, { getFrameData } from 'framesync';\nimport { velocityPerSecond, inertia, animate, cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\nimport { number, color, px, degrees, scale, alpha, progressPercentage, filter, complex } from 'style-value-types';\n\nconst motionState = {};\n\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass SubscriptionManager {\n  constructor() {\n    __publicField$1(this, \"subscriptions\", /* @__PURE__ */ new Set());\n  }\n  add(handler) {\n    this.subscriptions.add(handler);\n    return () => this.subscriptions.delete(handler);\n  }\n  notify(a, b, c) {\n    if (!this.subscriptions.size)\n      return;\n    for (const handler of this.subscriptions)\n      handler(a, b, c);\n  }\n  clear() {\n    this.subscriptions.clear();\n  }\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nfunction isFloat(value) {\n  return !Number.isNaN(Number.parseFloat(value));\n}\nclass MotionValue {\n  /**\n   * init - The initiating value\n   * config - Optional configuration options\n   */\n  constructor(init) {\n    /**\n     * The current state of the `MotionValue`.\n     */\n    __publicField(this, \"current\");\n    /**\n     * The previous state of the `MotionValue`.\n     */\n    __publicField(this, \"prev\");\n    /**\n     * Duration, in milliseconds, since last updating frame.\n     */\n    __publicField(this, \"timeDelta\", 0);\n    /**\n     * Timestamp of the last time this `MotionValue` was updated.\n     */\n    __publicField(this, \"lastUpdated\", 0);\n    /**\n     * Functions to notify when the `MotionValue` updates.\n     */\n    __publicField(this, \"updateSubscribers\", new SubscriptionManager());\n    /**\n     * A reference to the currently-controlling Popmotion animation\n     */\n    __publicField(this, \"stopAnimation\");\n    /**\n     * Tracks whether this value can output a velocity.\n     */\n    __publicField(this, \"canTrackVelocity\", false);\n    /**\n     * Update and notify `MotionValue` subscribers.\n     *\n     * @param v\n     * @param render\n     */\n    __publicField(this, \"updateAndNotify\", (v) => {\n      this.prev = this.current;\n      this.current = v;\n      const { delta, timestamp } = getFrameData();\n      if (this.lastUpdated !== timestamp) {\n        this.timeDelta = delta;\n        this.lastUpdated = timestamp;\n      }\n      sync.postRender(this.scheduleVelocityCheck);\n      this.updateSubscribers.notify(this.current);\n    });\n    /**\n     * Schedule a velocity check for the next frame.\n     */\n    __publicField(this, \"scheduleVelocityCheck\", () => sync.postRender(this.velocityCheck));\n    /**\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\n     * This ensures velocity calculations return `0`.\n     */\n    __publicField(this, \"velocityCheck\", ({ timestamp }) => {\n      if (!this.canTrackVelocity)\n        this.canTrackVelocity = isFloat(this.current);\n      if (timestamp !== this.lastUpdated)\n        this.prev = this.current;\n    });\n    this.prev = this.current = init;\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` is updated.\n   *\n   * It returns a function that, when called, will cancel the subscription.\n   */\n  onChange(subscription) {\n    return this.updateSubscribers.add(subscription);\n  }\n  clearListeners() {\n    this.updateSubscribers.clear();\n  }\n  /**\n   * Sets the state of the `MotionValue`.\n   *\n   * @param v\n   * @param render\n   */\n  set(v) {\n    this.updateAndNotify(v);\n  }\n  /**\n   * Returns the latest state of `MotionValue`\n   *\n   * @returns - The latest state of `MotionValue`\n   */\n  get() {\n    return this.current;\n  }\n  /**\n   * Get previous value.\n   *\n   * @returns - The previous latest state of `MotionValue`\n   */\n  getPrevious() {\n    return this.prev;\n  }\n  /**\n   * Returns the latest velocity of `MotionValue`\n   *\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n   */\n  getVelocity() {\n    return this.canTrackVelocity ? velocityPerSecond(Number.parseFloat(this.current) - Number.parseFloat(this.prev), this.timeDelta) : 0;\n  }\n  /**\n   * Registers a new animation to control this `MotionValue`. Only one\n   * animation can drive a `MotionValue` at one time.\n   */\n  start(animation) {\n    this.stop();\n    return new Promise((resolve) => {\n      const { stop } = animation(resolve);\n      this.stopAnimation = stop;\n    }).then(() => this.clearAnimation());\n  }\n  /**\n   * Stop the currently active animation.\n   */\n  stop() {\n    if (this.stopAnimation)\n      this.stopAnimation();\n    this.clearAnimation();\n  }\n  /**\n   * Returns `true` if this value is currently animating.\n   */\n  isAnimating() {\n    return !!this.stopAnimation;\n  }\n  /**\n   * Clear the current animation reference.\n   */\n  clearAnimation() {\n    this.stopAnimation = null;\n  }\n  /**\n   * Destroy and clean up subscribers to this `MotionValue`.\n   */\n  destroy() {\n    this.updateSubscribers.clear();\n    this.stop();\n  }\n}\nfunction getMotionValue(init) {\n  return new MotionValue(init);\n}\n\nconst { isArray } = Array;\nfunction useMotionValues() {\n  const motionValues = ref({});\n  const stop = (keys) => {\n    const destroyKey = (key) => {\n      if (!motionValues.value[key])\n        return;\n      motionValues.value[key].stop();\n      motionValues.value[key].destroy();\n      delete motionValues.value[key];\n    };\n    if (keys) {\n      if (isArray(keys)) {\n        keys.forEach(destroyKey);\n      } else {\n        destroyKey(keys);\n      }\n    } else {\n      Object.keys(motionValues.value).forEach(destroyKey);\n    }\n  };\n  const get = (key, from, target) => {\n    if (motionValues.value[key])\n      return motionValues.value[key];\n    const motionValue = getMotionValue(from);\n    motionValue.onChange((v) => target[key] = v);\n    motionValues.value[key] = motionValue;\n    return motionValue;\n  };\n  tryOnUnmounted(stop);\n  return {\n    motionValues,\n    get,\n    stop\n  };\n}\n\nfunction isKeyframesTarget(v) {\n  return Array.isArray(v);\n}\nfunction underDampedSpring() {\n  return {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10\n  };\n}\nfunction criticallyDampedSpring(to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restDelta: 0.01,\n    restSpeed: 10\n  };\n}\nfunction overDampedSpring(to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 100 : 30,\n    restDelta: 0.01,\n    restSpeed: 10\n  };\n}\nfunction linearTween() {\n  return {\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 300\n  };\n}\nfunction keyframes(values) {\n  return {\n    type: \"keyframes\",\n    duration: 800,\n    values\n  };\n}\nconst defaultTransitions = {\n  default: overDampedSpring,\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: criticallyDampedSpring,\n  scaleY: criticallyDampedSpring,\n  scale: criticallyDampedSpring,\n  backgroundColor: linearTween,\n  color: linearTween,\n  opacity: linearTween\n};\nfunction getDefaultTransition(valueKey, to) {\n  let transitionFactory;\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\n  }\n  return { to, ...transitionFactory(to) };\n}\n\nconst int = {\n  ...number,\n  transform: Math.round\n};\nconst valueTypes = {\n  // Color props\n  color,\n  backgroundColor: color,\n  outlineColor: color,\n  fill: color,\n  stroke: color,\n  // Border props\n  borderColor: color,\n  borderTopColor: color,\n  borderRightColor: color,\n  borderBottomColor: color,\n  borderLeftColor: color,\n  borderWidth: px,\n  borderTopWidth: px,\n  borderRightWidth: px,\n  borderBottomWidth: px,\n  borderLeftWidth: px,\n  borderRadius: px,\n  radius: px,\n  borderTopLeftRadius: px,\n  borderTopRightRadius: px,\n  borderBottomRightRadius: px,\n  borderBottomLeftRadius: px,\n  // Positioning props\n  width: px,\n  maxWidth: px,\n  height: px,\n  maxHeight: px,\n  size: px,\n  top: px,\n  right: px,\n  bottom: px,\n  left: px,\n  // Spacing props\n  padding: px,\n  paddingTop: px,\n  paddingRight: px,\n  paddingBottom: px,\n  paddingLeft: px,\n  margin: px,\n  marginTop: px,\n  marginRight: px,\n  marginBottom: px,\n  marginLeft: px,\n  // Transform props\n  rotate: degrees,\n  rotateX: degrees,\n  rotateY: degrees,\n  rotateZ: degrees,\n  scale,\n  scaleX: scale,\n  scaleY: scale,\n  scaleZ: scale,\n  skew: degrees,\n  skewX: degrees,\n  skewY: degrees,\n  distance: px,\n  translateX: px,\n  translateY: px,\n  translateZ: px,\n  x: px,\n  y: px,\n  z: px,\n  perspective: px,\n  transformPerspective: px,\n  opacity: alpha,\n  originX: progressPercentage,\n  originY: progressPercentage,\n  originZ: px,\n  // Misc\n  zIndex: int,\n  filter,\n  WebkitFilter: filter,\n  // SVG\n  fillOpacity: alpha,\n  strokeOpacity: alpha,\n  numOctaves: int\n};\nconst getValueType = (key) => valueTypes[key];\nfunction getValueAsType(value, type) {\n  return type && typeof value === \"number\" && type.transform ? type.transform(value) : value;\n}\nfunction getAnimatableNone(key, value) {\n  let defaultValueType = getValueType(key);\n  if (defaultValueType !== filter)\n    defaultValueType = complex;\n  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;\n}\n\nconst easingLookup = {\n  linear,\n  easeIn,\n  easeInOut,\n  easeOut,\n  circIn,\n  circInOut,\n  circOut,\n  backIn,\n  backInOut,\n  backOut,\n  anticipate,\n  bounceIn,\n  bounceInOut,\n  bounceOut\n};\nfunction easingDefinitionToFunction(definition) {\n  if (Array.isArray(definition)) {\n    const [x1, y1, x2, y2] = definition;\n    return cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    return easingLookup[definition];\n  }\n  return definition;\n}\nfunction isEasingArray(ease) {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n}\nfunction isAnimatable(key, value) {\n  if (key === \"zIndex\")\n    return false;\n  if (typeof value === \"number\" || Array.isArray(value))\n    return true;\n  if (typeof value === \"string\" && complex.test(value) && !value.startsWith(\"url(\")) {\n    return true;\n  }\n  return false;\n}\nfunction hydrateKeyframes(options) {\n  if (Array.isArray(options.to) && options.to[0] === null) {\n    options.to = [...options.to];\n    options.to[0] = options.from;\n  }\n  return options;\n}\nfunction convertTransitionToAnimationOptions({ ease, times, delay, ...transition }) {\n  const options = { ...transition };\n  if (times)\n    options.offset = times;\n  if (ease) {\n    options.ease = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\n  }\n  if (delay)\n    options.elapsed = -delay;\n  return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n  if (Array.isArray(options.to)) {\n    if (!transition.duration)\n      transition.duration = 800;\n  }\n  hydrateKeyframes(options);\n  if (!isTransitionDefined(transition)) {\n    transition = {\n      ...transition,\n      ...getDefaultTransition(key, options.to)\n    };\n  }\n  return {\n    ...options,\n    ...convertTransitionToAnimationOptions(transition)\n  };\n}\nfunction isTransitionDefined({ delay, repeat, repeatType, repeatDelay, from, ...transition }) {\n  return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n  return transition[key] || transition.default || transition;\n}\nfunction getAnimation(key, value, target, transition, onComplete) {\n  const valueTransition = getValueTransition(transition, key);\n  let origin = valueTransition.from === null || valueTransition.from === void 0 ? value.get() : valueTransition.from;\n  const isTargetAnimatable = isAnimatable(key, target);\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\")\n    origin = getAnimatableNone(key, target);\n  const isOriginAnimatable = isAnimatable(key, origin);\n  function start(complete) {\n    const options = {\n      from: origin,\n      to: target,\n      velocity: transition.velocity ? transition.velocity : value.getVelocity(),\n      onUpdate: (v) => value.set(v)\n    };\n    return valueTransition.type === \"inertia\" || valueTransition.type === \"decay\" ? inertia({ ...options, ...valueTransition }) : animate({\n      ...getPopmotionAnimationOptions(valueTransition, options, key),\n      onUpdate: (v) => {\n        options.onUpdate(v);\n        if (valueTransition.onUpdate)\n          valueTransition.onUpdate(v);\n      },\n      onComplete: () => {\n        if (onComplete)\n          onComplete();\n        if (complete)\n          complete();\n      }\n    });\n  }\n  function set(complete) {\n    value.set(target);\n    if (onComplete)\n      onComplete();\n    if (complete)\n      complete();\n    return { stop: () => {\n    } };\n  }\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\n}\n\nfunction useMotionTransitions() {\n  const { motionValues, stop, get } = useMotionValues();\n  const push = (key, value, target, transition = {}, onComplete) => {\n    const from = target[key];\n    const motionValue = get(key, from, target);\n    if (transition && transition.immediate) {\n      motionValue.set(value);\n      return;\n    }\n    const animation = getAnimation(key, motionValue, value, transition, onComplete);\n    motionValue.start(animation);\n  };\n  return { motionValues, stop, push };\n}\n\nfunction useMotionControls(motionProperties, variants = {}, { motionValues, push, stop } = useMotionTransitions()) {\n  const _variants = unref(variants);\n  const isAnimating = ref(false);\n  watch(\n    motionValues,\n    (newVal) => {\n      isAnimating.value = Object.values(newVal).filter((value) => value.isAnimating()).length > 0;\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  const getVariantFromKey = (variant) => {\n    if (!_variants || !_variants[variant])\n      throw new Error(`The variant ${variant} does not exist.`);\n    return _variants[variant];\n  };\n  const apply = (variant) => {\n    if (typeof variant === \"string\")\n      variant = getVariantFromKey(variant);\n    const animations = Object.entries(variant).map(([key, value]) => {\n      if (key === \"transition\")\n        return void 0;\n      return new Promise(\n        (resolve) => (\n          // @ts-expect-error - Fix errors later for typescript 5\n          push(key, value, motionProperties, variant.transition || getDefaultTransition(key, variant[key]), resolve)\n        )\n      );\n    }).filter(Boolean);\n    async function waitForComplete() {\n      await Promise.all(animations);\n      variant.transition?.onComplete?.();\n    }\n    return Promise.all([waitForComplete()]);\n  };\n  const set = (variant) => {\n    const variantData = isObject$1(variant) ? variant : getVariantFromKey(variant);\n    Object.entries(variantData).forEach(([key, value]) => {\n      if (key === \"transition\")\n        return;\n      push(key, value, motionProperties, {\n        immediate: true\n      });\n    });\n  };\n  const leave = async (done) => {\n    let leaveVariant;\n    if (_variants) {\n      if (_variants.leave)\n        leaveVariant = _variants.leave;\n      if (!_variants.leave && _variants.initial)\n        leaveVariant = _variants.initial;\n    }\n    if (!leaveVariant) {\n      done();\n      return;\n    }\n    await apply(leaveVariant);\n    done();\n  };\n  return {\n    isAnimating,\n    apply,\n    set,\n    leave,\n    stop\n  };\n}\n\nconst isBrowser = typeof window !== \"undefined\";\nconst supportsPointerEvents = () => isBrowser && (window.onpointerdown === null || import.meta.env.TEST);\nconst supportsTouchEvents = () => isBrowser && (window.ontouchstart === null || import.meta.env.TEST);\nconst supportsMouseEvents = () => isBrowser && (window.onmousedown === null || import.meta.env.TEST);\n\nfunction registerEventListeners({ target, state, variants, apply }) {\n  const _variants = unref(variants);\n  const hovered = ref(false);\n  const tapped = ref(false);\n  const focused = ref(false);\n  const mutableKeys = computed(() => {\n    let result = [...Object.keys(state.value || {})];\n    if (!_variants)\n      return result;\n    if (_variants.hovered)\n      result = [...result, ...Object.keys(_variants.hovered)];\n    if (_variants.tapped)\n      result = [...result, ...Object.keys(_variants.tapped)];\n    if (_variants.focused)\n      result = [...result, ...Object.keys(_variants.focused)];\n    return result;\n  });\n  const computedProperties = computed(() => {\n    const result = {};\n    Object.assign(result, state.value);\n    if (hovered.value && _variants.hovered)\n      Object.assign(result, _variants.hovered);\n    if (tapped.value && _variants.tapped)\n      Object.assign(result, _variants.tapped);\n    if (focused.value && _variants.focused)\n      Object.assign(result, _variants.focused);\n    for (const key in result) {\n      if (!mutableKeys.value.includes(key))\n        delete result[key];\n    }\n    return result;\n  });\n  if (_variants.hovered) {\n    useEventListener(target, \"mouseenter\", () => hovered.value = true);\n    useEventListener(target, \"mouseleave\", () => {\n      hovered.value = false;\n      tapped.value = false;\n    });\n  }\n  if (_variants.tapped) {\n    if (supportsMouseEvents()) {\n      useEventListener(target, \"mousedown\", () => tapped.value = true);\n      useEventListener(target, \"mouseup\", () => tapped.value = false);\n    }\n    if (supportsPointerEvents()) {\n      useEventListener(target, \"pointerdown\", () => tapped.value = true);\n      useEventListener(target, \"pointerup\", () => tapped.value = false);\n    }\n    if (supportsTouchEvents()) {\n      useEventListener(target, \"touchstart\", () => tapped.value = true);\n      useEventListener(target, \"touchend\", () => tapped.value = false);\n    }\n  }\n  if (_variants.focused) {\n    useEventListener(target, \"focus\", () => focused.value = true);\n    useEventListener(target, \"blur\", () => focused.value = false);\n  }\n  watch([hovered, tapped, focused], () => {\n    apply(computedProperties.value);\n  });\n}\n\nfunction registerLifeCycleHooks({ set, target, variants, variant }) {\n  const _variants = unref(variants);\n  watch(\n    () => target,\n    () => {\n      if (!_variants)\n        return;\n      if (_variants.initial) {\n        set(\"initial\");\n        variant.value = \"initial\";\n      }\n      if (_variants.enter)\n        variant.value = \"enter\";\n    },\n    {\n      immediate: true,\n      flush: \"pre\"\n    }\n  );\n}\n\nfunction registerVariantsSync({ state, apply }) {\n  watch(\n    state,\n    (newVal) => {\n      if (newVal)\n        apply(newVal);\n    },\n    {\n      immediate: true\n    }\n  );\n}\n\nfunction registerVisibilityHooks({ target, variants, variant }) {\n  const _variants = unref(variants);\n  if (_variants && (_variants.visible || _variants.visibleOnce)) {\n    useIntersectionObserver(target, ([{ isIntersecting }]) => {\n      if (_variants.visible) {\n        if (isIntersecting)\n          variant.value = \"visible\";\n        else\n          variant.value = \"initial\";\n      } else if (_variants.visibleOnce) {\n        if (isIntersecting && variant.value !== \"visibleOnce\")\n          variant.value = \"visibleOnce\";\n        else if (!variant.value)\n          variant.value = \"initial\";\n      }\n    });\n  }\n}\n\nfunction useMotionFeatures(instance, options = {\n  syncVariants: true,\n  lifeCycleHooks: true,\n  visibilityHooks: true,\n  eventListeners: true\n}) {\n  if (options.lifeCycleHooks)\n    registerLifeCycleHooks(instance);\n  if (options.syncVariants)\n    registerVariantsSync(instance);\n  if (options.visibilityHooks)\n    registerVisibilityHooks(instance);\n  if (options.eventListeners)\n    registerEventListeners(instance);\n}\n\nfunction reactiveStyle(props = {}) {\n  const state = reactive({\n    ...props\n  });\n  const style = ref({});\n  watch(\n    state,\n    () => {\n      const result = {};\n      for (const [key, value] of Object.entries(state)) {\n        const valueType = getValueType(key);\n        const valueAsType = getValueAsType(value, valueType);\n        result[key] = valueAsType;\n      }\n      style.value = result;\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  return {\n    state,\n    style\n  };\n}\n\nfunction usePermissiveTarget(target, onTarget) {\n  watch(\n    () => unrefElement(target),\n    (el) => {\n      if (!el)\n        return;\n      onTarget(el);\n    },\n    {\n      immediate: true\n    }\n  );\n}\n\nconst translateAlias = {\n  x: \"translateX\",\n  y: \"translateY\",\n  z: \"translateZ\"\n};\nfunction reactiveTransform(props = {}, enableHardwareAcceleration = true) {\n  const state = reactive({ ...props });\n  const transform = ref(\"\");\n  watch(\n    state,\n    (newVal) => {\n      let result = \"\";\n      let hasHardwareAcceleration = false;\n      if (enableHardwareAcceleration && (newVal.x || newVal.y || newVal.z)) {\n        const str = [newVal.x || 0, newVal.y || 0, newVal.z || 0].map((val) => getValueAsType(val, px)).join(\",\");\n        result += `translate3d(${str}) `;\n        hasHardwareAcceleration = true;\n      }\n      for (const [key, value] of Object.entries(newVal)) {\n        if (enableHardwareAcceleration && (key === \"x\" || key === \"y\" || key === \"z\"))\n          continue;\n        const valueType = getValueType(key);\n        const valueAsType = getValueAsType(value, valueType);\n        result += `${translateAlias[key] || key}(${valueAsType}) `;\n      }\n      if (enableHardwareAcceleration && !hasHardwareAcceleration)\n        result += \"translateZ(0px) \";\n      transform.value = result.trim();\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  return {\n    state,\n    transform\n  };\n}\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst order = [\"perspective\", \"translate\", \"scale\", \"rotate\", \"skew\"];\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach((operationKey) => {\n  transformAxes.forEach((axesKey) => {\n    const key = operationKey + axesKey;\n    transformProps.push(key);\n  });\n});\nconst transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n  return transformPropSet.has(key);\n}\nconst transformOriginProps = /* @__PURE__ */ new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n}\nfunction splitValues(variant) {\n  const transform = {};\n  const style = {};\n  Object.entries(variant).forEach(([key, value]) => {\n    if (isTransformProp(key) || isTransformOriginProp(key))\n      transform[key] = value;\n    else\n      style[key] = value;\n  });\n  return { transform, style };\n}\nfunction variantToStyle(variant) {\n  const { transform: _transform, style: _style } = splitValues(variant);\n  const { transform } = reactiveTransform(_transform);\n  const { style } = reactiveStyle(_style);\n  if (transform.value)\n    style.value.transform = transform.value;\n  return style.value;\n}\n\nfunction useElementStyle(target, onInit) {\n  let _cache;\n  let _target;\n  const { state, style } = reactiveStyle();\n  usePermissiveTarget(target, (el) => {\n    _target = el;\n    for (const key of Object.keys(valueTypes)) {\n      if (el.style[key] === null || el.style[key] === \"\" || isTransformProp(key) || isTransformOriginProp(key))\n        continue;\n      state[key] = el.style[key];\n    }\n    if (_cache) {\n      Object.entries(_cache).forEach(([key, value]) => el.style[key] = value);\n    }\n    if (onInit)\n      onInit(state);\n  });\n  watch(\n    style,\n    (newVal) => {\n      if (!_target) {\n        _cache = newVal;\n        return;\n      }\n      for (const key in newVal)\n        _target.style[key] = newVal[key];\n    },\n    {\n      immediate: true\n    }\n  );\n  return {\n    style: state\n  };\n}\n\nfunction parseTransform(transform) {\n  const transforms = transform.trim().split(/\\) |\\)/);\n  if (transforms.length === 1)\n    return {};\n  const parseValues = (value) => {\n    if (value.endsWith(\"px\") || value.endsWith(\"deg\"))\n      return Number.parseFloat(value);\n    if (Number.isNaN(Number(value)))\n      return Number(value);\n    return value;\n  };\n  return transforms.reduce((acc, transform2) => {\n    if (!transform2)\n      return acc;\n    const [name, transformValue] = transform2.split(\"(\");\n    const valueArray = transformValue.split(\",\");\n    const values = valueArray.map((val) => {\n      return parseValues(val.endsWith(\")\") ? val.replace(\")\", \"\") : val.trim());\n    });\n    const value = values.length === 1 ? values[0] : values;\n    return {\n      ...acc,\n      [name]: value\n    };\n  }, {});\n}\nfunction stateFromTransform(state, transform) {\n  Object.entries(parseTransform(transform)).forEach(([key, value]) => {\n    const axes = [\"x\", \"y\", \"z\"];\n    if (key === \"translate3d\") {\n      if (value === 0) {\n        axes.forEach((axis) => state[axis] = 0);\n        return;\n      }\n      value.forEach((axisValue, index) => state[axes[index]] = axisValue);\n      return;\n    }\n    value = Number.parseFloat(`${value}`);\n    if (key === \"translateX\") {\n      state.x = value;\n      return;\n    }\n    if (key === \"translateY\") {\n      state.y = value;\n      return;\n    }\n    if (key === \"translateZ\") {\n      state.z = value;\n      return;\n    }\n    state[key] = value;\n  });\n}\n\nfunction useElementTransform(target, onInit) {\n  let _cache;\n  let _target;\n  const { state, transform } = reactiveTransform();\n  usePermissiveTarget(target, (el) => {\n    _target = el;\n    if (el.style.transform)\n      stateFromTransform(state, el.style.transform);\n    if (_cache)\n      el.style.transform = _cache;\n    if (onInit)\n      onInit(state);\n  });\n  watch(\n    transform,\n    (newValue) => {\n      if (!_target) {\n        _cache = newValue;\n        return;\n      }\n      _target.style.transform = newValue;\n    },\n    {\n      immediate: true\n    }\n  );\n  return {\n    transform: state\n  };\n}\n\nfunction objectEntries(obj) {\n  return Object.entries(obj);\n}\n\nfunction useMotionProperties(target, defaultValues) {\n  const motionProperties = reactive({});\n  const apply = (values) => Object.entries(values).forEach(([key, value]) => motionProperties[key] = value);\n  const { style } = useElementStyle(target, apply);\n  const { transform } = useElementTransform(target, apply);\n  watch(\n    motionProperties,\n    (newVal) => {\n      objectEntries(newVal).forEach(([key, value]) => {\n        const target2 = isTransformProp(key) ? transform : style;\n        if (target2[key] && target2[key] === value)\n          return;\n        target2[key] = value;\n      });\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  usePermissiveTarget(target, () => defaultValues && apply(defaultValues));\n  return {\n    motionProperties,\n    style,\n    transform\n  };\n}\n\nfunction useMotionVariants(variants = {}) {\n  const _variants = unref(variants);\n  const variant = ref();\n  const state = computed(() => {\n    if (!variant.value)\n      return;\n    return _variants[variant.value];\n  });\n  return {\n    state,\n    variant\n  };\n}\n\nfunction useMotion(target, variants = {}, options) {\n  const { motionProperties } = useMotionProperties(target);\n  const { variant, state } = useMotionVariants(variants);\n  const controls = useMotionControls(motionProperties, variants);\n  const instance = {\n    target,\n    variant,\n    variants,\n    state,\n    motionProperties,\n    ...controls\n  };\n  useMotionFeatures(instance, options);\n  return instance;\n}\n\nconst transitionKeys = [\"delay\", \"duration\"];\nconst directivePropsKeys = [\"initial\", \"enter\", \"leave\", \"visible\", \"visible-once\", \"visibleOnce\", \"hovered\", \"tapped\", \"focused\", ...transitionKeys];\nfunction isTransitionKey(val) {\n  return transitionKeys.includes(val);\n}\nfunction resolveVariants(node, variantsRef) {\n  const target = node.props ? node.props : node.data && node.data.attrs ? node.data.attrs : {};\n  if (target) {\n    if (target.variants && isObject$1(target.variants)) {\n      variantsRef.value = {\n        ...variantsRef.value,\n        ...target.variants\n      };\n    }\n    for (let key of directivePropsKeys) {\n      if (!target || !target[key])\n        continue;\n      if (isTransitionKey(key) && typeof target[key] === \"number\") {\n        for (const variantKey of [\"enter\", \"visible\", \"visibleOnce\"]) {\n          const variantConfig = variantsRef.value[variantKey];\n          if (variantConfig == null)\n            continue;\n          variantConfig.transition ?? (variantConfig.transition = {});\n          variantConfig.transition[key] = target[key];\n        }\n        continue;\n      }\n      if (isObject$1(target[key])) {\n        const prop = target[key];\n        if (key === \"visible-once\")\n          key = \"visibleOnce\";\n        variantsRef.value[key] = prop;\n      }\n    }\n  }\n}\n\nfunction directive(variants, isPreset = false) {\n  const register = (el, binding, node) => {\n    const key = binding.value && typeof binding.value === \"string\" ? binding.value : node.key;\n    if (key && motionState[key])\n      motionState[key].stop();\n    const variantsObject = isPreset ? structuredClone(toRaw(variants) || {}) : variants || {};\n    const variantsRef = ref(variantsObject);\n    if (typeof binding.value === \"object\")\n      variantsRef.value = binding.value;\n    resolveVariants(node, variantsRef);\n    const motionOptions = { eventListeners: true, lifeCycleHooks: true, syncVariants: true, visibilityHooks: false };\n    const motionInstance = useMotion(el, variantsRef, motionOptions);\n    el.motionInstance = motionInstance;\n    if (key)\n      motionState[key] = motionInstance;\n  };\n  const mounted = (el, _binding, _node) => {\n    el.motionInstance && registerVisibilityHooks(el.motionInstance);\n  };\n  return {\n    created: register,\n    mounted,\n    getSSRProps(binding, node) {\n      let { initial: bindingInitial } = binding.value || node && node?.props || {};\n      bindingInitial = unref(bindingInitial);\n      const initial = defu({}, variants?.initial || {}, bindingInitial || {});\n      if (!initial || Object.keys(initial).length === 0)\n        return;\n      const style = variantToStyle(initial);\n      return {\n        style\n      };\n    }\n  };\n}\n\nconst fade = {\n  initial: {\n    opacity: 0\n  },\n  enter: {\n    opacity: 1\n  }\n};\nconst fadeVisible = {\n  initial: {\n    opacity: 0\n  },\n  visible: {\n    opacity: 1\n  }\n};\nconst fadeVisibleOnce = {\n  initial: {\n    opacity: 0\n  },\n  visibleOnce: {\n    opacity: 1\n  }\n};\n\nconst pop = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  enter: {\n    scale: 1,\n    opacity: 1\n  }\n};\nconst popVisible = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  visible: {\n    scale: 1,\n    opacity: 1\n  }\n};\nconst popVisibleOnce = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  visibleOnce: {\n    scale: 1,\n    opacity: 1\n  }\n};\n\nconst rollLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\n\nconst slideLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    opacity: 1\n  }\n};\n\nconst presets = {\n  __proto__: null,\n  fade: fade,\n  fadeVisible: fadeVisible,\n  fadeVisibleOnce: fadeVisibleOnce,\n  pop: pop,\n  popVisible: popVisible,\n  popVisibleOnce: popVisibleOnce,\n  rollBottom: rollBottom,\n  rollLeft: rollLeft,\n  rollRight: rollRight,\n  rollTop: rollTop,\n  rollVisibleBottom: rollVisibleBottom,\n  rollVisibleLeft: rollVisibleLeft,\n  rollVisibleOnceBottom: rollVisibleOnceBottom,\n  rollVisibleOnceLeft: rollVisibleOnceLeft,\n  rollVisibleOnceRight: rollVisibleOnceRight,\n  rollVisibleOnceTop: rollVisibleOnceTop,\n  rollVisibleRight: rollVisibleRight,\n  rollVisibleTop: rollVisibleTop,\n  slideBottom: slideBottom,\n  slideLeft: slideLeft,\n  slideRight: slideRight,\n  slideTop: slideTop,\n  slideVisibleBottom: slideVisibleBottom,\n  slideVisibleLeft: slideVisibleLeft,\n  slideVisibleOnceBottom: slideVisibleOnceBottom,\n  slideVisibleOnceLeft: slideVisibleOnceLeft,\n  slideVisibleOnceRight: slideVisibleOnceRight,\n  slideVisibleOnceTop: slideVisibleOnceTop,\n  slideVisibleRight: slideVisibleRight,\n  slideVisibleTop: slideVisibleTop\n};\n\nfunction slugify(str) {\n  const a = \"\\xE0\\xE1\\xE2\\xE4\\xE6\\xE3\\xE5\\u0101\\u0103\\u0105\\xE7\\u0107\\u010D\\u0111\\u010F\\xE8\\xE9\\xEA\\xEB\\u0113\\u0117\\u0119\\u011B\\u011F\\u01F5\\u1E27\\xEE\\xEF\\xED\\u012B\\u012F\\xEC\\u0142\\u1E3F\\xF1\\u0144\\u01F9\\u0148\\xF4\\xF6\\xF2\\xF3\\u0153\\xF8\\u014D\\xF5\\u0151\\u1E55\\u0155\\u0159\\xDF\\u015B\\u0161\\u015F\\u0219\\u0165\\u021B\\xFB\\xFC\\xF9\\xFA\\u016B\\u01D8\\u016F\\u0171\\u0173\\u1E83\\u1E8D\\xFF\\xFD\\u017E\\u017A\\u017C\\xB7/_,:;\";\n  const b = \"aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n  return str.toString().replace(/[A-Z]/g, (s) => `-${s}`).toLowerCase().replace(/\\s+/g, \"-\").replace(p, (c) => b.charAt(a.indexOf(c))).replace(/&/g, \"-and-\").replace(/[^\\w\\-]+/g, \"\").replace(/-{2,}/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n}\n\nconst CUSTOM_PRESETS = Symbol(\n  import.meta.dev ? \"motionCustomPresets\" : \"\"\n);\n\nconst MotionComponentProps = {\n  // Preset to be loaded\n  preset: {\n    type: String,\n    required: false\n  },\n  // Instance\n  instance: {\n    type: Object,\n    required: false\n  },\n  // Variants\n  variants: {\n    type: Object,\n    required: false\n  },\n  // Initial variant\n  initial: {\n    type: Object,\n    required: false\n  },\n  // Lifecycle hooks variants\n  enter: {\n    type: Object,\n    required: false\n  },\n  leave: {\n    type: Object,\n    required: false\n  },\n  // Intersection observer variants\n  visible: {\n    type: Object,\n    required: false\n  },\n  visibleOnce: {\n    type: Object,\n    required: false\n  },\n  // Event listeners variants\n  hovered: {\n    type: Object,\n    required: false\n  },\n  tapped: {\n    type: Object,\n    required: false\n  },\n  focused: {\n    type: Object,\n    required: false\n  },\n  // Helpers\n  delay: {\n    type: [Number, String],\n    required: false\n  },\n  duration: {\n    type: [Number, String],\n    required: false\n  }\n};\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === \"[object Object]\";\n}\nfunction clone(v) {\n  if (Array.isArray(v)) {\n    return v.map(clone);\n  }\n  if (isObject(v)) {\n    const res = {};\n    for (const key in v) {\n      res[key] = clone(v[key]);\n    }\n    return res;\n  }\n  return v;\n}\nfunction setupMotionComponent(props) {\n  const instances = reactive({});\n  const customPresets = inject(CUSTOM_PRESETS, {});\n  const preset = computed(() => {\n    if (props.preset == null) {\n      return {};\n    }\n    if (customPresets != null && props.preset in customPresets) {\n      return structuredClone(toRaw(customPresets)[props.preset]);\n    }\n    if (props.preset in presets) {\n      return structuredClone(presets[props.preset]);\n    }\n    return {};\n  });\n  const propsConfig = computed(() => ({\n    initial: props.initial,\n    enter: props.enter,\n    leave: props.leave,\n    visible: props.visible,\n    visibleOnce: props.visibleOnce,\n    hovered: props.hovered,\n    tapped: props.tapped,\n    focused: props.focused\n  }));\n  function applyTransitionHelpers(config, values) {\n    for (const transitionKey of [\"delay\", \"duration\"]) {\n      if (values[transitionKey] == null)\n        continue;\n      const transitionValueParsed = Number.parseInt(\n        values[transitionKey]\n      );\n      for (const variantKey of [\"enter\", \"visible\", \"visibleOnce\"]) {\n        const variantConfig = config[variantKey];\n        if (variantConfig == null)\n          continue;\n        variantConfig.transition ?? (variantConfig.transition = {});\n        variantConfig.transition[transitionKey] = transitionValueParsed;\n      }\n    }\n    return config;\n  }\n  const motionConfig = computed(() => {\n    const config = defu(\n      {},\n      propsConfig.value,\n      preset.value,\n      props.variants || {}\n    );\n    return applyTransitionHelpers({ ...config }, props);\n  });\n  if (import.meta.dev) {\n    if (props.preset != null && presets?.[props.preset] == null && customPresets?.[props.preset] == null) {\n      console.warn(`[@vueuse/motion]: Preset \\`${props.preset}\\` not found.`);\n    }\n    const replayAnimation = (instance) => {\n      if (instance.variants?.initial) {\n        instance.set(\"initial\");\n      }\n      nextTick(() => {\n        if (instance.variants?.enter)\n          instance.apply(\"enter\");\n        if (instance.variants?.visible)\n          instance.apply(\"visible\");\n        if (instance.variants?.visibleOnce)\n          instance.apply(\"visibleOnce\");\n      });\n    };\n    onUpdated(() => {\n      for (const key in instances) {\n        replayAnimation(instances[key]);\n      }\n    });\n  }\n  function setNodeInstance(node, index, style) {\n    var _a;\n    node.props ?? (node.props = {});\n    (_a = node.props).style ?? (_a.style = {});\n    node.props.style = { ...node.props.style, ...style };\n    const elementMotionConfig = applyTransitionHelpers(\n      clone(motionConfig.value),\n      node.props\n    );\n    node.props.onVnodeMounted = ({ el }) => {\n      instances[index] = useMotion(\n        el,\n        elementMotionConfig\n      );\n    };\n    node.props.onVnodeUpdated = ({ el }) => {\n      const styles = variantToStyle(instances[index].state);\n      for (const [key, val] of Object.entries(styles)) {\n        el.style[key] = val;\n      }\n    };\n    return node;\n  }\n  return {\n    motionConfig,\n    setNodeInstance\n  };\n}\n\nconst MotionComponent = defineComponent({\n  name: \"Motion\",\n  props: {\n    ...MotionComponentProps,\n    is: {\n      type: [String, Object],\n      default: \"div\"\n    }\n  },\n  setup(props) {\n    const slots = useSlots();\n    const { motionConfig, setNodeInstance } = setupMotionComponent(props);\n    return () => {\n      const style = variantToStyle(motionConfig.value.initial || {});\n      const node = h(props.is, void 0, slots);\n      setNodeInstance(node, 0, style);\n      return node;\n    };\n  }\n});\n\nconst MotionGroupComponent = defineComponent({\n  name: \"MotionGroup\",\n  props: {\n    ...MotionComponentProps,\n    is: {\n      type: [String, Object],\n      required: false\n    }\n  },\n  setup(props) {\n    const slots = useSlots();\n    const { motionConfig, setNodeInstance } = setupMotionComponent(props);\n    return () => {\n      const style = variantToStyle(motionConfig.value.initial || {});\n      const nodes = slots.default?.() || [];\n      for (let i = 0; i < nodes.length; i++) {\n        const n = nodes[i];\n        if (n.type === Fragment && Array.isArray(n.children)) {\n          n.children.forEach(function setChildInstance(child, index) {\n            if (child == null)\n              return;\n            if (Array.isArray(child)) {\n              setChildInstance(child, index);\n              return;\n            }\n            if (typeof child === \"object\") {\n              setNodeInstance(child, index, style);\n            }\n          });\n        } else {\n          setNodeInstance(n, i, style);\n        }\n      }\n      if (props.is) {\n        return h(props.is, void 0, nodes);\n      }\n      return nodes;\n    };\n  }\n});\n\nconst MotionPlugin = {\n  install(app, options) {\n    app.directive(\"motion\", directive());\n    if (!options || options && !options.excludePresets) {\n      for (const key in presets) {\n        const preset = presets[key];\n        app.directive(`motion-${slugify(key)}`, directive(preset, true));\n      }\n    }\n    if (options && options.directives) {\n      for (const key in options.directives) {\n        const variants = options.directives[key];\n        if (!variants.initial && import.meta.dev) {\n          console.warn(\n            `Your directive v-motion-${key} is missing initial variant!`\n          );\n        }\n        app.directive(`motion-${key}`, directive(variants, true));\n      }\n    }\n    app.provide(CUSTOM_PRESETS, options?.directives);\n    app.component(\"Motion\", MotionComponent);\n    app.component(\"MotionGroup\", MotionGroupComponent);\n  }\n};\n\nfunction isMotionInstance(obj) {\n  const _obj = obj;\n  return _obj.apply !== void 0 && typeof _obj.apply === \"function\" && _obj.set !== void 0 && typeof _obj.set === \"function\" && _obj.target !== void 0 && isRef(_obj.target);\n}\n\nfunction useMotions() {\n  return motionState;\n}\n\nfunction useSpring(values, spring) {\n  const { stop, get } = useMotionValues();\n  return {\n    values,\n    stop,\n    set: (properties) => Promise.all(\n      Object.entries(properties).map(([key, value]) => {\n        const motionValue = get(key, values[key], values);\n        return motionValue.start((onComplete) => {\n          const options = {\n            type: \"spring\",\n            ...spring || getDefaultTransition(key, value)\n          };\n          return animate({\n            from: motionValue.get(),\n            to: value,\n            velocity: motionValue.getVelocity(),\n            onUpdate: (v) => motionValue.set(v),\n            onComplete,\n            ...options\n          });\n        });\n      })\n    )\n  };\n}\n\nfunction useReducedMotion(options = {}) {\n  return useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n}\n\nexport { MotionComponent, directive as MotionDirective, MotionGroupComponent, MotionPlugin, fade, fadeVisible, fadeVisibleOnce, isMotionInstance, pop, popVisible, popVisibleOnce, reactiveStyle, reactiveTransform, rollBottom, rollLeft, rollRight, rollTop, rollVisibleBottom, rollVisibleLeft, rollVisibleOnceBottom, rollVisibleOnceLeft, rollVisibleOnceRight, rollVisibleOnceTop, rollVisibleRight, rollVisibleTop, slideBottom, slideLeft, slideRight, slideTop, slideVisibleBottom, slideVisibleLeft, slideVisibleOnceBottom, slideVisibleOnceLeft, slideVisibleOnceRight, slideVisibleOnceTop, slideVisibleRight, slideVisibleTop, slugify, useElementStyle, useElementTransform, useMotion, useMotionControls, useMotionFeatures, useMotionProperties, useMotionTransitions, useMotionVariants, useMotions, useReducedMotion, useSpring };\n","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.6.4\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { tabbable, focusable, isTabbable, getTabIndex, isFocusable } from 'tabbable';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), true).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (undefined !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : undefined;\n  }\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap._setPausedState(true);\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0 && !trapStack[trapStack.length - 1]._isManuallyPaused()) {\n      trapStack[trapStack.length - 1]._setPausedState(false);\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === undefined ? undefined : e.key) === 'Escape' || (e === null || e === undefined ? undefined : e.key) === 'Esc' || (e === null || e === undefined ? undefined : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === undefined ? undefined : e.key) === 'Tab' || (e === null || e === undefined ? undefined : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(undefined, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === undefined ? undefined : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === undefined ? undefined : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    manuallyPaused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === undefined ? undefined : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || (// fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === undefined ? undefined : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$hasFallback = _ref2.hasFallback,\n      hasFallback = _ref2$hasFallback === undefined ? false : _ref2$hasFallback,\n      _ref2$params = _ref2.params,\n      params = _ref2$params === undefined ? [] : _ref2$params;\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue.apply(undefined, _toConsumableArray(params));\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\"`\".concat(optionName, \"` appears to be an invalid selector; error=\\\"\").concat(err.message, \"\\\"\"));\n      }\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus', {\n      hasFallback: true\n    });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || node && !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var _getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return _getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var _tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === _getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      _tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement]\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref3) {\n    var target = _ref3.target,\n      event = _ref3.event,\n      _ref3$isBackward = _ref3.isBackward,\n      isBackward = _ref3$isBackward === undefined ? false : _ref3$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = state.tabbableGroups.findIndex(function (_ref4) {\n          var firstTabbableNode = _ref4.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = state.tabbableGroups.findIndex(function (_ref5) {\n          var lastTabbableNode = _ref5.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        _tryFocus(nextNode);\n      } else {\n        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      _tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n  var checkTabKey = function checkTabKey(event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  var checkEscapeKey = function checkEscapeKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      _tryFocus(getInitialFocusNode());\n    }) : _tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      _tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === undefined || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === undefined || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === undefined || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === undefined || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n      state.manuallyPaused = true;\n      return this._setPausedState(true, pauseOptions);\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n      state.manuallyPaused = false;\n      if (trapStack[trapStack.length - 1] !== this) {\n        return this;\n      }\n      return this._setPausedState(false, unpauseOptions);\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n  Object.defineProperties(trap, {\n    _isManuallyPaused: {\n      value: function value() {\n        return state.manuallyPaused;\n      }\n    },\n    _setPausedState: {\n      value: function value(paused, options) {\n        if (state.paused === paused) {\n          return this;\n        }\n        state.paused = paused;\n        if (paused) {\n          var onPause = getOption(options, 'onPause');\n          var onPostPause = getOption(options, 'onPostPause');\n          onPause === null || onPause === undefined || onPause();\n          removeListeners();\n          updateObservedNodes();\n          onPostPause === null || onPostPause === undefined || onPostPause();\n        } else {\n          var onUnpause = getOption(options, 'onUnpause');\n          var onPostUnpause = getOption(options, 'onPostUnpause');\n          onUnpause === null || onUnpause === undefined || onUnpause();\n          updateTabbableNodes();\n          addListeners();\n          updateObservedNodes();\n          onPostUnpause === null || onPostUnpause === undefined || onPostUnpause();\n        }\n        return this;\n      }\n    }\n  });\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","import { toArray, unrefElement, tryOnScopeDispose } from '@vueuse/core';\nimport { notNullish } from '@vueuse/shared';\nimport { createFocusTrap } from 'focus-trap';\nimport { shallowRef, computed, toValue, watch } from 'vue';\n\nfunction useFocusTrap(target, options = {}) {\n  let trap;\n  const { immediate, ...focusTrapOptions } = options;\n  const hasFocus = shallowRef(false);\n  const isPaused = shallowRef(false);\n  const activate = (opts) => trap && trap.activate(opts);\n  const deactivate = (opts) => trap && trap.deactivate(opts);\n  const pause = () => {\n    if (trap) {\n      trap.pause();\n      isPaused.value = true;\n    }\n  };\n  const unpause = () => {\n    if (trap) {\n      trap.unpause();\n      isPaused.value = false;\n    }\n  };\n  const targets = computed(() => {\n    const _targets = toValue(target);\n    return toArray(_targets).map((el) => {\n      const _el = toValue(el);\n      return typeof _el === \"string\" ? _el : unrefElement(_el);\n    }).filter(notNullish);\n  });\n  watch(\n    targets,\n    (els) => {\n      if (!els.length)\n        return;\n      trap = createFocusTrap(els, {\n        ...focusTrapOptions,\n        onActivate() {\n          hasFocus.value = true;\n          if (options.onActivate)\n            options.onActivate();\n        },\n        onDeactivate() {\n          hasFocus.value = false;\n          if (options.onDeactivate)\n            options.onDeactivate();\n        }\n      });\n      if (immediate)\n        activate();\n    },\n    { flush: \"post\" }\n  );\n  tryOnScopeDispose(() => deactivate());\n  return {\n    hasFocus,\n    isPaused,\n    activate,\n    deactivate,\n    pause,\n    unpause\n  };\n}\n\nexport { useFocusTrap };\n","import { computed as y, defineComponent as ce, useCssVars as fe, ref as g, toRefs as he, watch as ee, nextTick as R, onMounted as ge, openBlock as pe, createBlock as me, Teleport as be, createElementVNode as b, createVNode as ye, Transition as Se, withCtx as we, withDirectives as ke, vShow as Te, renderSlot as z } from \"vue\";\nimport { useWindowSize as Ce, useElementBounding as I, useScrollLock as te } from \"@vueuse/core\";\nimport { useGesture as N, rubberbandIfOutOfBounds as G } from \"@vueuse/gesture\";\nimport { useMotionProperties as De, useMotionTransitions as xe, useMotionControls as Me } from \"@vueuse/motion\";\nimport { useFocusTrap as Pe } from \"@vueuse/integrations/useFocusTrap\";\nfunction _e(o, u, a) {\n  let e = (n) => o(n, ...u);\n  return a === void 0 ? e : Object.assign(e, { lazy: a, lazyArgs: u });\n}\nfunction He(o, u, a) {\n  let e = o.length - u.length;\n  if (e === 0) return o(...u);\n  if (e === 1) return _e(o, u, a);\n  throw new Error(\"Wrong number of arguments\");\n}\nfunction Oe(o, { triggerAt: u = \"end\", minQuietPeriodMs: a, maxBurstDurationMs: e, minGapMs: n, reducer: c = Be }) {\n  let s, r, f, S, C = () => {\n    let v = f;\n    v !== void 0 && (f = void 0, o(v), n !== void 0 && (r = setTimeout(H, n)));\n  }, H = () => {\n    clearTimeout(r), r = void 0, s === void 0 && C();\n  }, w = () => {\n    clearTimeout(s), s = void 0, S = void 0, r === void 0 && C();\n  };\n  return { call: (...v) => {\n    let h = s === void 0 && r === void 0;\n    if ((u !== \"start\" || h) && (f = c(f, ...v)), !(s === void 0 && !h)) {\n      if (a !== void 0 || e !== void 0 || n === void 0) {\n        clearTimeout(s);\n        let p = Date.now();\n        S ?? (S = p);\n        let W = e === void 0 ? a ?? 0 : Math.min(a ?? e, e - (p - S));\n        s = setTimeout(w, W);\n      }\n      u !== \"end\" && h && C();\n    }\n  }, cancel: () => {\n    clearTimeout(s), s = void 0, S = void 0, clearTimeout(r), r = void 0, f = void 0;\n  }, flush: () => {\n    w(), H();\n  }, get isIdle() {\n    return s === void 0 && r === void 0;\n  } };\n}\nvar Be = () => \"\";\nfunction $(...o) {\n  return He(Ee, o);\n}\nvar Ee = (o, { min: u, max: a }) => u !== void 0 && o < u ? u : a !== void 0 && o > a ? a : o;\nfunction Ie(o, u) {\n  const a = y(() => o.value.sort((s, r) => s - r)), e = y(() => a.value[0]), n = y(() => a.value[a.value.length - 1]), c = y(() => {\n    const s = a.value.reduce(\n      (r, f) => Math.abs(f - u.value) < Math.abs(r - u.value) ? f : r\n    );\n    return a.value.indexOf(s);\n  });\n  return {\n    minSnap: e,\n    maxSnap: n,\n    snapPoints: o,\n    closestSnapPointIndex: c\n  };\n}\nconst $e = { \"data-vsbs-container\": \"\" }, We = [\"data-vsbs-shadow\", \"data-vsbs-sheet-show\"], Fe = /* @__PURE__ */ ce({\n  __name: \"BottomSheet\",\n  props: {\n    duration: { default: 250 },\n    snapPoints: {},\n    defaultSnapPoint: {},\n    blocking: { type: Boolean, default: !0 },\n    canSwipeClose: { type: Boolean, default: !0 },\n    canBackdropClose: { type: Boolean, default: !0 },\n    expandOnContentDrag: { type: Boolean, default: !0 }\n  },\n  emits: [\"opened\", \"closed\", \"ready\", \"dragging-up\", \"dragging-down\", \"minHeight\", \"maxHeight\"],\n  setup(o, { expose: u, emit: a }) {\n    fe((i) => ({\n      \"02470502\": ne.value,\n      \"3c3cbcbe\": ue.value\n    }));\n    const e = o, n = a, c = g(null), s = g(null), r = g(null), f = g(null), S = g(null), C = g(null), H = g(null), w = g(!1), v = g(e.expandOnContentDrag), { height: h } = Ce(), { height: p } = I(c), { height: W } = I(s), { height: ae } = I(r), { height: oe } = I(C), Q = Pe([c, H], {\n      immediate: !1,\n      fallbackFocus: () => c.value || document.body\n    }), k = y(\n      () => Math.ceil(oe.value + W.value + ae.value)\n    ), ne = y(() => `visibility ${e.duration}ms ease-in-out`), ue = y(() => `opacity ${e.duration}ms ease-in-out`), { motionProperties: D } = De(c), { push: x, stop: le, motionValues: O } = xe(), { set: M, stop: j } = Me(\n      D,\n      {},\n      { push: x, motionValues: O, stop: le }\n    ), t = g(0), l = g(0), { snapPoints: ie } = he(e), se = y(() => ie.value ?? [k.value]), {\n      minSnap: P,\n      maxSnap: _,\n      snapPoints: T,\n      closestSnapPointIndex: F\n    } = Ie(se, t), L = te(document.body), V = te(document.documentElement), K = (i) => {\n      i.key === \"Escape\" && E();\n    }, re = () => {\n      c.value && (t.value = Math.min(e.defaultSnapPoint ?? P.value, h.value), M({\n        height: t.value,\n        y: t.value\n      }), x(\"y\", 0, D, {\n        type: \"tween\",\n        easings: \"easeInOut\",\n        bounce: 0,\n        duration: e.duration\n      }), w.value = !0, window.addEventListener(\"keydown\", K), e.blocking && setTimeout(() => {\n        O.value.y.get() - 0 < 0.1 && (n(\"opened\"), Q.activate());\n      }, e.duration));\n    }, E = () => {\n      c.value && (x(\"y\", p.value, D, {\n        type: \"tween\",\n        bounce: 0,\n        duration: e.duration\n      }), w.value = !1, e.blocking && Q.deactivate(), window.removeEventListener(\"keydown\", K), setTimeout(() => {\n        O.value.y.get() - p.value < 0.1 && n(\"closed\");\n      }, e.duration));\n    }, ve = () => {\n      e.canBackdropClose && E();\n    };\n    function U(i) {\n      v.value = !0, q(i);\n    }\n    function q(i) {\n      v.value && i.preventDefault();\n    }\n    const X = (i) => {\n      t.value = i, x(\"height\", t.value, D, {\n        type: \"tween\",\n        easings: \"easeInOut\",\n        bounce: 0,\n        duration: e.duration\n      });\n    }, J = ({\n      delta: [i, d],\n      direction: [B, m]\n    }) => {\n      c.value && (l.value <= 0 && (t.value -= d), t.value <= P.value && (t.value = P.value, l.value += d, M({\n        y: e.canSwipeClose ? $(l.value, { min: 0 }) : $(G(l.value, -p.value, 0, 0.5), { min: 0 })\n      })), M({\n        height: $(G(t.value, 0, _.value, 0.25), {\n          min: 0,\n          max: h.value\n        })\n      }), m > 0 ? n(\"dragging-down\") : m < 0 && n(\"dragging-up\"));\n    }, A = () => {\n      L.value = !1, V.value = !1, l.value = e.canSwipeClose ? [0, t.value].reduce(\n        (i, d) => Math.abs(d - l.value) < Math.abs(i - l.value) ? d : i\n      ) : 0, x(\"y\", l.value, D, {\n        type: \"tween\",\n        easings: \"easeInOut\",\n        bounce: 0,\n        duration: e.duration\n      }), l.value === t.value && (l.value = 0, E()), t.value = Math.min(T.value[F.value], h.value), x(\"height\", t.value, D, {\n        type: \"tween\",\n        easings: \"easeInOut\",\n        bounce: 0,\n        duration: e.duration\n      });\n    }, Z = () => {\n      L.value = !0, V.value = !0, t.value = p.value, l.value = O.value.y.get(), j();\n    };\n    N(\n      {\n        onDragStart: Z,\n        onDrag: J,\n        onDragEnd: A\n      },\n      {\n        domTarget: s,\n        drag: { filterTaps: !0 }\n      }\n    ), N(\n      {\n        onDragStart: Z,\n        onDrag: J,\n        onDragEnd: A\n      },\n      {\n        domTarget: r,\n        drag: { filterTaps: !0 }\n      }\n    ), N(\n      {\n        onDragStart: ({ direction: [i, d] }) => {\n          L.value = !0, V.value = !0, t.value = p.value, l.value = O.value.y.get(), j();\n          const B = f.value.scrollTop === 0, m = d > 0;\n          T.value.length === 1 ? l.value === 0 && B && (v.value = m) : (e.expandOnContentDrag && t.value !== _.value && (v.value = !0), t.value === _.value && B && (v.value = m));\n        },\n        onDrag: ({ delta: [i, d], direction: [B, m] }) => {\n          if (!e.expandOnContentDrag) {\n            v.value = !1;\n            return;\n          }\n          if (!c.value) return;\n          l.value === 0 && v.value && e.expandOnContentDrag && (t.value -= d), t.value <= P.value && (t.value = P.value, v.value && e.expandOnContentDrag && (l.value += d), l.value = $(l.value, { min: 0, max: P.value }), M({\n            y: e.canSwipeClose ? l.value : G(l.value, -p.value, 0, 0.5)\n          })), t.value > _.value && (t.value = _.value), t.value = Math.min(t.value, h.value);\n          const Y = f.value.scrollTop === 0;\n          T.value.length === 1 ? d < 0 && l.value === 0 && Y && (v.value = !1) : t.value === _.value && (v.value = !1), M({\n            height: t.value\n          }), m > 0 ? n(\"dragging-down\") : m < 0 && n(\"dragging-up\");\n        },\n        onDragEnd: A\n      },\n      {\n        domTarget: S,\n        drag: { filterTaps: !0 }\n      }\n    );\n    const de = Oe(\n      () => {\n        n(\"maxHeight\", h.value), R(() => {\n          t.value = T.value[F.value], X(T.value[F.value]);\n        });\n      },\n      { minQuietPeriodMs: 50 }\n    );\n    return ee(h, () => {\n      de.call();\n    }), ee(k, () => {\n      n(\"minHeight\", k.value), T.value.length === 1 && R(() => {\n        T.value[0] === k.value && X(Math.min(k.value, h.value));\n      });\n    }), ge(() => {\n      n(\"minHeight\", k.value), n(\"maxHeight\", h.value), t.value = e.defaultSnapPoint ?? Number(k.value), M({\n        height: t.value,\n        y: t.value\n      }), R(() => {\n        n(\"ready\");\n      });\n    }), u({ open: re, close: E, snapToPoint: X }), (i, d) => (pe(), me(be, { to: \"body\" }, [\n      b(\"div\", $e, [\n        ye(Se, { name: \"fade\" }, {\n          default: we(() => [\n            ke(b(\"div\", {\n              ref_key: \"backdrop\",\n              ref: H,\n              \"data-vsbs-backdrop\": \"\",\n              onClick: d[0] || (d[0] = (B) => ve())\n            }, null, 512), [\n              [Te, w.value && i.blocking]\n            ])\n          ]),\n          _: 1\n        }),\n        b(\"div\", {\n          ref_key: \"sheet\",\n          ref: c,\n          \"data-vsbs-shadow\": !i.blocking,\n          \"data-vsbs-sheet-show\": w.value,\n          \"aria-modal\": \"true\",\n          \"data-vsbs-sheet\": \"\",\n          tabindex: \"-1\"\n        }, [\n          b(\"div\", {\n            ref_key: \"sheetHeader\",\n            ref: s,\n            \"data-vsbs-header\": \"\",\n            onTouchmove: U\n          }, [\n            z(i.$slots, \"header\", {}, void 0, !0)\n          ], 544),\n          b(\"div\", {\n            ref_key: \"sheetScroll\",\n            ref: f,\n            \"data-vsbs-scroll\": \"\",\n            onTouchmove: q\n          }, [\n            b(\"div\", {\n              ref_key: \"sheetContentWrapper\",\n              ref: S,\n              \"data-vsbs-content-wrapper\": \"\"\n            }, [\n              b(\"div\", {\n                ref_key: \"sheetContent\",\n                ref: C,\n                \"data-vsbs-content\": \"\"\n              }, [\n                z(i.$slots, \"default\", {}, void 0, !0)\n              ], 512)\n            ], 512)\n          ], 544),\n          b(\"div\", {\n            ref_key: \"sheetFooter\",\n            ref: r,\n            \"data-vsbs-footer\": \"\",\n            onTouchmove: U\n          }, [\n            z(i.$slots, \"footer\", {}, void 0, !0)\n          ], 544)\n        ], 8, We)\n      ])\n    ]));\n  }\n}), Le = (o, u) => {\n  const a = o.__vccOpts || o;\n  for (const [e, n] of u)\n    a[e] = n;\n  return a;\n}, Ne = /* @__PURE__ */ Le(Fe, [[\"__scopeId\", \"data-v-42bd48db\"]]);\nexport {\n  Ne as default\n};\n","<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport BottomSheet from \"@douxcode/vue-spring-bottom-sheet\";\nimport \"@douxcode/vue-spring-bottom-sheet/dist/style.css\";\n\nconst bottomSheet = ref<InstanceType<typeof BottomSheet>>();\nconst open = ref(false);\nconst maxHeight = ref(0);\nconst toggle = () => {\n    open.value = !open.value;\n    if (open.value) {\n        bottomSheet.value?.open();\n    } else {\n        bottomSheet.value?.close();\n    }\n};\n</script>\n\n<template>\n    <div class=\"content\">\n        <button type=\"button\" @click=\"toggle\">\n            {{ open ? \"Close\" : \"Open\" }} bottom sheet\n        </button>\n    </div>\n    <BottomSheet class=\"bg-[#000]\" ref=\"bottomSheet\" :blocking=\"false\" :snap-points=\"[maxHeight / 4, maxHeight / 1.5]\"\n        @closed=\"open = false\" @max-height=\"(n) => (maxHeight = n)\">\n        <template #header>\n            <span class=\"text-[#000]\">header</span>\n        </template>\n        <span class=\"text-[#000]\">body</span>\n    </BottomSheet>\n</template>\n"],"names":["tryOnScopeDispose","fn","getCurrentScope","onScopeDispose","localProvidedStateMap","injectLocal","args","_a","key","instance","getCurrentInstance","hasInjectionContext","inject","isClient","notNullish","val","toString","isObject","noop","isIOS","getIsIOS","_b","pxValue","px","getLifeCycleTarget","target","toArray","value","toRef","toRef$1","r","readonly","customRef","ref","tryOnMounted","sync","onMounted","nextTick","watchImmediate","source","cb","options","watch","defaultWindow","unrefElement","elRef","plain","toValue","useEventListener","cleanups","cleanup","register","el","event","listener","firstParamTargets","computed","test","e","stopWatch","unref","raw_targets","raw_events","raw_listeners","raw_options","optionsClone","stop","useMounted","isMounted","shallowRef","useSupported","callback","useMutationObserver","window","mutationOptions","observer","isSupported","targets","items","targets2","takeRecords","ssrWidthSymbol","useSSRWidth","ssrWidth","useMediaQuery","query","ssrSupport","mediaQuery","matches","handler","watchEffect","queryStrings","queryString","not","minWidth","maxWidth","res","useResizeObserver","observerOptions","_targets","els","_el","useElementBounding","reset","windowResize","windowScroll","immediate","updateTiming","height","bottom","left","right","top","width","x","y","recalculate","rect","update","ele","resolveElement","checkOverflowScroll","style","parent","preventDefault","rawEvent","_target","elInitialOverflow","useScrollLock","element","initialState","isLocked","stopTouchMoveListener","initialOverflow","lock","unlock","v","useWindowSize","initialWidth","initialHeight","listenOrientation","includeScrollbar","type","visualViewportWidth","visualViewportHeight","scale","listenerOptions","supportsGestureEvents","supportsTouchEvents","getEventTouches","getTouchIds","t","getGenericEventData","buttons","shiftKey","altKey","metaKey","ctrlKey","identity$1","xy","getPointerEventValues","transform","touchEvents","clientX","clientY","getTwoTouchesEventValues","pointerIds","A","B","dx","dy","cx","cy","distance","angle","values","origin","getScrollEventValues","scrollX","scrollY","scrollLeft","scrollTop","LINE_HEIGHT","PAGE_HEIGHT","getWheelEventValues","deltaX","deltaY","deltaMode","getWebkitGestureEventValues","chainFns","fns","result","ensureVector","fallback","assignDefault","valueFn","getInitial","mixed","getInitialState","shared","drag","pinch","wheel","move","scroll","__defProp$6","__defNormalProp$6","obj","__publicField$6","Controller","classes","bindings","RecognizerClass2","eventKey","addBindings","updateDomListeners","getPropsListener","eventOptions","domTarget","removeListeners","takeAll","clearAllWindowListeners","addEventIds","controller","removeEventIds","id","windowListeners","stateKey","handlers","clearWindowListeners","config","_window","updateWindowListeners","listeners","addListeners","domListeners","name","props","captureString","fnsArray","array","eventName","eventHandler","addV","v1","v2","i","subV","calculateDistance","movement","calculateAllGeometry","delta","dl","alpha","direction","calculateAllKinematics","dt","beta","velocity","velocities","sign","minMax","min","max","rubberband2","constant","rubberband","dimension","rubberbandIfOutOfBounds","position","__defProp$5","__defNormalProp$5","__publicField$5","RecognizersMap","identity","Recognizer","ms","forceFlag","prev_active","next_active","touches","down","state","newMemo","sharedState","gestureState","_intentional","_movement","T","_bounds","_initial","_active","wasIntentional","lastOffset","prevMovement","M","_T","i0","getIntentionalDisplacement","i1","intentionalityCheck","offset","_rubberband","computeRubberband","threshold","bounds","Vx","Vy","Rx","Ry","X1","X2","Y1","Y2","getGenericPayload","isStartEvent","timeStamp","_lastEventType","previous","elapsedTime","getStartGestureState","startTime","initial","_state","CoordinatesRecognizer","absX","absY","axis","__defProp$4","__defNormalProp$4","__publicField$4","TAP_DISTANCE_THRESHOLD","persistEvent","DragRecognizer","pointerId","_dragTarget","_dragPointerId","movementX","movementY","kinematics","genericEventData","genericPayload","realDistance","_dragIsTap","tap","vx","vy","mx","my","ix","iy","svx","svy","sx","sy","sd","endState","swipe","onDragIsStart","resolveWith","resolvers","resolver","DEFAULT_DRAG_DELAY","DEFAULT_RUBBERBAND","DEFAULT_SWIPE_VELOCITY","DEFAULT_SWIPE_DISTANCE","DEFAULT_SWIPE_DURATION","InternalGestureOptionsNormalizers","InternalCoordinatesOptionsNormalizers","isBrowser","InternalGenericOptionsNormalizers","passive","capture","InternalDistanceAngleOptionsNormalizers","_value","_key","distanceBounds","angleBounds","_distanceBounds","D","_angleBounds","InternalDragOptionsNormalizers","_k","filterTaps","lockDirection","getInternalGenericOptions","getInternalCoordinatesOptions","getInternalDistanceAngleOptions","getInternalDragOptions","buildComplexConfig","actions","hover","enabled","mergedConfig","useRecognizers","nativeHandlers","resolveClasses","onUnmounted","internalHandlers","__defProp$3","__defNormalProp$3","__publicField$3","MoveRecognizer","DistanceAngleRecognizer","prev_a","d","delta_a","next_turns","turns","__defProp$2","__defNormalProp$2","__publicField$2","ZOOM_CONSTANT","WEBKIT_DISTANCE_SCALE_FACTOR","PinchRecognizer","touchIds","_pointerIds","canceled","delta_d","prev_d","__defProp$1","__defNormalProp$1","__publicField$1","ScrollRecognizer","movementDetection","geometry","__defProp","__defNormalProp","__publicField","WheelRecognizer","RE_NOT_NATIVE","sortHandlers","native","handle","useGesture","_handlers","includeStartEndHandlers","handlerKey","startKey","endKey","memo","tryOnUnmounted","defaultTimestep","getCurrentTime","onNextFrame","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","keepAlive","addToCurrentFrame","buffer","index","frameData","maxElapsed","useDefaultElapsed","frame","stepsOrder","steps","acc","process","startLoop","cancelSync","processStep","stepId","processFrame","timestamp","getFrameData","__rest","s","p","invariant","clamp","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","duration","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","a","b","calcAngularFreq","c","f","g","initialGuess","approximateRoot","stiffness","rootIterations","durationKeys","physicsKeys","isSpringType","keys","getSpringOptions","springOptions","derived","spring","from","to","restSpeed","restDelta","damping","isResolvedFromDuration","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","dampedAngularFreq","freqForT","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","_t","progress","toFromDifference","mix","sanitize","floatRegex","colorRegex","singleColorRegex","isString","number","createUnitType","unit","degrees","percent","progressPercentage","isColorString","testProp","splitColor","aName","bName","cName","hsla","hue","saturation","lightness","alpha$1","clampRgbUnit","rgbUnit","rgba","red","green","blue","parseHex","hex","color","colorToken","numberToken","_c","_d","analyse","numColors","colors","numbers","parse","createTransformer","tokenised","numValues","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","hueToRgb","q","hslaToRgba","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","mixColor","fromColorType","toColorType","fromColor","toColor","blended","isNum","combineFunctions","pipe","transformers","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","numRGB","numHSL","template","originStats","targetStats","mixNumber","detectMixerFactory","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","defaultOffset","convertOffsetToTimes","o","keyframes","times","createInterpolator","decay","timeConstant","modifyTarget","amplitude","ideal","types","detectAnimationFromOptions","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","passTimestamp","animate","autoplay","driver","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","latest","isComplete","interpolateFromNumber","animator","animation","repeat","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","prev","checkBoundary","a1","a2","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","SubscriptionManager","isFloat","MotionValue","init","subscription","resolve","getMotionValue","isArray","useMotionValues","motionValues","destroyKey","get","motionValue","isKeyframesTarget","underDampedSpring","criticallyDampedSpring","overDampedSpring","linearTween","defaultTransitions","getDefaultTransition","valueKey","transitionFactory","int","valueTypes","getValueType","getValueAsType","defaultValueType","easingLookup","easingDefinitionToFunction","definition","x1","y1","x2","y2","isEasingArray","isAnimatable","hydrateKeyframes","convertTransitionToAnimationOptions","transition","getPopmotionAnimationOptions","isTransitionDefined","getValueTransition","getAnimation","valueTransition","isTargetAnimatable","isOriginAnimatable","start","set","useMotionTransitions","useMotionControls","motionProperties","variants","push","_variants","isAnimating","newVal","getVariantFromKey","variant","apply","animations","waitForComplete","variantData","isObject$1","done","leaveVariant","reactiveStyle","reactive","valueType","valueAsType","usePermissiveTarget","onTarget","translateAlias","reactiveTransform","enableHardwareAcceleration","hasHardwareAcceleration","str","transformAxes","order","transformProps","operationKey","axesKey","transformPropSet","isTransformProp","transformOriginProps","isTransformOriginProp","useElementStyle","onInit","_cache","parseTransform","transforms","parseValues","transform2","transformValue","stateFromTransform","axes","axisValue","useElementTransform","newValue","objectEntries","useMotionProperties","defaultValues","target2","candidateSelectors","candidateSelector","NoElement","getRootNode","_element$getRootNode","isInert","node","lookUp","_node$getAttribute","inertAtt","inert","isContentEditable","_node$getAttribute2","attValue","getCandidates","includeContainer","candidates","getCandidatesIteratively","elements","elementsToCheck","assigned","content","nestedCandidates","validCandidate","shadowRoot","validShadowRoot","_nestedCandidates","hasTabIndex","getTabIndex","getSortOrderTabIndex","isScope","tabIndex","sortOrderedTabbables","isInput","isHiddenInput","isDetailsWithSummary","child","getCheckedRadio","nodes","form","isTabbableRadio","radioScope","queryRadios","radioSet","err","checked","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRoot","nodeRoot","nodeRootHost","attached","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isZeroArea","_node$getBoundingClie","isHidden","_ref","displayCheck","getShadowRoot","isDirectSummary","nodeUnderDetails","originalNode","parentElement","rootNode","isDisabledFromFieldset","parentNode","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","item","candidateTabindex","sortable","tabbable","container","focusable","isTabbable","focusableCandidateSelector","isFocusable","_arrayLikeToArray","n","_arrayWithoutHoles","_defineProperty","_toPropertyKey","_iterableToArray","_nonIterableSpread","ownKeys","_objectSpread2","_toConsumableArray","_unsupportedIterableToArray","_toPrimitive","activeFocusTraps","trapStack","trap","activeTrap","trapIndex","isSelectableInput","isEscapeEvent","isTabEvent","isKeyForward","isKeyBackward","valueOrHandler","_len","params","getActualTarget","internalTrapStack","createFocusTrap","userOptions","doc","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","composedPath","tabbableNodes","getNodeForOption","_ref2","_ref2$hasFallback","hasFallback","_ref2$params","optionValue","getInitialFocusNode","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","focusableNodes","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","posTabIndexesFound","forward","nodeIdx","group","_getActiveElement","activeElement","_tryFocus","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref3","_ref3$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref4","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref5","_destinationGroupIndex","_destinationGroup","checkPointerDown","checkFocusIn","targetContained","nextNode","navAcrossContainers","mruContainerIdx","mruTabIdx","checkKeyNav","checkTabKey","checkEscapeKey","checkClick","checkDomRemoval","mutations","isFocusedNodeRemoved","mutation","removedNodes","mutationObserver","updateObservedNodes","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","returnFocus","finishDeactivation","pauseOptions","unpauseOptions","containerElements","elementsAsArray","paused","onPause","onPostPause","onUnpause","onPostUnpause","useFocusTrap","focusTrapOptions","hasFocus","isPaused","activate","opts","deactivate","pause","unpause","_e","u","He","Oe","Be","S","C","H","w","h","W","$","Ee","Ie","$e","We","Fe","ce","fe","ne","ue","Ce","I","ae","oe","Q","Pe","k","De","le","O","xe","j","Me","l","ie","he","se","P","_","F","L","te","V","K","E","re","ve","U","X","J","m","G","Z","N","Y","de","R","ee","ge","pe","me","be","ye","Se","we","ke","Te","z","Le","Ne","bottomSheet","open","maxHeight","_hoisted_1","_openBlock","_createElementBlock","_Fragment","_createElementVNode","$setup","_toDisplayString","_createVNode","_withCtx"],"mappings":"o3BAgDA,SAASA,GAAkBC,EAAI,CAC7B,OAAIC,GAAe,GACjBC,GAAeF,CAAE,EACV,IAEF,EACT,CA0CA,MAAMG,GAAwC,IAAI,QAE5CC,GAAc,IAAIC,IAAS,CAC/B,IAAIC,EACJ,MAAMC,EAAMF,EAAK,CAAC,EACZG,GAAYF,EAAKG,GAAoB,IAAK,KAAO,OAASH,EAAG,MACnE,GAAIE,GAAY,MAAQ,CAACE,GAAqB,EAC5C,MAAM,IAAI,MAAM,qCAAqC,EACvD,OAAIF,GAAYL,GAAsB,IAAIK,CAAQ,GAAKD,KAAOJ,GAAsB,IAAIK,CAAQ,EACvFL,GAAsB,IAAIK,CAAQ,EAAED,CAAG,EACzCI,GAAO,GAAGN,CAAI,CACvB,EAsLMO,GAAW,OAAO,OAAW,KAAe,OAAO,SAAa,IACrD,OAAO,kBAAsB,KAAe,sBAAsB,kBAEnF,MAAMC,GAAcC,GAAQA,GAAO,KAK7BC,GAAW,OAAO,UAAU,SAC5BC,GAAYF,GAAQC,GAAS,KAAKD,CAAG,IAAM,kBAI3CG,GAAO,IAAM,CACnB,EAOMC,GAAwBC,GAAU,EACxC,SAASA,IAAW,CAClB,IAAIb,EAAIc,EACR,OAAOR,MAAcN,EAA+B,QAAO,YAAc,KAAO,OAASA,EAAG,aAAe,mBAAmB,KAAK,OAAO,UAAU,SAAS,KAAOc,EAA+B,QAAO,YAAc,KAAO,OAASA,EAAG,gBAAkB,GAAK,iBAAiB,KAA+B,QAAO,UAAU,SAAS,EAC9U,CAyLA,SAASC,GAAQC,EAAI,CACnB,OAAOA,EAAG,SAAS,KAAK,EAAI,OAAO,WAAWA,CAAE,EAAI,GAAK,OAAO,WAAWA,CAAE,CAC/E,CAkBA,SAASC,GAAmBC,EAAQ,CAClC,OAAiBf,GAAoB,CACvC,CACA,SAASgB,GAAQC,EAAO,CACtB,OAAO,MAAM,QAAQA,CAAK,EAAIA,EAAQ,CAACA,CAAK,CAC9C,CAEA,SAASC,MAAStB,EAAM,CACtB,GAAIA,EAAK,SAAW,EAClB,OAAOuB,GAAQ,GAAGvB,CAAI,EACxB,MAAMwB,EAAIxB,EAAK,CAAC,EAChB,OAAO,OAAOwB,GAAM,WAAaC,GAASC,GAAU,KAAO,CAAE,IAAKF,EAAG,IAAKZ,EAAM,EAAC,CAAC,EAAIe,EAAIH,CAAC,CAC7F,CAwRA,SAASI,GAAajC,EAAIkC,EAAO,GAAMV,EAAQ,CAC5BD,GAAoB,EAEnCY,GAAUnC,EAAIwB,CAAM,EACbU,EACPlC,EAAI,EAEJoC,GAASpC,CAAE,CACf,CAurBA,SAASqC,GAAeC,EAAQC,EAAIC,EAAS,CAC3C,OAAOC,EACLH,EACAC,EACA,CACE,GAAGC,EACH,UAAW,EACjB,CACG,CACH,CCv0CA,MAAME,GAAgB9B,GAAW,OAAS,OAK1C,SAAS+B,GAAaC,EAAO,CACvB,IAAAtC,EACE,MAAAuC,EAAQC,EAAQF,CAAK,EAC3B,OAAQtC,EAA8BuC,GAAM,MAAQ,KAAOvC,EAAKuC,CAClE,CAEA,SAASE,MAAoB1C,EAAM,CACjC,MAAM2C,EAAW,CAAC,EACZC,EAAU,IAAM,CACpBD,EAAS,QAAShD,GAAOA,EAAA,CAAI,EAC7BgD,EAAS,OAAS,CACpB,EACME,EAAW,CAACC,EAAIC,EAAOC,EAAUb,KAClCW,EAAA,iBAAiBC,EAAOC,EAAUb,CAAO,EACrC,IAAMW,EAAG,oBAAoBC,EAAOC,EAAUb,CAAO,GAExDc,EAAoBC,EAAS,IAAM,CACvC,MAAMC,EAAO/B,GAAQqB,EAAQzC,EAAK,CAAC,CAAC,CAAC,EAAE,OAAQoD,GAAMA,GAAK,IAAI,EACvD,OAAAD,EAAK,MAAOC,GAAM,OAAOA,GAAM,QAAQ,EAAID,EAAO,MAAA,CAC1D,EACKE,EAAYrB,GAChB,IAAM,CACJ,IAAI/B,EAAIc,EACD,MAAA,EACJA,GAAMd,EAAKgD,EAAkB,QAAU,KAAO,OAAShD,EAAG,IAAKmD,GAAMd,GAAac,CAAC,CAAC,IAAM,KAAOrC,EAAK,CAACsB,EAAa,EAAE,OAAQe,GAAMA,GAAK,IAAI,EAC9IhC,GAAQqB,EAAQQ,EAAkB,MAAQjD,EAAK,CAAC,EAAIA,EAAK,CAAC,CAAC,CAAC,EAC5DoB,GAAQkC,GAAML,EAAkB,MAAQjD,EAAK,CAAC,EAAIA,EAAK,CAAC,CAAC,CAAC,EAE1DyC,EAAQQ,EAAkB,MAAQjD,EAAK,CAAC,EAAIA,EAAK,CAAC,CAAC,CACrD,CACF,EACA,CAAC,CAACuD,EAAaC,EAAYC,EAAeC,CAAW,IAAM,CAEzD,GADQd,EAAA,EACJ,CAAiCW,GAAY,QAAW,CAAgCC,GAAW,QAAW,CAAmCC,GAAc,OACjK,OACF,MAAME,EAAehD,GAAS+C,CAAW,EAAI,CAAE,GAAGA,GAAgBA,EACzDf,EAAA,KACP,GAAGY,EAAY,QACZT,GAAOU,EAAW,QAChBT,GAAUU,EAAc,IAAKT,GAAaH,EAASC,EAAIC,EAAOC,EAAUW,CAAY,CAAC,CAAA,CACxF,CAEJ,CACF,EACA,CAAE,MAAO,MAAO,CAClB,EACMC,EAAO,IAAM,CACPP,EAAA,EACFT,EAAA,CACV,EACA,OAAAlD,GAAkBkD,CAAO,EAClBgB,CACT,CA8FA,SAASC,IAAa,CACd,MAAAC,EAAYC,EAAW,EAAK,EAC5B5D,EAAWC,GAAmB,EACpC,OAAID,GACF2B,GAAU,IAAM,CACdgC,EAAU,MAAQ,IACjB3D,CAAQ,EAEN2D,CACT,CAEA,SAASE,GAAaC,EAAU,CAC9B,MAAMH,EAAYD,GAAW,EAC7B,OAAOX,EAAS,KACJY,EAAA,MACH,EAAQG,IAChB,CACH,CAEA,SAASC,GAAoB/C,EAAQ8C,EAAU9B,EAAU,CAAA,EAAI,CAC3D,KAAM,CAAE,OAAAgC,EAAS9B,GAAe,GAAG+B,CAAoB,EAAAjC,EACnD,IAAAkC,EACJ,MAAMC,EAAcN,GAAa,IAAMG,GAAU,qBAAsBA,CAAM,EACvEvB,EAAU,IAAM,CAChByB,IACFA,EAAS,WAAW,EACTA,EAAA,OAEf,EACME,EAAUrB,EAAS,IAAM,CACvB,MAAA7B,EAAQoB,EAAQtB,CAAM,EACtBqD,EAAQpD,GAAQC,CAAK,EAAE,IAAIiB,EAAY,EAAE,OAAO9B,EAAU,EACzD,OAAA,IAAI,IAAIgE,CAAK,CAAA,CACrB,EACKnB,EAAYjB,EAChB,IAAMmC,EAAQ,MACbE,GAAa,CACJ7B,EAAA,EACJ0B,EAAY,OAASG,EAAS,OACrBJ,EAAA,IAAI,iBAAiBJ,CAAQ,EACxCQ,EAAS,QAAS3B,GAAOuB,EAAS,QAAQvB,EAAIsB,CAAe,CAAC,EAElE,EACA,CAAE,UAAW,GAAM,MAAO,MAAO,CACnC,EACMM,EAAc,IACiBL,GAAS,YAAY,EAEpDT,EAAO,IAAM,CACPP,EAAA,EACFT,EAAA,CACV,EACA,OAAAlD,GAAkBkE,CAAI,EACf,CACL,YAAAU,EACA,KAAAV,EACA,YAAAc,CACF,CACF,CAm4BA,MAAMC,GAAiB,OAAO,kBAAkB,EAChD,SAASC,IAAc,CACrB,MAAMC,EAAWxE,GAAoB,EAAIN,GAAY4E,GAAgB,IAAI,EAAI,KACtE,OAAA,OAAOE,GAAa,SAAWA,EAAW,MACnD,CASA,SAASC,GAAcC,EAAO5C,EAAU,GAAI,CAC1C,KAAM,CAAE,OAAAgC,EAAS9B,GAAe,SAAAwC,EAAWD,MAAkBzC,EACvDmC,EAAcN,GAAa,IAAMG,GAAU,eAAgBA,GAAU,OAAOA,EAAO,YAAe,UAAU,EAC5Ga,EAAajB,EAAW,OAAOc,GAAa,QAAQ,EACpDI,EAAalB,EAAW,EACxBmB,EAAUnB,EAAW,EAAK,EAC1BoB,EAAWpC,GAAU,CACzBmC,EAAQ,MAAQnC,EAAM,OACxB,EACA,OAAAqC,GAAY,IAAM,CAChB,GAAIJ,EAAW,MAAO,CACTA,EAAA,MAAQ,CAACV,EAAY,MAChC,MAAMe,EAAe5C,EAAQsC,CAAK,EAAE,MAAM,GAAG,EAC7CG,EAAQ,MAAQG,EAAa,KAAMC,GAAgB,CAC3C,MAAAC,EAAMD,EAAY,SAAS,SAAS,EACpCE,EAAWF,EAAY,MAAM,gDAAgD,EAC7EG,EAAWH,EAAY,MAAM,gDAAgD,EAC/E,IAAAI,EAAM,GAAQF,GAAYC,GAC9B,OAAID,GAAYE,IACdA,EAAMb,GAAY7D,GAAQwE,EAAS,CAAC,CAAC,GAEnCC,GAAYC,IACdA,EAAMb,GAAY7D,GAAQyE,EAAS,CAAC,CAAC,GAEhCF,EAAM,CAACG,EAAMA,CAAA,CACrB,EACD,MAAA,CAEGpB,EAAY,QAEjBW,EAAW,MAAQd,EAAO,WAAW1B,EAAQsC,CAAK,CAAC,EAC3CG,EAAA,MAAQD,EAAW,MAAM,QAAA,CAClC,EACDvC,GAAiBuC,EAAY,SAAUE,EAAS,CAAE,QAAS,GAAM,EAC1DjC,EAAS,IAAMgC,EAAQ,KAAK,CACrC,CAugDA,SAASS,GAAkBxE,EAAQ8C,EAAU9B,EAAU,CAAA,EAAI,CACzD,KAAM,CAAE,OAAAgC,EAAS9B,GAAe,GAAGuD,CAAoB,EAAAzD,EACnD,IAAAkC,EACJ,MAAMC,EAAcN,GAAa,IAAMG,GAAU,mBAAoBA,CAAM,EACrEvB,EAAU,IAAM,CAChByB,IACFA,EAAS,WAAW,EACTA,EAAA,OAEf,EACME,EAAUrB,EAAS,IAAM,CACvB,MAAA2C,EAAWpD,EAAQtB,CAAM,EAC/B,OAAO,MAAM,QAAQ0E,CAAQ,EAAIA,EAAS,IAAK/C,GAAOR,GAAaQ,CAAE,CAAC,EAAI,CAACR,GAAauD,CAAQ,CAAC,CAAA,CAClG,EACKxC,EAAYjB,EAChBmC,EACCuB,GAAQ,CAEH,GADIlD,EAAA,EACJ0B,EAAY,OAASH,EAAQ,CACpBE,EAAA,IAAI,eAAeJ,CAAQ,EACtC,UAAW8B,KAAOD,EACZC,GACO1B,EAAA,QAAQ0B,EAAKH,CAAe,CACzC,CAEJ,EACA,CAAE,UAAW,GAAM,MAAO,MAAO,CACnC,EACMhC,EAAO,IAAM,CACThB,EAAA,EACES,EAAA,CACZ,EACA,OAAA3D,GAAkBkE,CAAI,EACf,CACL,YAAAU,EACA,KAAAV,CACF,CACF,CAEA,SAASoC,GAAmB7E,EAAQgB,EAAU,GAAI,CAC1C,KAAA,CACJ,MAAA8D,EAAQ,GACR,aAAAC,EAAe,GACf,aAAAC,EAAe,GACf,UAAAC,EAAY,GACZ,aAAAC,EAAe,MAAA,EACblE,EACEmE,EAASvC,EAAW,CAAC,EACrBwC,EAASxC,EAAW,CAAC,EACrByC,EAAOzC,EAAW,CAAC,EACnB0C,EAAQ1C,EAAW,CAAC,EACpB2C,EAAM3C,EAAW,CAAC,EAClB4C,EAAQ5C,EAAW,CAAC,EACpB6C,EAAI7C,EAAW,CAAC,EAChB8C,EAAI9C,EAAW,CAAC,EACtB,SAAS+C,GAAc,CACf,MAAAhE,EAAKR,GAAanB,CAAM,EAC9B,GAAI,CAAC2B,EAAI,CACHmD,IACFK,EAAO,MAAQ,EACfC,EAAO,MAAQ,EACfC,EAAK,MAAQ,EACbC,EAAM,MAAQ,EACdC,EAAI,MAAQ,EACZC,EAAM,MAAQ,EACdC,EAAE,MAAQ,EACVC,EAAE,MAAQ,GAEZ,MAAA,CAEI,MAAAE,EAAOjE,EAAG,sBAAsB,EACtCwD,EAAO,MAAQS,EAAK,OACpBR,EAAO,MAAQQ,EAAK,OACpBP,EAAK,MAAQO,EAAK,KAClBN,EAAM,MAAQM,EAAK,MACnBL,EAAI,MAAQK,EAAK,IACjBJ,EAAM,MAAQI,EAAK,MACnBH,EAAE,MAAQG,EAAK,EACfF,EAAE,MAAQE,EAAK,CAAA,CAEjB,SAASC,GAAS,CACZX,IAAiB,OACPS,EAAA,EACLT,IAAiB,cACF,sBAAA,IAAMS,GAAa,CAAA,CAE7C,OAAAnB,GAAkBxE,EAAQ6F,CAAM,EAC1B5E,EAAA,IAAME,GAAanB,CAAM,EAAI8F,GAAQ,CAACA,GAAOD,GAAQ,EAC3D9C,GAAoB/C,EAAQ6F,EAAQ,CAClC,gBAAiB,CAAC,QAAS,OAAO,CAAA,CACnC,EACGb,GACFzD,GAAiB,SAAUsE,EAAQ,CAAE,QAAS,GAAM,QAAS,GAAM,EACjEd,GACFxD,GAAiB,SAAUsE,EAAQ,CAAE,QAAS,GAAM,EACtDpF,GAAa,IAAM,CACbwE,GACKY,EAAA,CAAA,CACV,EACM,CACL,OAAAV,EACA,OAAAC,EACA,KAAAC,EACA,MAAAC,EACA,IAAAC,EACA,MAAAC,EACA,EAAAC,EACA,EAAAC,EACA,OAAAG,CACF,CACF,CAk1CA,SAASE,GAAepE,EAAI,CACtB,OAAA,OAAO,OAAW,KAAeA,aAAc,OAC1CA,EAAG,SAAS,gBACjB,OAAO,SAAa,KAAeA,aAAc,SAC5CA,EAAG,gBACLA,CACT,CAulDA,SAASqE,GAAoBF,EAAK,CAC1B,MAAAG,EAAQ,OAAO,iBAAiBH,CAAG,EACzC,GAAIG,EAAM,YAAc,UAAYA,EAAM,YAAc,UAAYA,EAAM,YAAc,QAAUH,EAAI,YAAcA,EAAI,aAAeG,EAAM,YAAc,QAAUH,EAAI,aAAeA,EAAI,aACnL,MAAA,GACF,CACL,MAAMI,EAASJ,EAAI,WACf,MAAA,CAACI,GAAUA,EAAO,UAAY,OACzB,GACFF,GAAoBE,CAAM,CAAA,CAErC,CACA,SAASC,GAAeC,EAAU,CAC1B,MAAA,EAAIA,GAAY,OAAO,MACvBC,EAAU,EAAE,OAClB,OAAIL,GAAoBK,CAAO,EACtB,GACL,EAAE,QAAQ,OAAS,EACd,IACL,EAAE,gBACJ,EAAE,eAAe,EACZ,GACT,CACA,MAAMC,OAAwC,QAC9C,SAASC,GAAcC,EAASC,EAAe,GAAO,CAC9C,MAAAC,EAAW9D,EAAW6D,CAAY,EACxC,IAAIE,EAAwB,KACxBC,EAAkB,GACtB3F,EAAMd,GAAMqG,CAAO,EAAI7E,GAAO,CAC5B,MAAM3B,EAAS+F,GAAezE,EAAQK,CAAE,CAAC,EACzC,GAAI3B,EAAQ,CACV,MAAM8F,EAAM9F,EAKR,GAJCsG,GAAkB,IAAIR,CAAG,GAC5BQ,GAAkB,IAAIR,EAAKA,EAAI,MAAM,QAAQ,EAC3CA,EAAI,MAAM,WAAa,WACzBc,EAAkBd,EAAI,MAAM,UAC1BA,EAAI,MAAM,WAAa,SACzB,OAAOY,EAAS,MAAQ,GAC1B,GAAIA,EAAS,MACJ,OAAAZ,EAAI,MAAM,SAAW,QAAA,CAChC,EACC,CACD,UAAW,EAAA,CACZ,EACD,MAAMe,EAAO,IAAM,CACjB,MAAMlF,EAAKoE,GAAezE,EAAQkF,CAAO,CAAC,EACtC,CAAC7E,GAAM+E,EAAS,QAEhBhH,KACsBiH,EAAApF,GACtBI,EACA,YACCM,GAAM,CACLkE,GAAelE,CAAC,CAClB,EACA,CAAE,QAAS,EAAM,CACnB,GAEFN,EAAG,MAAM,SAAW,SACpB+E,EAAS,MAAQ,GACnB,EACMI,EAAS,IAAM,CACnB,MAAMnF,EAAKoE,GAAezE,EAAQkF,CAAO,CAAC,EACtC,CAAC7E,GAAM,CAAC+E,EAAS,QAEjBhH,IACuCiH,IAAsB,EACjEhF,EAAG,MAAM,SAAWiF,EACpBN,GAAkB,OAAO3E,CAAE,EAC3B+E,EAAS,MAAQ,GACnB,EACA,OAAAnI,GAAkBuI,CAAM,EACjB/E,EAAS,CACd,KAAM,CACJ,OAAO2E,EAAS,KAClB,EACA,IAAIK,EAAG,CACDA,EACGF,EAAA,EACKC,EAAA,CAAA,CACd,CACD,CACH,CAo4DA,SAASE,GAAchG,EAAU,GAAI,CAC7B,KAAA,CACJ,OAAAgC,EAAS9B,GACT,aAAA+F,EAAe,OAAO,kBACtB,cAAAC,EAAgB,OAAO,kBACvB,kBAAAC,EAAoB,GACpB,iBAAAC,EAAmB,GACnB,KAAAC,EAAO,OAAA,EACLrG,EACEwE,EAAQ5C,EAAWqE,CAAY,EAC/B9B,EAASvC,EAAWsE,CAAa,EACjCrB,EAAS,IAAM,CACnB,GAAI7C,EACF,GAAIqE,IAAS,QACX7B,EAAM,MAAQxC,EAAO,WACrBmC,EAAO,MAAQnC,EAAO,oBACbqE,IAAS,UAAYrE,EAAO,eAAgB,CACrD,KAAM,CAAE,MAAOsE,EAAqB,OAAQC,EAAsB,MAAAC,CAAA,EAAUxE,EAAO,eACnFwC,EAAM,MAAQ,KAAK,MAAM8B,EAAsBE,CAAK,EACpDrC,EAAO,MAAQ,KAAK,MAAMoC,EAAuBC,CAAK,OAC7CJ,GACT5B,EAAM,MAAQxC,EAAO,WACrBmC,EAAO,MAAQnC,EAAO,cAEhBwC,EAAA,MAAQxC,EAAO,SAAS,gBAAgB,YACvCmC,EAAA,MAAQnC,EAAO,SAAS,gBAAgB,aAGrD,EACO6C,EAAA,EACPpF,GAAaoF,CAAM,EACb,MAAA4B,EAAkB,CAAE,QAAS,EAAK,EAKxC,GAJiBlG,GAAA,SAAUsE,EAAQ4B,CAAe,EAC9CzE,GAAUqE,IAAS,UAAYrE,EAAO,gBACxCzB,GAAiByB,EAAO,eAAgB,SAAU6C,EAAQ4B,CAAe,EAEvEN,EAAmB,CACf,MAAApD,EAAUJ,GAAc,yBAAyB,EACjD1C,EAAA8C,EAAS,IAAM8B,GAAQ,CAAA,CAExB,MAAA,CAAE,MAAAL,EAAO,OAAAL,CAAO,CACzB,CCh1PA,SAASuC,IAAwB,CAC3B,GAAA,CACF,MAAO,gBAAiB,kBACd,CACH,MAAA,EAAA,CAEX,CACA,SAASC,IAAsB,CACtB,OAAA,OAAO,OAAW,KAAe,iBAAkB,MAC5D,CACA,SAASC,GAAgBhG,EAAO,CAC9B,MAAI,cAAeA,EACV,KACFA,EAAM,OAAS,WAAaA,EAAM,eAAiBA,EAAM,aAClE,CACA,SAASiG,GAAYjG,EAAO,CACnB,OAAA,MAAM,KAAKgG,GAAgBhG,CAAK,CAAC,EAAE,IAAKkG,GAAMA,EAAE,UAAU,CACnE,CACA,SAASC,EAAoBnG,EAAO,CAClC,MAAMoG,EAAU,YAAapG,EAAQA,EAAM,QAAU,EAC/C,CAAE,SAAAqG,EAAU,OAAAC,EAAQ,QAAAC,EAAS,QAAAC,CAAY,EAAAxG,EAC/C,MAAO,CAAE,QAAAoG,EAAS,SAAAC,EAAU,OAAAC,EAAQ,QAAAC,EAAS,QAAAC,CAAQ,CACvD,CACA,MAAMC,GAAcC,GAAOA,EAC3B,SAASC,GAAsB3G,EAAO4G,EAAYH,GAAY,CACtD,MAAAI,EAAcb,GAAgBhG,CAAK,EACnC,CAAE,QAAA8G,EAAS,QAAAC,GAAYF,EAAcA,EAAY,CAAC,EAAI7G,EAC5D,OAAO4G,EAAU,CAACE,EAASC,CAAO,CAAC,CACrC,CACA,SAASC,GAAyBhH,EAAOiH,EAAYL,EAAYH,GAAY,CACrE,KAAA,CAACS,EAAGC,CAAC,EAAI,MAAM,KAAKnH,EAAM,OAAO,EAAE,OACtCkG,GAAMe,EAAW,SAASf,EAAE,UAAU,CACzC,EACI,GAAA,CAACgB,GAAK,CAACC,EACT,MAAM,MAAM,6DAA6D,EACrE,MAAAC,EAAKD,EAAE,QAAUD,EAAE,QACnBG,EAAKF,EAAE,QAAUD,EAAE,QACnBI,GAAMH,EAAE,QAAUD,EAAE,SAAW,EAC/BK,GAAMJ,EAAE,QAAUD,EAAE,SAAW,EAC/BM,EAAW,KAAK,MAAMJ,EAAIC,CAAE,EAC5BI,EAAQ,EAAE,KAAK,MAAML,EAAIC,CAAE,EAAI,KAAO,KAAK,GAC3CK,EAASd,EAAU,CAACY,EAAUC,CAAK,CAAC,EACpCE,EAASf,EAAU,CAACU,EAAIC,CAAE,CAAC,EAC1B,MAAA,CAAE,OAAAG,EAAQ,OAAAC,CAAO,CAC1B,CACA,SAASC,GAAqB5H,EAAO4G,EAAYH,GAAY,CACrD,KAAA,CACJ,QAAAoB,EACA,QAAAC,EACA,WAAAC,EACA,UAAAC,GACEhI,EAAM,cACH,OAAA4G,EAAU,CAACiB,GAAWE,GAAc,EAAGD,GAAWE,GAAa,CAAC,CAAC,CAC1E,CACA,MAAMC,GAAc,GACdC,GAAc,IACpB,SAASC,GAAoBnI,EAAO4G,EAAYH,GAAY,CAC1D,GAAI,CAAE,OAAA2B,EAAQ,OAAAC,EAAQ,UAAAC,CAAc,EAAAtI,EACpC,OAAIsI,IAAc,GACNF,GAAAH,GACAI,GAAAJ,IACDK,IAAc,IACbF,GAAAF,GACAG,GAAAH,IAELtB,EAAU,CAACwB,EAAQC,CAAM,CAAC,CACnC,CACA,SAASE,GAA4BvI,EAAO4G,EAAYH,GAAY,CAClE,OAAOG,EAAU,CAAC5G,EAAM,MAAOA,EAAM,QAAQ,CAAC,CAChD,CAEA,SAASnC,IAAO,CAChB,CACA,SAAS2K,MAAYC,EAAK,CACxB,OAAIA,EAAI,SAAW,EACV5K,GACL4K,EAAI,SAAW,EACVA,EAAI,CAAC,EACP,UAAW,CACZ,IAAAC,EACJ,QAAS9L,KAAM6L,EACbC,EAAS9L,EAAG,MAAM,KAAM,SAAS,GAAK8L,EAEjC,OAAAA,CACT,CACF,CACA,SAASC,GAAarK,EAAOsK,EAAU,CACrC,GAAItK,IAAU,OAAQ,CACpB,GAAIsK,IAAa,OACT,MAAA,IAAI,MAAM,qDAAqD,EAE/DtK,EAAAsK,CAAA,CAEN,OAAA,MAAM,QAAQtK,CAAK,EACdA,EACF,CAACA,EAAOA,CAAK,CACtB,CACA,SAASuK,GAAcvK,EAAOsK,EAAU,CACtC,OAAO,OAAO,OAAO,CAAA,EAAIA,EAAUtK,GAAS,CAAA,CAAE,CAChD,CACA,SAASwK,GAAQ3D,KAAMlI,EAAM,CACvB,OAAA,OAAOkI,GAAM,WACRA,EAAE,GAAGlI,CAAI,EAETkI,CAEX,CAEA,SAAS4D,GAAWC,EAAO,CAClB,MAAA,CACL,QAAS,GACT,SAAU,GACV,aAAc,CAAC,GAAO,EAAK,EAC3B,UAAW,CAAC,EAAG,CAAC,EAChB,SAAU,CAAC,EAAG,CAAC,EACf,QAAS,CACP,CAAC,KAAW,GAAQ,EACpB,CAAC,KAAW,GAAQ,CACtB,EACA,eAAgB,OAChB,aAAc,GACd,mBAAoB,GACpB,WAAY,GACZ,aAAc,GACd,MAAO,OACP,YAAa,GACb,OAAQ,CAAC,EAAG,CAAC,EACb,WAAY,CAAC,EAAG,CAAC,EACjB,MAAO,CAAC,EAAG,CAAC,EACZ,SAAU,CAAC,EAAG,CAAC,EACf,OAAQ,CAAC,EAAG,CAAC,EACb,WAAY,CAAC,EAAG,CAAC,EACjB,UAAW,CAAC,EAAG,CAAC,EAChB,QAAS,CAAC,EAAG,CAAC,EACd,SAAU,CAAC,EAAG,CAAC,EACf,MAAO,GACP,KAAM,GACN,OAAQ,GACR,UAAW,EACX,UAAW,EACX,YAAa,EACb,OAAQnL,GACR,SAAU,GACV,KAAM,OACN,KAAM,OACN,GAAGmL,CACL,CACF,CACA,SAASC,IAAkB,CACzB,MAAMC,EAAS,CACb,SAAU,GACV,UAAW,GACX,SAAU,GACV,SAAU,GACV,OAAQ,GACR,SAAU,GACV,QAAS,EACT,QAAS,EACT,KAAM,GACN,SAAU,GACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,OAAQ,EACV,EACMC,EAAOJ,GAAW,CACtB,WAAY,OACZ,KAAM,OACN,GAAI,CAAC,EAAG,CAAC,EACT,KAAM,CAAC,EAAG,CAAC,EACX,SAAU,EACV,SAAU,EACV,IAAK,GACL,MAAO,CAAC,EAAG,CAAC,CAAA,CACb,EACKK,EAAQL,GAAW,CAEvB,YAAa,CAAC,EACd,GAAI,CAAC,EAAG,CAAC,EACT,KAAM,CAAC,EAAG,CAAC,EAEX,OAAQ,OACR,MAAO,CAAA,CACR,EACKM,EAAQN,GAAW,CACvB,KAAM,OACN,GAAI,CAAC,EAAG,CAAC,EACT,KAAM,CAAC,EAAG,CAAC,EACX,SAAU,EACV,SAAU,CAAA,CACX,EACKO,EAAOP,GAAW,CACtB,KAAM,OACN,GAAI,CAAC,EAAG,CAAC,EACT,KAAM,CAAC,EAAG,CAAC,EACX,SAAU,EACV,SAAU,CAAA,CACX,EACKQ,EAASR,GAAW,CACxB,KAAM,OACN,GAAI,CAAC,EAAG,CAAC,EACT,KAAM,CAAC,EAAG,CAAC,EACX,SAAU,EACV,SAAU,CAAA,CACX,EACM,MAAA,CAAE,OAAAG,EAAQ,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,OAAAC,CAAO,CACpD,CAEA,IAAIC,GAAc,OAAO,eACrBC,GAAoB,CAACC,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAMF,GAAYE,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EAC1JqL,EAAkB,CAACD,EAAKvM,EAAKmB,KAC/BmL,GAAkBC,EAAK,OAAOvM,GAAQ,SAAWA,EAAM,GAAKA,EAAKmB,CAAK,EAC/DA,GAET,MAAMsL,EAAW,CACf,YAAYC,EAAS,CACnB,KAAK,QAAUA,EACfF,EAAgB,KAAM,YAAY,EAClCA,EAAgB,KAAM,QAAQ,EAC9BA,EAAgB,KAAM,UAAU,EAChCA,EAAgB,KAAM,OAAO,EAE7BA,EAAgB,KAAM,UAAU,EAEhCA,EAAgB,KAAM,cAAc,EAEpCA,EAAgB,KAAM,iBAAiB,EAEvCA,EAAgB,KAAM,aAAkC,IAAA,GAAK,EAE7DA,EAAgB,KAAM,WAAgC,IAAA,GAAK,EAE3CA,EAAA,KAAM,sBAAuB5D,IAAqB,EAClD4D,EAAA,KAAM,wBAAyB7D,IAAuB,EACtD6D,EAAA,KAAM,OAAQ,IAAI1M,IAAS,CACzC,MAAM6M,EAAW,CAAC,EAClB,QAASC,KAAoB,KAAK,QAChC,IAAIA,EAAiB,KAAM9M,CAAI,EAAE,YAAY6M,CAAQ,EAC9C,QAAAE,KAAY,KAAK,WACxBC,EACEH,EACAE,EACChK,GAAU,KAAK,WAAWgK,CAAQ,EAAE,CAAE,GAAG,KAAK,MAAM,OAAQ,MAAAhK,EAAO,KAAA/C,CAAM,CAAA,CAC5E,EAEE,OAAA,KAAK,OAAO,UACPiN,GAAmB,KAAMJ,CAAQ,EAEjCK,GAAiB,KAAML,CAAQ,CACxC,CACD,EAIeH,EAAA,KAAM,QAAS,IAAM,CACnC,KAAM,CAAE,aAAAS,EAAc,UAAAC,CAAU,EAAI,KAAK,OACnC5F,EAAUlE,GAAM8J,CAAS,EAC3B5F,GACF6F,GAAgB7F,EAAS8F,GAAQ,KAAK,YAAY,EAAGH,CAAY,EACnE,OAAO,OAAO,KAAK,QAAQ,EAAE,QAAQ,YAAY,EACjDI,GAAwB,IAAI,CAAA,CAC7B,EAIeb,EAAA,KAAM,QAAS,IAAM,CACnC,KAAK,MAAQV,GAAgB,CAAA,CAC9B,EACD,KAAK,QAAUY,EACf,KAAK,MAAQZ,GAAgB,EAC7B,KAAK,SAAW,CAAC,EACjB,KAAK,aAAe,CAAC,EACrB,KAAK,gBAAkB,CAAC,CAAA,CAE5B,CACA,SAASwB,GAAYC,EAAY1K,EAAO,CAClC,cAAeA,EACN0K,EAAA,WAAW,IAAI1K,EAAM,SAAS,EAEzC0K,EAAW,SAAW,IAAI,IAAIzE,GAAYjG,CAAK,CAAC,CAEpD,CACA,SAAS2K,GAAeD,EAAY1K,EAAO,CACrC,cAAeA,EACN0K,EAAA,WAAW,OAAO1K,EAAM,SAAS,EAEhCiG,GAAAjG,CAAK,EAAE,QAAS4K,GAAOF,EAAW,SAAS,OAAOE,CAAE,CAAC,CAErE,CACA,SAASJ,GAAwBE,EAAY,CACrC,KAAA,CACJ,OAAQ,CAAE,OAAQ3K,EAAI,aAAAqK,CAAa,EACnC,gBAAAS,CAAA,EACEH,EACE1H,EAAMzC,GAAMR,CAAE,EACpB,GAAKiD,EAEL,SAAS8H,KAAYD,EAAiB,CAC9B,MAAAE,EAAWF,EAAgBC,CAAQ,EACzBR,GAAAtH,EAAK+H,EAAUX,CAAY,CAAA,CAE7CM,EAAW,gBAAkB,CAAC,EAChC,CACA,SAASM,GAAqB,CAAE,OAAAC,EAAQ,gBAAAJ,CAAA,EAAmBC,EAAU1L,EAAU6L,EAAO,aAAc,CAC5F,MAAAC,EAAU3K,GAAM0K,EAAO,MAAM,EAC9BC,IAELZ,GAAgBY,EAASL,EAAgBC,CAAQ,EAAG1L,CAAO,EAC3D,OAAOyL,EAAgBC,CAAQ,EACjC,CACA,SAASK,GAAsB,CAAE,OAAAF,EAAQ,gBAAAJ,GAAmBC,EAAUM,EAAY,GAAIhM,EAAU6L,EAAO,aAAc,CAC7G,MAAAC,EAAU3K,GAAM0K,EAAO,MAAM,EAC9BC,IAELZ,GAAgBY,EAASL,EAAgBC,CAAQ,EAAG1L,CAAO,EAC3DiM,GAAaH,EAASL,EAAgBC,CAAQ,EAAIM,EAAWhM,CAAO,EACtE,CACA,SAAS8K,GAAmB,CAAE,OAAAe,EAAQ,aAAAK,CAAA,EAAgBxB,EAAU,CACxD,KAAA,CAAE,aAAAM,EAAc,UAAAC,CAAA,EAAcY,EAC9BxG,EAAUlE,GAAM8J,CAAS,EAC/B,GAAI,CAAC5F,EACG,MAAA,IAAI,MAAM,2BAA2B,EAC7C6F,GAAgB7F,EAAS8F,GAAQe,CAAY,EAAGlB,CAAY,EAC5D,OAAS,CAACjN,EAAKsL,CAAG,IAAK,OAAO,QAAQqB,CAAQ,EAAG,CAC/C,MAAMyB,EAAOpO,EAAI,MAAM,CAAC,EAAE,YAAY,EACtCmO,EAAa,KAAK,CAACC,EAAM/C,GAAS,GAAGC,CAAG,CAAC,CAAC,CAAA,CAE/B4C,GAAA5G,EAAS6G,EAAclB,CAAY,CAClD,CACA,SAASD,GAAiB,CAAE,OAAAc,CAAO,EAAGnB,EAAU,CAC9C,MAAM0B,EAAQ,CAAC,EACTC,EAAgBR,EAAO,aAAa,QAAU,UAAY,GAChE,OAAS,CAACjL,EAAOyI,CAAG,IAAK,OAAO,QAAQqB,CAAQ,EAAG,CACjD,MAAM4B,EAAW,MAAM,QAAQjD,CAAG,EAAIA,EAAM,CAACA,CAAG,EAC1CtL,EAAM6C,EAAQyL,EACpBD,EAAMrO,CAAG,EAAIqL,GAAS,GAAGkD,CAAQ,CAAA,CAE5B,OAAAF,CACT,CACA,SAASjB,GAAQoB,EAAQ,GAAI,CAC3B,OAAOA,EAAM,OAAO,EAAGA,EAAM,MAAM,CACrC,CACA,SAAS1B,EAAYH,EAAUyB,EAAM3O,EAAI,CAClCkN,EAASyB,CAAI,IACPzB,EAAAyB,CAAI,EAAI,CAAC,GACXzB,EAAAyB,CAAI,EAAE,KAAK3O,CAAE,CACxB,CACA,SAASyO,GAAatL,EAAIqL,EAAY,CAAA,EAAIhM,EAAU,CAAA,EAAI,CACtD,GAAKW,EAEL,OAAS,CAAC6L,EAAWC,CAAY,IAAKT,EACjCrL,EAAA,iBAAiB6L,EAAWC,EAAczM,CAAO,CAExD,CACA,SAASkL,GAAgBvK,EAAIqL,EAAY,CAAA,EAAIhM,EAAU,CAAA,EAAI,CACzD,GAAKW,EAEL,OAAS,CAAC6L,EAAWC,CAAY,IAAKT,EACjCrL,EAAA,oBAAoB6L,EAAWC,EAAczM,CAAO,CAE3D,CAEA,SAAS0M,GAAKC,EAAIC,EAAI,CACb,OAAAD,EAAG,IAAI,CAAC5G,EAAG8G,IAAM9G,EAAI6G,EAAGC,CAAC,CAAC,CACnC,CACA,SAASC,GAAKH,EAAIC,EAAI,CACb,OAAAD,EAAG,IAAI,CAAC5G,EAAG8G,IAAM9G,EAAI6G,EAAGC,CAAC,CAAC,CACnC,CACA,SAASE,GAAkBC,EAAU,CAC5B,OAAA,KAAK,MAAM,GAAGA,CAAQ,CAC/B,CACA,SAASC,GAAqBD,EAAUE,EAAQF,EAAU,CAClD,MAAAG,EAAKJ,GAAkBG,CAAK,EAC5BE,EAAQD,IAAO,EAAI,EAAI,EAAIA,EAC3BE,EAAYH,EAAM,IAAKnH,GAAMqH,EAAQrH,CAAC,EAErC,MAAA,CAAE,SADQgH,GAAkBC,CAAQ,EACxB,UAAAK,CAAU,CAC/B,CACA,SAASC,GAAuBN,EAAUE,EAAOK,EAAI,CAC7C,MAAAJ,EAAKJ,GAAkBG,CAAK,EAC5BE,EAAQD,IAAO,EAAI,EAAI,EAAIA,EAC3BK,EAAOD,IAAO,EAAI,EAAI,EAAIA,EAC1BE,EAAWD,EAAOL,EAClBO,EAAaR,EAAM,IAAKnH,GAAMyH,EAAOzH,CAAC,EACtCsH,EAAYH,EAAM,IAAKnH,GAAMqH,EAAQrH,CAAC,EACtCqC,EAAW2E,GAAkBC,CAAQ,EAC3C,MAAO,CAAE,WAAAU,EAAY,SAAAD,EAAU,SAAArF,EAAU,UAAAiF,CAAU,CACrD,CACA,SAASM,GAAKlJ,EAAG,CACf,OAAI,KAAK,KACA,KAAK,KAAKA,CAAC,EACb,EAAOA,EAAI,GAAK,EAAOA,EAAI,IAAM,CAACA,CAC3C,CAEA,SAASmJ,GAAO1O,EAAO2O,EAAKC,EAAK,CAC/B,OAAO,KAAK,IAAID,EAAK,KAAK,IAAI3O,EAAO4O,CAAG,CAAC,CAC3C,CACA,SAASC,GAAY3F,EAAU4F,EAAU,CACvC,OAAO,KAAK,IAAI5F,EAAU4F,EAAW,CAAC,CACxC,CACA,SAASC,GAAW7F,EAAU8F,EAAWF,EAAU,CACjD,OAAIE,IAAc,GAAK,KAAK,IAAIA,CAAS,IAAM,IACtCH,GAAY3F,EAAU4F,CAAQ,EAChC5F,EAAW8F,EAAYF,GAAYE,EAAYF,EAAW5F,EACnE,CACA,SAAS+F,GAAwBC,EAAUP,EAAKC,EAAKE,EAAW,IAAM,CACpE,OAAIA,IAAa,EACRJ,GAAOQ,EAAUP,EAAKC,CAAG,EAC9BM,EAAWP,EACN,CAACI,GAAWJ,EAAMO,EAAUN,EAAMD,EAAKG,CAAQ,EAAIH,EACxDO,EAAWN,EACN,CAACG,GAAWG,EAAWN,EAAKA,EAAMD,EAAKG,CAAQ,EAAIF,EACrDM,CACT,CAEA,IAAIC,GAAc,OAAO,eACrBC,GAAoB,CAAChE,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAM+D,GAAY/D,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EAC1JqP,GAAkB,CAACjE,EAAKvM,EAAKmB,KAC/BoP,GAAkBhE,EAAK,OAAOvM,GAAQ,SAAWA,EAAM,GAAKA,EAAKmB,CAAK,EAC/DA,GAET,MAAMsP,MAAqC,IACrCC,GAAYnH,GAAOA,EACzB,MAAMoH,EAAW,CAOf,YAAYpD,EAAYzN,EAAO,GAAI,CACjC,KAAK,WAAayN,EAClB,KAAK,KAAOzN,EAEI0Q,GAAA,KAAM,YAAa,EAAI,EAEvCA,GAAgB,KAAM,aAAc,CAACzM,EAAU6M,EAAK,OAAQ9Q,IAAS,CACnE,aAAa,KAAK,WAAW,SAAS,KAAK,QAAQ,CAAC,EACpD,KAAK,WAAW,SAAS,KAAK,QAAQ,EAAI,OAAO,WAC/CiE,EACA6M,EACA,GAAG9Q,CACL,CAAA,CACD,EAEe0Q,GAAA,KAAM,eAAgB,IAAM,CAC1C,aAAa,KAAK,WAAW,SAAS,KAAK,QAAQ,CAAC,CAAA,CACrD,EAIDA,GAAgB,KAAM,qBAAsB,CAACK,EAAY,KAAU,CAC7D,GAAA,KAAK,MAAM,SACT,OAAC,KAAK,YACR,KAAK,MAAM,QAAU,GACrB,KAAK,MAAM,GAEN,KAEL,GAAA,CAACA,GAAa,CAAC,KAAK,MAAM,aAAe,CAAC,KAAK,OAAO,iBACjD,OAAA,KACL,GAAA,KAAK,MAAM,YAAa,CACpB,MAAAC,EAAc,KAAK,MAAM,OACzBC,EAAc,KAAK,MAAM,QAC/B,KAAK,MAAM,OAASA,EACf,KAAA,MAAM,MAAQA,GAAe,CAACD,EAC9B,KAAA,MAAM,KAAOA,GAAe,CAACC,EAClC,KAAK,WAAW,MAAM,OAAO,KAAK,MAAM,EAAIA,CAAA,CAE9C,MAAMC,EAAU,KAAK,WAAW,WAAW,MAAQ,KAAK,WAAW,SAAS,KACtEC,EAAO,KAAK,WAAW,MAAM,OAAO,QAAU,GAAKD,EAAU,EAC7DE,EAAQ,CACZ,GAAG,KAAK,WAAW,MAAM,OACzB,GAAG,KAAK,MACR,GAAG,KAAK,eAAe,KAAK,KAAK,EAEjC,OAAQ,CAAC,CAAC,SAAS,mBACnB,QAAAF,EACA,KAAAC,CACF,EACME,EAAU,KAAK,QAAQD,CAAK,EAClC,YAAK,MAAM,KAAOC,IAAY,OAASA,EAAU,KAAK,MAAM,KACrDD,CAAA,CACR,EACD,KAAK,WAAa3D,EAClB,KAAK,KAAOzN,CAAA,CAGd,IAAI,QAAS,CACX,OAAO,KAAK,WAAW,OAAO,KAAK,QAAQ,CAAA,CAG7C,IAAI,SAAU,CACZ,OAAO,KAAK,WAAW,OAAO,SAAW,KAAK,OAAO,OAAA,CAGvD,IAAI,OAAQ,CACV,OAAO,KAAK,WAAW,MAAM,KAAK,QAAQ,CAAA,CAG5C,IAAI,SAAU,CACZ,OAAO,KAAK,WAAW,SAAS,KAAK,QAAQ,CAAA,CAE/C,IAAI,WAAY,CACd,OAAO,KAAK,OAAO,WAAa,KAAK,WAAW,OAAO,WAAa4Q,EAAA,CAGtE,kBAAkBU,EAAa,CAC7B,OAAO,OAAO,KAAK,WAAW,MAAM,OAAQA,CAAW,CAAA,CAGzD,mBAAmBC,EAAc,CACxB,OAAA,OAAO,KAAK,MAAOA,CAAY,CAAA,CAQxC,oBAAoBC,EAAcC,EAAW,CACpC,MAAA,CAAE,aAAAD,EAAc,SAAU,EAAM,CAAA,CAKzC,YAAY/G,EAAQ,CAClB,KAAM,CAAE,WAAA2F,EAAY,UAAWsB,CAAA,EAAM,KAAK,OACpC,CACJ,QAAAC,EACA,SAAAC,EACA,QAAAC,EACA,aAAcC,EACd,WAAAC,EACA,SAAUC,GACR,KAAK,MACHC,EAAI,KAAK,oBAAoBxH,EAAQ,KAAK,KAAK,EAC/CyH,EAAK,KAAK,UAAUR,CAAC,EAAE,IAAI,KAAK,GAAG,EACnCS,EAAKL,EAAe,CAAC,IAAM,GAAQM,GAA2BH,EAAE,CAAC,EAAGC,EAAG,CAAC,CAAC,EAAIJ,EAAe,CAAC,EAC7FO,EAAKP,EAAe,CAAC,IAAM,GAAQM,GAA2BH,EAAE,CAAC,EAAGC,EAAG,CAAC,CAAC,EAAIJ,EAAe,CAAC,EAC7FQ,EAAsB,KAAK,oBAAoB,CAACH,EAAIE,CAAE,EAAGJ,CAAC,EAChE,GAAIK,EAAoB,SACf,MAAA,CAAE,GAAGA,EAAqB,UAAWL,EAAG,MAAO,CAAC,EAAG,CAAC,CAAE,EAE/D,MAAMT,EAAec,EAAoB,aACnCb,EAAYQ,EAClB,IAAI9C,EAAW,CACbqC,EAAa,CAAC,IAAM,GAAQS,EAAE,CAAC,EAAIT,EAAa,CAAC,EAAI,EACrDA,EAAa,CAAC,IAAM,GAAQS,EAAE,CAAC,EAAIT,EAAa,CAAC,EAAI,CACvD,EACM,MAAAe,EAAS1D,GAAKM,EAAU4C,CAAU,EAClCS,EAAcX,EAAUzB,EAAa,CAAC,EAAG,CAAC,EAChD,OAAAjB,EAAWsD,GAAkBd,EAAS9C,GAAKM,EAAUyC,CAAQ,EAAGY,CAAW,EACpE,CACL,GAAGF,EACH,YAAad,EAAa,CAAC,IAAM,IAASA,EAAa,CAAC,IAAM,GAC9D,SAAAI,EACA,UAAAH,EACA,SAAAtC,EACA,OAAA1E,EACA,OAAQgI,GAAkBd,EAASY,EAAQC,CAAW,EACtD,MAAOvD,GAAKE,EAAU6C,CAAY,CACpC,CAAA,CAGF,OAAQ,CACN,KAAK,aAAa,CAAA,CAEtB,CACA,SAASI,GAA2BjD,EAAUuD,EAAW,CACvD,OAAI,KAAK,IAAIvD,CAAQ,GAAKuD,EACjB5C,GAAKX,CAAQ,EAAIuD,EAEjB,EAEX,CACA,SAASD,GAAkBE,EAAQ,CAACC,EAAIC,CAAE,EAAG,CAACC,EAAIC,CAAE,EAAG,CAC/C,KAAA,CAAC,CAACC,EAAIC,CAAE,EAAG,CAACC,EAAIC,CAAE,CAAC,EAAIR,EACtB,MAAA,CACLrC,GAAwBsC,EAAII,EAAIC,EAAIH,CAAE,EACtCxC,GAAwBuC,EAAIK,EAAIC,EAAIJ,CAAE,CACxC,CACF,CACA,SAASK,EAAkB,CAAE,MAAAhC,GAASrO,EAAOsQ,EAAc,CACzD,KAAM,CAAE,UAAAC,EAAW,KAAMC,CAAmB,EAAAxQ,EACtCyQ,EAAWpC,EAAM,OACjBqC,EAAcJ,EAAe,EAAIC,EAAYlC,EAAM,UACzD,MAAO,CAAE,eAAAmC,EAAgB,MAAAxQ,EAAO,UAAAuQ,EAAW,YAAAG,EAAa,SAAAD,CAAS,CACnE,CACA,SAASE,GAAqB,CAAE,MAAAtC,EAAO,OAAApD,EAAQ,SAAAH,EAAU,KAAA7N,CAAK,EAAGyK,EAAQ1H,EAAO,CAC9E,MAAMwP,EAASnB,EAAM,OACfuC,EAAY5Q,EAAM,UAClB,CAAE,QAAA6Q,EAAS,OAAAjB,CAAA,EAAW3E,EACtB6F,EAAS,CACb,GAAG7H,GAAgB,EAAE6B,CAAQ,EAC7B,QAAS,GACT,KAAA7N,EACA,OAAAyK,EACA,QAASA,EACT,OAAA8H,EACA,WAAYA,EACZ,UAAAoB,CACF,EACO,MAAA,CACL,GAAGE,EACH,SAAUhI,GAAQ+H,EAASC,CAAM,EACjC,QAAShI,GAAQ8G,EAAQkB,CAAM,CACjC,CACF,CAEA,MAAMC,WAA8BjD,EAAW,CAI7C,oBAAoBpG,EAAQ2G,EAAO,CAC1B,OAAAnC,GAAKxE,EAAQ2G,EAAM,OAAO,CAAA,CAOnC,oBAAoBI,EAAcC,EAAW,CAC3C,GAAID,EAAa,CAAC,IAAM,IAASA,EAAa,CAAC,IAAM,GACnD,MAAO,CAAE,aAAAA,EAAc,KAAM,KAAK,MAAM,IAAK,EAE/C,KAAM,CAACuC,EAAMC,CAAI,EAAIvC,EAAU,IAAI,KAAK,GAAG,EACrCwC,EAAO,KAAK,MAAM,OAASF,EAAOC,EAAO,IAAMD,EAAOC,EAAO,IAAM,QACzE,MAAI,CAAC,KAAK,OAAO,MAAQ,CAAC,KAAK,OAAO,cAC7B,CAAE,aAAAxC,EAAc,SAAU,GAAO,KAAAyC,CAAK,EAC1CA,EAEC,KAAK,OAAO,MAAQA,IAAS,KAAK,OAAO,KACtC,CAAE,aAAAzC,EAAc,SAAU,GAAM,KAAAyC,CAAK,GAC9CzC,EAAayC,IAAS,IAAM,EAAI,CAAC,EAAI,GAC9B,CAAE,aAAAzC,EAAc,SAAU,GAAO,KAAAyC,CAAK,GAJpC,CAAE,aAAc,CAAC,GAAO,EAAK,EAAG,SAAU,GAAO,KAAAA,CAAK,CAIlB,CAE/C,cAAcxJ,EAAQ1H,EAAO,CACrB,MAAAqO,EAAQ,KAAK,YAAY3G,CAAM,EACjC,GAAA,CAAC2G,EAAM,SAAU,CACnB,MAAM1B,EAAK3M,EAAM,UAAY,KAAK,MAAM,UACjC,OAAA,OACLqO,EACA3B,GAAuB2B,EAAM,SAAUA,EAAM,MAAO1B,CAAE,CACxD,CAAA,CAEK,OAAA0B,CAAA,CAET,eAAeA,EAAO,CACpB,MAAO,CAAE,GAAIA,EAAM,OAAQ,KAAMA,EAAM,UAAW,CAAA,CAEtD,CAEA,IAAI8C,GAAc,OAAO,eACrBC,GAAoB,CAAC1H,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAMyH,GAAYzH,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EAC1J+S,EAAkB,CAAC3H,EAAKvM,EAAKmB,KAC/B8S,GAAkB1H,EAAK,OAAOvM,GAAQ,SAAWA,EAAM,GAAKA,EAAKmB,CAAK,EAC/DA,GAET,MAAMgT,GAAyB,EAC/B,SAASC,GAAavR,EAAO,CAC3B,YAAaA,GAAS,OAAOA,EAAM,SAAY,YAAcA,EAAM,QAAQ,CAC7E,CACA,MAAMwR,WAAuBT,EAAsB,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EACFM,EAAA,KAAM,SAAU,UAAU,EAC1BA,EAAA,KAAM,WAAY,MAAM,EAGxBA,EAAA,KAAM,oBAAsBrR,GAAU,CAChD,GAAA,KAAK,OAAO,UAAY,SAAS,mBACnC,OACI,KAAA,CAAE,OAAA5B,EAAQ,UAAAqT,CAAA,EAAczR,EAC1B5B,GAAU,sBAAuBA,GACnCA,EAAO,kBAAkBqT,CAAS,EAEpC,KAAK,mBAAmB,CACtB,YAAarT,EACb,eAAgBqT,CAAA,CACjB,CAAA,CACF,EACeJ,EAAA,KAAM,wBAAyB,IAAM,CAC/C,GAAA,KAAK,OAAO,UAAY,SAAS,mBACnC,OACF,KAAM,CAAE,YAAAK,EAAa,eAAAC,CAAe,EAAI,KAAK,MACzC,GAAAA,GAAkBD,GAAe,0BAA2BA,IAC1D,EAAE,sBAAuBA,IAAgBA,EAAY,kBAAkBC,CAAc,GACnF,GAAA,CACFD,EAAY,sBAAsBC,CAAc,OACtC,CAAA,CAEhB,CACD,EACeN,EAAA,KAAM,gBAAkBrR,GAAU,CAC5C,KAAK,MAAM,oBAAsBA,EAAM,YACzCA,EAAM,eAAe,CACvB,CACD,EACeqR,EAAA,KAAM,aAAerR,GAC/B,KAAK,OAAO,SACPA,EAAM,eAAe,CAAC,EAAE,WAC1BA,EAAM,SACd,EACeqR,EAAA,KAAM,eAAiBrR,GAC9B,KAAK,MAAM,aAAe,KAAK,WAAWA,CAAK,CACvD,EACDqR,EAAgB,KAAM,6BAA8B,KAAK,OAAO,sBAAwB,KAAK,WAAW,mBAAmB,EAC3GA,EAAA,KAAM,6BAA+BrR,GAAU,CAC7DuR,GAAavR,CAAK,EAClBmL,GACE,KAAK,WACL,KAAK,SACL,CACE,CAAC,YAAa,KAAK,aAAa,EAChC,CAAC,WAAY,KAAK,MAAM,KAAK,IAAI,CAAC,EAClC,CAAC,cAAe,KAAK,MAAM,KAAK,IAAI,CAAC,CACvC,EACA,CAAE,QAAS,EAAM,CACnB,EACA,KAAK,WAAW,KAAK,UAAU,KAAK,IAAI,EAAG,IAAKnL,CAAK,CAAA,CACtD,EACeqR,EAAA,KAAM,0BAA4BrR,GAAU,CAC1D,KAAK,MAAM,aAAe,GAC1BuR,GAAavR,CAAK,EACb,KAAA,WAAW,KAAK,UAAU,KAAK,IAAI,EAAG,KAAK,OAAO,MAAOA,CAAK,CAAA,CACpE,EACeqR,EAAA,KAAM,gBAAkBrR,GAAU,CAChD,MAAM0H,EAASf,GAAsB3G,EAAO,KAAK,SAAS,EACrD,KAAA,kBAAkBmG,EAAoBnG,CAAK,CAAC,EACjD,KAAK,mBAAmB,CACtB,GAAG2Q,GAAqB,KAAMjJ,EAAQ1H,CAAK,EAC3C,GAAGqQ,EAAkB,KAAMrQ,EAAO,EAAI,EACtC,WAAY,KAAK,WAAWA,CAAK,CAAA,CAElC,EACD,KAAK,mBAAmB,KAAK,YAAY0H,CAAM,CAAC,CAAA,CACjD,EACe2J,EAAA,KAAM,cAAgBrR,GAAU,CAClCyK,GAAA,KAAK,WAAYzK,CAAK,EAC9B,GAAC,KAAK,SAAW,KAAK,MAAM,WAEhC,KAAK,cAAcA,CAAK,EACxB,KAAK,kBAAkBA,CAAK,EACxB,KAAK,2BACP,KAAK,2BAA2BA,CAAK,EAC9B,KAAK,OAAO,MAAQ,EAC3B,KAAK,wBAAwBA,CAAK,EAE7B,KAAA,UAAUA,EAAO,EAAI,EAAA,CAC7B,EACeqR,EAAA,KAAM,eAAiBrR,GAAU,CAC/C,GAEE,KAAK,MAAM,UACX,CAAC,KAAK,MAAM,SACZ,CAAC,KAAK,aAAaA,CAAK,GAExB,KAAK,MAAM,iBAAmBA,EAAM,MAAQA,EAAM,YAAc,KAAK,MAAM,UAE3E,OACE,IAAA0H,EACJ,GAAI,SAAS,mBAAoB,CACzB,KAAA,CAAE,UAAAkK,EAAW,UAAAC,CAAA,EAAc7R,EACxB0H,EAAAoE,GAAK,KAAK,UAAU,CAAC8F,EAAWC,CAAS,CAAC,EAAG,KAAK,MAAM,MAAM,CACzE,MACWnK,EAAAf,GAAsB3G,EAAO,KAAK,SAAS,EACtD,MAAM8R,EAAa,KAAK,cAAcpK,EAAQ1H,CAAK,EAC/C,GAAA,CAAC,KAAK,MAAM,aAAc,CACxB,GAAA,KAAK,MAAM,aAAc,CAC3B,KAAK,UAAUA,CAAK,EACpB,MAAA,CAEF,GAAI,KAAK,2BACP,GAAI,CAAC,KAAK,MAAM,oBAAsB8R,EAAW,KAC3C,GAAAA,EAAW,OAAS,IACtB,KAAK,UAAU9R,CAAK,MACf,CACL,KAAK,MAAM,QAAU,GACrB,MAAA,KAGF,YAEF,OAAA,CAEE,MAAA+R,EAAmB5L,EAAoBnG,CAAK,EAClD,KAAK,kBAAkB+R,CAAgB,EACjC,MAAAC,EAAiB3B,EAAkB,KAAMrQ,CAAK,EAC9CiS,EAAe9F,GAAkB2F,EAAW,SAAS,EACvD,GAAA,CAAE,WAAAI,GAAe,KAAK,MACtBA,GAAcD,GAAgBX,KACnBY,EAAA,IACf,KAAK,mBAAmB,CAAE,GAAGF,EAAgB,GAAGF,EAAY,WAAAI,EAAY,EACxE,KAAK,mBAAmB,CAAA,CACzB,EACeb,EAAA,KAAM,YAAcrR,GAAU,CAKxC,GAJW2K,GAAA,KAAK,WAAY3K,CAAK,EACjC,CAAC,KAAK,aAAaA,CAAK,IAE5B,KAAK,MAAM,EACP,CAAC,KAAK,MAAM,SACd,OACF,KAAK,MAAM,QAAU,GACf,MAAAmS,EAAM,KAAK,MAAM,WACjB,CAACC,EAAIC,CAAE,EAAI,KAAK,MAAM,WACtB,CAACC,EAAIC,CAAE,EAAI,KAAK,MAAM,SACtB,CAACC,EAAIC,CAAE,EAAI,KAAK,MAAM,aACtB,CAACC,EAAKC,CAAG,EAAI,KAAK,OAAO,cACzB,CAACC,EAAIC,CAAE,EAAI,KAAK,OAAO,cACvBC,EAAK,KAAK,OAAO,cACjBC,EAAW,CACf,GAAG1C,EAAkB,KAAMrQ,CAAK,EAChC,GAAG,KAAK,YAAY,KAAK,MAAM,MAAM,CACvC,EACMgT,EAAQ,CAAC,EAAG,CAAC,EACfD,EAAS,YAAcD,IACrBN,IAAO,IAAS,KAAK,IAAIJ,CAAE,EAAIM,GAAO,KAAK,IAAIJ,CAAE,EAAIM,IACjDI,EAAA,CAAC,EAAIjG,GAAKqF,CAAE,GAChBK,IAAO,IAAS,KAAK,IAAIJ,CAAE,EAAIM,GAAO,KAAK,IAAIJ,CAAE,EAAIM,IACjDG,EAAA,CAAC,EAAIjG,GAAKsF,CAAE,IAEtB,KAAK,kBAAkB,CAAE,QAAS,CAAA,CAAG,EACrC,KAAK,mBAAmB,CAAE,GAAGU,EAAU,IAAAZ,EAAK,MAAAa,EAAO,EACnD,KAAK,mBAAmB,KAAK,OAAO,YAAcb,IAAQ,EAAI,CAAA,CAC/D,EACed,EAAA,KAAM,QAAS,IAAM,CACnC,MAAM,MAAM,EACZ,KAAK,MAAM,aAAe,GAC1B,KAAK,sBAAsB,EACNrG,GAAA,KAAK,WAAY,KAAK,QAAQ,CAAA,CACpD,EACeqG,EAAA,KAAM,WAAY,IAAM,CAClC,KAAK,MAAM,WAEf,KAAK,mBAAmB,CAAE,SAAU,GAAM,QAAS,GAAO,EAC1D,KAAK,kBAAkB,CAAE,QAAS,CAAA,CAAG,EACrCrS,GAAS,KAAK,kBAAkB,EAAA,CACjC,EACeqS,EAAA,KAAM,UAAYrR,GAAU,CACrC,KAAK,MAAM,YACdA,EAAM,gBAAgB,CAAA,CACzB,CAAA,CAEH,UAAUA,EAAOiT,EAAgB,GAAO,CAGpC,CAAC,KAAK,MAAM,SACZ,KAAK,MAAM,eAGRA,GACH,KAAK,cAAcjT,CAAK,EAC1B,KAAK,mBAAmB,CACtB,aAAc,GACd,mBAAoB,GACpB,OAAQ,KAAK,QAAA,CACd,EACD,KAAK,aAAa,EAClB,KAAK,mBAAmB,EAAA,CAE1B,YAAY8J,EAAU,CAYhB,GAXA,KAAK,OAAO,UACFG,EAAAH,EAAU,eAAgB,KAAK,WAAW,EAC1CG,EAAAH,EAAU,cAAe,KAAK,YAAY,EAC1CG,EAAAH,EAAU,aAAc,KAAK,SAAS,EACtCG,EAAAH,EAAU,gBAAiB,KAAK,SAAS,IAEzCG,EAAAH,EAAU,gBAAiB,KAAK,WAAW,EAC3CG,EAAAH,EAAU,gBAAiB,KAAK,YAAY,EAC5CG,EAAAH,EAAU,cAAe,KAAK,SAAS,EACvCG,EAAAH,EAAU,kBAAmB,KAAK,SAAS,GAErD,KAAK,OAAO,WAAY,CAC1B,MAAM1H,EAAU,KAAK,WAAW,OAAO,aAAa,QAAU,UAAY,iBAC9D6H,EAAAH,EAAU1H,EAAS,KAAK,OAAO,CAAA,CAC7C,CAEJ,CAgGA,SAAS8Q,GAAYjI,EAAS,CAAC,EAAGkI,EAAW,CAC3C,MAAMzK,EAAS,CAAC,EAChB,SAAW,CAACvL,EAAKiW,CAAQ,IAAK,OAAO,QAAQD,CAAS,EACpD,OAAQ,OAAOC,EAAU,CACvB,IAAK,WACI1K,EAAAvL,CAAG,EAAIiW,EAAS,KAAK1K,EAAQuC,EAAO9N,CAAG,EAAGA,EAAK8N,CAAM,EAC5D,MACF,IAAK,SACHvC,EAAOvL,CAAG,EAAI+V,GAAYjI,EAAO9N,CAAG,EAAGiW,CAAQ,EAC/C,MACF,IAAK,UACCA,IACK1K,EAAAvL,CAAG,EAAI8N,EAAO9N,CAAG,GAC1B,KAAA,CAEC,OAAAuL,CACT,CAEA,MAAM2K,GAAqB,IACrBC,GAAqB,IACrBC,GAAyB,GACzBC,GAAyB,GACzBC,GAAyB,IACzBC,GAAoC,CACxC,UAAUpV,EAAQ,EAAG,CACnB,OAAOqK,GAAarK,CAAK,CAC3B,EACA,WAAWA,EAAQ,EAAG,CACpB,OAAQA,EAAO,CACb,IAAK,GACH,OAAOqK,GAAa2K,EAAkB,EACxC,IAAK,GACH,OAAO3K,GAAa,CAAC,EACvB,QACE,OAAOA,GAAarK,CAAK,CAAA,CAE/B,EACA,QAAQA,EAAQ,GAAM,CACb,OAAAA,CACT,EACA,iBAAiBA,EAAQ,GAAO,CACvB,OAAAA,CACT,EACA,QAAQA,EAAQ,EAAG,CACjB,OAAI,OAAOA,GAAU,WACZA,EACFqK,GAAarK,CAAK,CAC3B,EACA,UAAW,EACb,EACMqV,GAAwC,CAC5C,GAAGD,GACH,KAAM,GACN,cAAcpV,EAAQ,GAAO,CACpB,OAAAA,CACT,EACA,OAAOA,EAAQ,GAAI,CACjB,GAAI,OAAOA,GAAU,WACnB,OAAQ+P,GAAUsF,GAAsC,OAAOrV,EAAM+P,CAAK,CAAC,EACvE,KAAA,CACJ,KAAA5K,EAAO,KACP,MAAAC,EAAQ,IACR,IAAAC,EAAM,KACN,OAAAH,EAAS,GAAA,EACPlF,EACG,MAAA,CACL,CAACmF,EAAMC,CAAK,EACZ,CAACC,EAAKH,CAAM,CACd,CAAA,CAEJ,EACMoQ,GAAY,OAAO,OAAW,KAAe,OAAO,UAAY,OAAO,SAAS,cAChFC,GAAoC,CACxC,QAAQvV,EAAQ,GAAM,CACb,OAAAA,CACT,EACA,UAAW,GACX,OAAOA,EAAQsV,GAAY,OAAS,OAAQ,CACnC,OAAAtV,CACT,EACA,aAAa,CAAE,QAAAwV,EAAU,GAAM,QAAAC,EAAU,EAAM,EAAI,GAAI,CAC9C,MAAA,CAAE,QAAAD,EAAS,QAAAC,CAAQ,CAC5B,EACA,UAAW,EACb,EACMC,GAA0C,CAC9C,GAAGN,GACH,OAAOO,EAAQC,EAAM,CAAE,eAAAC,EAAiB,GAAI,YAAAC,EAAc,CAAA,GAAM,CACxD,MAAAC,EAAmBhG,GAAU,CACjC,MAAMiG,EAAIzL,GAAcC,GAAQqL,EAAgB9F,CAAK,EAAG,CACtD,IAAK,KACL,IAAK,GAAA,CACN,EACD,MAAO,CAACiG,EAAE,IAAKA,EAAE,GAAG,CACtB,EACMC,EAAgBlG,GAAU,CAC9B,MAAMnH,EAAI2B,GAAcC,GAAQsL,EAAa/F,CAAK,EAAG,CACnD,IAAK,KACL,IAAK,GAAA,CACN,EACD,MAAO,CAACnH,EAAE,IAAKA,EAAE,GAAG,CACtB,EACA,OAAI,OAAOiN,GAAmB,YAAc,OAAOC,GAAgB,WAC1D,CAACC,IAAmBE,GAAc,EACnClG,GAAU,CAACgG,EAAgBhG,CAAK,EAAGkG,EAAalG,CAAK,CAAC,CAAA,CAElE,EACMmG,GAAiC,CACrC,GAAGb,GACH,SAASrV,EAAQ,GAAM,CACrB,OAAOA,GAASyH,GAAoB,CACtC,EACA,qBAAqBzH,EAAQ,GAAO,CAC3B,OAAAA,CACT,EACA,UAAU6G,EAAGsP,EAAI,CAAE,WAAAC,EAAa,GAAO,cAAAC,EAAgB,GAAO,KAAAzD,EAAO,QAAU,CAC7E,MAAMhK,EAAIyB,GACRxD,EACAuP,EAAa,EAAIC,GAAoBzD,EAAJ,EAAe,CAClD,EACA,YAAK,WAAawD,EACXxN,CACT,EACA,cAAc/B,EAAIoO,GAAwB,CACxC,OAAO5K,GAAaxD,CAAC,CACvB,EACA,cAAcA,EAAIqO,GAAwB,CACxC,OAAO7K,GAAaxD,CAAC,CACvB,EACA,cAAc7G,EAAQmV,GAAwB,CACrC,OAAAnV,CACT,EACA,MAAMA,EAAQ,EAAG,CACf,OAAQA,EAAO,CACb,IAAK,GACI,OAAA+U,GACT,IAAK,GACI,MAAA,GACT,QACS,OAAA/U,CAAA,CACX,CAEJ,EACA,SAASsW,GAA0B3J,EAAQ,CAClC,OAAAiI,GACLjI,EACA4I,EACF,CACF,CACA,SAASgB,GAA8B5J,EAAS,GAAI,CAC3C,OAAAiI,GACLjI,EACA0I,EACF,CACF,CACA,SAASmB,GAAgC7J,EAAS,GAAI,CAC7C,OAAAiI,GACLjI,EACA+I,EACF,CACF,CACA,SAASe,GAAuB9J,EAAS,GAAI,CACpC,OAAAiI,GACLjI,EACAuJ,EACF,CACF,CAkGA,SAASQ,GAAmB/J,EAAQgK,EAA0B,IAAI,IAAO,CACjE,KAAA,CACJ,KAAA9L,EACA,MAAAE,EACA,KAAAC,EACA,OAAAC,EACA,MAAAH,EACA,MAAA8L,EACA,aAAA9K,EACA,OAAAhJ,EACA,UAAAwF,EACA,UAAAyD,EACA,QAAA8K,CAAA,EACElK,EACEmK,EAAeR,GAA0B,CAC7C,UAAAvK,EACA,aAAAD,EACA,UAAAxD,EACA,OAAAxF,EACA,QAAA+T,CAAA,CACD,EACG,OAAAF,EAAQ,IAAI,QAAQ,IACTG,EAAA,KAAOL,GAAuB5L,CAAI,GAC7C8L,EAAQ,IAAI,SAAS,IACVG,EAAA,MAAQP,GAA8BxL,CAAK,GACtD4L,EAAQ,IAAI,UAAU,IACXG,EAAA,OAASP,GAA8BtL,CAAM,GACxD0L,EAAQ,IAAI,QAAQ,IACTG,EAAA,KAAOP,GAA8BvL,CAAI,GACpD2L,EAAQ,IAAI,SAAS,IACVG,EAAA,MAAQN,GAAgC1L,CAAK,GACxD6L,EAAQ,IAAI,SAAS,IACvBG,EAAa,MAAQ,CAAE,QAAS,GAAM,GAAGF,CAAM,GAC1CE,CACT,CAEA,SAASC,GAAetK,EAAUE,EAAQqK,EAAiB,CAAA,EAAI,CACvD,MAAAzL,EAAU0L,GAAexK,CAAQ,EACjCL,EAAa,IAAId,GAAWC,CAAO,EACzC,OAAAa,EAAW,OAASO,EACpBP,EAAW,SAAWK,EACtBL,EAAW,WAAa4K,EACpBjY,GAAmB,GAAK,CAAC4N,EAAO,SAClClM,GAAU2L,EAAW,IAAI,EACzB8K,GAAY9K,EAAW,KAAK,GAEvBA,CACT,CACA,SAAS6K,GAAeE,EAAkB,CAClC,MAAA5L,MAA8B,IACpC,OAAI4L,EAAiB,MACnB5L,EAAQ,IAAI+D,EAAe,IAAI,MAAM,CAAC,EACpC6H,EAAiB,OACnB5L,EAAQ,IAAI+D,EAAe,IAAI,OAAO,CAAC,EACrC6H,EAAiB,QACnB5L,EAAQ,IAAI+D,EAAe,IAAI,QAAQ,CAAC,EACtC6H,EAAiB,MACnB5L,EAAQ,IAAI+D,EAAe,IAAI,MAAM,CAAC,EACpC6H,EAAiB,OACnB5L,EAAQ,IAAI+D,EAAe,IAAI,OAAO,CAAC,EACrC6H,EAAiB,OACnB5L,EAAQ,IAAI+D,EAAe,IAAI,OAAO,CAAC,EAClC/D,CACT,CAWA,IAAI6L,GAAc,OAAO,eACrBC,GAAoB,CAACjM,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAMgM,GAAYhM,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EAC1JsX,GAAkB,CAAClM,EAAKvM,EAAKmB,KAC/BqX,GAAkBjM,EAAK,OAAOvM,GAAQ,SAAWA,EAAM,GAAKA,EAAKmB,CAAK,EAC/DA,GAET,MAAMuX,WAAuB9E,EAAsB,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EACF6E,GAAA,KAAM,SAAU,QAAQ,EACxBA,GAAA,KAAM,WAAY,MAAM,EACxBA,GAAA,KAAM,YAAa,EAAI,EACvBA,GAAA,KAAM,SAAW5V,GAAU,CACpC,KAAK,UAEL,KAAA,WAAW,KAAK,SAAS,EACzB,KAAK,MAAM,QAGd,KAAK,aAAaA,CAAK,EAFvB,KAAK,YAAYA,CAAK,EAEC,CAC1B,EACe4V,GAAA,KAAM,cAAgB5V,GAAU,CACzC,KAAA,kBAAkBmG,EAAoBnG,CAAK,CAAC,EACjD,MAAM0H,EAASf,GAAsB3G,EAAO,KAAK,SAAS,EAC1D,KAAK,mBAAmB,CACtB,GAAG2Q,GAAqB,KAAMjJ,EAAQ1H,CAAK,EAC3C,GAAGqQ,EAAkB,KAAMrQ,EAAO,EAAI,CAAA,CACvC,EACD,KAAK,mBAAmB,KAAK,YAAY0H,CAAM,CAAC,EAChD,KAAK,mBAAmB,CAAA,CACzB,EACekO,GAAA,KAAM,eAAiB5V,GAAU,CAC1C,KAAA,kBAAkBmG,EAAoBnG,CAAK,CAAC,EACjD,MAAM0H,EAASf,GAAsB3G,EAAO,KAAK,SAAS,EAC1D,KAAK,mBAAmB,CACtB,GAAGqQ,EAAkB,KAAMrQ,CAAK,EAChC,GAAG,KAAK,cAAc0H,EAAQ1H,CAAK,CAAA,CACpC,EACD,KAAK,mBAAmB,CAAA,CACzB,EACe4V,GAAA,KAAM,YAAa,IAAM,CAEnC,GADJ,KAAK,MAAM,EACP,CAAC,KAAK,MAAM,QACd,OACI,MAAAlO,EAAS,KAAK,MAAM,OAC1B,KAAK,mBAAmB,KAAK,YAAYA,CAAM,CAAC,EAC3C,KAAA,mBAAmB,CAAE,WAAY,CAAC,EAAG,CAAC,EAAG,SAAU,EAAG,QAAS,EAAA,CAAO,EAC3E,KAAK,mBAAmB,CAAA,CACzB,EACekO,GAAA,KAAM,iBAAkB,IAC/B,KAAK,WAAW,OAAO,MAAM,WAAa,KAAK,WAAW,OAAO,SACzE,EACeA,GAAA,KAAM,iBAAmB5V,GAAU,CAE7C,GADC,KAAA,WAAW,MAAM,OAAO,SAAW,GACpC,EAAC,KAAK,WAAW,OAAO,QAE5B,IAAI,KAAK,WAAW,OAAO,MAAM,QAAS,CACxC,MAAM0H,EAASf,GAAsB3G,EAAO,KAAK,gBAAgB,EAC3DqO,EAAQ,CACZ,GAAG,KAAK,WAAW,MAAM,OACzB,GAAG,KAAK,MACR,GAAGgC,EAAkB,KAAMrQ,EAAO,EAAI,EACtC,KAAM,KAAK,KACX,OAAA0H,EACA,OAAQ,GACR,SAAU,EACZ,EACK,KAAA,WAAW,SAAS,MAAM,CAC7B,GAAG2G,EACH,GAAG,KAAK,eAAeA,CAAK,CAAA,CAC7B,CAAA,CAEC,SAAU,KAAK,WAAW,UAC5B,KAAK,YAAYrO,CAAK,EAAA,CACzB,EACe4V,GAAA,KAAM,iBAAmB5V,GAAU,CAIjD,GAHK,KAAA,WAAW,MAAM,OAAO,SAAW,GACpC,SAAU,KAAK,WAAW,UAC5B,KAAK,UAAU,EACb,CAAC,KAAK,WAAW,OAAO,MAAM,QAChC,OACF,MAAM0H,EAASf,GAAsB3G,EAAO,KAAK,gBAAgB,EAC3DqO,EAAQ,CACZ,GAAG,KAAK,WAAW,MAAM,OACzB,GAAG,KAAK,MACR,GAAGgC,EAAkB,KAAMrQ,CAAK,EAChC,KAAM,KAAK,KACX,OAAA0H,EACA,OAAQ,EACV,EACK,KAAA,WAAW,SAAS,MAAM,CAAE,GAAG2G,EAAO,GAAG,KAAK,eAAeA,CAAK,EAAG,CAAA,CAC3E,CAAA,CAEH,YAAYvE,EAAU,CAChB,SAAU,KAAK,WAAW,UAChBG,EAAAH,EAAU,gBAAiB,KAAK,MAAM,EAEhD,UAAW,KAAK,WAAW,WACjBG,EAAAH,EAAU,iBAAkB,KAAK,cAAc,EAC/CG,EAAAH,EAAU,iBAAkB,KAAK,cAAc,EAC7D,CAEJ,CAEA,MAAMgM,WAAgChI,EAAW,CAC/C,oBAAoBpG,EAAQ2G,EAAO,CAC3B,MAAA0H,EAAS1H,EAAM,OAAO,CAAC,EAC7B,GAAI,CAAC2H,EAAG,EAAID,CAAM,EAAIrO,EAClBuO,EAAU,EAAIF,EACdG,EAAa7H,EAAM,MACnB,OAAA,KAAK,IAAI4H,CAAO,EAAI,MACtBC,GAAcnJ,GAAKkJ,CAAO,GACrB/J,GAAK,CAAC8J,EAAG,EAAI,IAAME,CAAU,EAAG7H,EAAM,OAAO,CAAA,CAEtD,cAAc3G,EAAQ1H,EAAO,CACrB,MAAAqO,EAAQ,KAAK,YAAY3G,CAAM,EAC/ByO,GAASzO,EAAO,CAAC,EAAI2G,EAAM,UAAU,CAAC,EAAI,KAAK,MAAM,QAAQ,CAAC,GAAK,IACnE1B,EAAK3M,EAAM,UAAY,KAAK,MAAM,UAClC,CAAE,SAAAwH,EAAU,SAAAqF,EAAU,GAAGiF,CAAe,EAAApF,GAC5C2B,EAAM,SACNA,EAAM,MACN1B,CACF,EACA,MAAO,CAAE,MAAAwJ,EAAO,GAAG9H,EAAO,GAAGyD,CAAW,CAAA,CAE1C,eAAezD,EAAO,CACpB,MAAO,CAAE,GAAIA,EAAM,OAAQ,KAAMA,EAAM,UAAW,CAAA,CAEtD,CAEA,IAAI+H,GAAc,OAAO,eACrBC,GAAoB,CAAC3M,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAM0M,GAAY1M,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EAC1JgY,EAAkB,CAAC5M,EAAKvM,EAAKmB,KAC/B+X,GAAkB3M,EAAK,OAAOvM,GAAQ,SAAWA,EAAM,GAAKA,EAAKmB,CAAK,EAC/DA,GAET,MAAMiY,GAAgB,EAChBC,GAA+B,IACrC,MAAMC,WAAwBX,EAAwB,CACpD,aAAc,CACZ,MAAM,GAAG,SAAS,EACFQ,EAAA,KAAM,SAAU,UAAU,EAC1BA,EAAA,KAAM,WAAY,OAAO,EACzBA,EAAA,KAAM,eAAiBtW,GAAU,CACnCyK,GAAA,KAAK,WAAYzK,CAAK,EAC5B,MAAA0W,EAAW,KAAK,WAAW,SAOjC,GANI,CAAC,KAAK,SAEN,KAAK,MAAM,SACT,KAAK,MAAM,YAAY,MAAO9L,GAAO8L,EAAS,IAAI9L,CAAE,CAAC,GAGvD8L,EAAS,KAAO,EAClB,OACF,MAAMC,EAAc,MAAM,KAAKD,CAAQ,EAAE,MAAM,EAAG,CAAC,EAC7C,CAAE,OAAAhP,EAAQ,OAAAC,CAAA,EAAWX,GACzBhH,EACA2W,EACA,KAAK,SACP,EACK,KAAA,kBAAkBxQ,EAAoBnG,CAAK,CAAC,EACjD,KAAK,mBAAmB,CACtB,GAAG2Q,GAAqB,KAAMjJ,EAAQ1H,CAAK,EAC3C,GAAGqQ,EAAkB,KAAMrQ,EAAO,EAAI,EACtC,YAAA2W,EACA,OAAQ,KAAK,SACb,OAAAhP,CAAA,CACD,EACD,KAAK,mBAAmB,KAAK,YAAYD,CAAM,CAAC,EAChD,KAAK,mBAAmB,CAAA,CACzB,EACe4O,EAAA,KAAM,gBAAkBtW,GAAU,CAChD,KAAM,CAAE,SAAA4W,EAAU,QAAA9H,CAAQ,EAAI,KAAK,MACnC,GAAI8H,GAAY,CAAC9H,GACjB9O,EAAM,YAAc,KAAK,MAAM,UAC7B,OACI,MAAA+R,EAAmB5L,EAAoBnG,CAAK,EAClD,KAAK,kBAAkB+R,CAAgB,EACnC,GAAA,CACI,KAAA,CAAE,OAAArK,EAAQ,OAAAC,CAAA,EAAWX,GACzBhH,EACA,KAAK,MAAM,YACX,KAAK,SACP,EACM8R,EAAa,KAAK,cAAcpK,EAAQ1H,CAAK,EACnD,KAAK,mBAAmB,CACtB,GAAGqQ,EAAkB,KAAMrQ,CAAK,EAChC,GAAG8R,EACH,OAAAnK,CAAA,CACD,EACD,KAAK,mBAAmB,OACd,CACV,KAAK,WAAW3H,CAAK,CAAA,CACvB,CACD,EACesW,EAAA,KAAM,aAAetW,GAAU,CAC9B2K,GAAA,KAAK,WAAY3K,CAAK,EAC/B,MAAAiH,EAAahB,GAAYjG,CAAK,EAChC,KAAK,MAAM,YAAY,MAAO4K,GAAO,CAAC3D,EAAW,SAAS2D,CAAE,CAAC,IAEjE,KAAK,MAAM,EACN,KAAK,MAAM,UAEhB,KAAK,mBAAmB,CACtB,GAAGyF,EAAkB,KAAMrQ,CAAK,EAChC,GAAG,KAAK,YAAY,KAAK,MAAM,MAAM,EACrC,QAAS,EAAA,CACV,EACD,KAAK,mBAAmB,GAAA,CACzB,EACesW,EAAA,KAAM,WAAY,IAAM,CAClC,KAAK,MAAM,WAEf,KAAK,mBAAmB,CAAE,QAAS,GAAO,SAAU,GAAM,EAC1D,KAAK,mBAAmB,EAAA,CACzB,EAIeA,EAAA,KAAM,iBAAmBtW,GAAU,CACjD,GAAI,CAAC,KAAK,QACR,OACFA,EAAM,eAAe,EACrB,MAAM0H,EAASa,GAA4BvI,EAAO,KAAK,SAAS,EAC3D,KAAA,kBAAkBmG,EAAoBnG,CAAK,CAAC,EACjD,KAAK,mBAAmB,CACtB,GAAG2Q,GAAqB,KAAMjJ,EAAQ1H,CAAK,EAC3C,GAAGqQ,EAAkB,KAAMrQ,EAAO,EAAI,EACtC,OAAQ,CAACA,EAAM,QAASA,EAAM,OAAO,EAErC,OAAQ,KAAK,QAAA,CACd,EACD,KAAK,mBAAmB,KAAK,YAAY0H,CAAM,CAAC,EAChD,KAAK,mBAAmB,CAAA,CACzB,EACe4O,EAAA,KAAM,kBAAoBtW,GAAU,CAClD,KAAM,CAAE,SAAA4W,EAAU,QAAA9H,CAAQ,EAAI,KAAK,MACnC,GAAI8H,GAAY,CAAC9H,EACf,OACF9O,EAAM,eAAe,EACf,MAAA+R,EAAmB5L,EAAoBnG,CAAK,EAClD,KAAK,kBAAkB+R,CAAgB,EACvC,MAAMrK,EAASa,GAA4BvI,EAAO,KAAK,SAAS,EAChE0H,EAAO,CAAC,GAAKA,EAAO,CAAC,EAAI,KAAK,MAAM,MAAM,OAAS8O,GAA+B,KAAK,MAAM,OAAO,CAAC,EACrG,MAAM1E,EAAa,KAAK,cAAcpK,EAAQ1H,CAAK,EACnD,KAAK,mBAAmB,CACtB,GAAGqQ,EAAkB,KAAMrQ,CAAK,EAChC,GAAG8R,EACH,OAAQ,CAAC9R,EAAM,QAASA,EAAM,OAAO,CAAA,CAEtC,EACD,KAAK,mBAAmB,CAAA,CACzB,EACesW,EAAA,KAAM,eAAiBtW,GAAU,CAC/C,KAAK,MAAM,EACN,KAAK,MAAM,UAEhB,KAAK,mBAAmB,CACtB,GAAGqQ,EAAkB,KAAMrQ,CAAK,EAChC,GAAG,KAAK,YAAY,KAAK,MAAM,MAAM,EACrC,QAAS,GACT,OAAQ,CAACA,EAAM,QAASA,EAAM,OAAO,CAAA,CAEtC,EACD,KAAK,mBAAmB,EAAA,CACzB,EAIesW,EAAA,KAAM,iBAAmBtW,GAChC,KAAK,SAAWA,EAAM,OAC9B,EACesW,EAAA,KAAM,0BAA4BtW,GAAU,CAC1D,KAAM,CAAA,CAAG6W,CAAO,EAAI1O,GAAoBnI,EAAO,KAAK,SAAS,EACvD,CACJ,OAAQ,CAAC8W,EAAQf,CAAM,GACrB,KAAK,MAGF,MAAA,CACL,OAAQ,CAHAe,EAASD,EAAUN,GACnBR,IAAW,OAASA,EAAS,CAExB,EACb,OAAQ,CAAC/V,EAAM,QAASA,EAAM,OAAO,EACrC,MAAO,CAAC,EAAG6W,CAAO,CACpB,CAAA,CACD,EACeP,EAAA,KAAM,UAAYtW,GAAU,CACrC,KAAK,eAAeA,CAAK,IAEzB,KAAA,WAAW,KAAK,UAAU,EAC1B,KAAK,MAAM,QAGd,KAAK,cAAcA,CAAK,EAFxB,KAAK,aAAaA,CAAK,EAEC,CAC3B,EACesW,EAAA,KAAM,eAAiBtW,GAAU,CAC/C,KAAM,CAAE,OAAA0H,EAAQ,MAAA4E,EAAO,OAAA3E,CAAW,EAAA,KAAK,wBAAwB3H,CAAK,EAChEA,EAAM,YACRA,EAAM,eAAe,EAMlB,KAAA,kBAAkBmG,EAAoBnG,CAAK,CAAC,EACjD,KAAK,mBAAmB,CACtB,GAAG2Q,GAAqB,KAAMjJ,EAAQ1H,CAAK,EAC3C,GAAGqQ,EAAkB,KAAMrQ,EAAO,EAAI,EACtC,QAAS,KAAK,MAAM,OACpB,OAAQ0H,EACR,MAAA4E,EACA,OAAA3E,CAAA,CACD,EACD,KAAK,mBAAmB,KAAK,YAAYD,CAAM,CAAC,EAChD,KAAK,mBAAmB,CAAA,CACzB,EACe4O,EAAA,KAAM,gBAAkBtW,GAAU,CAC5CA,EAAM,YACRA,EAAM,eAAe,EAClB,KAAA,kBAAkBmG,EAAoBnG,CAAK,CAAC,EACjD,KAAM,CAAE,OAAA0H,EAAQ,OAAAC,EAAQ,MAAA2E,CAAU,EAAA,KAAK,wBAAwBtM,CAAK,EACpE,KAAK,mBAAmB,CACtB,GAAGqQ,EAAkB,KAAMrQ,CAAK,EAChC,GAAG,KAAK,cAAc0H,EAAQ1H,CAAK,EACnC,OAAA2H,EACA,MAAA2E,CAAA,CACD,EACD,KAAK,mBAAmB,CAAA,CACzB,EACegK,EAAA,KAAM,aAAc,IAAM,CACxC,KAAK,MAAM,EACN,KAAK,MAAM,UAEhB,KAAK,MAAM,QAAU,GACrB,KAAK,mBAAmB,KAAK,YAAY,KAAK,MAAM,MAAM,CAAC,EAC3D,KAAK,mBAAmB,EAAA,CACzB,CAAA,CAEH,YAAYxM,EAAU,CAChB,KAAK,WAAW,OAAO,WAAa,CAAC,KAAK,WAAW,qBAAuB,KAAK,WAAW,uBAClFG,EAAAH,EAAU,iBAAkB,KAAK,cAAc,EAC/CG,EAAAH,EAAU,kBAAmB,KAAK,eAAe,EACjDG,EAAAH,EAAU,eAAgB,KAAK,YAAY,IAE3CG,EAAAH,EAAU,eAAgB,KAAK,YAAY,EAC3CG,EAAAH,EAAU,cAAe,KAAK,aAAa,EAC3CG,EAAAH,EAAU,aAAc,KAAK,UAAU,EACvCG,EAAAH,EAAU,gBAAiB,KAAK,UAAU,EAC1CG,EAAAH,EAAU,UAAW,KAAK,OAAO,EAC/C,CAEJ,CAEA,IAAIiN,GAAc,OAAO,eACrBC,GAAoB,CAACtN,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAMqN,GAAYrN,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EAC1J2Y,GAAkB,CAACvN,EAAKvM,EAAKmB,KAC/B0Y,GAAkBtN,EAAK,OAAOvM,GAAQ,SAAWA,EAAM,GAAKA,EAAKmB,CAAK,EAC/DA,GAET,MAAM4Y,WAAyBnG,EAAsB,CACnD,aAAc,CACZ,MAAM,GAAG,SAAS,EACFkG,GAAA,KAAM,SAAU,WAAW,EAC3BA,GAAA,KAAM,WAAY,QAAQ,EAC1BA,GAAA,KAAM,YAAa,EAAI,EACvBA,GAAA,KAAM,cAAgBjX,GAAU,CAC9C,GAAI,CAAC,KAAK,QACR,OACF,KAAK,aAAa,EACb,KAAA,WAAW,KAAK,KAAK,EAC1B,MAAM0H,EAASE,GAAqB5H,EAAO,KAAK,SAAS,EAErD,GADC,KAAA,kBAAkBmG,EAAoBnG,CAAK,CAAC,EAC5C,KAAK,MAAM,QAWd,KAAK,mBAAmB,CACtB,GAAGqQ,EAAkB,KAAMrQ,CAAK,EAChC,GAAG,KAAK,cAAc0H,EAAQ1H,CAAK,CAAA,CACpC,MAdsB,CACvB,KAAK,mBAAmB,CACtB,GAAG2Q,GAAqB,KAAMjJ,EAAQ1H,CAAK,EAC3C,GAAGqQ,EAAkB,KAAMrQ,EAAO,EAAI,EACtC,QAAS,KAAK,MAAM,MAAA,CACrB,EACK,MAAAmX,EAAoB,KAAK,YAAYzP,CAAM,EAC3C0P,EAAW/K,GAAqB8K,EAAkB,KAAK,EAC7D,KAAK,mBAAmBA,CAAiB,EACzC,KAAK,mBAAmBC,CAAQ,CAAA,CAOlC,KAAK,mBAAmB,CAAA,CACzB,EACeH,GAAA,KAAM,QAAS,IAAM,CACnC,KAAK,MAAM,EACN,KAAK,MAAM,UAEhB,KAAK,mBAAmB,CACtB,GAAG,KAAK,YAAY,KAAK,MAAM,MAAM,EACrC,QAAS,GACT,WAAY,CAAC,EAAG,CAAC,EACjB,SAAU,CAAA,CACX,EACD,KAAK,mBAAmB,EAAA,CACzB,CAAA,CAEH,YAAYnN,EAAU,CACRG,EAAAH,EAAU,WAAY,KAAK,WAAW,CAAA,CAEtD,CAEA,IAAIuN,GAAY,OAAO,eACnBC,GAAkB,CAAC5N,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAM2N,GAAU3N,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EACtJiZ,GAAgB,CAAC7N,EAAKvM,EAAKmB,KAC7BgZ,GAAgB5N,EAAK,OAAOvM,GAAQ,SAAWA,EAAM,GAAKA,EAAKmB,CAAK,EAC7DA,GAET,MAAMkZ,WAAwBzG,EAAsB,CAClD,aAAc,CACZ,MAAM,GAAG,SAAS,EACJwG,GAAA,KAAM,SAAU,UAAU,EAC1BA,GAAA,KAAM,WAAY,OAAO,EACzBA,GAAA,KAAM,YAAa,EAAI,EACvBA,GAAA,KAAM,cAAgBvX,GAAU,CAG5C,GAFIA,EAAM,SAAW,UAAW,KAAK,WAAW,UAE5C,CAAC,KAAK,QACR,OACG,KAAA,WAAW,KAAK,KAAK,EACrB,KAAA,kBAAkBmG,EAAoBnG,CAAK,CAAC,EACjD,MAAM0H,EAASoE,GACb3D,GAAoBnI,EAAO,KAAK,SAAS,EACzC,KAAK,MAAM,MACb,EACI,GAAC,KAAK,MAAM,QAWd,KAAK,mBAAmB,CACtB,GAAGqQ,EAAkB,KAAMrQ,CAAK,EAChC,GAAG,KAAK,cAAc0H,EAAQ1H,CAAK,CAAA,CACpC,MAdsB,CACvB,KAAK,mBAAmB,CACtB,GAAG2Q,GAAqB,KAAMjJ,EAAQ1H,CAAK,EAC3C,GAAGqQ,EAAkB,KAAMrQ,EAAO,EAAI,EACtC,QAAS,KAAK,MAAM,MAAA,CACrB,EACK,MAAAoM,EAAW,KAAK,YAAY1E,CAAM,EAClC0P,EAAW/K,GAAqBD,EAAS,KAAK,EACpD,KAAK,mBAAmBA,CAAQ,EAChC,KAAK,mBAAmBgL,CAAQ,CAAA,CAOlC,KAAK,mBAAmB,CAAA,CACzB,EACaG,GAAA,KAAM,QAAS,IAAM,CAE7B,GADJ,KAAK,MAAM,EACP,CAAC,KAAK,MAAM,QACd,OACF,MAAMnL,EAAW,KAAK,YAAY,KAAK,MAAM,MAAM,EACnD,KAAK,mBAAmBA,CAAQ,EAC3B,KAAA,mBAAmB,CAAE,QAAS,GAAO,WAAY,CAAC,EAAG,CAAC,EAAG,SAAU,CAAA,CAAG,EAC3E,KAAK,mBAAmB,CAAA,CACzB,CAAA,CAEH,YAAYtC,EAAU,CACRG,EAAAH,EAAU,UAAW,KAAK,WAAW,CAAA,CAErD,CAEA,MAAM2N,GAAgB,0CACtB,SAASC,GAAa3M,EAAU,CAC9B,MAAM4M,EAAS,CAAC,EACVC,EAAS,CAAC,EACV3C,MAA8B,IACpC,QAAS9X,KAAO4N,EACV0M,GAAc,KAAKta,CAAG,GAChB8X,EAAA,IAAI,OAAO,SAAS,EACrB2C,EAAAza,CAAG,EAAI4N,EAAS5N,CAAG,GAEnBwa,EAAAxa,CAAG,EAAI4N,EAAS5N,CAAG,EAGvB,MAAA,CAACya,EAAQD,EAAQ1C,CAAO,CACjC,CACA,SAAS4C,GAAWC,EAAW7M,EAAQ,CACrC,KAAM,CAACF,EAAUuK,EAAgBL,CAAO,EAAIyC,GAAaI,CAAS,EACnDlK,EAAA,IAAI,OAAQ4D,EAAc,EAC1B5D,EAAA,IAAI,QAASiI,EAAc,EAC3BjI,EAAA,IAAI,OAAQiI,EAAc,EAC1BjI,EAAA,IAAI,QAAS6I,EAAe,EAC5B7I,EAAA,IAAI,SAAUsJ,EAAgB,EAC9BtJ,EAAA,IAAI,QAAS4J,EAAe,EACrC,MAAApC,EAAeJ,GAAmB/J,EAAQgK,CAAO,EACjDQ,EAAmB,CAAC,EACtB,OAAAR,EAAQ,IAAI,QAAQ,IACLQ,EAAA,KAAOsC,GAAwBhN,EAAU,QAAQ,GAChEkK,EAAQ,IAAI,SAAS,IACNQ,EAAA,MAAQsC,GAAwBhN,EAAU,SAAS,GAClEkK,EAAQ,IAAI,UAAU,IACPQ,EAAA,OAASsC,GAAwBhN,EAAU,UAAU,GACpEkK,EAAQ,IAAI,QAAQ,IACLQ,EAAA,KAAOsC,GAAwBhN,EAAU,QAAQ,GAChEkK,EAAQ,IAAI,SAAS,IACNQ,EAAA,MAAQsC,GAAwBhN,EAAU,SAAS,GAClEkK,EAAQ,IAAI,SAAS,IACvBQ,EAAiB,MAAQ1K,EAAS,SAC7BsK,GAAeI,EAAkBL,EAAcE,CAAc,CACtE,CACA,SAASyC,GAAwBhN,EAAUiN,EAAY,CACrD,MAAMC,EAAWD,EAAa,QACxBE,EAASF,EAAa,MAWrB,OAVK3J,GAAU,CACpB,IAAI8J,EACA,OAAA9J,EAAM,OAAS4J,KAAYlN,GACpBA,EAAAkN,CAAQ,EAAE5J,CAAK,EACtB2J,KAAcjN,IACToN,EAAApN,EAASiN,CAAU,EAAE3J,CAAK,GAC/BA,EAAM,MAAQ6J,KAAUnN,GACjBA,EAAAmN,CAAM,EAAE7J,CAAK,EACjB8J,CACT,CAEF,CCrlDA,SAASzY,GAAQjB,EAAG,CAClB,OAAO,OAAOA,GAAM,WAAaA,EAAE,EAAI8B,GAAM9B,CAAC,CAChD,CA6EiB,OAAO,kBAAsB,KAAe,sBAAsB,kBAOnF,MAAMd,GAAW,OAAO,UAAU,SAC5BC,GAAYF,GAAQC,GAAS,KAAKD,CAAG,IAAM,kBA2NjD,SAASS,GAAmBC,EAAQ,CAClC,OAAiBf,GAAmB,CACtC,CA0SA,SAAS+a,GAAexb,EAAIwB,EAAQ,CACjBD,GAAyB,GAExCqX,GAAY5Y,EAAIwB,CAAM,CAC1B,CCjoBA,SAASmB,GAAaC,EAAO,CACvB,IAAAtC,EACE,MAAAuC,EAAQC,GAAQF,CAAK,EAC3B,OAAQtC,EAA8BuC,GAAM,MAAQ,KAAOvC,EAAKuC,CAClE,CCtLA,MAAM4Y,GAAmB,EAAI,GAAM,IAC7BC,GAAiB,OAAO,YAAgB,IACxC,IAAM,YAAY,IAAG,EACrB,IAAM,KAAK,IAAK,EAChBC,GAAc,OAAO,OAAW,IAC/BrX,GAAa,OAAO,sBAAsBA,CAAQ,EAClDA,GAAa,WAAW,IAAMA,EAASoX,GAAc,CAAE,EAAGD,EAAe,ECNhF,SAASG,GAAiBC,EAAc,CACpC,IAAIC,EAAQ,CAAE,EACVC,EAAiB,CAAE,EACnBC,EAAW,EACXC,EAAe,GACfC,EAAiB,GACrB,MAAMC,EAAc,IAAI,QAClBC,EAAO,CACT,SAAU,CAAC9X,EAAU+X,EAAY,GAAO5V,EAAY,KAAU,CAC1D,MAAM6V,EAAoB7V,GAAawV,EACjCM,EAASD,EAAoBR,EAAQC,EAC3C,OAAIM,GACAF,EAAY,IAAI7X,CAAQ,EACxBiY,EAAO,QAAQjY,CAAQ,IAAM,KAC7BiY,EAAO,KAAKjY,CAAQ,EAChBgY,GAAqBL,IACrBD,EAAWF,EAAM,SAElBxX,CACV,EACD,OAASA,GAAa,CAClB,MAAMkY,EAAQT,EAAe,QAAQzX,CAAQ,EACzCkY,IAAU,IACVT,EAAe,OAAOS,EAAO,CAAC,EAClCL,EAAY,OAAO7X,CAAQ,CAC9B,EACD,QAAUmY,GAAc,CACpB,GAAIR,EAAc,CACdC,EAAiB,GACjB,MAChB,CAKY,GAJAD,EAAe,GACf,CAACH,EAAOC,CAAc,EAAI,CAACA,EAAgBD,CAAK,EAChDC,EAAe,OAAS,EACxBC,EAAWF,EAAM,OACbE,EACA,QAAS3M,EAAI,EAAGA,EAAI2M,EAAU3M,IAAK,CAC/B,MAAM/K,EAAWwX,EAAMzM,CAAC,EACxB/K,EAASmY,CAAS,EACdN,EAAY,IAAI7X,CAAQ,IACxB8X,EAAK,SAAS9X,CAAQ,EACtBuX,EAAc,EAEtC,CAEYI,EAAe,GACXC,IACAA,EAAiB,GACjBE,EAAK,QAAQK,CAAS,EAE7B,CACJ,EACD,OAAOL,CACX,CClDA,MAAMM,GAAa,GACnB,IAAIC,GAAoB,GACpBd,GAAe,GACfI,GAAe,GACnB,MAAMW,GAAQ,CACV,MAAO,EACP,UAAW,CACf,EACMC,GAAa,CACf,OACA,SACA,YACA,SACA,YACJ,EACMC,GAAQD,GAAW,OAAO,CAACE,EAAKxc,KAClCwc,EAAIxc,CAAG,EAAIqb,GAAiB,IAAOC,GAAe,EAAK,EAChDkB,GACR,EAAE,EACC7a,GAAO2a,GAAW,OAAO,CAACE,EAAKxc,IAAQ,CACzC,MAAM6b,EAAOU,GAAMvc,CAAG,EACtB,OAAAwc,EAAIxc,CAAG,EAAI,CAACyc,EAASX,EAAY,GAAO5V,EAAY,MAC3CoV,IACDoB,GAAW,EACRb,EAAK,SAASY,EAASX,EAAW5V,CAAS,GAE/CsW,CACX,EAAG,EAAE,EACCG,GAAaL,GAAW,OAAO,CAACE,EAAKxc,KACvCwc,EAAIxc,CAAG,EAAIuc,GAAMvc,CAAG,EAAE,OACfwc,GACR,EAAE,EACaF,GAAW,OAAO,CAACE,EAAKxc,KACtCwc,EAAIxc,CAAG,EAAI,IAAMuc,GAAMvc,CAAG,EAAE,QAAQqc,EAAK,EAClCG,GACR,CAAE,CAAA,EACL,MAAMI,GAAeC,GAAWN,GAAMM,CAAM,EAAE,QAAQR,EAAK,EACrDS,GAAgBC,GAAc,CAChCzB,GAAe,GACfe,GAAM,MAAQD,GACRlB,GACA,KAAK,IAAI,KAAK,IAAI6B,EAAYV,GAAM,UAAWF,EAAU,EAAG,CAAC,EACnEE,GAAM,UAAYU,EAClBrB,GAAe,GACfY,GAAW,QAAQM,EAAW,EAC9BlB,GAAe,GACXJ,KACAc,GAAoB,GACpBhB,GAAY0B,EAAY,EAEhC,EACMJ,GAAY,IAAM,CACpBpB,GAAe,GACfc,GAAoB,GACfV,IACDN,GAAY0B,EAAY,CAChC,EACME,GAAe,IAAMX,GClBpB,SAASY,GAAOC,EAAG,EAAG,CACzB,IAAInU,EAAI,CAAA,EACR,QAASoU,KAAKD,EAAO,OAAO,UAAU,eAAe,KAAKA,EAAGC,CAAC,GAAK,EAAE,QAAQA,CAAC,EAAI,IAC9EpU,EAAEoU,CAAC,EAAID,EAAEC,CAAC,GACd,GAAID,GAAK,MAAQ,OAAO,OAAO,uBAA0B,WACrD,QAASpO,EAAI,EAAGqO,EAAI,OAAO,sBAAsBD,CAAC,EAAGpO,EAAIqO,EAAE,OAAQrO,IAC3D,EAAE,QAAQqO,EAAErO,CAAC,CAAC,EAAI,GAAK,OAAO,UAAU,qBAAqB,KAAKoO,EAAGC,EAAErO,CAAC,CAAC,IACzE/F,EAAEoU,EAAErO,CAAC,CAAC,EAAIoO,EAAEC,EAAErO,CAAC,CAAC,GAE5B,OAAO/F,CACX,CCnDA,IAAIqU,GAAY,UAAY,CAAE,ECD9B,MAAMC,GAAQ,CAACvN,EAAKC,EAAK/H,IAAM,KAAK,IAAI,KAAK,IAAIA,EAAG8H,CAAG,EAAGC,CAAG,ECGvDuN,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAW,CAAE,SAAAC,EAAW,IAAK,OAAAC,EAAS,IAAM,SAAAnO,EAAW,EAAG,KAAAoO,EAAO,GAAM,CAC5E,IAAIC,EACAC,EAEAC,EAAe,EAAIJ,EACvBI,EAAeZ,GAAMI,GAAYC,GAAYO,CAAY,EACzDL,EAAWP,GAAME,GAAaC,GAAaI,EAAW,GAAI,EACtDK,EAAe,GACfF,EAAYG,GAAiB,CACzB,MAAMC,EAAmBD,EAAeD,EAClC9O,EAAQgP,EAAmBP,EAC3BQ,EAAID,EAAmBzO,EACvB2O,EAAIC,GAAgBJ,EAAcD,CAAY,EAC9CM,EAAI,KAAK,IAAI,CAACpP,CAAK,EACzB,OAAOmO,GAAWc,EAAIC,EAAKE,CAC9B,EACDP,EAAcE,GAAiB,CAE3B,MAAM/O,EADmB+O,EAAeD,EACPL,EAC3B/E,EAAI1J,EAAQO,EAAWA,EACvBxM,EAAI,KAAK,IAAI+a,EAAc,CAAC,EAAI,KAAK,IAAIC,EAAc,CAAC,EAAIN,EAC5DY,EAAI,KAAK,IAAI,CAACrP,CAAK,EACnBsP,EAAIH,GAAgB,KAAK,IAAIJ,EAAc,CAAC,EAAGD,CAAY,EAEjE,OADe,CAACF,EAASG,CAAY,EAAIZ,GAAU,EAAI,GAAK,KACzCzE,EAAI3V,GAAKsb,GAAMC,CACrC,IAGDV,EAAYG,GAAiB,CACzB,MAAME,EAAI,KAAK,IAAI,CAACF,EAAeN,CAAQ,EACrCS,GAAKH,EAAexO,GAAYkO,EAAW,EACjD,MAAO,MAAWQ,EAAIC,CACzB,EACDL,EAAcE,GAAiB,CAC3B,MAAME,EAAI,KAAK,IAAI,CAACF,EAAeN,CAAQ,EACrCS,GAAK3O,EAAWwO,IAAiBN,EAAWA,GAClD,OAAOQ,EAAIC,CACd,GAEL,MAAMK,EAAe,EAAId,EACnBM,EAAeS,GAAgBZ,EAAUC,EAAYU,CAAY,EAEvE,GADAd,EAAWA,EAAW,IAClB,MAAMM,CAAY,EAClB,MAAO,CACH,UAAW,IACX,QAAS,GACT,SAAAN,CACH,EAEA,CACD,MAAMgB,EAAY,KAAK,IAAIV,EAAc,CAAC,EAAIJ,EAC9C,MAAO,CACH,UAAAc,EACA,QAASX,EAAe,EAAI,KAAK,KAAKH,EAAOc,CAAS,EACtD,SAAAhB,CACH,CACT,CACA,CACA,MAAMiB,GAAiB,GACvB,SAASF,GAAgBZ,EAAUC,EAAYU,EAAc,CACzD,IAAInT,EAASmT,EACb,QAAS5P,EAAI,EAAGA,EAAI+P,GAAgB/P,IAChCvD,EAASA,EAASwS,EAASxS,CAAM,EAAIyS,EAAWzS,CAAM,EAE1D,OAAOA,CACX,CACA,SAAS+S,GAAgBJ,EAAcD,EAAc,CACjD,OAAOC,EAAe,KAAK,KAAK,EAAID,EAAeA,CAAY,CACnE,CCzEA,MAAMa,GAAe,CAAC,WAAY,QAAQ,EACpCC,GAAc,CAAC,YAAa,UAAW,MAAM,EACnD,SAASC,GAAa/c,EAASgd,EAAM,CACjC,OAAOA,EAAK,KAAMjf,GAAQiC,EAAQjC,CAAG,IAAM,MAAS,CACxD,CACA,SAASkf,GAAiBjd,EAAS,CAC/B,IAAIkd,EAAgB,OAAO,OAAO,CAAE,SAAU,EAAK,UAAW,IAAK,QAAS,GAAI,KAAM,EAAK,uBAAwB,EAAO,EAAEld,CAAO,EACnI,GAAI,CAAC+c,GAAa/c,EAAS8c,EAAW,GAClCC,GAAa/c,EAAS6c,EAAY,EAAG,CACrC,MAAMM,EAAUzB,GAAW1b,CAAO,EAClCkd,EAAgB,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,CAAA,EAAIA,CAAa,EAAGC,CAAO,EAAG,CAAE,SAAU,EAAK,KAAM,EAAK,EACpHD,EAAc,uBAAyB,EAC/C,CACI,OAAOA,CACX,CACA,SAASE,GAAOtf,EAAI,CAChB,GAAI,CAAE,KAAAuf,EAAO,EAAK,GAAAC,EAAK,EAAK,UAAAC,EAAY,EAAG,UAAAC,CAAW,EAAG1f,EAAIkC,EAAUgb,GAAOld,EAAI,CAAC,OAAQ,KAAM,YAAa,WAAW,CAAC,EAC1H,MAAMmR,EAAQ,CAAE,KAAM,GAAO,MAAOoO,CAAM,EAC1C,GAAI,CAAE,UAAAV,EAAW,QAAAc,EAAS,KAAA5B,EAAM,SAAApO,EAAU,SAAAkO,EAAU,uBAAA+B,CAAsB,EAAMT,GAAiBjd,CAAO,EACpG2d,EAAgBC,GAChBC,EAAkBD,GACtB,SAASE,GAAe,CACpB,MAAMC,EAAkBtQ,EAAW,EAAEA,EAAW,KAAQ,EAClDuQ,EAAeV,EAAKD,EACpBrB,EAAeyB,GAAW,EAAI,KAAK,KAAKd,EAAYd,CAAI,GACxDoC,EAAsB,KAAK,KAAKtB,EAAYd,CAAI,EAAI,IAI1D,GAHI2B,IAAc,SACdA,EAAY,KAAK,IAAI,KAAK,IAAIF,EAAKD,CAAI,EAAI,IAAK,EAAG,GAEnDrB,EAAe,EAAG,CAClB,MAAMkC,EAAc7B,GAAgB4B,EAAqBjC,CAAY,EACrE2B,EAAiB7W,GAAM,CACnB,MAAMgV,EAAW,KAAK,IAAI,CAACE,EAAeiC,EAAsBnX,CAAC,EACjE,OAAQwW,EACJxB,IACOiC,EACC/B,EAAeiC,EAAsBD,GACrCE,EACA,KAAK,IAAIA,EAAcpX,CAAC,EACxBkX,EAAe,KAAK,IAAIE,EAAcpX,CAAC,EACtD,EACD+W,EAAmB/W,GAAM,CACrB,MAAMgV,EAAW,KAAK,IAAI,CAACE,EAAeiC,EAAsBnX,CAAC,EACjE,OAAQkV,EACJiC,EACAnC,GACE,KAAK,IAAIoC,EAAcpX,CAAC,GACrBiX,EACG/B,EACIiC,EACAD,GACRE,EACAF,EAAe,KAAK,IAAIE,EAAcpX,CAAC,GAC3CgV,GACK,KAAK,IAAIoC,EAAcpX,CAAC,GACpBiX,EACG/B,EACIiC,EACAD,GACRE,EACIF,EACA,KAAK,IAAIE,EAAcpX,CAAC,EAC3C,CACb,SACiBkV,IAAiB,EACtB2B,EAAiB7W,GAAMwW,EACnB,KAAK,IAAI,CAACW,EAAsBnX,CAAC,GAC5BkX,GACID,EAAkBE,EAAsBD,GACrClX,OAEf,CACD,MAAMqX,EAAoBF,EAAsB,KAAK,KAAKjC,EAAeA,EAAe,CAAC,EACzF2B,EAAiB7W,GAAM,CACnB,MAAMgV,EAAW,KAAK,IAAI,CAACE,EAAeiC,EAAsBnX,CAAC,EAC3DsX,EAAW,KAAK,IAAID,EAAoBrX,EAAG,GAAG,EACpD,OAAQwW,EACHxB,IACKiC,EACE/B,EAAeiC,EAAsBD,GACrC,KAAK,KAAKI,CAAQ,EAClBD,EACIH,EACA,KAAK,KAAKI,CAAQ,GAC1BD,CACX,CACb,CACA,CACI,OAAAL,EAAc,EACP,CACH,KAAOhX,GAAM,CACT,MAAMuX,EAAUV,EAAc7W,CAAC,EAC/B,GAAK4W,EAQDzO,EAAM,KAAOnI,GAAK6U,MARO,CACzB,MAAM2C,EAAkBT,EAAgB/W,CAAC,EAAI,IACvCyX,EAA2B,KAAK,IAAID,CAAe,GAAKf,EACxDiB,EAA+B,KAAK,IAAIlB,EAAKe,CAAO,GAAKb,EAC/DvO,EAAM,KACFsP,GAA4BC,CAChD,CAIY,OAAAvP,EAAM,MAAQA,EAAM,KAAOqO,EAAKe,EACzBpP,CACV,EACD,WAAY,IAAM,CACdxB,EAAW,CAACA,EACZ,CAAC4P,EAAMC,CAAE,EAAI,CAACA,EAAID,CAAI,EACtBS,EAAc,CACjB,CACJ,CACL,CACAV,GAAO,mBAAqB,CAACjB,EAAGC,IAAM,OAAOD,GAAM,UAAY,OAAOC,GAAM,SAC5E,MAAMwB,GAAQa,GAAO,ECpHfC,GAAW,CAACrB,EAAMC,EAAIpe,IAAU,CAClC,MAAMyf,EAAmBrB,EAAKD,EAC9B,OAAOsB,IAAqB,EAAI,GAAKzf,EAAQme,GAAQsB,CACzD,ECHMC,GAAM,CAACvB,EAAMC,EAAIoB,IAAa,CAACA,EAAWrB,EAAOqB,EAAWpB,EAAKD,ECAjEjC,GAAQ,CAACvN,EAAKC,IAAS/H,GAAM,KAAK,IAAI,KAAK,IAAIA,EAAG+H,CAAG,EAAGD,CAAG,EAC3DgR,GAAY9Y,GAAOA,EAAI,EAAI,OAAOA,EAAE,QAAQ,CAAC,CAAC,EAAIA,EAClD+Y,GAAa,uBACbC,GAAa,+HACbC,GAAmB,mHACzB,SAASC,GAASlZ,EAAG,CACjB,OAAO,OAAOA,GAAM,QACxB,CCLA,MAAMmZ,GAAS,CACX,KAAOnZ,GAAM,OAAOA,GAAM,SAC1B,MAAO,WACP,UAAYA,GAAMA,CACtB,EACMqH,GAAQ,OAAO,OAAO,OAAO,OAAO,CAAE,EAAE8R,EAAM,EAAG,CAAE,UAAW9D,GAAM,EAAG,CAAC,CAAC,CAAE,EAC3E5U,GAAQ,OAAO,OAAO,OAAO,OAAO,GAAI0Y,EAAM,EAAG,CAAE,QAAS,EAAG,ECN/DC,GAAkBC,IAAU,CAC9B,KAAOrZ,GAAMkZ,GAASlZ,CAAC,GAAKA,EAAE,SAASqZ,CAAI,GAAKrZ,EAAE,MAAM,GAAG,EAAE,SAAW,EACxE,MAAO,WACP,UAAYA,GAAM,GAAGA,CAAC,GAAGqZ,CAAI,EACjC,GACMC,GAAUF,GAAe,KAAK,EAC9BG,GAAUH,GAAe,GAAG,EAC5BrgB,EAAKqgB,GAAe,IAAI,EAGxBI,GAAqB,OAAO,OAAO,OAAO,OAAO,GAAID,EAAO,EAAG,CAAE,MAAQvZ,GAAMuZ,GAAQ,MAAMvZ,CAAC,EAAI,IAAK,UAAYA,GAAMuZ,GAAQ,UAAUvZ,EAAI,GAAG,EAAG,ECVrJyZ,GAAgB,CAACnZ,EAAMoZ,IAAc1Z,GAChC,GAASkZ,GAASlZ,CAAC,GAAKiZ,GAAiB,KAAKjZ,CAAC,GAAKA,EAAE,WAAWM,CAAI,GACvEoZ,GAAY,OAAO,UAAU,eAAe,KAAK1Z,EAAG0Z,CAAQ,GAE/DC,GAAa,CAACC,EAAOC,EAAOC,IAAW9Z,GAAM,CAC/C,GAAI,CAACkZ,GAASlZ,CAAC,EACX,OAAOA,EACX,KAAM,CAACoW,EAAGC,EAAGE,EAAGlP,CAAK,EAAIrH,EAAE,MAAM+Y,EAAU,EAC3C,MAAO,CACH,CAACa,CAAK,EAAG,WAAWxD,CAAC,EACrB,CAACyD,CAAK,EAAG,WAAWxD,CAAC,EACrB,CAACyD,CAAK,EAAG,WAAWvD,CAAC,EACrB,MAAOlP,IAAU,OAAY,WAAWA,CAAK,EAAI,CACpD,CACL,ECXM0S,GAAO,CACT,KAAMN,GAAc,MAAO,KAAK,EAChC,MAAOE,GAAW,MAAO,aAAc,WAAW,EAClD,UAAW,CAAC,CAAE,IAAAK,EAAK,WAAAC,EAAY,UAAAC,EAAW,MAAOC,EAAU,KAC/C,QACJ,KAAK,MAAMH,CAAG,EACd,KACAT,GAAQ,UAAUT,GAASmB,CAAU,CAAC,EACtC,KACAV,GAAQ,UAAUT,GAASoB,CAAS,CAAC,EACrC,KACApB,GAASzR,GAAM,UAAU8S,CAAO,CAAC,EACjC,GAEZ,ECfMC,GAAe/E,GAAM,EAAG,GAAG,EAC3BgF,GAAU,OAAO,OAAO,OAAO,OAAO,CAAE,EAAElB,EAAM,EAAG,CAAE,UAAYnZ,GAAM,KAAK,MAAMoa,GAAapa,CAAC,CAAC,EAAG,EACpGsa,GAAO,CACT,KAAMb,GAAc,MAAO,KAAK,EAChC,MAAOE,GAAW,MAAO,QAAS,MAAM,EACxC,UAAW,CAAC,CAAE,IAAAY,EAAK,MAAAC,EAAO,KAAAC,EAAM,MAAON,EAAU,CAAC,IAAO,QACrDE,GAAQ,UAAUE,CAAG,EACrB,KACAF,GAAQ,UAAUG,CAAK,EACvB,KACAH,GAAQ,UAAUI,CAAI,EACtB,KACA3B,GAASzR,GAAM,UAAU8S,CAAO,CAAC,EACjC,GACR,ECfA,SAASO,GAAS1a,EAAG,CACjB,IAAI1G,EAAI,GACJmd,EAAI,GACJJ,EAAI,GACJD,EAAI,GACR,OAAIpW,EAAE,OAAS,GACX1G,EAAI0G,EAAE,OAAO,EAAG,CAAC,EACjByW,EAAIzW,EAAE,OAAO,EAAG,CAAC,EACjBqW,EAAIrW,EAAE,OAAO,EAAG,CAAC,EACjBoW,EAAIpW,EAAE,OAAO,EAAG,CAAC,IAGjB1G,EAAI0G,EAAE,OAAO,EAAG,CAAC,EACjByW,EAAIzW,EAAE,OAAO,EAAG,CAAC,EACjBqW,EAAIrW,EAAE,OAAO,EAAG,CAAC,EACjBoW,EAAIpW,EAAE,OAAO,EAAG,CAAC,EACjB1G,GAAKA,EACLmd,GAAKA,EACLJ,GAAKA,EACLD,GAAKA,GAEF,CACH,IAAK,SAAS9c,EAAG,EAAE,EACnB,MAAO,SAASmd,EAAG,EAAE,EACrB,KAAM,SAASJ,EAAG,EAAE,EACpB,MAAOD,EAAI,SAASA,EAAG,EAAE,EAAI,IAAM,CACtC,CACL,CACA,MAAMuE,GAAM,CACR,KAAMlB,GAAc,GAAG,EACvB,MAAOiB,GACP,UAAWJ,GAAK,SACpB,EC9BMM,EAAQ,CACV,KAAO5a,GAAMsa,GAAK,KAAKta,CAAC,GAAK2a,GAAI,KAAK3a,CAAC,GAAK+Z,GAAK,KAAK/Z,CAAC,EACvD,MAAQA,GACAsa,GAAK,KAAKta,CAAC,EACJsa,GAAK,MAAMta,CAAC,EAEd+Z,GAAK,KAAK/Z,CAAC,EACT+Z,GAAK,MAAM/Z,CAAC,EAGZ2a,GAAI,MAAM3a,CAAC,EAG1B,UAAYA,GACDkZ,GAASlZ,CAAC,EACXA,EACAA,EAAE,eAAe,KAAK,EAClBsa,GAAK,UAAUta,CAAC,EAChB+Z,GAAK,UAAU/Z,CAAC,CAElC,ECrBM6a,GAAa,OACbC,GAAc,OACpB,SAAS7f,GAAK+E,EAAG,CACb,IAAIjI,EAAIc,EAAIkiB,EAAIC,EAChB,OAAQ,MAAMhb,CAAC,GACXkZ,GAASlZ,CAAC,KACRnH,GAAMd,EAAKiI,EAAE,MAAM+Y,EAAU,KAAO,MAAQhhB,IAAO,OAAS,OAASA,EAAG,UAAY,MAAQc,IAAO,OAASA,EAAK,KAAOmiB,GAAMD,EAAK/a,EAAE,MAAMgZ,EAAU,KAAO,MAAQ+B,IAAO,OAAS,OAASA,EAAG,UAAY,MAAQC,IAAO,OAASA,EAAK,GAAK,CACxP,CACA,SAASC,GAAQjb,EAAG,CACZ,OAAOA,GAAM,WACbA,EAAI,GAAGA,CAAC,IACZ,MAAMuC,EAAS,CAAE,EACjB,IAAI2Y,EAAY,EAChB,MAAMC,EAASnb,EAAE,MAAMgZ,EAAU,EAC7BmC,IACAD,EAAYC,EAAO,OACnBnb,EAAIA,EAAE,QAAQgZ,GAAY6B,EAAU,EACpCtY,EAAO,KAAK,GAAG4Y,EAAO,IAAIP,EAAM,KAAK,CAAC,GAE1C,MAAMQ,EAAUpb,EAAE,MAAM+Y,EAAU,EAClC,OAAIqC,IACApb,EAAIA,EAAE,QAAQ+Y,GAAY+B,EAAW,EACrCvY,EAAO,KAAK,GAAG6Y,EAAQ,IAAIjC,GAAO,KAAK,CAAC,GAErC,CAAE,OAAA5W,EAAQ,UAAA2Y,EAAW,UAAWlb,CAAG,CAC9C,CACA,SAASqb,GAAMrb,EAAG,CACd,OAAOib,GAAQjb,CAAC,EAAE,MACtB,CACA,SAASsb,GAAkBtb,EAAG,CAC1B,KAAM,CAAE,OAAAuC,EAAQ,UAAA2Y,EAAW,UAAAK,CAAS,EAAKN,GAAQjb,CAAC,EAC5Cwb,EAAYjZ,EAAO,OACzB,OAAQvC,GAAM,CACV,IAAIyb,EAASF,EACb,QAASzU,EAAI,EAAGA,EAAI0U,EAAW1U,IAC3B2U,EAASA,EAAO,QAAQ3U,EAAIoU,EAAYL,GAAaC,GAAahU,EAAIoU,EAAYN,EAAM,UAAU5a,EAAE8G,CAAC,CAAC,EAAIgS,GAAS9Y,EAAE8G,CAAC,CAAC,CAAC,EAE5H,OAAO2U,CACV,CACL,CACA,MAAMC,GAAwB1b,GAAM,OAAOA,GAAM,SAAW,EAAIA,EAChE,SAAS2b,GAAkB3b,EAAG,CAC1B,MAAM4b,EAASP,GAAMrb,CAAC,EAEtB,OADoBsb,GAAkBtb,CAAC,EACpB4b,EAAO,IAAIF,EAAoB,CAAC,CACvD,CACA,MAAMG,GAAU,CAAE,KAAA5gB,GAAM,MAAAogB,GAAO,kBAAAC,GAAmBK,kBAAAA,EAAmB,EC/C/DG,GAAc,IAAI,IAAI,CAAC,aAAc,WAAY,WAAY,SAAS,CAAC,EAC7E,SAASC,GAAmB/b,EAAG,CAC3B,GAAI,CAACoG,EAAMjN,CAAK,EAAI6G,EAAE,MAAM,EAAG,EAAE,EAAE,MAAM,GAAG,EAC5C,GAAIoG,IAAS,cACT,OAAOpG,EACX,KAAM,CAACmZ,CAAM,EAAIhgB,EAAM,MAAM4f,EAAU,GAAK,CAAE,EAC9C,GAAI,CAACI,EACD,OAAOnZ,EACX,MAAMqZ,EAAOlgB,EAAM,QAAQggB,EAAQ,EAAE,EACrC,IAAI6C,EAAeF,GAAY,IAAI1V,CAAI,EAAI,EAAI,EAC/C,OAAI+S,IAAWhgB,IACX6iB,GAAgB,KACb5V,EAAO,IAAM4V,EAAe3C,EAAO,GAC9C,CACA,MAAM4C,GAAgB,oBAChBC,GAAS,OAAO,OAAO,OAAO,OAAO,GAAIL,EAAO,EAAG,CAAE,kBAAoB7b,GAAM,CAC7E,MAAMmc,EAAYnc,EAAE,MAAMic,EAAa,EACvC,OAAOE,EAAYA,EAAU,IAAIJ,EAAkB,EAAE,KAAK,GAAG,EAAI/b,CACzE,EAAO,ECrBP,SAASoc,GAASjH,EAAGkH,EAAGtb,EAAG,CAKvB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDoU,GAAKkH,EAAIlH,GAAK,EAAIpU,EACzBA,EAAI,EAAI,EACDsb,EACPtb,EAAI,EAAI,EACDoU,GAAKkH,EAAIlH,IAAM,EAAI,EAAIpU,GAAK,EAChCoU,CACX,CACA,SAASmH,GAAW,CAAE,IAAAtC,EAAK,WAAAC,EAAY,UAAAC,EAAW,MAAA7S,CAAK,EAAI,CACvD2S,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIK,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAI,CAACR,EACDM,EAAMC,EAAQC,EAAOP,MAEpB,CACD,MAAMmC,EAAInC,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC9E,EAAI,EAAI+E,EAAYmC,EAC1B9B,EAAM6B,GAASjH,EAAGkH,EAAGrC,EAAM,EAAI,CAAC,EAChCQ,EAAQ4B,GAASjH,EAAGkH,EAAGrC,CAAG,EAC1BS,EAAO2B,GAASjH,EAAGkH,EAAGrC,EAAM,EAAI,CAAC,CACzC,CACI,MAAO,CACH,IAAK,KAAK,MAAMO,EAAM,GAAG,EACzB,MAAO,KAAK,MAAMC,EAAQ,GAAG,EAC7B,KAAM,KAAK,MAAMC,EAAO,GAAG,EAC3B,MAAApT,CACH,CACL,CCjCA,MAAMkV,GAAiB,CAACjF,EAAMC,EAAIvX,IAAM,CACpC,MAAMwc,EAAWlF,EAAOA,EAClBmF,EAASlF,EAAKA,EACpB,OAAO,KAAK,KAAK,KAAK,IAAI,EAAGvX,GAAKyc,EAASD,GAAYA,CAAQ,CAAC,CACpE,EACME,GAAa,CAAC/B,GAAKL,GAAMP,EAAI,EAC7B4C,GAAgB3c,GAAM0c,GAAW,KAAMpc,GAASA,EAAK,KAAKN,CAAC,CAAC,EAE5D4c,GAAW,CAACtF,EAAMC,IAAO,CAC3B,IAAIsF,EAAgBF,GAAarF,CAAI,EACjCwF,EAAcH,GAAapF,CAAE,EAG7BwF,EAAYF,EAAc,MAAMvF,CAAI,EACpC0F,EAAUF,EAAY,MAAMvF,CAAE,EAC9BsF,IAAkB9C,KAClBgD,EAAYT,GAAWS,CAAS,EAChCF,EAAgBvC,IAEhBwC,IAAgB/C,KAChBiD,EAAUV,GAAWU,CAAO,EAC5BF,EAAcxC,IAElB,MAAM2C,EAAU,OAAO,OAAO,CAAA,EAAIF,CAAS,EAC3C,OAAQ/c,GAAM,CACV,UAAWhI,KAAOilB,EACVjlB,IAAQ,UACRilB,EAAQjlB,CAAG,EAAIukB,GAAeQ,EAAU/kB,CAAG,EAAGglB,EAAQhlB,CAAG,EAAGgI,CAAC,GAGrE,OAAAid,EAAQ,MAAQpE,GAAIkE,EAAU,MAAOC,EAAQ,MAAOhd,CAAC,EAC9C6c,EAAc,UAAUI,CAAO,CACzC,CACL,ECjCMC,GAASld,GAAM,OAAOA,GAAM,SCL5Bmd,GAAmB,CAAC/G,EAAGC,IAAOrW,GAAMqW,EAAED,EAAEpW,CAAC,CAAC,EAC1Cod,GAAO,IAAIC,IAAiBA,EAAa,OAAOF,EAAgB,ECMtE,SAASG,GAAS9a,EAAQvJ,EAAQ,CAC9B,OAAIikB,GAAM1a,CAAM,EACJxC,GAAM6Y,GAAIrW,EAAQvJ,EAAQ+G,CAAC,EAE9B4a,EAAM,KAAKpY,CAAM,EACfoa,GAASpa,EAAQvJ,CAAM,EAGvBskB,GAAW/a,EAAQvJ,CAAM,CAExC,CACA,MAAMukB,GAAW,CAAClG,EAAMC,IAAO,CAC3B,MAAMkE,EAAS,CAAC,GAAGnE,CAAI,EACjBkE,EAAYC,EAAO,OACnBgC,EAAanG,EAAK,IAAI,CAACoG,EAAU,IAAMJ,GAASI,EAAUnG,EAAG,CAAC,CAAC,CAAC,EACtE,OAAQvX,GAAM,CACV,QAAS,EAAI,EAAG,EAAIwb,EAAW,IAC3BC,EAAO,CAAC,EAAIgC,EAAW,CAAC,EAAEzd,CAAC,EAE/B,OAAOyb,CACV,CACL,EACMkC,GAAY,CAACnb,EAAQvJ,IAAW,CAClC,MAAMwiB,EAAS,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEjZ,CAAM,EAAGvJ,CAAM,EACxDwkB,EAAa,CAAE,EACrB,UAAWzlB,KAAOyjB,EACVjZ,EAAOxK,CAAG,IAAM,QAAaiB,EAAOjB,CAAG,IAAM,SAC7CylB,EAAWzlB,CAAG,EAAIslB,GAAS9a,EAAOxK,CAAG,EAAGiB,EAAOjB,CAAG,CAAC,GAG3D,OAAQgI,GAAM,CACV,UAAWhI,KAAOylB,EACdhC,EAAOzjB,CAAG,EAAIylB,EAAWzlB,CAAG,EAAEgI,CAAC,EAEnC,OAAOyb,CACV,CACL,EACA,SAASR,GAAQ9hB,EAAO,CACpB,MAAMyiB,EAASC,GAAQ,MAAM1iB,CAAK,EAC5BqiB,EAAYI,EAAO,OACzB,IAAIgC,EAAa,EACbC,EAAS,EACTC,EAAS,EACb,QAAS,EAAI,EAAG,EAAItC,EAAW,IACvBoC,GAAc,OAAOhC,EAAO,CAAC,GAAM,SACnCgC,IAGIhC,EAAO,CAAC,EAAE,MAAQ,OAClBkC,IAGAD,IAIZ,MAAO,CAAE,OAAAjC,EAAQ,WAAAgC,EAAY,OAAAC,EAAQ,OAAAC,CAAQ,CACjD,CACA,MAAMP,GAAa,CAAC/a,EAAQvJ,IAAW,CACnC,MAAM8kB,EAAWlC,GAAQ,kBAAkB5iB,CAAM,EAC3C+kB,EAAc/C,GAAQzY,CAAM,EAC5Byb,EAAchD,GAAQhiB,CAAM,EAIlC,OAHuB+kB,EAAY,SAAWC,EAAY,QACtDD,EAAY,SAAWC,EAAY,QACnCD,EAAY,YAAcC,EAAY,WAE/Bb,GAAKI,GAASQ,EAAY,OAAQC,EAAY,MAAM,EAAGF,CAAQ,EAI9D5I,GAAM,GAAGA,EAAI,EAAIlc,EAASuJ,CAAM,EAEhD,ECtEM0b,GAAY,CAAC5G,EAAMC,IAAQpC,GAAM0D,GAAIvB,EAAMC,EAAIpC,CAAC,EACtD,SAASgJ,GAAmBne,EAAG,CAC3B,GAAI,OAAOA,GAAM,SACb,OAAOke,GAEN,GAAI,OAAOle,GAAM,SAClB,OAAI4a,EAAM,KAAK5a,CAAC,EACL4c,GAGAW,GAGV,GAAI,MAAM,QAAQvd,CAAC,EACpB,OAAOwd,GAEN,GAAI,OAAOxd,GAAM,SAClB,OAAO2d,EAEf,CACA,SAASS,GAAa3C,EAAQ4C,EAAMC,EAAa,CAC7C,MAAMC,EAAS,CAAE,EACXC,EAAeF,GAAeH,GAAmB1C,EAAO,CAAC,CAAC,EAC1DgD,EAAYhD,EAAO,OAAS,EAClC,QAAS,EAAI,EAAG,EAAIgD,EAAW,IAAK,CAChC,IAAIC,EAAQF,EAAa/C,EAAO,CAAC,EAAGA,EAAO,EAAI,CAAC,CAAC,EACjD,GAAI4C,EAAM,CACN,MAAMM,EAAiB,MAAM,QAAQN,CAAI,EAAIA,EAAK,CAAC,EAAIA,EACvDK,EAAQtB,GAAKuB,EAAgBD,CAAK,CAC9C,CACQH,EAAO,KAAKG,CAAK,CACzB,CACI,OAAOH,CACX,CACA,SAASK,GAAgB,CAACtH,EAAMC,CAAE,EAAG,CAACmH,CAAK,EAAG,CAC1C,OAAQ1e,GAAM0e,EAAM/F,GAASrB,EAAMC,EAAIvX,CAAC,CAAC,CAC7C,CACA,SAAS6e,GAAgBC,EAAOP,EAAQ,CACpC,MAAMQ,EAAcD,EAAM,OACpBE,EAAiBD,EAAc,EACrC,OAAQ/e,GAAM,CACV,IAAIif,EAAa,EACbC,EAAkB,GAQtB,GAPIlf,GAAK8e,EAAM,CAAC,EACZI,EAAkB,GAEblf,GAAK8e,EAAME,CAAc,IAC9BC,EAAaD,EAAiB,EAC9BE,EAAkB,IAElB,CAACA,EAAiB,CAClB,IAAIpY,EAAI,EACR,KAAOA,EAAIiY,GACH,EAAAD,EAAMhY,CAAC,EAAI9G,GAAK8G,IAAMkY,GADNlY,IACpB,CAIJmY,EAAanY,EAAI,CAC7B,CACQ,MAAMqY,EAAkBxG,GAASmG,EAAMG,CAAU,EAAGH,EAAMG,EAAa,CAAC,EAAGjf,CAAC,EAC5E,OAAOue,EAAOU,CAAU,EAAEE,CAAe,CAC5C,CACL,CACA,SAASC,GAAYN,EAAOrD,EAAQ,CAAE,MAAO4D,EAAU,GAAM,KAAAhB,EAAM,MAAAK,CAAO,EAAG,GAAI,CAC7E,MAAMK,EAAcD,EAAM,OAC1B1J,GAAU2J,IAAgBtD,EAAO,MAA8D,EAC/FrG,GAAU,CAACiJ,GAAQ,CAAC,MAAM,QAAQA,CAAI,GAAKA,EAAK,SAAWU,EAAc,CAAqI,EAC1MD,EAAM,CAAC,EAAIA,EAAMC,EAAc,CAAC,IAChCD,EAAQ,CAAA,EAAG,OAAOA,CAAK,EACvBrD,EAAS,CAAA,EAAG,OAAOA,CAAM,EACzBqD,EAAM,QAAS,EACfrD,EAAO,QAAS,GAEpB,MAAM8C,EAASH,GAAa3C,EAAQ4C,EAAMK,CAAK,EACzCY,EAAeP,IAAgB,EAC/BH,GAAgBE,EAAOP,CAAM,EAC7BM,GAAgBC,EAAOP,CAAM,EACnC,OAAOc,EACArf,GAAMsf,EAAajK,GAAMyJ,EAAM,CAAC,EAAGA,EAAMC,EAAc,CAAC,EAAG/e,CAAC,CAAC,EAC9Dsf,CACV,CCzFA,MAAMC,GAAgBC,GAAUrK,GAAK,EAAIqK,EAAO,EAAIrK,CAAC,EAC/CsK,GAAeD,GAAUrK,GAAKA,GAAK,GAAMqK,EAAO,EAAIrK,CAAC,EAAI,GAAK,EAAIqK,EAAO,GAAK,EAAIrK,EAAE,GAAK,EACzFuK,GAAgBC,GAAUxK,GAAK,KAAK,IAAIA,EAAGwK,CAAK,EAChDC,GAAgBD,GAAUxK,GAAKA,EAAIA,IAAMwK,EAAQ,GAAKxK,EAAIwK,GAC1DE,GAAoBF,GAAU,CAChC,MAAMG,EAAaF,GAAaD,CAAK,EACrC,OAAOxK,IAAMA,GAAK,GAAK,EACjB,GAAM2K,EAAW3K,CAAC,EAClB,IAAO,EAAI,KAAK,IAAI,EAAG,KAAOA,EAAI,EAAE,EAC9C,ECPM4K,GAA6B,MAC7BC,GAAyB,EAAM,GAC/BC,GAA0B,EAAM,GAChCC,GAAyB,EAAM,GAC/BC,GAAShL,GAAKA,EACdiL,GAASV,GAAa,CAAC,EACvBW,GAAUd,GAAca,EAAM,EAC9BE,GAAYb,GAAaW,EAAM,EAC/BG,GAASpL,GAAK,EAAI,KAAK,IAAI,KAAK,KAAKA,CAAC,CAAC,EACvCqL,GAAUjB,GAAcgB,EAAM,EAC9BE,GAAYhB,GAAae,EAAO,EAChCE,GAASd,GAAaG,EAA0B,EAChDY,GAAUpB,GAAcmB,EAAM,EAC9BE,GAAYnB,GAAaiB,EAAM,EAC/BG,GAAahB,GAAiBE,EAA0B,EACxDe,GAAK,KAAS,IACd9mB,GAAK,MAAU,KACf+mB,GAAK,MAAU,KACfC,GAAa7L,GAAM,CACrB,GAAIA,IAAM,GAAKA,IAAM,EACjB,OAAOA,EACX,MAAM8L,EAAK9L,EAAIA,EACf,OAAOA,EAAI6K,GACL,OAASiB,EACT9L,EAAI8K,GACA,MAAQgB,EAAK,IAAM9L,EAAI,IACvBA,EAAI+K,GACAY,GAAKG,EAAKjnB,GAAKmb,EAAI4L,GACnB,KAAO5L,EAAIA,EAAI,MAAQA,EAAI,KAC7C,EACM+L,GAAW3B,GAAcyB,EAAS,EAClCG,GAAehM,GAAMA,EAAI,GACzB,IAAO,EAAM6L,GAAU,EAAM7L,EAAI,CAAG,GACpC,GAAM6L,GAAU7L,EAAI,EAAM,CAAG,EAAI,GChCvC,SAASiM,GAAc7e,EAAQid,EAAQ,CACnC,OAAOjd,EAAO,IAAI,IAAMid,GAAUc,EAAS,EAAE,OAAO,EAAG/d,EAAO,OAAS,CAAC,CAC5E,CACA,SAAS8e,GAAc9e,EAAQ,CAC3B,MAAMiZ,EAAYjZ,EAAO,OACzB,OAAOA,EAAO,IAAI,CAACuM,EAAQhI,IAAMA,IAAM,EAAIA,GAAK0U,EAAY,GAAK,CAAC,CACtE,CACA,SAAS8F,GAAqBjX,EAAQuL,EAAU,CAC5C,OAAOvL,EAAO,IAAKkX,GAAMA,EAAI3L,CAAQ,CACzC,CACA,SAAS4L,GAAU,CAAE,KAAAlK,EAAO,EAAG,GAAAC,EAAK,EAAG,KAAA8G,EAAM,OAAAhU,EAAQ,SAAAuL,EAAW,KAAQ,CACpE,MAAM1M,EAAQ,CAAE,KAAM,GAAO,MAAOoO,CAAM,EACpC/U,EAAS,MAAM,QAAQgV,CAAE,EAAIA,EAAK,CAACD,EAAMC,CAAE,EAC3CkK,EAAQH,GAAqBjX,GAAUA,EAAO,SAAW9H,EAAO,OAChE8H,EACAgX,GAAc9e,CAAM,EAAGqT,CAAQ,EACrC,SAAS8L,GAAqB,CAC1B,OAAOtC,GAAYqC,EAAOlf,EAAQ,CAC9B,KAAM,MAAM,QAAQ8b,CAAI,EAAIA,EAAO+C,GAAc7e,EAAQ8b,CAAI,CACzE,CAAS,CACT,CACI,IAAIiB,EAAeoC,EAAoB,EACvC,MAAO,CACH,KAAO3gB,IACHmI,EAAM,MAAQoW,EAAave,CAAC,EAC5BmI,EAAM,KAAOnI,GAAK6U,EACX1M,GAEX,WAAY,IAAM,CACd3G,EAAO,QAAS,EAChB+c,EAAeoC,EAAoB,CACtC,CACJ,CACL,CCpCA,SAASC,GAAM,CAAE,SAAAja,EAAW,EAAG,KAAA4P,EAAO,EAAG,MAAAqI,EAAQ,GAAK,aAAAiC,EAAe,IAAK,UAAAnK,EAAY,GAAK,aAAAoK,CAAY,EAAK,CACxG,MAAM3Y,EAAQ,CAAE,KAAM,GAAO,MAAOoO,CAAM,EAC1C,IAAIwK,EAAYnC,EAAQjY,EACxB,MAAMqa,EAAQzK,EAAOwK,EACf7oB,EAAS4oB,IAAiB,OAAYE,EAAQF,EAAaE,CAAK,EACtE,OAAI9oB,IAAW8oB,IACXD,EAAY7oB,EAASqe,GAClB,CACH,KAAOvW,GAAM,CACT,MAAMoG,EAAQ,CAAC2a,EAAY,KAAK,IAAI,CAAC/gB,EAAI6gB,CAAY,EACrD,OAAA1Y,EAAM,KAAO,EAAE/B,EAAQsQ,GAAatQ,EAAQ,CAACsQ,GAC7CvO,EAAM,MAAQA,EAAM,KAAOjQ,EAASA,EAASkO,EACtC+B,CACV,EACD,WAAY,IAAM,CAAG,CACxB,CACL,CCZA,MAAM8Y,GAAQ,CAAER,UAAAA,GAAW,OAAAnK,GAAQ,MAAAsK,EAAO,EAC1C,SAASM,GAA2Bnc,EAAQ,CACxC,GAAI,MAAM,QAAQA,EAAO,EAAE,EACvB,OAAO0b,GAEN,GAAIQ,GAAMlc,EAAO,IAAI,EACtB,OAAOkc,GAAMlc,EAAO,IAAI,EAE5B,MAAMmR,EAAO,IAAI,IAAI,OAAO,KAAKnR,CAAM,CAAC,EACxC,OAAImR,EAAK,IAAI,MAAM,GACdA,EAAK,IAAI,UAAU,GAAK,CAACA,EAAK,IAAI,cAAc,EAC1CuK,GAEFvK,EAAK,IAAI,cAAc,GAC5BA,EAAK,IAAI,WAAW,GACpBA,EAAK,IAAI,MAAM,GACfA,EAAK,IAAI,SAAS,GAClBA,EAAK,IAAI,WAAW,GACpBA,EAAK,IAAI,WAAW,EACbI,GAEJmK,EACX,CC1BA,SAASU,GAAYC,EAASvM,EAAUwM,EAAQ,EAAG,CAC/C,OAAOD,EAAUvM,EAAWwM,CAChC,CACA,SAASC,GAAeF,EAASvM,EAAUwM,EAAQ,EAAGE,EAAoB,GAAM,CAC5E,OAAOA,EACDJ,GAAYtM,EAAW,CAACuM,EAASvM,EAAUwM,CAAK,EAChDxM,GAAYuM,EAAUvM,GAAYwM,CAC5C,CACA,SAASG,GAAsBJ,EAASvM,EAAUwM,EAAOE,EAAmB,CACxE,OAAOA,EAAoBH,GAAWvM,EAAWwM,EAAQD,GAAW,CAACC,CACzE,CCJA,MAAMI,GAAa1jB,GAAW,CAC1B,MAAM2jB,EAAgB,CAAC,CAAE,MAAAtb,CAAK,IAAOrI,EAAOqI,CAAK,EACjD,MAAO,CACH,MAAO,IAAMxN,GAAK,OAAO8oB,EAAe,EAAI,EAC5C,KAAM,IAAM9N,GAAW,OAAO8N,CAAa,CAC9C,CACL,EACA,SAASC,GAAQ3qB,EAAI,CACjB,IAAIc,EAAIkiB,EACJ,CAAE,KAAAzD,EAAM,SAAAqL,EAAW,GAAM,OAAAC,EAASJ,GAAW,QAAAL,EAAU,EAAG,OAAQU,EAAY,EAAG,WAAAC,EAAa,OAAQ,YAAAC,EAAc,EAAG,OAAAC,EAAQ,OAAAC,EAAQ,WAAAC,EAAY,SAAAC,EAAU,SAAAC,CAAU,EAAGrrB,EAAIkC,EAAUgb,GAAOld,EAAI,CAAC,OAAQ,WAAY,SAAU,UAAW,SAAU,aAAc,cAAe,SAAU,SAAU,aAAc,WAAY,UAAU,CAAC,EACjV,GAAI,CAAE,GAAAwf,CAAE,EAAKtd,EACTopB,EACAC,EAAc,EACdC,EAAmBtpB,EAAQ,SAC3BupB,EACAC,EAAa,GACbnB,EAAoB,GACpBoB,EACJ,MAAMC,EAAW1B,GAA2BhoB,CAAO,EAC9C,GAAA8gB,GAAMliB,EAAK8qB,GAAU,sBAAwB,MAAQ5I,IAAO,SAAkBA,EAAG,KAAKliB,EAAIye,EAAMC,CAAE,IACnGmM,EAAwBtE,GAAY,CAAC,EAAG,GAAG,EAAG,CAAC9H,EAAMC,CAAE,EAAG,CACtD,MAAO,EACnB,CAAS,EACDD,EAAO,EACPC,EAAK,KAET,MAAMqM,EAAYD,EAAS,OAAO,OAAO,OAAO,OAAO,CAAE,EAAE1pB,CAAO,EAAG,CAAE,KAAAqd,EAAM,GAAAC,CAAI,CAAA,CAAC,EAClF,SAASsM,IAAS,CACdP,IACIR,IAAe,WACfR,EAAoBgB,EAAc,IAAM,EACxCnB,EAAUE,GAAeF,EAASoB,EAAkBR,EAAaT,CAAiB,IAGlFH,EAAUD,GAAYC,EAASoB,EAAkBR,CAAW,EACxDD,IAAe,UACfc,EAAU,WAAY,GAE9BH,EAAa,GACbN,GAAYA,EAAU,CAC9B,CACI,SAASW,GAAW,CAChBT,EAAe,KAAM,EACrBH,GAAcA,EAAY,CAClC,CACI,SAASpkB,EAAOqI,EAAO,CAInB,GAHKmb,IACDnb,EAAQ,CAACA,GACbgb,GAAWhb,EACP,CAACsc,EAAY,CACb,MAAMva,EAAQ0a,EAAU,KAAK,KAAK,IAAI,EAAGzB,CAAO,CAAC,EACjDqB,EAASta,EAAM,MACXwa,IACAF,EAASE,EAAsBF,CAAM,GACzCC,EAAanB,EAAoBpZ,EAAM,KAAOiZ,GAAW,CACrE,CAC4DiB,IAASI,CAAM,EAC/DC,IACIH,IAAgB,IAChBC,IAA+EA,EAAmBpB,IAClGmB,EAAcT,EACdN,GAAsBJ,EAASoB,EAAkBR,EAAaT,CAAiB,GAAKuB,GAAQ,EAG5FC,EAAU,EAG1B,CACI,SAASC,GAAO,CACoCf,IAAQ,EACxDK,EAAiBT,EAAO9jB,CAAM,EAC9BukB,EAAe,MAAO,CAC9B,CACI,OAAAV,GAAYoB,EAAM,EACX,CACH,KAAM,IAAM,CACwCd,IAAQ,EACxDI,EAAe,KAAM,CACxB,CACJ,CACL,CCtFA,SAASW,GAAkBtc,EAAUuc,EAAe,CAChD,OAAOA,EAAgBvc,GAAY,IAAOuc,GAAiB,CAC/D,CCEA,SAASC,GAAQ,CAAE,KAAA5M,EAAO,EAAG,SAAA5P,EAAW,EAAG,IAAAI,EAAK,IAAAC,EAAK,MAAA4X,EAAQ,GAAK,aAAAiC,EAAe,IAAK,gBAAAuC,EAAkB,IAAK,cAAAC,EAAgB,GAAI,UAAA3M,EAAY,EAAG,aAAAoK,EAAc,OAAAe,EAAQ,SAAAQ,EAAU,WAAAF,EAAY,OAAAD,CAAM,EAAK,CACnM,IAAIoB,EACJ,SAASC,EAActkB,EAAG,CACtB,OAAQ8H,IAAQ,QAAa9H,EAAI8H,GAASC,IAAQ,QAAa/H,EAAI+H,CAC3E,CACI,SAASwc,EAAgBvkB,EAAG,CACxB,OAAI8H,IAAQ,OACDC,EACPA,IAAQ,QAEL,KAAK,IAAID,EAAM9H,CAAC,EAAI,KAAK,IAAI+H,EAAM/H,CAAC,EADhC8H,EAC0CC,CAC7D,CACI,SAASyc,EAAevqB,EAAS,CACuCoqB,GAAiB,KAAM,EAC3FA,EAAmB3B,GAAQ,OAAO,OAAO,OAAO,OAAO,GAAIzoB,CAAO,EAAG,CAAE,OAAA2oB,EAAQ,SAAW5iB,GAAM,CACxF,IAAIjI,EACgDqrB,IAASpjB,CAAC,GAC7DjI,EAAKkC,EAAQ,YAAc,MAAQlC,IAAO,QAAkBA,EAAG,KAAKkC,EAAS+F,CAAC,CAC/F,EAAe,WAAAkjB,EACH,OAAAD,CAAQ,CAAA,CAAC,CACrB,CACI,SAASwB,EAAYxqB,EAAS,CAC1BuqB,EAAe,OAAO,OAAO,CAAE,KAAM,SAAU,UAAWL,EAAiB,QAASC,EAAe,UAAA3M,CAAW,EAAExd,CAAO,CAAC,CAChI,CACI,GAAIqqB,EAAchN,CAAI,EAClBmN,EAAY,CAAE,KAAAnN,EAAM,SAAA5P,EAAU,GAAI6c,EAAgBjN,CAAI,EAAG,MAExD,CACD,IAAIre,EAAS0mB,EAAQjY,EAAW4P,EAC5B,OAAOuK,EAAiB,MACxB5oB,EAAS4oB,EAAa5oB,CAAM,GAChC,MAAMyrB,EAAWH,EAAgBtrB,CAAM,EACjC0rB,EAAUD,IAAa5c,EAAM,GAAK,EACxC,IAAI8c,EACAtM,EACJ,MAAMuM,EAAiB7kB,GAAM,CACzB4kB,EAAOtM,EACPA,EAAUtY,EACV0H,EAAWsc,GAAkBhkB,EAAI4kB,EAAM5P,GAAY,EAAG,KAAK,GACtD2P,IAAY,GAAK3kB,EAAI0kB,GACrBC,IAAY,IAAM3kB,EAAI0kB,IACvBD,EAAY,CAAE,KAAMzkB,EAAG,GAAI0kB,EAAU,SAAAhd,EAAU,CAEtD,EACD8c,EAAe,CACX,KAAM,QACN,KAAAlN,EACA,SAAA5P,EACA,aAAAka,EACA,MAAAjC,EACA,UAAAlI,EACA,aAAAoK,EACA,SAAUyC,EAAcrrB,CAAM,EAAI4rB,EAAgB,MAC9D,CAAS,CACT,CACI,MAAO,CACH,KAAM,IAA0ER,GAAiB,KAAM,CAC1G,CACL,CC5DA,MAAMjO,GAAI,CAAC0O,EAAIC,IAAO,EAAM,EAAMA,EAAK,EAAMD,EACvCzO,GAAI,CAACyO,EAAIC,IAAO,EAAMA,EAAK,EAAMD,EACjCvO,GAAKuO,GAAO,EAAMA,EAClBE,GAAa,CAAC,EAAGF,EAAIC,MAAS3O,GAAE0O,EAAIC,CAAE,EAAI,EAAI1O,GAAEyO,EAAIC,CAAE,GAAK,EAAIxO,GAAEuO,CAAE,GAAK,EACxEG,GAAW,CAAC,EAAGH,EAAIC,IAAO,EAAM3O,GAAE0O,EAAIC,CAAE,EAAI,EAAI,EAAI,EAAM1O,GAAEyO,EAAIC,CAAE,EAAI,EAAIxO,GAAEuO,CAAE,EAC9EI,GAAuB,KACvBC,GAA2B,GACjC,SAASC,GAAgBC,EAAIC,EAAIC,EAAIC,EAAKC,EAAK,CAC3C,IAAIC,EACAC,EACA7e,EAAI,EACR,GACI6e,EAAWL,GAAMC,EAAKD,GAAM,EAC5BI,EAAWV,GAAWW,EAAUH,EAAKC,CAAG,EAAIJ,EACxCK,EAAW,EACXH,EAAKI,EAGLL,EAAKK,QAEJ,KAAK,IAAID,CAAQ,EAAIR,IAC1B,EAAEpe,EAAIqe,IACV,OAAOQ,CACX,CACA,MAAMC,GAAmB,EACnBC,GAAiB,KACvB,SAASC,GAAqBT,EAAIU,EAASP,EAAKC,EAAK,CACjD,QAAS3e,EAAI,EAAGA,EAAI8e,GAAkB,EAAE9e,EAAG,CACvC,MAAMkf,EAAef,GAASc,EAASP,EAAKC,CAAG,EAC/C,GAAIO,IAAiB,EACjB,OAAOD,EAEX,MAAML,EAAWV,GAAWe,EAASP,EAAKC,CAAG,EAAIJ,EACjDU,GAAWL,EAAWM,CAC9B,CACI,OAAOD,CACX,CACA,MAAME,GAAmB,GACnBC,GAAkB,GAAOD,GAAmB,GAClD,SAASE,GAAYX,EAAKY,EAAKX,EAAKY,EAAK,CACrC,GAAIb,IAAQY,GAAOX,IAAQY,EACvB,OAAOlG,GACX,MAAMmG,EAAe,IAAI,aAAaL,EAAgB,EACtD,QAAS,EAAI,EAAG,EAAIA,GAAkB,EAAE,EACpCK,EAAa,CAAC,EAAItB,GAAW,EAAIkB,GAAiBV,EAAKC,CAAG,EAE9D,SAASc,EAASlB,EAAI,CAClB,IAAImB,EAAgB,EAChBC,EAAgB,EACpB,MAAMC,EAAaT,GAAmB,EACtC,KAAOQ,IAAkBC,GAAcJ,EAAaG,CAAa,GAAKpB,EAAI,EAAEoB,EACxED,GAAiBN,GAErB,EAAEO,EACF,MAAME,GAAQtB,EAAKiB,EAAaG,CAAa,IACxCH,EAAaG,EAAgB,CAAC,EAAIH,EAAaG,CAAa,GAC3DG,EAAYJ,EAAgBG,EAAOT,GACnCW,EAAe5B,GAAS2B,EAAWpB,EAAKC,CAAG,EACjD,OAAIoB,GAAgBhB,GACTC,GAAqBT,EAAIuB,EAAWpB,EAAKC,CAAG,EAE9CoB,IAAiB,EACfD,EAGAxB,GAAgBC,EAAImB,EAAeA,EAAgBN,GAAiBV,EAAKC,CAAG,CAE/F,CACI,OAAQ1kB,GAAMA,IAAM,GAAKA,IAAM,EAAIA,EAAIikB,GAAWuB,EAASxlB,CAAC,EAAGqlB,EAAKC,CAAG,CAC3E,CC7DA,IAAIzU,GAAc,OAAO,eACrBC,GAAoB,CAACtN,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAMqN,GAAYrN,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EAC1J2Y,GAAkB,CAACvN,EAAKvM,EAAKmB,KAC/B0Y,GAAkBtN,EAA+BvM,EAAM,GAAUmB,CAAK,EAC/DA,GAET,MAAM2tB,EAAoB,CACxB,aAAc,CACZhV,GAAgB,KAAM,gBAAqC,IAAA,GAAK,CAAA,CAElE,IAAI7U,EAAS,CACN,YAAA,cAAc,IAAIA,CAAO,EACvB,IAAM,KAAK,cAAc,OAAOA,CAAO,CAAA,CAEhD,OAAOmZ,EAAGC,EAAGE,EAAG,CACV,GAAC,KAAK,cAAc,KAExB,UAAWtZ,KAAW,KAAK,cACjBA,EAAAmZ,EAAGC,EAAGE,CAAC,CAAA,CAEnB,OAAQ,CACN,KAAK,cAAc,MAAM,CAAA,CAE7B,CAEA,IAAIrE,GAAY,OAAO,eACnBC,GAAkB,CAAC5N,EAAKvM,EAAKmB,IAAUnB,KAAOuM,EAAM2N,GAAU3N,EAAKvM,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAmB,EAAO,EAAIoL,EAAIvM,CAAG,EAAImB,EACtJiZ,GAAgB,CAAC7N,EAAKvM,EAAKmB,KAC7BgZ,GAAgB5N,EAAK,OAAOvM,GAAQ,SAAWA,EAAM,GAAKA,EAAKmB,CAAK,EAC7DA,GAET,SAAS4tB,GAAQ5tB,EAAO,CACtB,MAAO,CAAC,OAAO,MAAM,OAAO,WAAWA,CAAK,CAAC,CAC/C,CACA,MAAM6tB,EAAY,CAKhB,YAAYC,EAAM,CAIhB7U,GAAc,KAAM,SAAS,EAI7BA,GAAc,KAAM,MAAM,EAIZA,GAAA,KAAM,YAAa,CAAC,EAIpBA,GAAA,KAAM,cAAe,CAAC,EAIpCA,GAAc,KAAM,oBAAqB,IAAI0U,EAAqB,EAIlE1U,GAAc,KAAM,eAAe,EAIrBA,GAAA,KAAM,mBAAoB,EAAK,EAO/BA,GAAA,KAAM,kBAAoBpS,GAAM,CAC5C,KAAK,KAAO,KAAK,QACjB,KAAK,QAAUA,EACf,KAAM,CAAE,MAAAmH,EAAO,UAAA4N,CAAU,EAAIC,GAAa,EACtC,KAAK,cAAgBD,IACvB,KAAK,UAAY5N,EACjB,KAAK,YAAc4N,GAEhBpb,GAAA,WAAW,KAAK,qBAAqB,EACrC,KAAA,kBAAkB,OAAO,KAAK,OAAO,CAAA,CAC3C,EAIDyY,GAAc,KAAM,wBAAyB,IAAMzY,GAAK,WAAW,KAAK,aAAa,CAAC,EAKtFyY,GAAc,KAAM,gBAAiB,CAAC,CAAE,UAAA2C,KAAgB,CACjD,KAAK,mBACH,KAAA,iBAAmBgS,GAAQ,KAAK,OAAO,GAC1ChS,IAAc,KAAK,cACrB,KAAK,KAAO,KAAK,QAAA,CACpB,EACI,KAAA,KAAO,KAAK,QAAUkS,EACtB,KAAA,iBAAmBF,GAAQ,KAAK,OAAO,CAAA,CAO9C,SAASG,EAAc,CACd,OAAA,KAAK,kBAAkB,IAAIA,CAAY,CAAA,CAEhD,gBAAiB,CACf,KAAK,kBAAkB,MAAM,CAAA,CAQ/B,IAAIlnB,EAAG,CACL,KAAK,gBAAgBA,CAAC,CAAA,CAOxB,KAAM,CACJ,OAAO,KAAK,OAAA,CAOd,aAAc,CACZ,OAAO,KAAK,IAAA,CAOd,aAAc,CACZ,OAAO,KAAK,iBAAmBgkB,GAAkB,OAAO,WAAW,KAAK,OAAO,EAAI,OAAO,WAAW,KAAK,IAAI,EAAG,KAAK,SAAS,EAAI,CAAA,CAMrI,MAAMJ,EAAW,CACf,YAAK,KAAK,EACH,IAAI,QAASuD,GAAY,CAC9B,KAAM,CAAE,KAAAzrB,CAAA,EAASkoB,EAAUuD,CAAO,EAClC,KAAK,cAAgBzrB,CACtB,CAAA,EAAE,KAAK,IAAM,KAAK,gBAAgB,CAAA,CAKrC,MAAO,CACD,KAAK,eACP,KAAK,cAAc,EACrB,KAAK,eAAe,CAAA,CAKtB,aAAc,CACL,MAAA,CAAC,CAAC,KAAK,aAAA,CAKhB,gBAAiB,CACf,KAAK,cAAgB,IAAA,CAKvB,SAAU,CACR,KAAK,kBAAkB,MAAM,EAC7B,KAAK,KAAK,CAAA,CAEd,CACA,SAAS0rB,GAAeH,EAAM,CACrB,OAAA,IAAID,GAAYC,CAAI,CAC7B,CAEA,KAAM,CAAE,QAAAI,EAAY,EAAA,MACpB,SAASC,IAAkB,CACnB,MAAAC,EAAe9tB,EAAI,EAAE,EACrBiC,EAAQub,GAAS,CACf,MAAAuQ,EAAcxvB,GAAQ,CACrBuvB,EAAa,MAAMvvB,CAAG,IAEduvB,EAAA,MAAMvvB,CAAG,EAAE,KAAK,EAChBuvB,EAAA,MAAMvvB,CAAG,EAAE,QAAQ,EACzB,OAAAuvB,EAAa,MAAMvvB,CAAG,EAC/B,EACIif,EACEoQ,GAAQpQ,CAAI,EACdA,EAAK,QAAQuQ,CAAU,EAEvBA,EAAWvQ,CAAI,EAGjB,OAAO,KAAKsQ,EAAa,KAAK,EAAE,QAAQC,CAAU,CAEtD,EACMC,EAAM,CAACzvB,EAAKsf,EAAMre,IAAW,CAC7B,GAAAsuB,EAAa,MAAMvvB,CAAG,EACjB,OAAAuvB,EAAa,MAAMvvB,CAAG,EACzB,MAAA0vB,EAAcN,GAAe9P,CAAI,EACvC,OAAAoQ,EAAY,SAAU1nB,GAAM/G,EAAOjB,CAAG,EAAIgI,CAAC,EAC9BunB,EAAA,MAAMvvB,CAAG,EAAI0vB,EACnBA,CACT,EACA,OAAAzU,GAAevX,CAAI,EACZ,CACL,aAAA6rB,EACA,IAAAE,EACA,KAAA/rB,CACF,CACF,CAEA,SAASisB,GAAkB3nB,EAAG,CACrB,OAAA,MAAM,QAAQA,CAAC,CACxB,CACA,SAAS4nB,IAAoB,CACpB,MAAA,CACL,KAAM,SACN,UAAW,IACX,QAAS,GACT,UAAW,GACX,UAAW,EACb,CACF,CACA,SAASC,GAAuBtQ,EAAI,CAC3B,MAAA,CACL,KAAM,SACN,UAAW,IACX,QAASA,IAAO,EAAI,EAAI,KAAK,KAAK,GAAG,EAAI,GACzC,UAAW,IACX,UAAW,EACb,CACF,CACA,SAASuQ,GAAiBvQ,EAAI,CACrB,MAAA,CACL,KAAM,SACN,UAAW,IACX,QAASA,IAAO,EAAI,IAAM,GAC1B,UAAW,IACX,UAAW,EACb,CACF,CACA,SAASwQ,IAAc,CACd,MAAA,CACL,KAAM,YACN,KAAM,SACN,SAAU,GACZ,CACF,CACA,SAASvG,GAAUjf,EAAQ,CAClB,MAAA,CACL,KAAM,YACN,SAAU,IACV,OAAAA,CACF,CACF,CACA,MAAMylB,GAAqB,CACzB,QAASF,GACT,EAAGF,GACH,EAAGA,GACH,EAAGA,GACH,OAAQA,GACR,QAASA,GACT,QAASA,GACT,QAASA,GACT,OAAQC,GACR,OAAQA,GACR,MAAOA,GACP,gBAAiBE,GACjB,MAAOA,GACP,QAASA,EACX,EACA,SAASE,GAAqBC,EAAU3Q,EAAI,CACtC,IAAA4Q,EACA,OAAAR,GAAkBpQ,CAAE,EACF4Q,EAAA3G,GAEA2G,EAAAH,GAAmBE,CAAQ,GAAKF,GAAmB,QAElE,CAAE,GAAAzQ,EAAI,GAAG4Q,EAAkB5Q,CAAE,CAAE,CACxC,CAEA,MAAM6Q,GAAM,CACV,GAAGjP,GACH,UAAW,KAAK,KAClB,EACMkP,GAAa,CAEjB,MAAAzN,EACA,gBAAiBA,EACjB,aAAcA,EACd,KAAMA,EACN,OAAQA,EAER,YAAaA,EACb,eAAgBA,EAChB,iBAAkBA,EAClB,kBAAmBA,EACnB,gBAAiBA,EACjB,YAAa7hB,EACb,eAAgBA,EAChB,iBAAkBA,EAClB,kBAAmBA,EACnB,gBAAiBA,EACjB,aAAcA,EACd,OAAQA,EACR,oBAAqBA,EACrB,qBAAsBA,EACtB,wBAAyBA,EACzB,uBAAwBA,EAExB,MAAOA,EACP,SAAUA,EACV,OAAQA,EACR,UAAWA,EACX,KAAMA,EACN,IAAKA,EACL,MAAOA,EACP,OAAQA,EACR,KAAMA,EAEN,QAASA,EACT,WAAYA,EACZ,aAAcA,EACd,cAAeA,EACf,YAAaA,EACb,OAAQA,EACR,UAAWA,EACX,YAAaA,EACb,aAAcA,EACd,WAAYA,EAEZ,OAAQugB,GACR,QAASA,GACT,QAASA,GACT,QAASA,GACT,MAAA7Y,GACA,OAAQA,GACR,OAAQA,GACR,OAAQA,GACR,KAAM6Y,GACN,MAAOA,GACP,MAAOA,GACP,SAAUvgB,EACV,WAAYA,EACZ,WAAYA,EACZ,WAAYA,EACZ,EAAGA,EACH,EAAGA,EACH,EAAGA,EACH,YAAaA,EACb,qBAAsBA,EACtB,QAASsO,GACT,QAASmS,GACT,QAASA,GACT,QAASzgB,EAET,OAAQqvB,GACR,OAAAlM,GACA,aAAcA,GAEd,YAAa7U,GACb,cAAeA,GACf,WAAY+gB,EACd,EACME,GAAgBtwB,GAAQqwB,GAAWrwB,CAAG,EAC5C,SAASuwB,GAAepvB,EAAOmH,EAAM,CAC5B,OAAAA,GAAQ,OAAOnH,GAAU,UAAYmH,EAAK,UAAYA,EAAK,UAAUnH,CAAK,EAAIA,CACvF,CACA,SAASwiB,GAAkB3jB,EAAKmB,EAAO,CACjC,IAAAqvB,EAAmBF,GAAatwB,CAAG,EACvC,OAAIwwB,IAAqBtM,KACJsM,EAAA3M,IACd2M,EAAiB,kBAAoBA,EAAiB,kBAAkBrvB,CAAK,EAAI,MAC1F,CAEA,MAAMsvB,GAAe,CACnB,OAAAtI,GACA,OAAAC,GACA,UAAAE,GACA,QAAAD,GACA,OAAAE,GACA,UAAAE,GACA,QAAAD,GACA,OAAAE,GACA,UAAAE,GACA,QAAAD,GACA,WAAAE,GACA,SAAAK,GACA,YAAAC,GACA,UAAAH,EACF,EACA,SAAS0H,GAA2BC,EAAY,CAC1C,GAAA,MAAM,QAAQA,CAAU,EAAG,CAC7B,KAAM,CAACC,EAAIC,EAAIC,EAAIC,CAAE,EAAIJ,EACzB,OAAOxC,GAAYyC,EAAIC,EAAIC,EAAIC,CAAE,CAAA,SACxB,OAAOJ,GAAe,SAC/B,OAAOF,GAAaE,CAAU,EAEzB,OAAAA,CACT,CACA,SAASK,GAAc3K,EAAM,CAC3B,OAAO,MAAM,QAAQA,CAAI,GAAK,OAAOA,EAAK,CAAC,GAAM,QACnD,CACA,SAAS4K,GAAajxB,EAAKmB,EAAO,CAChC,OAAInB,IAAQ,SACH,GACL,UAAOmB,GAAU,UAAY,MAAM,QAAQA,CAAK,GAEhD,OAAOA,GAAU,UAAY0iB,GAAQ,KAAK1iB,CAAK,GAAK,CAACA,EAAM,WAAW,MAAM,EAIlF,CACA,SAAS+vB,GAAiBjvB,EAAS,CAC7B,OAAA,MAAM,QAAQA,EAAQ,EAAE,GAAKA,EAAQ,GAAG,CAAC,IAAM,OACjDA,EAAQ,GAAK,CAAC,GAAGA,EAAQ,EAAE,EACnBA,EAAA,GAAG,CAAC,EAAIA,EAAQ,MAEnBA,CACT,CACA,SAASkvB,GAAoC,CAAE,KAAA9K,EAAM,MAAAoD,EAAO,MAAAW,EAAO,GAAGgH,GAAc,CAC5E,MAAAnvB,EAAU,CAAE,GAAGmvB,CAAW,EAC5B,OAAA3H,IACFxnB,EAAQ,OAASwnB,GACfpD,IACMpkB,EAAA,KAAO+uB,GAAc3K,CAAI,EAAIA,EAAK,IAAIqK,EAA0B,EAAIA,GAA2BrK,CAAI,GAEzG+D,IACFnoB,EAAQ,QAAU,CAACmoB,GACdnoB,CACT,CACA,SAASovB,GAA6BD,EAAYnvB,EAASjC,EAAK,CAC9D,OAAI,MAAM,QAAQiC,EAAQ,EAAE,IACrBmvB,EAAW,WACdA,EAAW,SAAW,MAE1BF,GAAiBjvB,CAAO,EACnBqvB,GAAoBF,CAAU,IACpBA,EAAA,CACX,GAAGA,EACH,GAAGnB,GAAqBjwB,EAAKiC,EAAQ,EAAE,CACzC,GAEK,CACL,GAAGA,EACH,GAAGkvB,GAAoCC,CAAU,CACnD,CACF,CACA,SAASE,GAAoB,CAAE,MAAAlH,EAAO,OAAAyB,EAAQ,WAAAf,EAAY,YAAAC,EAAa,KAAAzL,EAAM,GAAG8R,GAAc,CAC5F,MAAO,CAAC,CAAC,OAAO,KAAKA,CAAU,EAAE,MACnC,CACA,SAASG,GAAmBH,EAAYpxB,EAAK,CAC3C,OAAOoxB,EAAWpxB,CAAG,GAAKoxB,EAAW,SAAWA,CAClD,CACA,SAASI,GAAaxxB,EAAKmB,EAAOF,EAAQmwB,EAAYlG,EAAY,CAC1D,MAAAuG,EAAkBF,GAAmBH,EAAYpxB,CAAG,EACtD,IAAAwK,EAASinB,EAAgB,OAAS,MAAQA,EAAgB,OAAS,OAAStwB,EAAM,IAAI,EAAIswB,EAAgB,KACxG,MAAAC,EAAqBT,GAAajxB,EAAKiB,CAAM,EAC/CuJ,IAAW,QAAUknB,GAAsB,OAAOzwB,GAAW,WACtDuJ,EAAAmZ,GAAkB3jB,EAAKiB,CAAM,GAClC,MAAA0wB,EAAqBV,GAAajxB,EAAKwK,CAAM,EACnD,SAASonB,EAAM9F,EAAU,CACvB,MAAM7pB,EAAU,CACd,KAAMuI,EACN,GAAIvJ,EACJ,SAAUmwB,EAAW,SAAWA,EAAW,SAAWjwB,EAAM,YAAY,EACxE,SAAW,GAAMA,EAAM,IAAI,CAAC,CAC9B,EACA,OAAOswB,EAAgB,OAAS,WAAaA,EAAgB,OAAS,QAAUvF,GAAQ,CAAE,GAAGjqB,EAAS,GAAGwvB,CAAiB,CAAA,EAAI/G,GAAQ,CACpI,GAAG2G,GAA6BI,EAAiBxvB,EAASjC,CAAG,EAC7D,SAAW,GAAM,CACfiC,EAAQ,SAAS,CAAC,EACdwvB,EAAgB,UAClBA,EAAgB,SAAS,CAAC,CAC9B,EACA,WAAY,IAAM,CACZvG,GACSA,EAAA,EACTY,GACOA,EAAA,CAAA,CACb,CACD,CAAA,CAEH,SAAS+F,EAAI/F,EAAU,CACrB,OAAA3qB,EAAM,IAAIF,CAAM,EACZiqB,GACSA,EAAA,EACTY,GACOA,EAAA,EACJ,CAAE,KAAM,IAAM,CAAA,CACnB,CAAA,CAEJ,MAAO,CAAC6F,GAAsB,CAACD,GAAsBD,EAAgB,OAAS,GAAQI,EAAMD,CAC9F,CAEA,SAASE,IAAuB,CAC9B,KAAM,CAAE,aAAAvC,EAAc,KAAA7rB,EAAM,IAAA+rB,CAAA,EAAQH,GAAgB,EAW7C,MAAA,CAAE,aAAAC,EAAc,KAAA7rB,EAAM,KAVhB,CAAC1D,EAAKmB,EAAOF,EAAQmwB,EAAa,GAAIlG,IAAe,CAC1D,MAAA5L,EAAOre,EAAOjB,CAAG,EACjB0vB,EAAcD,EAAIzvB,EAAKsf,EAAMre,CAAM,EACrC,GAAAmwB,GAAcA,EAAW,UAAW,CACtC1B,EAAY,IAAIvuB,CAAK,EACrB,MAAA,CAEF,MAAMyqB,EAAY4F,GAAaxxB,EAAK0vB,EAAavuB,EAAOiwB,EAAYlG,CAAU,EAC9EwE,EAAY,MAAM9D,CAAS,CAC7B,CACkC,CACpC,CAEA,SAASmG,GAAkBC,EAAkBC,EAAW,GAAI,CAAE,aAAA1C,EAAc,KAAA2C,EAAM,KAAAxuB,GAASouB,KAAwB,CAC3G,MAAAK,EAAY/uB,GAAM6uB,CAAQ,EAC1BG,EAAc3wB,EAAI,EAAK,EAC7BS,EACEqtB,EACC8C,GAAW,CACVD,EAAY,MAAQ,OAAO,OAAOC,CAAM,EAAE,OAAQlxB,GAAUA,EAAM,aAAa,EAAE,OAAS,CAC5F,EACA,CACE,UAAW,GACX,KAAM,EAAA,CAEV,EACM,MAAAmxB,EAAqBC,GAAY,CACrC,GAAI,CAACJ,GAAa,CAACA,EAAUI,CAAO,EAClC,MAAM,IAAI,MAAM,eAAeA,CAAO,kBAAkB,EAC1D,OAAOJ,EAAUI,CAAO,CAC1B,EACMC,EAASD,GAAY,CACrB,OAAOA,GAAY,WACrBA,EAAUD,EAAkBC,CAAO,GAC/B,MAAAE,EAAa,OAAO,QAAQF,CAAO,EAAE,IAAI,CAAC,CAACvyB,EAAKmB,CAAK,IAAM,CAC/D,GAAInB,IAAQ,aAEZ,OAAO,IAAI,QACRmvB,GAEC+C,EAAKlyB,EAAKmB,EAAO6wB,EAAkBO,EAAQ,YAActC,GAAqBjwB,EAAKuyB,EAAQvyB,CAAG,CAAC,EAAGmvB,CAAO,CAE7G,CAAA,CACD,EAAE,OAAO,OAAO,EACjB,eAAeuD,GAAkB,CACzB,MAAA,QAAQ,IAAID,CAAU,EAC5BF,EAAQ,YAAY,aAAa,CAAA,CAEnC,OAAO,QAAQ,IAAI,CAACG,EAAiB,CAAA,CAAC,CACxC,EA0BO,MAAA,CACL,YAAAN,EACA,MAAAI,EACA,IA5BWD,GAAY,CACvB,MAAMI,EAAcC,GAAWL,CAAO,EAAIA,EAAUD,EAAkBC,CAAO,EACtE,OAAA,QAAQI,CAAW,EAAE,QAAQ,CAAC,CAAC3yB,EAAKmB,CAAK,IAAM,CAChDnB,IAAQ,cAEPkyB,EAAAlyB,EAAKmB,EAAO6wB,EAAkB,CACjC,UAAW,EAAA,CACZ,CAAA,CACF,CACH,EAoBE,MAnBY,MAAOa,GAAS,CACxB,IAAAC,EAOJ,GANIX,IACEA,EAAU,QACZW,EAAeX,EAAU,OACvB,CAACA,EAAU,OAASA,EAAU,UAChCW,EAAeX,EAAU,UAEzB,CAACW,EAAc,CACZD,EAAA,EACL,MAAA,CAEF,MAAML,EAAMM,CAAY,EACnBD,EAAA,CACP,EAME,KAAAnvB,CACF,CACF,CA0IA,SAASqvB,GAAc1kB,EAAQ,GAAI,CACjC,MAAM6C,EAAQ8hB,GAAS,CACrB,GAAG3kB,CAAA,CACJ,EACKnH,EAAQzF,EAAI,EAAE,EACpB,OAAAS,EACEgP,EACA,IAAM,CACJ,MAAM3F,EAAS,CAAC,EAChB,SAAW,CAACvL,EAAKmB,CAAK,IAAK,OAAO,QAAQ+P,CAAK,EAAG,CAC1C,MAAA+hB,EAAY3C,GAAatwB,CAAG,EAC5BkzB,EAAc3C,GAAepvB,EAAO8xB,CAAS,EACnD1nB,EAAOvL,CAAG,EAAIkzB,CAAA,CAEhBhsB,EAAM,MAAQqE,CAChB,EACA,CACE,UAAW,GACX,KAAM,EAAA,CAEV,EACO,CACL,MAAA2F,EACA,MAAAhK,CACF,CACF,CAEA,SAASisB,GAAoBlyB,EAAQmyB,EAAU,CAC7ClxB,EACE,IAAME,GAAanB,CAAM,EACxB2B,GAAO,CACDA,GAELwwB,EAASxwB,CAAE,CACb,EACA,CACE,UAAW,EAAA,CAEf,CACF,CAEA,MAAMywB,GAAiB,CACrB,EAAG,aACH,EAAG,aACH,EAAG,YACL,EACA,SAASC,GAAkBjlB,EAAQ,GAAIklB,EAA6B,GAAM,CACxE,MAAMriB,EAAQ8hB,GAAS,CAAE,GAAG3kB,EAAO,EAC7B5E,EAAYhI,EAAI,EAAE,EACxB,OAAAS,EACEgP,EACCmhB,GAAW,CACV,IAAI9mB,EAAS,GACTioB,EAA0B,GAC9B,GAAID,IAA+BlB,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAI,CAC9D,MAAAoB,EAAM,CAACpB,EAAO,GAAK,EAAGA,EAAO,GAAK,EAAGA,EAAO,GAAK,CAAC,EAAE,IAAK9xB,GAAQgwB,GAAehwB,EAAKQ,CAAE,CAAC,EAAE,KAAK,GAAG,EACxGwK,GAAU,eAAekoB,CAAG,KACFD,EAAA,EAAA,CAE5B,SAAW,CAACxzB,EAAKmB,CAAK,IAAK,OAAO,QAAQkxB,CAAM,EAAG,CACjD,GAAIkB,IAA+BvzB,IAAQ,KAAOA,IAAQ,KAAOA,IAAQ,KACvE,SACI,MAAAizB,EAAY3C,GAAatwB,CAAG,EAC5BkzB,EAAc3C,GAAepvB,EAAO8xB,CAAS,EACnD1nB,GAAU,GAAG8nB,GAAerzB,CAAG,GAAKA,CAAG,IAAIkzB,CAAW,IAAA,CAEpDK,GAA8B,CAACC,IACvBjoB,GAAA,oBACF9B,EAAA,MAAQ8B,EAAO,KAAK,CAChC,EACA,CACE,UAAW,GACX,KAAM,EAAA,CAEV,EACO,CACL,MAAA2F,EACA,UAAAzH,CACF,CACF,CAEA,MAAMiqB,GAAgB,CAAC,GAAI,IAAK,IAAK,GAAG,EAClCC,GAAQ,CAAC,cAAe,YAAa,QAAS,SAAU,MAAM,EAC9DC,GAAiB,CAAC,uBAAwB,IAAK,IAAK,GAAG,EAC7DD,GAAM,QAASE,GAAiB,CAChBH,GAAA,QAASI,GAAY,CACjC,MAAM9zB,EAAM6zB,EAAeC,EAC3BF,GAAe,KAAK5zB,CAAG,CAAA,CACxB,CACH,CAAC,EACD,MAAM+zB,GAAmB,IAAI,IAAIH,EAAc,EAC/C,SAASI,GAAgBh0B,EAAK,CACrB,OAAA+zB,GAAiB,IAAI/zB,CAAG,CACjC,CACA,MAAMi0B,GAA2C,IAAA,IAAI,CAAC,UAAW,UAAW,SAAS,CAAC,EACtF,SAASC,GAAsBl0B,EAAK,CAC3B,OAAAi0B,GAAqB,IAAIj0B,CAAG,CACrC,CAqBA,SAASm0B,GAAgBlzB,EAAQmzB,EAAQ,CACnC,IAAAC,EACA/sB,EACJ,KAAM,CAAE,MAAA4J,EAAO,MAAAhK,CAAM,EAAI6rB,GAAc,EACnB,OAAAI,GAAAlyB,EAAS2B,GAAO,CACxB0E,EAAA1E,EACV,UAAW5C,KAAO,OAAO,KAAKqwB,EAAU,EAClCztB,EAAG,MAAM5C,CAAG,IAAM,MAAQ4C,EAAG,MAAM5C,CAAG,IAAM,IAAMg0B,GAAgBh0B,CAAG,GAAKk0B,GAAsBl0B,CAAG,IAEvGkR,EAAMlR,CAAG,EAAI4C,EAAG,MAAM5C,CAAG,GAEvBq0B,GACF,OAAO,QAAQA,CAAM,EAAE,QAAQ,CAAC,CAACr0B,EAAKmB,CAAK,IAAMyB,EAAG,MAAM5C,CAAG,EAAImB,CAAK,EAEpEizB,GACFA,EAAOljB,CAAK,CAAA,CACf,EACDhP,EACEgF,EACCmrB,GAAW,CACV,GAAI,CAAC/qB,EAAS,CACH+sB,EAAAhC,EACT,MAAA,CAEF,UAAWryB,KAAOqyB,EAChB/qB,EAAQ,MAAMtH,CAAG,EAAIqyB,EAAOryB,CAAG,CACnC,EACA,CACE,UAAW,EAAA,CAEf,EACO,CACL,MAAOkR,CACT,CACF,CAEA,SAASojB,GAAe7qB,EAAW,CACjC,MAAM8qB,EAAa9qB,EAAU,KAAK,EAAE,MAAM,QAAQ,EAClD,GAAI8qB,EAAW,SAAW,EACxB,MAAO,CAAC,EACJ,MAAAC,EAAerzB,GACfA,EAAM,SAAS,IAAI,GAAKA,EAAM,SAAS,KAAK,EACvC,OAAO,WAAWA,CAAK,EAC5B,OAAO,MAAM,OAAOA,CAAK,CAAC,EACrB,OAAOA,CAAK,EACdA,EAET,OAAOozB,EAAW,OAAO,CAAC/X,EAAKiY,IAAe,CAC5C,GAAI,CAACA,EACI,OAAAjY,EACT,KAAM,CAACpO,EAAMsmB,CAAc,EAAID,EAAW,MAAM,GAAG,EAE7ClqB,EADamqB,EAAe,MAAM,GAAG,EACjB,IAAKn0B,GACtBi0B,EAAYj0B,EAAI,SAAS,GAAG,EAAIA,EAAI,QAAQ,IAAK,EAAE,EAAIA,EAAI,KAAA,CAAM,CACzE,EACKY,EAAQoJ,EAAO,SAAW,EAAIA,EAAO,CAAC,EAAIA,EACzC,MAAA,CACL,GAAGiS,EACH,CAACpO,CAAI,EAAGjN,CACV,CACF,EAAG,EAAE,CACP,CACA,SAASwzB,GAAmBzjB,EAAOzH,EAAW,CACrC,OAAA,QAAQ6qB,GAAe7qB,CAAS,CAAC,EAAE,QAAQ,CAAC,CAACzJ,EAAKmB,CAAK,IAAM,CAClE,MAAMyzB,EAAO,CAAC,IAAK,IAAK,GAAG,EAC3B,GAAI50B,IAAQ,cAAe,CACzB,GAAImB,IAAU,EAAG,CACfyzB,EAAK,QAAS7gB,GAAS7C,EAAM6C,CAAI,EAAI,CAAC,EACtC,MAAA,CAEI5S,EAAA,QAAQ,CAAC0zB,EAAW5Y,IAAU/K,EAAM0jB,EAAK3Y,CAAK,CAAC,EAAI4Y,CAAS,EAClE,MAAA,CAGF,GADA1zB,EAAQ,OAAO,WAAW,GAAGA,CAAK,EAAE,EAChCnB,IAAQ,aAAc,CACxBkR,EAAM,EAAI/P,EACV,MAAA,CAEF,GAAInB,IAAQ,aAAc,CACxBkR,EAAM,EAAI/P,EACV,MAAA,CAEF,GAAInB,IAAQ,aAAc,CACxBkR,EAAM,EAAI/P,EACV,MAAA,CAEF+P,EAAMlR,CAAG,EAAImB,CAAA,CACd,CACH,CAEA,SAAS2zB,GAAoB7zB,EAAQmzB,EAAQ,CACvC,IAAAC,EACA/sB,EACJ,KAAM,CAAE,MAAA4J,EAAO,UAAAzH,CAAU,EAAI6pB,GAAkB,EAC3B,OAAAH,GAAAlyB,EAAS2B,GAAO,CACxB0E,EAAA1E,EACNA,EAAG,MAAM,WACQ+xB,GAAAzjB,EAAOtO,EAAG,MAAM,SAAS,EAC1CyxB,IACFzxB,EAAG,MAAM,UAAYyxB,GACnBD,GACFA,EAAOljB,CAAK,CAAA,CACf,EACDhP,EACEuH,EACCsrB,GAAa,CACZ,GAAI,CAACztB,EAAS,CACH+sB,EAAAU,EACT,MAAA,CAEFztB,EAAQ,MAAM,UAAYytB,CAC5B,EACA,CACE,UAAW,EAAA,CAEf,EACO,CACL,UAAW7jB,CACb,CACF,CAEA,SAAS8jB,GAAczoB,EAAK,CACnB,OAAA,OAAO,QAAQA,CAAG,CAC3B,CAEA,SAAS0oB,GAAoBh0B,EAAQi0B,EAAe,CAC5C,MAAAlD,EAAmBgB,GAAS,EAAE,EAC9BR,EAASjoB,GAAW,OAAO,QAAQA,CAAM,EAAE,QAAQ,CAAC,CAACvK,EAAKmB,CAAK,IAAM6wB,EAAiBhyB,CAAG,EAAImB,CAAK,EAClG,CAAE,MAAA+F,CAAU,EAAAitB,GAAgBlzB,EAAQuxB,CAAK,EACzC,CAAE,UAAA/oB,CAAc,EAAAqrB,GAAoB7zB,EAAQuxB,CAAK,EACvD,OAAAtwB,EACE8vB,EACCK,GAAW,CACV2C,GAAc3C,CAAM,EAAE,QAAQ,CAAC,CAACryB,EAAKmB,CAAK,IAAM,CAC9C,MAAMg0B,EAAUnB,GAAgBh0B,CAAG,EAAIyJ,EAAYvC,EAC/CiuB,EAAQn1B,CAAG,GAAKm1B,EAAQn1B,CAAG,IAAMmB,IAErCg0B,EAAQn1B,CAAG,EAAImB,EAAA,CAChB,CACH,EACA,CACE,UAAW,GACX,KAAM,EAAA,CAEV,EACAgyB,GAAoBlyB,EAAQ,IAAMi0B,CAAqC,EAChE,CACL,iBAAAlD,EACA,MAAA9qB,EACA,UAAAuC,CACF,CACF,CCn/BA;AAAA;AAAA;AAAA,EASA,IAAI2rB,GAAqB,CAAC,qBAAsB,sBAAuB,wBAAyB,uBAAwB,sBAAuB,oCAAqC,+BAAgC,+BAAgC,gEAAiE,6CAA8C,sBAAsB,EACrXC,GAAmCD,GAAmB,KAAK,GAAG,EAC9DE,GAAY,OAAO,QAAY,IAC/BtwB,GAAUswB,GAAY,UAAY,CAAE,EAAG,QAAQ,UAAU,SAAW,QAAQ,UAAU,mBAAqB,QAAQ,UAAU,sBAC7HC,GAAc,CAACD,IAAa,QAAQ,UAAU,YAAc,SAAU7tB,EAAS,CACjF,IAAI+tB,EACJ,OAAO/tB,GAAY,OAAuC+tB,EAAuB/tB,EAAQ,eAAiB,MAAQ+tB,IAAyB,OAA3F,OAA6GA,EAAqB,KAAK/tB,CAAO,CAChM,EAAI,SAAUA,EAAS,CACrB,OAAyDA,GAAQ,aACnE,EAUIguB,GAAU,SAASA,EAAQC,EAAMC,EAAQ,CAC3C,IAAIC,EACAD,IAAW,SACbA,EAAS,IAKX,IAAIE,EAAWH,GAAS,OAAoCE,EAAqBF,EAAK,gBAAkB,MAAQE,IAAuB,OAArF,OAAuGA,EAAmB,KAAKF,EAAM,OAAO,EAC1LI,EAAQD,IAAa,IAAMA,IAAa,OAOxCtqB,EAASuqB,GAASH,GAAUD,GAAQD,EAAQC,EAAK,UAAU,EAE/D,OAAOnqB,CACT,EAOIwqB,GAAoB,SAA2BL,EAAM,CACvD,IAAIM,EAIAC,EAAWP,GAAS,OAAoCM,EAAsBN,EAAK,gBAAkB,MAAQM,IAAwB,OAAvF,OAAyGA,EAAoB,KAAKN,EAAM,iBAAiB,EAC3M,OAAOO,IAAa,IAAMA,IAAa,MACzC,EAQIC,GAAgB,SAAuBtzB,EAAIuzB,EAAkBjS,EAAQ,CAGvE,GAAIuR,GAAQ7yB,CAAE,EACZ,MAAO,CAAE,EAEX,IAAIwzB,EAAa,MAAM,UAAU,MAAM,MAAMxzB,EAAG,iBAAiByyB,EAAiB,CAAC,EACnF,OAAIc,GAAoBnxB,GAAQ,KAAKpC,EAAIyyB,EAAiB,GACxDe,EAAW,QAAQxzB,CAAE,EAEvBwzB,EAAaA,EAAW,OAAOlS,CAAM,EAC9BkS,CACT,EAoCIC,GAA2B,SAASA,EAAyBC,EAAUH,EAAkBl0B,EAAS,CAGpG,QAFIm0B,EAAa,CAAE,EACfG,EAAkB,MAAM,KAAKD,CAAQ,EAClCC,EAAgB,QAAQ,CAC7B,IAAI9uB,EAAU8uB,EAAgB,MAAO,EACrC,GAAI,CAAAd,GAAQhuB,EAAS,EAAK,EAK1B,GAAIA,EAAQ,UAAY,OAAQ,CAE9B,IAAI+uB,EAAW/uB,EAAQ,iBAAkB,EACrCgvB,EAAUD,EAAS,OAASA,EAAW/uB,EAAQ,SAC/CivB,EAAmBL,EAAyBI,EAAS,GAAMx0B,CAAO,EAClEA,EAAQ,QACVm0B,EAAW,KAAK,MAAMA,EAAYM,CAAgB,EAElDN,EAAW,KAAK,CACd,YAAa3uB,EACb,WAAYivB,CACtB,CAAS,CAET,KAAW,CAEL,IAAIC,EAAiB3xB,GAAQ,KAAKyC,EAAS4tB,EAAiB,EACxDsB,GAAkB10B,EAAQ,OAAOwF,CAAO,IAAM0uB,GAAoB,CAACG,EAAS,SAAS7uB,CAAO,IAC9F2uB,EAAW,KAAK3uB,CAAO,EAIzB,IAAImvB,EAAanvB,EAAQ,YAEzB,OAAOxF,EAAQ,eAAkB,YAAcA,EAAQ,cAAcwF,CAAO,EAKxEovB,EAAkB,CAACpB,GAAQmB,EAAY,EAAK,IAAM,CAAC30B,EAAQ,kBAAoBA,EAAQ,iBAAiBwF,CAAO,GACnH,GAAImvB,GAAcC,EAAiB,CAOjC,IAAIC,EAAoBT,EAAyBO,IAAe,GAAOnvB,EAAQ,SAAWmvB,EAAW,SAAU,GAAM30B,CAAO,EACxHA,EAAQ,QACVm0B,EAAW,KAAK,MAAMA,EAAYU,CAAiB,EAEnDV,EAAW,KAAK,CACd,YAAa3uB,EACb,WAAYqvB,CACxB,CAAW,CAEX,MAGQP,EAAgB,QAAQ,MAAMA,EAAiB9uB,EAAQ,QAAQ,CAEvE,CACA,CACE,OAAO2uB,CACT,EAQIW,GAAc,SAAqBrB,EAAM,CAC3C,MAAO,CAAC,MAAM,SAASA,EAAK,aAAa,UAAU,EAAG,EAAE,CAAC,CAC3D,EAQIsB,GAAc,SAAqBtB,EAAM,CAC3C,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,kBAAkB,EAEpC,OAAIA,EAAK,SAAW,IAQb,0BAA0B,KAAKA,EAAK,OAAO,GAAKK,GAAkBL,CAAI,IAAM,CAACqB,GAAYrB,CAAI,EACzF,EAGJA,EAAK,QACd,EAUIuB,GAAuB,SAA8BvB,EAAMwB,EAAS,CACtE,IAAIC,EAAWH,GAAYtB,CAAI,EAC/B,OAAIyB,EAAW,GAAKD,GAAW,CAACH,GAAYrB,CAAI,EACvC,EAEFyB,CACT,EACIC,GAAuB,SAA8BhZ,EAAGC,EAAG,CAC7D,OAAOD,EAAE,WAAaC,EAAE,SAAWD,EAAE,cAAgBC,EAAE,cAAgBD,EAAE,SAAWC,EAAE,QACxF,EACIgZ,GAAU,SAAiB3B,EAAM,CACnC,OAAOA,EAAK,UAAY,OAC1B,EACI4B,GAAgB,SAAuB5B,EAAM,CAC/C,OAAO2B,GAAQ3B,CAAI,GAAKA,EAAK,OAAS,QACxC,EACI6B,GAAuB,SAA8B7B,EAAM,CAC7D,IAAIp0B,EAAIo0B,EAAK,UAAY,WAAa,MAAM,UAAU,MAAM,MAAMA,EAAK,QAAQ,EAAE,KAAK,SAAU8B,EAAO,CACrG,OAAOA,EAAM,UAAY,SAC7B,CAAG,EACD,OAAOl2B,CACT,EACIm2B,GAAkB,SAAyBC,EAAOC,EAAM,CAC1D,QAAS7oB,EAAI,EAAGA,EAAI4oB,EAAM,OAAQ5oB,IAChC,GAAI4oB,EAAM5oB,CAAC,EAAE,SAAW4oB,EAAM5oB,CAAC,EAAE,OAAS6oB,EACxC,OAAOD,EAAM5oB,CAAC,CAGpB,EACI8oB,GAAkB,SAAyBlC,EAAM,CACnD,GAAI,CAACA,EAAK,KACR,MAAO,GAET,IAAImC,EAAanC,EAAK,MAAQH,GAAYG,CAAI,EAC1CoC,EAAc,SAAqB1pB,EAAM,CAC3C,OAAOypB,EAAW,iBAAiB,6BAA+BzpB,EAAO,IAAI,CAC9E,EACG2pB,EACJ,GAAI,OAAO,OAAW,KAAe,OAAO,OAAO,IAAQ,KAAe,OAAO,OAAO,IAAI,QAAW,WACrGA,EAAWD,EAAY,OAAO,IAAI,OAAOpC,EAAK,IAAI,CAAC,MAEnD,IAAI,CACFqC,EAAWD,EAAYpC,EAAK,IAAI,CACjC,OAAQsC,EAAK,CAEZ,eAAQ,MAAM,2IAA4IA,EAAI,OAAO,EAC9J,EACb,CAEE,IAAIC,EAAUR,GAAgBM,EAAUrC,EAAK,IAAI,EACjD,MAAO,CAACuC,GAAWA,IAAYvC,CACjC,EACIwC,GAAU,SAAiBxC,EAAM,CACnC,OAAO2B,GAAQ3B,CAAI,GAAKA,EAAK,OAAS,OACxC,EACIyC,GAAqB,SAA4BzC,EAAM,CACzD,OAAOwC,GAAQxC,CAAI,GAAK,CAACkC,GAAgBlC,CAAI,CAC/C,EAGI0C,GAAiB,SAAwB1C,EAAM,CACjD,IAAI2C,EAwBAC,EAAW5C,GAAQH,GAAYG,CAAI,EACnC6C,GAAgBF,EAAYC,KAAc,MAAQD,IAAc,OAAS,OAASA,EAAU,KAI5FG,EAAW,GACf,GAAIF,GAAYA,IAAa5C,EAAM,CACjC,IAAI+C,EAAeC,EAAuBC,EAE1C,IADAH,EAAW,CAAC,GAAGC,EAAgBF,KAAkB,MAAQE,IAAkB,SAAWC,EAAwBD,EAAc,iBAAmB,MAAQC,IAA0B,QAAUA,EAAsB,SAASH,CAAY,GAAK7C,GAAS,OAA4BiD,EAAsBjD,EAAK,iBAAmB,MAAQiD,IAAwB,QAAUA,EAAoB,SAASjD,CAAI,GAClY,CAAC8C,GAAYD,GAAc,CAChC,IAAIK,EAAYC,EAAgBC,EAIhCR,EAAW/C,GAAYgD,CAAY,EACnCA,GAAgBK,EAAaN,KAAc,MAAQM,IAAe,OAAS,OAASA,EAAW,KAC/FJ,EAAW,CAAC,GAAGK,EAAiBN,KAAkB,MAAQM,IAAmB,SAAWC,EAAwBD,EAAe,iBAAmB,MAAQC,IAA0B,QAAUA,EAAsB,SAASP,CAAY,EAC/O,CACA,CACE,OAAOC,CACT,EACIO,GAAa,SAAoBrD,EAAM,CACzC,IAAIsD,EAAwBtD,EAAK,sBAAuB,EACtDjvB,EAAQuyB,EAAsB,MAC9B5yB,EAAS4yB,EAAsB,OACjC,OAAOvyB,IAAU,GAAKL,IAAW,CACnC,EACI6yB,GAAW,SAAkBvD,EAAMwD,EAAM,CAC3C,IAAIC,EAAeD,EAAK,aACtBE,EAAgBF,EAAK,cAMvB,GAAI,iBAAiBxD,CAAI,EAAE,aAAe,SACxC,MAAO,GAET,IAAI2D,EAAkBr0B,GAAQ,KAAK0wB,EAAM,+BAA+B,EACpE4D,EAAmBD,EAAkB3D,EAAK,cAAgBA,EAC9D,GAAI1wB,GAAQ,KAAKs0B,EAAkB,uBAAuB,EACxD,MAAO,GAET,GAAI,CAACH,GAAgBA,IAAiB,QAAUA,IAAiB,cAAe,CAC9E,GAAI,OAAOC,GAAkB,WAAY,CAIvC,QADIG,EAAe7D,EACZA,GAAM,CACX,IAAI8D,EAAgB9D,EAAK,cACrB+D,EAAWlE,GAAYG,CAAI,EAC/B,GAAI8D,GAAiB,CAACA,EAAc,YAAcJ,EAAcI,CAAa,IAAM,GAIjF,OAAOT,GAAWrD,CAAI,EACbA,EAAK,aAEdA,EAAOA,EAAK,aACH,CAAC8D,GAAiBC,IAAa/D,EAAK,cAE7CA,EAAO+D,EAAS,KAGhB/D,EAAO8D,CAEjB,CACM9D,EAAO6D,CACb,CAWI,GAAInB,GAAe1C,CAAI,EAKrB,MAAO,CAACA,EAAK,eAAc,EAAG,OAmBhC,GAAIyD,IAAiB,cACnB,MAAO,EAGb,SAAaA,IAAiB,gBAM1B,OAAOJ,GAAWrD,CAAI,EAKxB,MAAO,EACT,EAKIgE,GAAyB,SAAgChE,EAAM,CACjE,GAAI,mCAAmC,KAAKA,EAAK,OAAO,EAGtD,QAFIiE,EAAajE,EAAK,cAEfiE,GAAY,CACjB,GAAIA,EAAW,UAAY,YAAcA,EAAW,SAAU,CAE5D,QAAS7qB,EAAI,EAAGA,EAAI6qB,EAAW,SAAS,OAAQ7qB,IAAK,CACnD,IAAI0oB,EAAQmC,EAAW,SAAS,KAAK7qB,CAAC,EAEtC,GAAI0oB,EAAM,UAAY,SAGpB,OAAOxyB,GAAQ,KAAK20B,EAAY,sBAAsB,EAAI,GAAO,CAACnC,EAAM,SAAS9B,CAAI,CAEjG,CAEQ,MAAO,EACf,CACMiE,EAAaA,EAAW,aAC9B,CAKE,MAAO,EACT,EACIC,GAAkC,SAAyC33B,EAASyzB,EAAM,CAC5F,MAAI,EAAAA,EAAK,UAITD,GAAQC,CAAI,GAAK4B,GAAc5B,CAAI,GAAKuD,GAASvD,EAAMzzB,CAAO,GAE9Ds1B,GAAqB7B,CAAI,GAAKgE,GAAuBhE,CAAI,EAI3D,EACImE,GAAiC,SAAwC53B,EAASyzB,EAAM,CAC1F,MAAI,EAAAyC,GAAmBzC,CAAI,GAAKsB,GAAYtB,CAAI,EAAI,GAAK,CAACkE,GAAgC33B,EAASyzB,CAAI,EAIzG,EACIoE,GAA4B,SAAmCC,EAAgB,CACjF,IAAI5C,EAAW,SAAS4C,EAAe,aAAa,UAAU,EAAG,EAAE,EACnE,MAAI,SAAM5C,CAAQ,GAAKA,GAAY,EAMrC,EAMI6C,GAAc,SAASA,EAAY5D,EAAY,CACjD,IAAI6D,EAAmB,CAAE,EACrBC,EAAmB,CAAE,EACzB,OAAA9D,EAAW,QAAQ,SAAU+D,EAAMrrB,EAAG,CACpC,IAAIooB,EAAU,CAAC,CAACiD,EAAK,YACjB1yB,EAAUyvB,EAAUiD,EAAK,YAAcA,EACvCC,EAAoBnD,GAAqBxvB,EAASyvB,CAAO,EACzDZ,EAAWY,EAAU8C,EAAYG,EAAK,UAAU,EAAI1yB,EACpD2yB,IAAsB,EACxBlD,EAAU+C,EAAiB,KAAK,MAAMA,EAAkB3D,CAAQ,EAAI2D,EAAiB,KAAKxyB,CAAO,EAEjGyyB,EAAiB,KAAK,CACpB,cAAeprB,EACf,SAAUsrB,EACV,KAAMD,EACN,QAASjD,EACT,QAASZ,CACjB,CAAO,CAEP,CAAG,EACM4D,EAAiB,KAAK9C,EAAoB,EAAE,OAAO,SAAU5a,EAAK6d,EAAU,CACjF,OAAAA,EAAS,QAAU7d,EAAI,KAAK,MAAMA,EAAK6d,EAAS,OAAO,EAAI7d,EAAI,KAAK6d,EAAS,OAAO,EAC7E7d,CACX,EAAK,CAAE,CAAA,EAAE,OAAOyd,CAAgB,CAChC,EACIK,GAAW,SAAkBC,EAAWt4B,EAAS,CACnDA,EAAUA,GAAW,CAAE,EACvB,IAAIm0B,EACJ,OAAIn0B,EAAQ,cACVm0B,EAAaC,GAAyB,CAACkE,CAAS,EAAGt4B,EAAQ,iBAAkB,CAC3E,OAAQ43B,GAA+B,KAAK,KAAM53B,CAAO,EACzD,QAAS,GACT,cAAeA,EAAQ,cACvB,iBAAkB63B,EACxB,CAAK,EAED1D,EAAaF,GAAcqE,EAAWt4B,EAAQ,iBAAkB43B,GAA+B,KAAK,KAAM53B,CAAO,CAAC,EAE7G+3B,GAAY5D,CAAU,CAC/B,EACIoE,GAAY,SAAmBD,EAAWt4B,EAAS,CACrDA,EAAUA,GAAW,CAAE,EACvB,IAAIm0B,EACJ,OAAIn0B,EAAQ,cACVm0B,EAAaC,GAAyB,CAACkE,CAAS,EAAGt4B,EAAQ,iBAAkB,CAC3E,OAAQ23B,GAAgC,KAAK,KAAM33B,CAAO,EAC1D,QAAS,GACT,cAAeA,EAAQ,aAC7B,CAAK,EAEDm0B,EAAaF,GAAcqE,EAAWt4B,EAAQ,iBAAkB23B,GAAgC,KAAK,KAAM33B,CAAO,CAAC,EAE9Gm0B,CACT,EACIqE,GAAa,SAAoB/E,EAAMzzB,EAAS,CAElD,GADAA,EAAUA,GAAW,CAAE,EACnB,CAACyzB,EACH,MAAM,IAAI,MAAM,kBAAkB,EAEpC,OAAI1wB,GAAQ,KAAK0wB,EAAML,EAAiB,IAAM,GACrC,GAEFwE,GAA+B53B,EAASyzB,CAAI,CACrD,EACIgF,GAA4CtF,GAAmB,OAAO,QAAQ,EAAE,KAAK,GAAG,EACxFuF,GAAc,SAAqBjF,EAAMzzB,EAAS,CAEpD,GADAA,EAAUA,GAAW,CAAE,EACnB,CAACyzB,EACH,MAAM,IAAI,MAAM,kBAAkB,EAEpC,OAAI1wB,GAAQ,KAAK0wB,EAAMgF,EAA0B,IAAM,GAC9C,GAEFd,GAAgC33B,EAASyzB,CAAI,CACtD,ECvjBA;AAAA;AAAA;AAAA,EAMA,SAASkF,GAAkBt5B,EAAG8c,EAAG,EACtBA,GAAR,MAAaA,EAAI9c,EAAE,UAAY8c,EAAI9c,EAAE,QACtC,QAAS4B,EAAI,EAAG23B,EAAI,MAAMzc,CAAC,EAAGlb,EAAIkb,EAAGlb,IAAK23B,EAAE33B,CAAC,EAAI5B,EAAE4B,CAAC,EACpD,OAAO23B,CACT,CACA,SAASC,GAAmBx5B,EAAG,CAC7B,GAAI,MAAM,QAAQA,CAAC,EAAG,OAAOs5B,GAAkBt5B,CAAC,CAClD,CACA,SAASy5B,GAAgB73B,EAAG5B,EAAGyH,EAAG,CAChC,OAAQzH,EAAI05B,GAAe15B,CAAC,KAAM4B,EAAI,OAAO,eAAeA,EAAG5B,EAAG,CAChE,MAAOyH,EACP,WAAY,GACZ,aAAc,GACd,SAAU,EACX,CAAA,EAAI7F,EAAE5B,CAAC,EAAIyH,EAAG7F,CACjB,CACA,SAAS+3B,GAAiB35B,EAAG,CAC3B,GAAmB,OAAO,OAAtB,KAAwCA,EAAE,OAAO,QAAQ,GAAzB,MAAsCA,EAAE,YAAY,GAAtB,KAAyB,OAAO,MAAM,KAAKA,CAAC,CAChH,CACA,SAAS45B,IAAqB,CAC5B,MAAM,IAAI,UAAU;AAAA,mFAAsI,CAC5J,CACA,SAASC,GAAQj4B,EAAG5B,EAAG,CACrB,IAAIyH,EAAI,OAAO,KAAK7F,CAAC,EACrB,GAAI,OAAO,sBAAuB,CAChC,IAAIqmB,EAAI,OAAO,sBAAsBrmB,CAAC,EACtC5B,IAAMioB,EAAIA,EAAE,OAAO,SAAUjoB,EAAG,CAC9B,OAAO,OAAO,yBAAyB4B,EAAG5B,CAAC,EAAE,UACnD,CAAK,GAAIyH,EAAE,KAAK,MAAMA,EAAGwgB,CAAC,CAC1B,CACE,OAAOxgB,CACT,CACA,SAASqyB,GAAel4B,EAAG,CACzB,QAAS5B,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAIyH,EAAY,UAAUzH,CAAC,GAAnB,KAAuB,UAAUA,CAAC,EAAI,CAAE,EAChDA,EAAI,EAAI65B,GAAQ,OAAOpyB,CAAC,EAAG,EAAI,EAAE,QAAQ,SAAU,EAAG,CACpDgyB,GAAgB73B,EAAG,EAAG6F,EAAE,CAAC,CAAC,CAChC,CAAK,EAAI,OAAO,0BAA4B,OAAO,iBAAiB7F,EAAG,OAAO,0BAA0B6F,CAAC,CAAC,EAAIoyB,GAAQ,OAAOpyB,CAAC,CAAC,EAAE,QAAQ,SAAU,EAAG,CAChJ,OAAO,eAAe7F,EAAG,EAAG,OAAO,yBAAyB6F,EAAG,CAAC,CAAC,CACvE,CAAK,CACL,CACE,OAAO7F,CACT,CACA,SAASm4B,GAAmB/5B,EAAG,CAC7B,OAAOw5B,GAAmBx5B,CAAC,GAAK25B,GAAiB35B,CAAC,GAAKg6B,GAA4Bh6B,CAAC,GAAK45B,GAAoB,CAC/G,CACA,SAASK,GAAa,EAAGj6B,EAAG,CAC1B,GAAgB,OAAO,GAAnB,UAAwB,CAAC,EAAG,OAAO,EACvC,IAAI4B,EAAI,EAAE,OAAO,WAAW,EAC5B,GAAkBA,IAAd,OAAiB,CACnB,IAAI4L,EAAI5L,EAAE,KAAK,EAAG5B,CAAc,EAChC,GAAgB,OAAOwN,GAAnB,SAAsB,OAAOA,EACjC,MAAM,IAAI,UAAU,8CAA8C,CACtE,CACE,OAAqBxN,IAAb,SAAiB,OAAS,QAAQ,CAAC,CAC7C,CACA,SAAS05B,GAAe,EAAG,CACzB,IAAIlsB,EAAIysB,GAAa,EAAG,QAAQ,EAChC,OAAmB,OAAOzsB,GAAnB,SAAuBA,EAAIA,EAAI,EACxC,CACA,SAASwsB,GAA4Bh6B,EAAG8c,EAAG,CACzC,GAAI9c,EAAG,CACL,GAAgB,OAAOA,GAAnB,SAAsB,OAAOs5B,GAAkBt5B,EAAG8c,CAAC,EACvD,IAAIrV,EAAI,CAAE,EAAC,SAAS,KAAKzH,CAAC,EAAE,MAAM,EAAG,EAAE,EACvC,OAAoByH,IAAb,UAAkBzH,EAAE,cAAgByH,EAAIzH,EAAE,YAAY,MAAiByH,IAAV,OAAyBA,IAAV,MAAc,MAAM,KAAKzH,CAAC,EAAoByH,IAAhB,aAAqB,2CAA2C,KAAKA,CAAC,EAAI6xB,GAAkBt5B,EAAG8c,CAAC,EAAI,MACzN,CACA,CAEA,IAAIod,GAAmB,CACrB,aAAc,SAAsBC,EAAWC,EAAM,CACnD,GAAID,EAAU,OAAS,EAAG,CACxB,IAAIE,EAAaF,EAAUA,EAAU,OAAS,CAAC,EAC3CE,IAAeD,GACjBC,EAAW,gBAAgB,EAAI,CAEvC,CACI,IAAIC,EAAYH,EAAU,QAAQC,CAAI,EAClCE,IAAc,IAIhBH,EAAU,OAAOG,EAAW,CAAC,EAC7BH,EAAU,KAAKC,CAAI,CAEtB,EACD,eAAgB,SAAwBD,EAAWC,EAAM,CACvD,IAAIE,EAAYH,EAAU,QAAQC,CAAI,EAClCE,IAAc,IAChBH,EAAU,OAAOG,EAAW,CAAC,EAE3BH,EAAU,OAAS,GAAK,CAACA,EAAUA,EAAU,OAAS,CAAC,EAAE,qBAC3DA,EAAUA,EAAU,OAAS,CAAC,EAAE,gBAAgB,EAAK,CAE3D,CACA,EACII,GAAoB,SAA2BnG,EAAM,CACvD,OAAOA,EAAK,SAAWA,EAAK,QAAQ,YAAa,IAAK,SAAW,OAAOA,EAAK,QAAW,UAC1F,EACIoG,GAAgB,SAAuB,EAAG,CAC5C,OAAoD,GAAE,MAAS,UAAyD,GAAE,MAAS,OAAsD,GAAE,UAAa,EAC1M,EACIC,GAAa,SAAoB,EAAG,CACtC,OAAoD,GAAE,MAAS,OAAsD,GAAE,UAAa,CACtI,EAGIC,GAAe,SAAsB,EAAG,CAC1C,OAAOD,GAAW,CAAC,GAAK,CAAC,EAAE,QAC7B,EAGIE,GAAgB,SAAuB,EAAG,CAC5C,OAAOF,GAAW,CAAC,GAAK,EAAE,QAC5B,EACI3R,GAAQ,SAAe3qB,EAAI,CAC7B,OAAO,WAAWA,EAAI,CAAC,CACzB,EASIy8B,GAAiB,SAAwB/6B,EAAO,CAClD,QAASg7B,EAAO,UAAU,OAAQC,EAAS,IAAI,MAAMD,EAAO,EAAIA,EAAO,EAAI,CAAC,EAAGplB,EAAO,EAAGA,EAAOolB,EAAMplB,IACpGqlB,EAAOrlB,EAAO,CAAC,EAAI,UAAUA,CAAI,EAEnC,OAAO,OAAO5V,GAAU,WAAaA,EAAM,MAAM,OAAWi7B,CAAM,EAAIj7B,CACxE,EACIk7B,GAAkB,SAAyBx5B,EAAO,CAQpD,OAAOA,EAAM,OAAO,YAAc,OAAOA,EAAM,cAAiB,WAAaA,EAAM,aAAc,EAAC,CAAC,EAAIA,EAAM,MAC/G,EAIIy5B,GAAoB,CAAE,EACtBC,GAAkB,SAAyBjG,EAAUkG,EAAa,CAGpE,IAAIC,EAAuED,GAAY,UAAa,SAChGf,EAA6Ee,GAAY,WAAcF,GACvGxuB,EAASstB,GAAe,CAC1B,wBAAyB,GACzB,kBAAmB,GACnB,kBAAmB,GACnB,aAAcY,GACd,cAAeC,EAChB,EAAEO,CAAW,EACVtrB,EAAQ,CAGV,WAAY,CAAE,EAiBd,gBAAiB,CAAE,EAOnB,eAAgB,CAAE,EAClB,4BAA6B,KAC7B,wBAAyB,KACzB,OAAQ,GACR,OAAQ,GACR,eAAgB,GAGhB,uBAAwB,OAExB,eAAgB,MACjB,EACGwqB,EAUAgB,EAAY,SAAmBC,EAAuBC,EAAYC,EAAkB,CACtF,OAAOF,GAAyBA,EAAsBC,CAAU,IAAM,OAAYD,EAAsBC,CAAU,EAAI9uB,EAAO+uB,GAAoBD,CAAU,CAC5J,EAYGE,EAAqB,SAA4Br1B,EAAS5E,EAAO,CACnE,IAAIk6B,EAAe,OAA4Dl6B,GAAM,cAAkB,WAAaA,EAAM,aAAc,EAAG,OAI3I,OAAOqO,EAAM,gBAAgB,UAAU,SAAUgoB,EAAM,CACrD,IAAIqB,EAAYrB,EAAK,UACnB8D,EAAgB9D,EAAK,cACvB,OAAOqB,EAAU,SAAS9yB,CAAO,GAIiCs1B,GAAa,SAASxC,CAAS,GAAMyC,EAAc,KAAK,SAAUtH,EAAM,CACxI,OAAOA,IAASjuB,CACxB,CAAO,CACP,CAAK,CACF,EAoBGw1B,EAAmB,SAA0BL,EAAY,CAC3D,IAAIM,EAAQ,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAE,EAChFC,EAAoBD,EAAM,YAC1BE,EAAcD,IAAsB,OAAY,GAAQA,EACxDE,EAAeH,EAAM,OACrBd,EAASiB,IAAiB,OAAY,CAAA,EAAKA,EACzCC,EAAcxvB,EAAO8uB,CAAU,EAOnC,GANI,OAAOU,GAAgB,aACzBA,EAAcA,EAAY,MAAM,OAAWjC,GAAmBe,CAAM,CAAC,GAEnEkB,IAAgB,KAClBA,EAAc,QAEZ,CAACA,EAAa,CAChB,GAAIA,IAAgB,QAAaA,IAAgB,GAC/C,OAAOA,EAIT,MAAM,IAAI,MAAM,IAAI,OAAOV,EAAY,8DAA8D,CAAC,CAC5G,CACI,IAAIlH,EAAO4H,EAEX,GAAI,OAAOA,GAAgB,SAAU,CACnC,GAAI,CACF5H,EAAO+G,EAAI,cAAca,CAAW,CACrC,OAAQtF,EAAK,CACZ,MAAM,IAAI,MAAM,IAAI,OAAO4E,EAAY,8CAA+C,EAAE,OAAO5E,EAAI,QAAS,GAAI,CAAC,CACzH,CACM,GAAI,CAACtC,GACC,CAAC0H,EACH,MAAM,IAAI,MAAM,IAAI,OAAOR,EAAY,uCAAuC,CAAC,CAKzF,CACI,OAAOlH,CACR,EACG6H,EAAsB,UAA+B,CACvD,IAAI7H,EAAOuH,EAAiB,eAAgB,CAC1C,YAAa,EACnB,CAAK,EAGD,GAAIvH,IAAS,GACX,MAAO,GAET,GAAIA,IAAS,QAAaA,GAAQ,CAACiF,GAAYjF,EAAM5nB,EAAO,eAAe,EAEzE,GAAIgvB,EAAmBL,EAAI,aAAa,GAAK,EAC3C/G,EAAO+G,EAAI,kBACN,CACL,IAAIe,EAAqBtsB,EAAM,eAAe,CAAC,EAC3CusB,EAAoBD,GAAsBA,EAAmB,kBAGjE9H,EAAO+H,GAAqBR,EAAiB,eAAe,CACpE,MACevH,IAAS,OAGlBA,EAAOuH,EAAiB,eAAe,GAEzC,GAAI,CAACvH,EACH,MAAM,IAAI,MAAM,8DAA8D,EAEhF,OAAOA,CACR,EACGgI,EAAsB,UAA+B,CA4EvD,GA3EAxsB,EAAM,gBAAkBA,EAAM,WAAW,IAAI,SAAUqpB,EAAW,CAChE,IAAIyC,EAAgB1C,GAASC,EAAWzsB,EAAO,eAAe,EAK1D6vB,EAAiBnD,GAAUD,EAAWzsB,EAAO,eAAe,EAC5D2vB,EAAoBT,EAAc,OAAS,EAAIA,EAAc,CAAC,EAAI,OAClEY,EAAmBZ,EAAc,OAAS,EAAIA,EAAcA,EAAc,OAAS,CAAC,EAAI,OACxFa,EAAuBF,EAAe,KAAK,SAAUjI,EAAM,CAC7D,OAAO+E,GAAW/E,CAAI,CAC9B,CAAO,EACGoI,EAAsBH,EAAe,MAAK,EAAG,UAAU,KAAK,SAAUjI,EAAM,CAC9E,OAAO+E,GAAW/E,CAAI,CAC9B,CAAO,EACGqI,EAAqB,CAAC,CAACf,EAAc,KAAK,SAAUtH,EAAM,CAC5D,OAAOsB,GAAYtB,CAAI,EAAI,CACnC,CAAO,EACD,MAAO,CACL,UAAW6E,EACX,cAAeyC,EACf,eAAgBW,EAEhB,mBAAoBI,EAEpB,kBAAmBN,EAEnB,iBAAkBG,EASlB,qBAAsBC,EAEtB,oBAAqBC,EASrB,iBAAkB,SAA0BpI,GAAM,CAChD,IAAIsI,GAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,GAC9EC,GAAUjB,EAAc,QAAQtH,EAAI,EACxC,OAAIuI,GAAU,EAORD,GACKL,EAAe,MAAMA,EAAe,QAAQjI,EAAI,EAAI,CAAC,EAAE,KAAK,SAAU9yB,GAAI,CAC/E,OAAO63B,GAAW73B,EAAE,CACpC,CAAe,EAEI+6B,EAAe,MAAM,EAAGA,EAAe,QAAQjI,EAAI,CAAC,EAAE,QAAO,EAAG,KAAK,SAAU9yB,GAAI,CACxF,OAAO63B,GAAW73B,EAAE,CAClC,CAAa,EAEIo6B,EAAciB,IAAWD,GAAU,EAAI,GAAG,CAC3D,CACO,CACP,CAAK,EACD9sB,EAAM,eAAiBA,EAAM,gBAAgB,OAAO,SAAUgtB,EAAO,CACnE,OAAOA,EAAM,cAAc,OAAS,CAC1C,CAAK,EAGGhtB,EAAM,eAAe,QAAU,GAAK,CAAC+rB,EAAiB,eAAe,EAEvE,MAAM,IAAI,MAAM,qGAAqG,EAUvH,GAAI/rB,EAAM,gBAAgB,KAAK,SAAUuN,EAAG,CAC1C,OAAOA,EAAE,kBACV,CAAA,GAAKvN,EAAM,gBAAgB,OAAS,EACnC,MAAM,IAAI,MAAM,+KAA+K,CAElM,EAUGitB,EAAoB,SAA0Bv7B,EAAI,CACpD,IAAIw7B,EAAgBx7B,EAAG,cACvB,GAAKw7B,EAGL,OAAIA,EAAc,YAAcA,EAAc,WAAW,gBAAkB,KAClED,EAAkBC,EAAc,UAAU,EAE5CA,CACR,EACGC,EAAY,SAAkB3I,EAAM,CACtC,GAAIA,IAAS,IAGTA,IAASyI,EAAkB,QAAQ,EAGvC,IAAI,CAACzI,GAAQ,CAACA,EAAK,MAAO,CACxB2I,EAAUd,EAAmB,CAAE,EAC/B,MACN,CACI7H,EAAK,MAAM,CACT,cAAe,CAAC,CAAC5nB,EAAO,aAC9B,CAAK,EAEDoD,EAAM,wBAA0BwkB,EAC5BmG,GAAkBnG,CAAI,GACxBA,EAAK,OAAQ,EAEhB,EACG4I,EAAqB,SAA4BC,EAAuB,CAC1E,IAAI7I,EAAOuH,EAAiB,iBAAkB,CAC5C,OAAQ,CAACsB,CAAqB,CACpC,CAAK,EACD,OAAO7I,IAAcA,IAAS,GAAQ,GAAQ6I,EAC/C,EAaGC,EAAkB,SAAyBC,EAAO,CACpD,IAAIx9B,EAASw9B,EAAM,OACjB57B,EAAQ47B,EAAM,MACdC,EAAmBD,EAAM,WACzBE,EAAaD,IAAqB,OAAY,GAAQA,EACxDz9B,EAASA,GAAUo7B,GAAgBx5B,CAAK,EACxC66B,EAAqB,EACrB,IAAIkB,EAAkB,KACtB,GAAI1tB,EAAM,eAAe,OAAS,EAAG,CAInC,IAAI2tB,EAAiB/B,EAAmB77B,EAAQ4B,CAAK,EACjDi8B,EAAiBD,GAAkB,EAAI3tB,EAAM,gBAAgB2tB,CAAc,EAAI,OACnF,GAAIA,EAAiB,EAGfF,EAEFC,EAAkB1tB,EAAM,eAAeA,EAAM,eAAe,OAAS,CAAC,EAAE,iBAGxE0tB,EAAkB1tB,EAAM,eAAe,CAAC,EAAE,0BAEnCytB,EAAY,CAIrB,IAAII,EAAoB7tB,EAAM,eAAe,UAAU,SAAU8tB,GAAO,CACtE,IAAIvB,GAAoBuB,GAAM,kBAC9B,OAAO/9B,IAAWw8B,EAC5B,CAAS,EAUD,GATIsB,EAAoB,IAAMD,EAAe,YAAc79B,GAAU05B,GAAY15B,EAAQ6M,EAAO,eAAe,GAAK,CAAC2sB,GAAWx5B,EAAQ6M,EAAO,eAAe,GAAK,CAACgxB,EAAe,iBAAiB79B,EAAQ,EAAK,KAO/M89B,EAAoBF,GAElBE,GAAqB,EAAG,CAI1B,IAAIE,GAAwBF,IAAsB,EAAI7tB,EAAM,eAAe,OAAS,EAAI6tB,EAAoB,EACxGG,GAAmBhuB,EAAM,eAAe+tB,EAAqB,EACjEL,EAAkB5H,GAAY/1B,CAAM,GAAK,EAAIi+B,GAAiB,iBAAmBA,GAAiB,mBAC5G,MAAoBnD,GAAWl5B,CAAK,IAG1B+7B,EAAkBE,EAAe,iBAAiB79B,EAAQ,EAAK,EAEzE,KAAa,CAIL,IAAIk+B,GAAmBjuB,EAAM,eAAe,UAAU,SAAUkuB,GAAO,CACrE,IAAIxB,GAAmBwB,GAAM,iBAC7B,OAAOn+B,IAAW28B,EAC5B,CAAS,EAUD,GATIuB,GAAmB,IAAML,EAAe,YAAc79B,GAAU05B,GAAY15B,EAAQ6M,EAAO,eAAe,GAAK,CAAC2sB,GAAWx5B,EAAQ6M,EAAO,eAAe,GAAK,CAACgxB,EAAe,iBAAiB79B,CAAM,KAOvMk+B,GAAmBN,GAEjBM,IAAoB,EAAG,CAIzB,IAAIE,GAAyBF,KAAqBjuB,EAAM,eAAe,OAAS,EAAI,EAAIiuB,GAAmB,EACvGG,GAAoBpuB,EAAM,eAAemuB,EAAsB,EACnET,EAAkB5H,GAAY/1B,CAAM,GAAK,EAAIq+B,GAAkB,kBAAoBA,GAAkB,oBAC/G,MAAoBvD,GAAWl5B,CAAK,IAG1B+7B,EAAkBE,EAAe,iBAAiB79B,CAAM,EAElE,CACA,MAGM29B,EAAkB3B,EAAiB,eAAe,EAEpD,OAAO2B,CACR,EAIGW,EAAmB,SAA0Br8B,EAAG,CAClD,IAAIjC,EAASo7B,GAAgBn5B,CAAC,EAC9B,GAAI,EAAA45B,EAAmB77B,EAAQiC,CAAC,GAAK,GAIrC,IAAIg5B,GAAepuB,EAAO,wBAAyB5K,CAAC,EAAG,CAErDw4B,EAAK,WAAW,CAOd,YAAa5tB,EAAO,uBAC5B,CAAO,EACD,MACN,CAKQouB,GAAepuB,EAAO,kBAAmB5K,CAAC,GAM9CA,EAAE,eAAgB,EACnB,EAMGs8B,EAAe,SAAsB38B,EAAO,CAC9C,IAAI5B,EAASo7B,GAAgBx5B,CAAK,EAC9B48B,EAAkB3C,EAAmB77B,EAAQ4B,CAAK,GAAK,EAG3D,GAAI48B,GAAmBx+B,aAAkB,SACnCw+B,IACFvuB,EAAM,wBAA0BjQ,OAE7B,CAEL4B,EAAM,yBAA0B,EAKhC,IAAI68B,EACAC,EAAsB,GAC1B,GAAIzuB,EAAM,wBACR,GAAI8lB,GAAY9lB,EAAM,uBAAuB,EAAI,EAAG,CAElD,IAAI0uB,EAAkB9C,EAAmB5rB,EAAM,uBAAuB,EAKlE8rB,EAAgB9rB,EAAM,gBAAgB0uB,CAAe,EAAE,cAC3D,GAAI5C,EAAc,OAAS,EAAG,CAE5B,IAAI6C,EAAY7C,EAAc,UAAU,SAAUtH,EAAM,CACtD,OAAOA,IAASxkB,EAAM,uBACpC,CAAa,EACG2uB,GAAa,IACX/xB,EAAO,aAAaoD,EAAM,cAAc,EACtC2uB,EAAY,EAAI7C,EAAc,SAChC0C,EAAW1C,EAAc6C,EAAY,CAAC,EACtCF,EAAsB,IAKpBE,EAAY,GAAK,IACnBH,EAAW1C,EAAc6C,EAAY,CAAC,EACtCF,EAAsB,IAOxC,CAKA,MAKezuB,EAAM,gBAAgB,KAAK,SAAUuN,EAAG,CAC3C,OAAOA,EAAE,cAAc,KAAK,SAAUoc,GAAG,CACvC,OAAO7D,GAAY6D,EAAC,EAAI,CACtC,CAAa,CACb,CAAW,IAIC8E,EAAsB,SAQ1BA,EAAsB,GAEpBA,IACFD,EAAWlB,EAAgB,CAGzB,OAAQttB,EAAM,wBACd,WAAYpD,EAAO,cAAcoD,EAAM,cAAc,CAC/D,CAAS,GAGDmtB,EADEqB,GAGQxuB,EAAM,yBAA2BqsB,GAFzB,CAI1B,CACIrsB,EAAM,eAAiB,MACxB,EAMG4uB,EAAc,SAAqBj9B,EAAO,CAC5C,IAAI87B,EAAa,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,GACrFztB,EAAM,eAAiBrO,EACvB,IAAI+7B,EAAkBJ,EAAgB,CACpC,MAAO37B,EACP,WAAY87B,CAClB,CAAK,EACGC,IACE7C,GAAWl5B,CAAK,GAKlBA,EAAM,eAAgB,EAExBw7B,EAAUO,CAAe,EAG5B,EACGmB,EAAc,SAAqBl9B,EAAO,EACxCiL,EAAO,aAAajL,CAAK,GAAKiL,EAAO,cAAcjL,CAAK,IAC1Di9B,EAAYj9B,EAAOiL,EAAO,cAAcjL,CAAK,CAAC,CAEjD,EAGGm9B,EAAiB,SAAwBn9B,EAAO,CAC9Ci5B,GAAcj5B,CAAK,GAAKq5B,GAAepuB,EAAO,kBAAmBjL,CAAK,IAAM,KAC9EA,EAAM,eAAgB,EACtB64B,EAAK,WAAY,EAEpB,EACGuE,EAAa,SAAoB/8B,EAAG,CACtC,IAAIjC,EAASo7B,GAAgBn5B,CAAC,EAC1B45B,EAAmB77B,EAAQiC,CAAC,GAAK,GAGjCg5B,GAAepuB,EAAO,wBAAyB5K,CAAC,GAGhDg5B,GAAepuB,EAAO,kBAAmB5K,CAAC,IAG9CA,EAAE,eAAgB,EAClBA,EAAE,yBAA0B,EAC7B,EAMGgL,EAAe,UAAwB,CACzC,GAAKgD,EAAM,OAKX,OAAAsqB,GAAiB,aAAaC,EAAWC,CAAI,EAI7CxqB,EAAM,uBAAyBpD,EAAO,kBAAoBsc,GAAM,UAAY,CAC1EiU,EAAUd,EAAmB,CAAE,CACrC,CAAK,EAAIc,EAAUd,GAAqB,EACpCd,EAAI,iBAAiB,UAAW+C,EAAc,EAAI,EAClD/C,EAAI,iBAAiB,YAAa8C,EAAkB,CAClD,QAAS,GACT,QAAS,EACf,CAAK,EACD9C,EAAI,iBAAiB,aAAc8C,EAAkB,CACnD,QAAS,GACT,QAAS,EACf,CAAK,EACD9C,EAAI,iBAAiB,QAASwD,EAAY,CACxC,QAAS,GACT,QAAS,EACf,CAAK,EACDxD,EAAI,iBAAiB,UAAWsD,EAAa,CAC3C,QAAS,GACT,QAAS,EACf,CAAK,EACDtD,EAAI,iBAAiB,UAAWuD,CAAc,EACvCtE,CACR,EACGvuB,EAAkB,UAA2B,CAC/C,GAAK+D,EAAM,OAGX,OAAAurB,EAAI,oBAAoB,UAAW+C,EAAc,EAAI,EACrD/C,EAAI,oBAAoB,YAAa8C,EAAkB,EAAI,EAC3D9C,EAAI,oBAAoB,aAAc8C,EAAkB,EAAI,EAC5D9C,EAAI,oBAAoB,QAASwD,EAAY,EAAI,EACjDxD,EAAI,oBAAoB,UAAWsD,EAAa,EAAI,EACpDtD,EAAI,oBAAoB,UAAWuD,CAAc,EAC1CtE,CACR,EAMGwE,EAAkB,SAAyBC,EAAW,CACxD,IAAIC,EAAuBD,EAAU,KAAK,SAAUE,EAAU,CAC5D,IAAIC,EAAe,MAAM,KAAKD,EAAS,YAAY,EACnD,OAAOC,EAAa,KAAK,SAAU5K,EAAM,CACvC,OAAOA,IAASxkB,EAAM,uBAC9B,CAAO,CACP,CAAK,EAIGkvB,GACF/B,EAAUd,EAAmB,CAAE,CAElC,EAIGgD,GAAmB,OAAO,OAAW,KAAe,qBAAsB,OAAS,IAAI,iBAAiBL,CAAe,EAAI,OAC3HM,EAAsB,UAA+B,CAClDD,KAGLA,GAAiB,WAAY,EACzBrvB,EAAM,QAAU,CAACA,EAAM,QACzBA,EAAM,WAAW,IAAI,SAAUqpB,EAAW,CACxCgG,GAAiB,QAAQhG,EAAW,CAClC,QAAS,GACT,UAAW,EACrB,CAAS,CACT,CAAO,EAEJ,EAMD,OAAAmB,EAAO,CACL,IAAI,QAAS,CACX,OAAOxqB,EAAM,MACd,EACD,IAAI,QAAS,CACX,OAAOA,EAAM,MACd,EACD,SAAU,SAAkBuvB,EAAiB,CAC3C,GAAIvvB,EAAM,OACR,OAAO,KAET,IAAIwvB,EAAahE,EAAU+D,EAAiB,YAAY,EACpDE,EAAiBjE,EAAU+D,EAAiB,gBAAgB,EAC5DG,EAAoBlE,EAAU+D,EAAiB,mBAAmB,EACjEG,GACHlD,EAAqB,EAEvBxsB,EAAM,OAAS,GACfA,EAAM,OAAS,GACfA,EAAM,4BAA8BurB,EAAI,cACWiE,IAAY,EAC/D,IAAIG,EAAmB,UAA4B,CAC7CD,GACFlD,EAAqB,EAEvBxvB,EAAc,EACdsyB,EAAqB,EACsCG,IAAgB,CAC5E,EACD,OAAIC,GACFA,EAAkB1vB,EAAM,WAAW,OAAQ,CAAA,EAAE,KAAK2vB,EAAkBA,CAAgB,EAC7E,OAETA,EAAkB,EACX,KACR,EACD,WAAY,SAAoBC,EAAmB,CACjD,GAAI,CAAC5vB,EAAM,OACT,OAAO,KAET,IAAIjP,EAAUm5B,GAAe,CAC3B,aAActtB,EAAO,aACrB,iBAAkBA,EAAO,iBACzB,oBAAqBA,EAAO,mBAC7B,EAAEgzB,CAAiB,EACpB,aAAa5vB,EAAM,sBAAsB,EACzCA,EAAM,uBAAyB,OAC/B/D,EAAiB,EACjB+D,EAAM,OAAS,GACfA,EAAM,OAAS,GACfsvB,EAAqB,EACrBhF,GAAiB,eAAeC,EAAWC,CAAI,EAC/C,IAAIqF,EAAerE,EAAUz6B,EAAS,cAAc,EAChD++B,EAAmBtE,EAAUz6B,EAAS,kBAAkB,EACxDg/B,EAAsBvE,EAAUz6B,EAAS,qBAAqB,EAC9Di/B,EAAcxE,EAAUz6B,EAAS,cAAe,yBAAyB,EACtB8+B,IAAc,EACrE,IAAII,EAAqB,UAA8B,CACrD/W,GAAM,UAAY,CACZ8W,GACF7C,EAAUC,EAAmBptB,EAAM,2BAA2B,CAAC,EAEF8vB,IAAkB,CAC3F,CAAS,CACF,EACD,OAAIE,GAAeD,GACjBA,EAAoB3C,EAAmBptB,EAAM,2BAA2B,CAAC,EAAE,KAAKiwB,EAAoBA,CAAkB,EAC/G,OAETA,EAAoB,EACb,KACR,EACD,MAAO,SAAeC,EAAc,CAClC,OAAKlwB,EAAM,QAGXA,EAAM,eAAiB,GAChB,KAAK,gBAAgB,GAAMkwB,CAAY,GAHrC,IAIV,EACD,QAAS,SAAiBC,EAAgB,CACxC,OAAKnwB,EAAM,QAGXA,EAAM,eAAiB,GACnBuqB,EAAUA,EAAU,OAAS,CAAC,IAAM,KAC/B,KAEF,KAAK,gBAAgB,GAAO4F,CAAc,GANxC,IAOV,EACD,wBAAyB,SAAiCC,EAAmB,CAC3E,IAAIC,EAAkB,CAAA,EAAG,OAAOD,CAAiB,EAAE,OAAO,OAAO,EACjE,OAAApwB,EAAM,WAAaqwB,EAAgB,IAAI,SAAU95B,EAAS,CACxD,OAAO,OAAOA,GAAY,SAAWg1B,EAAI,cAAch1B,CAAO,EAAIA,CAC1E,CAAO,EACGyJ,EAAM,QACRwsB,EAAqB,EAEvB8C,EAAqB,EACd,IACb,CACG,EACD,OAAO,iBAAiB9E,EAAM,CAC5B,kBAAmB,CACjB,MAAO,UAAiB,CACtB,OAAOxqB,EAAM,cACrB,CACK,EACD,gBAAiB,CACf,MAAO,SAAeswB,EAAQv/B,EAAS,CACrC,GAAIiP,EAAM,SAAWswB,EACnB,OAAO,KAGT,GADAtwB,EAAM,OAASswB,EACXA,EAAQ,CACV,IAAIC,EAAU/E,EAAUz6B,EAAS,SAAS,EACtCy/B,EAAchF,EAAUz6B,EAAS,aAAa,EACLw/B,IAAS,EACtDt0B,EAAiB,EACjBqzB,EAAqB,EACgCkB,IAAa,CAC5E,KAAe,CACL,IAAIC,EAAYjF,EAAUz6B,EAAS,WAAW,EAC1C2/B,EAAgBlF,EAAUz6B,EAAS,eAAe,EACL0/B,IAAW,EAC5DjE,EAAqB,EACrBxvB,EAAc,EACdsyB,EAAqB,EACoCoB,IAAe,CAClF,CACQ,OAAO,IACf,CACA,CACA,CAAG,EAGDlG,EAAK,wBAAwBpF,CAAQ,EAC9BoF,CACT,ECp9BA,SAASmG,GAAa5gC,EAAQgB,EAAU,GAAI,CAC1C,IAAIy5B,EACJ,KAAM,CAAE,UAAAx1B,EAAW,GAAG47B,CAAgB,EAAK7/B,EACrC8/B,EAAWl+B,EAAW,EAAK,EAC3Bm+B,EAAWn+B,EAAW,EAAK,EAC3Bo+B,EAAYC,GAASxG,GAAQA,EAAK,SAASwG,CAAI,EAC/CC,EAAcD,GAASxG,GAAQA,EAAK,WAAWwG,CAAI,EACnDE,EAAQ,IAAM,CACd1G,IACFA,EAAK,MAAO,EACZsG,EAAS,MAAQ,GAEpB,EACKK,EAAU,IAAM,CAChB3G,IACFA,EAAK,QAAS,EACdsG,EAAS,MAAQ,GAEpB,EACK39B,EAAUrB,EAAS,IAAM,CAC7B,MAAM2C,EAAWpD,EAAQtB,CAAM,EAC/B,OAAOC,GAAQyE,CAAQ,EAAE,IAAK/C,GAAO,CACnC,MAAMiD,EAAMtD,EAAQK,CAAE,EACtB,OAAO,OAAOiD,GAAQ,SAAWA,EAAMzD,GAAayD,CAAG,CAC7D,CAAK,EAAE,OAAOvF,EAAU,CACxB,CAAG,EACD,OAAA4B,EACEmC,EACCuB,GAAQ,CACFA,EAAI,SAET81B,EAAOa,GAAgB32B,EAAK,CAC1B,GAAGk8B,EACH,YAAa,CACXC,EAAS,MAAQ,GACb9/B,EAAQ,YACVA,EAAQ,WAAY,CACvB,EACD,cAAe,CACb8/B,EAAS,MAAQ,GACb9/B,EAAQ,cACVA,EAAQ,aAAc,CAClC,CACA,CAAO,EACGiE,GACF+7B,EAAU,EACb,EACD,CAAE,MAAO,MAAM,CAChB,EACDziC,GAAkB,IAAM2iC,GAAY,EAC7B,CACL,SAAAJ,EACA,SAAAC,EACA,SAAAC,EACA,WAAAE,EACA,MAAAC,EACA,QAAAC,CACD,CACH,CC1DA,SAASC,GAAG/Y,EAAGgZ,EAAGnkB,EAAG,CACnB,IAAIlb,EAAK23B,GAAMtR,EAAEsR,EAAG,GAAG0H,CAAC,EACxB,OAAOnkB,IAAM,OAASlb,EAAI,OAAO,OAAOA,EAAG,CAAE,KAAMkb,EAAG,SAAUmkB,CAAC,CAAE,CACrE,CACA,SAASC,GAAGjZ,EAAGgZ,EAAGnkB,EAAG,CACnB,IAAIlb,EAAIqmB,EAAE,OAASgZ,EAAE,OACrB,GAAIr/B,IAAM,EAAG,OAAOqmB,EAAE,GAAGgZ,CAAC,EAC1B,GAAIr/B,IAAM,EAAG,OAAOo/B,GAAG/Y,EAAGgZ,EAAGnkB,CAAC,EAC9B,MAAM,IAAI,MAAM,2BAA2B,CAC7C,CACA,SAASqkB,GAAGlZ,EAAG,CAAE,UAAWgZ,EAAI,MAAO,iBAAkBnkB,EAAG,mBAAoBlb,EAAG,SAAU23B,EAAG,QAAStc,EAAImkB,IAAM,CACjH,IAAIxlB,EAAG5b,EAAGkd,EAAGmkB,EAAGC,EAAI,IAAM,CACxB,IAAI,EAAIpkB,EACR,IAAM,SAAWA,EAAI,OAAQ+K,EAAE,CAAC,EAAGsR,IAAM,SAAWv5B,EAAI,WAAWuhC,EAAGhI,CAAC,GACxE,EAAEgI,EAAI,IAAM,CACX,aAAavhC,CAAC,EAAGA,EAAI,OAAQ4b,IAAM,QAAU0lB,EAAG,CACjD,EAAEE,EAAI,IAAM,CACX,aAAa5lB,CAAC,EAAGA,EAAI,OAAQylB,EAAI,OAAQrhC,IAAM,QAAUshC,EAAG,CAC7D,EACD,MAAO,CAAE,KAAM,IAAI,IAAM,CACvB,IAAIG,EAAI7lB,IAAM,QAAU5b,IAAM,OAC9B,IAAKihC,IAAM,SAAWQ,KAAOvkB,EAAID,EAAEC,EAAG,GAAG,CAAC,GAAI,EAAEtB,IAAM,QAAU,CAAC6lB,GAAI,CACjB,CAChD,aAAa7lB,CAAC,EACd,IAAIC,EAAI,KAAK,IAAK,EAClBwlB,IAAMA,EAAIxlB,GACV,IAAI6lB,EAAI9/B,IAAM,OAASkb,EAAS,KAAK,IAAIA,EAAQlb,GAAKia,EAAIwlB,EAAE,EAC5DzlB,EAAI,WAAW4lB,EAAGE,CAAC,CAC3B,CACMT,IAAM,OAASQ,GAAKH,EAAG,CAC7B,CACG,EAAE,OAAQ,IAAM,CACf,aAAa1lB,CAAC,EAAGA,EAAI,OAAQylB,EAAI,OAAQ,aAAarhC,CAAC,EAAGA,EAAI,OAAQkd,EAAI,MAC3E,EAAE,MAAO,IAAM,CACdskB,EAAC,EAAID,EAAG,CACT,EAAE,IAAI,QAAS,CACd,OAAO3lB,IAAM,QAAU5b,IAAM,MACjC,CAAK,CACL,CACA,IAAIohC,GAAK,IAAM,GACf,SAASO,MAAK1Z,EAAG,CACf,OAAOiZ,GAAGU,GAAI3Z,CAAC,CACjB,CACA,IAAI2Z,GAAK,CAAC3Z,EAAG,CAAE,IAAKgZ,EAAG,IAAKnkB,CAAC,IAAOmkB,IAAM,QAAUhZ,EAAIgZ,EAAIA,EAAInkB,IAAM,QAAUmL,EAAInL,EAAIA,EAAImL,EAC5F,SAAS4Z,GAAG5Z,EAAGgZ,EAAG,CAChB,MAAMnkB,EAAIzX,EAAE,IAAM4iB,EAAE,MAAM,KAAK,CAACrM,EAAG5b,IAAM4b,EAAI5b,CAAC,CAAC,EAAG4B,EAAIyD,EAAE,IAAMyX,EAAE,MAAM,CAAC,CAAC,EAAGyc,EAAIl0B,EAAE,IAAMyX,EAAE,MAAMA,EAAE,MAAM,OAAS,CAAC,CAAC,EAAGG,EAAI5X,EAAE,IAAM,CAC/H,MAAMuW,EAAIkB,EAAE,MAAM,OAChB,CAAC9c,EAAGkd,IAAM,KAAK,IAAIA,EAAI+jB,EAAE,KAAK,EAAI,KAAK,IAAIjhC,EAAIihC,EAAE,KAAK,EAAI/jB,EAAIld,CAC/D,EACD,OAAO8c,EAAE,MAAM,QAAQlB,CAAC,CAC5B,CAAG,EACD,MAAO,CACL,QAASha,EACT,QAAS23B,EACT,WAAYtR,EACZ,sBAAuBhL,CACxB,CACH,CACA,MAAM6kB,GAAK,CAAE,sBAAuB,IAAMC,GAAK,CAAC,mBAAoB,sBAAsB,EAAGC,GAAqBC,GAAG,CACnH,OAAQ,cACR,MAAO,CACL,SAAU,CAAE,QAAS,GAAK,EAC1B,WAAY,CAAE,EACd,iBAAkB,CAAE,EACpB,SAAU,CAAE,KAAM,QAAS,QAAS,EAAI,EACxC,cAAe,CAAE,KAAM,QAAS,QAAS,EAAI,EAC7C,iBAAkB,CAAE,KAAM,QAAS,QAAS,EAAI,EAChD,oBAAqB,CAAE,KAAM,QAAS,QAAS,EAAE,CAClD,EACD,MAAO,CAAC,SAAU,SAAU,QAAS,cAAe,gBAAiB,YAAa,WAAW,EAC7F,MAAMha,EAAG,CAAE,OAAQgZ,EAAG,KAAMnkB,GAAK,CAC/BolB,GAAI10B,IAAO,CACT,WAAY20B,EAAG,MACf,WAAYC,EAAG,KACrB,EAAM,EACF,MAAMxgC,EAAIqmB,EAAGsR,EAAIzc,EAAGG,EAAIE,EAAE,IAAI,EAAGvB,EAAIuB,EAAE,IAAI,EAAGnd,EAAImd,EAAE,IAAI,EAAGD,EAAIC,EAAE,IAAI,EAAGkkB,EAAIlkB,EAAE,IAAI,EAAGmkB,EAAInkB,EAAE,IAAI,EAAGokB,EAAIpkB,EAAE,IAAI,EAAGqkB,EAAIrkB,EAAE,EAAE,EAAG,EAAIA,EAAEvb,EAAE,mBAAmB,EAAG,CAAE,OAAQ6/B,CAAG,EAAGY,GAAE,EAAI,CAAE,OAAQxmB,CAAG,EAAGymB,GAAErlB,CAAC,EAAG,CAAE,OAAQykB,CAAG,EAAGY,GAAE1mB,CAAC,EAAG,CAAE,OAAQ2mB,CAAI,EAAGD,GAAEtiC,CAAC,EAAG,CAAE,OAAQwiC,CAAI,EAAGF,GAAEhB,CAAC,EAAGmB,EAAIC,GAAG,CAACzlB,EAAGskB,CAAC,EAAG,CACrR,UAAW,GACX,cAAe,IAAMtkB,EAAE,OAAS,SAAS,IAC/C,CAAK,EAAG0lB,EAAIt9B,EACN,IAAM,KAAK,KAAKm9B,EAAG,MAAQd,EAAE,MAAQa,EAAG,KAAK,CACnD,EAAOJ,EAAK98B,EAAE,IAAM,cAAczD,EAAE,QAAQ,gBAAgB,EAAGwgC,EAAK/8B,EAAE,IAAM,WAAWzD,EAAE,QAAQ,gBAAgB,EAAG,CAAE,iBAAkBiU,CAAG,EAAG+sB,GAAG3lB,CAAC,EAAG,CAAE,KAAM7X,EAAG,KAAMy9B,EAAI,aAAcC,EAAG,EAAGC,GAAE,EAAI,CAAE,IAAKtyB,EAAG,KAAMuyB,CAAC,EAAKC,GACpNptB,EACA,CAAE,EACF,CAAE,KAAMzQ,EAAG,aAAc09B,GAAG,KAAMD,CAAE,CAC1C,EAAOp7B,EAAI0V,EAAE,CAAC,EAAG+lB,EAAI/lB,EAAE,CAAC,EAAG,CAAE,WAAYgmB,CAAE,EAAKC,GAAGxhC,CAAC,EAAGyhC,EAAKh+B,EAAE,IAAM89B,EAAG,OAAS,CAACR,EAAE,KAAK,CAAC,EAAG,CACtF,QAASW,EACT,QAASC,EACT,WAAY,EACZ,sBAAuBC,CAC7B,EAAQ3B,GAAGwB,EAAI57B,CAAC,EAAGg8B,EAAIC,GAAG,SAAS,IAAI,EAAGC,GAAID,GAAG,SAAS,eAAe,EAAGE,GAAKp2B,GAAM,CACjFA,EAAE,MAAQ,UAAYq2B,GAAG,CAC1B,EAAEC,GAAK,IAAM,CACZ7mB,EAAE,QAAUxV,EAAE,MAAQ,KAAK,IAAI7F,EAAE,kBAAoB0hC,EAAE,MAAO7B,EAAE,KAAK,EAAGhxB,EAAE,CACxE,OAAQhJ,EAAE,MACV,EAAGA,EAAE,KACN,CAAA,EAAGrC,EAAE,IAAK,EAAGyQ,EAAG,CACf,KAAM,QACN,QAAS,YACT,OAAQ,EACR,SAAUjU,EAAE,QACb,CAAA,EAAG4/B,EAAE,MAAQ,GAAI,OAAO,iBAAiB,UAAWoC,EAAC,EAAGhiC,EAAE,UAAY,WAAW,IAAM,CACtFkhC,GAAE,MAAM,EAAE,IAAK,EAAG,EAAI,KAAQvJ,EAAE,QAAQ,EAAGkJ,EAAE,SAAQ,EAC7D,EAAS7gC,EAAE,QAAQ,EACd,EAAEiiC,GAAI,IAAM,CACX5mB,EAAE,QAAU7X,EAAE,IAAKyW,EAAE,MAAOhG,EAAG,CAC7B,KAAM,QACN,OAAQ,EACR,SAAUjU,EAAE,QACpB,CAAO,EAAG4/B,EAAE,MAAQ,GAAI5/B,EAAE,UAAY6gC,EAAE,WAAU,EAAI,OAAO,oBAAoB,UAAWmB,EAAC,EAAG,WAAW,IAAM,CACzGd,GAAE,MAAM,EAAE,IAAK,EAAGjnB,EAAE,MAAQ,IAAO0d,EAAE,QAAQ,CACrD,EAAS33B,EAAE,QAAQ,EACd,EAAEmiC,GAAK,IAAM,CACZniC,EAAE,kBAAoBiiC,GAAG,CAC1B,EACD,SAASG,GAAEx2B,EAAG,CACZ,EAAE,MAAQ,GAAIuV,GAAEvV,CAAC,CACvB,CACI,SAASuV,GAAEvV,EAAG,CACZ,EAAE,OAASA,EAAE,eAAgB,CACnC,CACI,MAAMy2B,GAAKz2B,GAAM,CACf/F,EAAE,MAAQ+F,EAAGpI,EAAE,SAAUqC,EAAE,MAAOoO,EAAG,CACnC,KAAM,QACN,QAAS,YACT,OAAQ,EACR,SAAUjU,EAAE,QACpB,CAAO,CACF,EAAEsiC,GAAI,CAAC,CACN,MAAO,CAAC12B,EAAG+J,CAAC,EACZ,UAAW,CAAC7O,GAAGy7B,EAAC,CACtB,IAAU,CACJlnB,EAAE,QAAUimB,EAAE,OAAS,IAAMz7B,EAAE,OAAS8P,GAAI9P,EAAE,OAAS67B,EAAE,QAAU77B,EAAE,MAAQ67B,EAAE,MAAOJ,EAAE,OAAS3rB,EAAG9G,EAAE,CACpG,EAAG7O,EAAE,cAAgB+/B,GAAEuB,EAAE,MAAO,CAAE,IAAK,CAAC,CAAE,EAAIvB,GAAEyC,GAAElB,EAAE,MAAO,CAACrnB,EAAE,MAAO,EAAG,EAAG,EAAG,CAAE,IAAK,CAAG,CAAA,CAChG,CAAO,GAAIpL,EAAE,CACL,OAAQkxB,GAAEyC,GAAE38B,EAAE,MAAO,EAAG87B,EAAE,MAAO,GAAI,EAAG,CACtC,IAAK,EACL,IAAK9B,EAAE,KACR,CAAA,CACT,CAAO,EAAG0C,GAAI,EAAI5K,EAAE,eAAe,EAAI4K,GAAI,GAAK5K,EAAE,aAAa,EAC1D,EAAE9wB,GAAI,IAAM,CACXg7B,EAAE,MAAQ,GAAIE,GAAE,MAAQ,GAAIT,EAAE,MAAQthC,EAAE,cAAgB,CAAC,EAAG6F,EAAE,KAAK,EAAE,OACnE,CAAC+F,EAAG+J,IAAM,KAAK,IAAIA,EAAI2rB,EAAE,KAAK,EAAI,KAAK,IAAI11B,EAAI01B,EAAE,KAAK,EAAI3rB,EAAI/J,CACtE,EAAU,EAAGpI,EAAE,IAAK89B,EAAE,MAAOrtB,EAAG,CACxB,KAAM,QACN,QAAS,YACT,OAAQ,EACR,SAAUjU,EAAE,QACb,CAAA,EAAGshC,EAAE,QAAUz7B,EAAE,QAAUy7B,EAAE,MAAQ,EAAGW,GAAC,GAAKp8B,EAAE,MAAQ,KAAK,IAAI,EAAE,MAAM+7B,EAAE,KAAK,EAAG/B,EAAE,KAAK,EAAGr8B,EAAE,SAAUqC,EAAE,MAAOoO,EAAG,CACpH,KAAM,QACN,QAAS,YACT,OAAQ,EACR,SAAUjU,EAAE,QACpB,CAAO,CACF,EAAEyiC,GAAI,IAAM,CACXZ,EAAE,MAAQ,GAAIE,GAAE,MAAQ,GAAIl8B,EAAE,MAAQoU,EAAE,MAAOqnB,EAAE,MAAQJ,GAAE,MAAM,EAAE,IAAK,EAAEE,EAAG,CAC9E,EACDsB,GACE,CACE,YAAaD,GACb,OAAQH,GACR,UAAWz7B,EACZ,EACD,CACE,UAAWmT,EACX,KAAM,CAAE,WAAY,EAAE,CAC9B,CACA,EAAO0oB,GACD,CACE,YAAaD,GACb,OAAQH,GACR,UAAWz7B,EACZ,EACD,CACE,UAAWzI,EACX,KAAM,CAAE,WAAY,EAAE,CAC9B,CACA,EAAOskC,GACD,CACE,YAAa,CAAC,CAAE,UAAW,CAAC92B,EAAG+J,CAAC,CAAC,IAAO,CACtCksB,EAAE,MAAQ,GAAIE,GAAE,MAAQ,GAAIl8B,EAAE,MAAQoU,EAAE,MAAOqnB,EAAE,MAAQJ,GAAE,MAAM,EAAE,IAAK,EAAEE,EAAG,EAC7E,MAAMt6B,GAAIwU,EAAE,MAAM,YAAc,EAAGinB,GAAI5sB,EAAI,EAC3C,EAAE,MAAM,SAAW,EAAI2rB,EAAE,QAAU,GAAKx6B,KAAM,EAAE,MAAQy7B,KAAMviC,EAAE,qBAAuB6F,EAAE,QAAU87B,EAAE,QAAU,EAAE,MAAQ,IAAK97B,EAAE,QAAU87B,EAAE,OAAS76B,KAAM,EAAE,MAAQy7B,IACtK,EACD,OAAQ,CAAC,CAAE,MAAO,CAAC32B,EAAG+J,CAAC,EAAG,UAAW,CAAC7O,GAAGy7B,EAAC,KAAQ,CAChD,GAAI,CAACviC,EAAE,oBAAqB,CAC1B,EAAE,MAAQ,GACV,MACZ,CACU,GAAI,CAACqb,EAAE,MAAO,OACdimB,EAAE,QAAU,GAAK,EAAE,OAASthC,EAAE,sBAAwB6F,EAAE,OAAS8P,GAAI9P,EAAE,OAAS67B,EAAE,QAAU77B,EAAE,MAAQ67B,EAAE,MAAO,EAAE,OAAS1hC,EAAE,sBAAwBshC,EAAE,OAAS3rB,GAAI2rB,EAAE,MAAQvB,GAAEuB,EAAE,MAAO,CAAE,IAAK,EAAG,IAAKI,EAAE,KAAK,CAAE,EAAG7yB,EAAE,CACnN,EAAG7O,EAAE,cAAgBshC,EAAE,MAAQkB,GAAElB,EAAE,MAAO,CAACrnB,EAAE,MAAO,EAAG,EAAG,CACtE,CAAW,GAAIpU,EAAE,MAAQ87B,EAAE,QAAU97B,EAAE,MAAQ87B,EAAE,OAAQ97B,EAAE,MAAQ,KAAK,IAAIA,EAAE,MAAOg6B,EAAE,KAAK,EAClF,MAAM8C,GAAIrnB,EAAE,MAAM,YAAc,EAChC,EAAE,MAAM,SAAW,EAAI3F,EAAI,GAAK2rB,EAAE,QAAU,GAAKqB,KAAM,EAAE,MAAQ,IAAM98B,EAAE,QAAU87B,EAAE,QAAU,EAAE,MAAQ,IAAK9yB,EAAE,CAC9G,OAAQhJ,EAAE,KACtB,CAAW,EAAG08B,GAAI,EAAI5K,EAAE,eAAe,EAAI4K,GAAI,GAAK5K,EAAE,aAAa,CAC1D,EACD,UAAW9wB,EACZ,EACD,CACE,UAAW44B,EACX,KAAM,CAAE,WAAY,EAAE,CAC9B,CACK,EACD,MAAMmD,GAAKrD,GACT,IAAM,CACJ5H,EAAE,YAAakI,EAAE,KAAK,EAAGgD,GAAE,IAAM,CAC/Bh9B,EAAE,MAAQ,EAAE,MAAM+7B,EAAE,KAAK,EAAGS,GAAE,EAAE,MAAMT,EAAE,KAAK,CAAC,CACxD,CAAS,CACF,EACD,CAAE,iBAAkB,EAAE,CACvB,EACD,OAAOkB,EAAGjD,EAAG,IAAM,CACjB+C,GAAG,KAAM,CACf,CAAK,EAAGE,EAAG/B,EAAG,IAAM,CACdpJ,EAAE,YAAaoJ,EAAE,KAAK,EAAG,EAAE,MAAM,SAAW,GAAK8B,GAAE,IAAM,CACvD,EAAE,MAAM,CAAC,IAAM9B,EAAE,OAASsB,GAAE,KAAK,IAAItB,EAAE,MAAOlB,EAAE,KAAK,CAAC,CAC9D,CAAO,CACP,CAAK,EAAGkD,GAAG,IAAM,CACXpL,EAAE,YAAaoJ,EAAE,KAAK,EAAGpJ,EAAE,YAAakI,EAAE,KAAK,EAAGh6B,EAAE,MAAQ7F,EAAE,kBAAoB,OAAO+gC,EAAE,KAAK,EAAGlyB,EAAE,CACnG,OAAQhJ,EAAE,MACV,EAAGA,EAAE,KACb,CAAO,EAAGg9B,GAAE,IAAM,CACVlL,EAAE,OAAO,CACjB,CAAO,CACP,CAAK,EAAG0H,EAAE,CAAE,KAAM6C,GAAI,MAAOD,GAAG,YAAaI,EAAG,CAAA,EAAG,CAACz2B,EAAG+J,KAAOqtB,KAAMC,GAAGC,GAAI,CAAE,GAAI,QAAU,CACrF/nB,EAAE,MAAO+kB,GAAI,CACXiD,GAAGC,GAAI,CAAE,KAAM,MAAM,EAAI,CACvB,QAASC,GAAG,IAAM,CAChBC,GAAGnoB,EAAE,MAAO,CACV,QAAS,WACT,IAAKwkB,EACL,qBAAsB,GACtB,QAAShqB,EAAE,CAAC,IAAMA,EAAE,CAAC,EAAK7O,IAAMq7B,GAAI,EAClD,EAAe,KAAM,GAAG,EAAG,CACb,CAACoB,GAAI3D,EAAE,OAASh0B,EAAE,QAAQ,CAC3B,CAAA,CACb,CAAW,EACD,EAAG,CACb,CAAS,EACDuP,EAAE,MAAO,CACP,QAAS,QACT,IAAKE,EACL,mBAAoB,CAACzP,EAAE,SACvB,uBAAwBg0B,EAAE,MAC1B,aAAc,OACd,kBAAmB,GACnB,SAAU,IACpB,EAAW,CACDzkB,EAAE,MAAO,CACP,QAAS,cACT,IAAKnB,EACL,mBAAoB,GACpB,YAAaooB,EACzB,EAAa,CACDoB,GAAE53B,EAAE,OAAQ,SAAU,CAAE,EAAE,MAAU,CACrC,EAAE,GAAG,EACNuP,EAAE,MAAO,CACP,QAAS,cACT,IAAKG,EACL,mBAAoB,GACpB,YAAa6F,EACzB,EAAa,CACDhG,EAAE,MAAO,CACP,QAAS,sBACT,IAAKskB,EACL,4BAA6B,EAC3C,EAAe,CACDtkB,EAAE,MAAO,CACP,QAAS,eACT,IAAKukB,EACL,oBAAqB,EACrC,EAAiB,CACD8D,GAAE53B,EAAE,OAAQ,UAAW,CAAE,EAAE,MAAU,CACrD,EAAiB,GAAG,CACpB,EAAe,GAAG,CACP,EAAE,GAAG,EACNuP,EAAE,MAAO,CACP,QAAS,cACT,IAAK/c,EACL,mBAAoB,GACpB,YAAagkC,EACzB,EAAa,CACDoB,GAAE53B,EAAE,OAAQ,SAAU,CAAE,EAAE,MAAU,CAChD,EAAa,GAAG,CACP,EAAE,EAAGu0B,EAAE,CACT,CAAA,CACP,CAAK,EACL,CACA,CAAC,EAAGsD,GAAK,CAACpd,EAAGgZ,IAAM,CACjB,MAAMnkB,EAAImL,EAAE,WAAaA,EACzB,SAAW,CAACrmB,EAAG23B,CAAC,IAAK0H,EACnBnkB,EAAElb,CAAC,EAAI23B,EACT,OAAOzc,CACT,EAAGwoB,GAAqBD,GAAGrD,GAAI,CAAC,CAAC,YAAa,iBAAiB,CAAC,CAAC,gDCtSjE,MAAMuD,EAAcplC,EAAsC,EACpDqlC,EAAOrlC,EAAI,EAAK,EAChBslC,EAAYtlC,EAAI,CAAC,6CACR,IAAM,CACZqlC,EAAA,MAAQ,CAACA,EAAK,MACfA,EAAK,MACLD,EAAY,OAAO,KAAK,EAExBA,EAAY,OAAO,MAAM,CAEjC,gHAISG,GAAA,CAAA,MAAM,SAAS,2BAnBxB,OAAAC,GAAA,EAAAC,GAAAC,GAAA,KAAA,CAmBIC,EAIM,MAJNJ,GAIM,CAHFI,EAES,SAAA,CAFD,KAAK,SAAU,QAAOC,EAAA,MAAA,EACvBC,GAAAD,EAAA,KAAI,gBAAsB,iBACjC,CAAA,CAAA,CAAA,EAEJE,GAMcF,EAAA,YAAA,CAND,MAAM,YAAY,IAAI,cAAe,SAAU,GAAQ,cAAW,CAAGA,EAAS,UAAA,EAAMA,EAAS,UAAA,GAAA,EACrG,SAAMhT,eAAEgT,EAAI,KAAA,IAAW,YAAUhT,EAAG,CAAA,IAAAA,EAAA,CAAA,EAAAwG,GAAOwM,EAAY,UAAAxM,EAAA,EAAA,CAC7C,OAAM2M,GACb,IAAuCnT,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAAvC+S,EAAuC,OAAA,CAAjC,MAAM,eAAc,SAAM,EAAA,CAAA,EAAA,EA3B5C,QAAAI,GA6BQ,IAAqC,CAAAnT,EAAA,CAAA,IAAAA,EAAA,CAAA,EAArC+S,EAAqC,OAAA,CAA/B,MAAM,aAAA,EAAc,OAAI,EAAA,EAAA,CAAA,EA7BtC,EAAA,EAAA,GAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,aAAA,CAAA","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45]}