{"version":3,"file":"use-transform.Bv5UqBi7.js","sources":["../../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/transform.mjs","../../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-computed.mjs","../../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-transform.mjs"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n"],"names":["useMotionValue","initial","value","useConstant","motionValue","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","isCustomValueType","v","getMixer","transform","args","useImmediate","argOffset","inputValue","inputRange","outputRange","options","interpolator","interpolate","useCombineMotionValues","values","combineValues","updateValue","useIsomorphicLayoutEffect","scheduleUpdate","frame","subscriptions","unsubscribe","cancelFrame","useComputed","compute","collectMotionValues","useTransform","input","inputRangeOrTransformer","transformer","useListTransform","latest","numValues","i"],"mappings":"udAsBA,SAASA,EAAeC,EAAS,CAC7B,MAAMC,EAAQC,EAAY,IAAMC,EAAYH,CAAO,CAAC,EAM9C,CAAE,SAAAI,CAAQ,EAAKC,EAAU,WAACC,CAAmB,EACnD,GAAIF,EAAU,CACV,KAAM,EAAGG,CAAS,EAAIC,EAAQ,SAACR,CAAO,EACtCS,EAAS,UAAC,IAAMR,EAAM,GAAG,SAAUM,CAAS,EAAG,EAAE,CACzD,CACI,OAAON,CACX,CCjCA,MAAMS,EAAqBC,GAChBA,GAAK,OAAOA,GAAM,UAAYA,EAAE,IAErCC,EAAYD,GAAOD,EAAkBC,CAAC,EAAIA,EAAE,IAAM,OACxD,SAASE,KAAaC,EAAM,CACxB,MAAMC,EAAe,CAAC,MAAM,QAAQD,EAAK,CAAC,CAAC,EACrCE,EAAYD,EAAe,EAAI,GAC/BE,EAAaH,EAAK,EAAIE,CAAS,EAC/BE,EAAaJ,EAAK,EAAIE,CAAS,EAC/BG,EAAcL,EAAK,EAAIE,CAAS,EAChCI,EAAUN,EAAK,EAAIE,CAAS,EAC5BK,EAAeC,EAAYJ,EAAYC,EAAa,CACtD,MAAOP,EAASO,EAAY,CAAC,CAAC,EAC9B,GAAGC,CACX,CAAK,EACD,OAAOL,EAAeM,EAAaJ,CAAU,EAAII,CACrD,CCdA,SAASE,EAAuBC,EAAQC,EAAe,CAInD,MAAMxB,EAAQF,EAAe0B,GAAe,EAOtCC,EAAc,IAAMzB,EAAM,IAAIwB,EAAa,CAAE,EAKnD,OAAAC,EAAa,EAKbC,EAA0B,IAAM,CAC5B,MAAMC,EAAiB,IAAMC,EAAM,OAAOH,EAAa,GAAO,EAAI,EAC5DI,EAAgBN,EAAO,IAAKb,GAAMA,EAAE,GAAG,SAAUiB,CAAc,CAAC,EACtE,MAAO,IAAM,CACTE,EAAc,QAASC,GAAgBA,EAAW,CAAE,EACpDC,EAAYN,CAAW,CAC1B,CACT,CAAK,EACMzB,CACX,CC/BA,SAASgC,EAAYC,EAAS,CAK1BC,EAAoB,QAAU,CAAE,EAChCD,EAAS,EACT,MAAMjC,EAAQsB,EAAuBY,EAAoB,QAASD,CAAO,EAIzE,OAAAC,EAAoB,QAAU,OACvBlC,CACX,CCXA,SAASmC,EAAaC,EAAOC,EAAyBnB,EAAaC,EAAS,CACxE,GAAI,OAAOiB,GAAU,WACjB,OAAOJ,EAAYI,CAAK,EAE5B,MAAME,EAAc,OAAOD,GAA4B,WACjDA,EACAzB,EAAUyB,EAAyBnB,EAAaC,CAAO,EAC7D,OAAO,MAAM,QAAQiB,CAAK,EACpBG,EAAiBH,EAAOE,CAAW,EACnCC,EAAiB,CAACH,CAAK,EAAG,CAAC,CAACI,CAAM,IAAMF,EAAYE,CAAM,CAAC,CACrE,CACA,SAASD,EAAiBhB,EAAQe,EAAa,CAC3C,MAAME,EAASvC,EAAY,IAAM,EAAE,EACnC,OAAOqB,EAAuBC,EAAQ,IAAM,CACxCiB,EAAO,OAAS,EAChB,MAAMC,EAAYlB,EAAO,OACzB,QAASmB,EAAI,EAAGA,EAAID,EAAWC,IAC3BF,EAAOE,CAAC,EAAInB,EAAOmB,CAAC,EAAE,IAAK,EAE/B,OAAOJ,EAAYE,CAAM,CACjC,CAAK,CACL","x_google_ignoreList":[0,1,2,3,4]}