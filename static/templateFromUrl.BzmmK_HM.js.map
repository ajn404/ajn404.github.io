{"version":3,"file":"templateFromUrl.BzmmK_HM.js","sources":["../../src/components/react/fiber/bookOfShader/templateFromUrl.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useEffect,\n  useState,\n  useMemo,\n  useCallback,\n} from \"react\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport { ShaderMaterial, TextureLoader, ClampToEdgeWrapping } from \"three\";\nimport * as THREE from \"three\";\n\n// CustomShaderCube 组件\nconst CustomShaderCube: React.FC<{\n  mouse: { x: number; y: number };\n  vertexShader: string;\n  fragmentShader: string;\n  texturePaths: string[];\n}> = ({ mouse, vertexShader, fragmentShader, texturePaths }) => {\n  const geometry = useMemo(() => new THREE.PlaneGeometry(2, 2), []);\n  const material = useMemo(() => {\n    const uniforms = {\n      u_time: { value: 0 },\n      u_resolution: { value: new THREE.Vector2() },\n      u_mouse: { value: new THREE.Vector2() },\n      u_frame: { value: 0 }, // 添加u_frame\n    };\n\n    // 动态创建纹理的 uniform\n    texturePaths.forEach((_, index) => {\n      uniforms[`u_texture${index}`] = { value: null };\n    });\n\n    return new ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      uniforms,\n    });\n  }, [vertexShader, fragmentShader, texturePaths]);\n\n  const { size, gl } = useThree();\n  const frameCountRef = useRef(0);\n  useEffect(() => {\n    material.uniforms.u_resolution.value.set(size.width, size.height);\n\n    const textureLoader = new TextureLoader();\n    texturePaths.forEach((path, index) => {\n      textureLoader.load(path, texture => {\n        texture.wrapS = ClampToEdgeWrapping;\n        texture.wrapT = ClampToEdgeWrapping;\n        material.uniforms[`u_texture${index}`].value = texture;\n      });\n    });\n\n    return () => {\n      material.dispose();\n      geometry.dispose();\n    };\n  }, [size, material, texturePaths, geometry]);\n\n  useFrame(({ clock }) => {\n    material.uniforms.u_time.value = clock.getElapsedTime();\n    material.uniforms.u_mouse.value.set(mouse.x, mouse.y);\n    material.uniforms.u_frame.value = frameCountRef.current;\n    frameCountRef.current += 1;\n  });\n\n  return <mesh geometry={geometry} material={material} />;\n};\n\n// App 组件\ntype NumericString = `${number}`;\n\nconst App: React.FC<{\n  vertexShaderPath?: string;\n  fragmentShaderPath?: string;\n  width?: NumericString;\n  height?: NumericString;\n  imgPaths?: string;\n}> = ({\n  vertexShaderPath = \"/assets/glsl/all.vert\",\n  fragmentShaderPath = \"/assets/glsl/draft/1.frag\",\n  width = \"45\",\n  height = \"45\",\n  imgPaths = \"\",\n}) => {\n  const [shaders, setShaders] = useState({\n    vertexShader: \"\",\n    fragmentShader: \"\",\n  });\n  const [mouse, setMouse] = useState({ x: 0, y: 0 });\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  const canvasRef = useRef<HTMLDivElement>(null);\n  const texturePaths = useMemo(\n    () => imgPaths.split(\",\").map(path => path.trim()),\n    [imgPaths]\n  );\n\n  // 加载 Shader 文件\n  const loadShaders = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const [vertexRes, fragmentRes] = await Promise.all([\n        fetch(vertexShaderPath),\n        fetch(fragmentShaderPath),\n      ]);\n\n      if (!vertexRes.ok || !fragmentRes.ok)\n        throw new Error(\"Failed to load shaders.\");\n\n      const [vertexShader, fragmentShader] = await Promise.all([\n        vertexRes.text(),\n        fragmentRes.text(),\n      ]);\n\n      setShaders({ vertexShader, fragmentShader });\n    } catch (error) {\n      console.error(\"Error loading shaders:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [vertexShaderPath, fragmentShaderPath]);\n\n  useEffect(() => {\n    loadShaders();\n  }, [loadShaders]);\n\n  // 鼠标移动事件\n  const handleMouseMove = useCallback(\n    (event: MouseEvent | TouchEvent) => {\n      if (!canvasRef.current) return;\n      const rect = canvasRef.current.getBoundingClientRect();\n      const clientX =\n        \"clientX\" in event ? event.clientX : event.touches[0]?.clientX;\n      const clientY =\n        \"clientY\" in event ? event.clientY : event.touches[0]?.clientY;\n\n      setMouse({\n        x: (clientX - rect.left) / rect.width,\n        y: 1 - (clientY - rect.top) / rect.height,\n      });\n    },\n    [canvasRef]\n  );\n\n  useEffect(() => {\n    const ref = canvasRef.current;\n    if (ref) {\n      ref.addEventListener(\"mousemove\", handleMouseMove);\n      ref.addEventListener(\"touchmove\", handleMouseMove);\n    }\n    return () => {\n      if (ref) {\n        ref.removeEventListener(\"mousemove\", handleMouseMove);\n        ref.removeEventListener(\"touchmove\", handleMouseMove);\n      }\n    };\n  }, [handleMouseMove]);\n\n  // 可见性观察\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setIsVisible(entry.isIntersecting),\n      { threshold: 0.1 }\n    );\n\n    if (canvasRef.current) observer.observe(canvasRef.current);\n    return () => observer.disconnect();\n  }, []);\n\n  // 处理全屏切换\n  const handleFullscreenToggle = useCallback(async () => {\n    if (!canvasRef.current) return;\n\n    if (!document.fullscreenElement) {\n      try {\n        await canvasRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error(\"全屏切换失败:\", err);\n      }\n    } else {\n      await document.exitFullscreen();\n      setIsFullscreen(false);\n    }\n  }, []);\n\n  // 监听全屏变化\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n    };\n  }, []);\n\n  return (\n    <div\n      ref={canvasRef}\n      onClick={handleFullscreenToggle}\n      style={{\n        width: isFullscreen ? \"80vw\" : `${Math.min(80, Number(width))}vw`,\n        height: isFullscreen ? \"80vh\" : `${height}vw`,\n        margin: \"2rem auto\",\n        padding: isFullscreen ? \"10vh calc(50vw - 40vh)\" : \"0\",\n        boxShadow: \"rgba(200, 211, 211, 0.2) 0px 7px 29px 0px\",\n        cursor: \"pointer\",\n      }}\n    >\n      {isLoading || !isVisible ? (\n        <div className=\"flex justify-center items-center h-full\">\n          Loading...\n        </div>\n      ) : (\n        <Canvas\n          dpr={[1, 2]}\n          camera={{ position: [0, 0, 1], fov: 45 }}\n          gl={{\n            antialias: true,\n            powerPreference: \"high-performance\",\n            alpha: false,\n          }}\n          className=\"w-full h-full\"\n        >\n          <CustomShaderCube\n            mouse={mouse}\n            vertexShader={shaders.vertexShader}\n            fragmentShader={shaders.fragmentShader}\n            texturePaths={texturePaths}\n          />\n        </Canvas>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"names":["CustomShaderCube","mouse","vertexShader","fragmentShader","texturePaths","geometry","useMemo","THREE.PlaneGeometry","material","uniforms","THREE.Vector2","_","index","ShaderMaterial","size","gl","useThree","frameCountRef","useRef","useEffect","textureLoader","TextureLoader","path","texture","ClampToEdgeWrapping","useFrame","clock","jsx","App","vertexShaderPath","fragmentShaderPath","width","height","imgPaths","shaders","setShaders","useState","setMouse","isVisible","setIsVisible","isLoading","setIsLoading","isFullscreen","setIsFullscreen","canvasRef","loadShaders","useCallback","vertexRes","fragmentRes","error","handleMouseMove","event","rect","clientX","clientY","ref","observer","entry","handleFullscreenToggle","err","handleFullscreenChange","Canvas"],"mappings":"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"}