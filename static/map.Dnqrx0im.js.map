{"version":3,"file":"map.Dnqrx0im.js","sources":["../../src/components/vue/echarts/map.vue"],"sourcesContent":["<template>\n    <div class=\"chart-container\">\n        <div ref=\"chart\" class=\"chart\" </div>\n        </div>\n</template>\n\n<script setup>\nimport * as echarts from 'echarts';\nimport { ref, onMounted, nextTick } from 'vue';\nconst chart = ref(null);\nlet myChart = null;\n\nconst initChart = (draftChartJson, china) => {\n    if (myChart) return\n    let data = draftChartJson;\n    let list = [];\n    const fromCity = {\n        \"name\": \"恩施\",\n        \"value\": [109.486991, 30.284255, 3]\n    };\n    data.cities.forEach((toCity, toIndex) => {\n        // 确保不从自己到自己，并且只处理组合（fromIndex < toIndex）\n        list.push(`${fromCity.name}-${toCity.name}`);\n        if (!list.includes(`${toCity.name}-${fromCity.name}`))\n            data.moveLines.push({\n                fromName: fromCity.name,\n                toName: toCity.name,\n                coords: [\n                    fromCity.value.slice(0, 2), // 取经纬度\n                    toCity.value.slice(0, 2)\n                ],\n            });\n    });\n    echarts.registerMap('china', china)\n    myChart = echarts.init(chart.value);\n    const option = {\n        backgroundColor: 'rgb(28,61,115)',\n        legend: {\n            show: true,\n            orient: 'vertical',\n            top: '80%',\n            left: '30%',\n            data: ['地点', '线路'],\n            textStyle: {\n                color: '#fff'\n            }\n        },\n        geo: [\n\n            {\n                map: 'china',\n                zlevel: -1,\n                zoom: 1.2,\n                silent: true,\n                layoutCenter: ['50%', '50%'],\n                layoutSize: '75%',\n                roam: false,\n\n                itemStyle: {\n                    normal: {\n                        borderColor: 'rgba(192,245,249,.8)',\n                        borderWidth: 3,\n                        shadowColor: '#6FFDFF',\n                        shadowOffsetY: 0,\n                        shadowBlur: 10,\n                    },\n                },\n            },\n            {\n                show: true,\n                map: 'china',\n                zoom: 1.2,\n                layoutCenter: ['50%', '50%'],\n                layoutSize: '75%',\n\n                label: {\n                    normal: {\n                        //静态的时候展示样式\n                        show: true, //是否显示地图省份得名称\n                        textStyle: {\n                            color: '#fff',\n                            fontSize: 12,\n                            fontFamily: 'Arial',\n                        },\n                    },\n                    emphasis: {\n                        //动态展示的样式\n                        color: '#fff',\n                    },\n                },\n                roam: false, // 是否开启鼠标滚轮缩放\n                itemStyle: {\n                    normal: {\n                        label: {\n                            show: true,\n                            color: '#fff',\n                        },\n                        color: '#fff',\n                        borderColor: '#32CBE0',\n                        borderWidth: 1.5,\n                        areaColor: {\n                            type: 'linear-gradient',\n                            x: 0,\n                            y: 1000,\n                            x2: 0,\n                            y2: 0,\n                            colorStops: [\n                                {\n                                    offset: 0.5,\n                                    color: '#0D59C1', // 0% 处的颜色\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#53C9C7', // 100% 处的颜色\n                                },\n                            ],\n                            global: true, // 缺省为 false\n                        },\n                    },\n                    emphasis: {\n                        label: {\n                            show: true,\n                            color: '#fff',\n                        },\n                        borderWidth: 3,\n                        borderColor: 'rgba(255, 230, 175,0.8)',\n                        shadowColor: 'rgba(255, 230, 175,0.5)',\n                        shadowBlur: 30,\n                        textStyle: {\n                            color: '#fff',\n                            fontSize: 12,\n                            backgroundColor: 'transparent',\n                        },\n                        areaColor: new echarts.graphic.LinearGradient(\n                            0,\n                            0,\n                            0,\n                            1,\n                            [\n                                {\n                                    offset: 0,\n                                    color: '#1cfbfe',\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#3348e7',\n                                },\n                            ],\n                            false\n                        ),\n                    },\n                },\n            },\n            {\n                type: 'map',\n                map: 'china',\n                zlevel: -2,\n                zoom: 1.2,\n                layoutCenter: ['50%', '51.4%'],\n                layoutSize: '75%',\n                roam: false,\n                silent: true,\n                itemStyle: {\n                    normal: {\n                        borderColor: 'rgba(35, 161, 184,0.5)',\n                        shadowColor: 'rgba(35, 161, 184,0.8)',\n                        shadowOffsetY: 5,\n                        shadowBlur: 15,\n                        areaColor: '#257AB2',\n                    },\n                },\n                regions: [\n                    {\n                        name: '南海诸岛',\n                        itemStyle: {\n                            // 隐藏地图\n                            normal: {\n                                opacity: 0, // 为 0 时不绘制该图形\n                            },\n                        },\n                        label: {\n                            show: false, // 隐藏文字\n                        },\n                    },\n                ],\n            },\n            {\n                type: 'map',\n                map: 'china',\n                zlevel: -3,\n                zoom: 1.2,\n                layoutCenter: ['50%', '52.4%'],\n                layoutSize: '75%',\n                roam: false,\n                silent: true,\n                itemStyle: {\n                    normal: {\n                        borderColor: 'rgba(7, 65, 117,0.5)',\n                        shadowColor: 'rgba(7, 65, 117,0.8)',\n                        shadowOffsetY: 15,\n                        shadowBlur: 8,\n                        areaColor: '#0A2763',\n                    },\n                },\n                regions: [\n                    {\n                        name: '南海诸岛',\n                        itemStyle: {\n                            // 隐藏地图\n                            normal: {\n                                opacity: 0, // 为 0 时不绘制该图形\n                            },\n                        },\n                        label: {\n                            show: false, // 隐藏文字\n                        },\n                    },\n                ],\n            }],\n        series: [{\n            tooltip: {\n                show: false,\n            },\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            rippleEffect: {\n                scale: 10,\n                brushType: 'stroke',\n            },\n            showEffectOn: 'render',\n            itemStyle: {\n                normal: {\n                    shadowColor: '#0ff',\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowOffsetY: 0,\n                    color: function (params) {\n                        let colorList = [\n                            new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                                {\n                                    offset: 0,\n                                    color: '#64fbc5',\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#018ace',\n                                },\n                            ]),\n                            new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                                {\n                                    offset: 0,\n                                    color: '#64fbc5',\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#018ace',\n                                },\n                            ]),\n                            new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                                {\n                                    offset: 0,\n                                    color: '#168e6d',\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#c78d7b',\n                                },\n                            ]),\n                            new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                                {\n                                    offset: 0,\n                                    color: '#61c0f1',\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#6f2eb6',\n                                },\n                            ]),\n                            new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                                {\n                                    offset: 0,\n                                    color: '#168e6d',\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#c78d7b',\n                                },\n                            ]),\n                            new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                                {\n                                    offset: 0,\n                                    color: '#61c0f1',\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#6f2eb6',\n                                },\n                            ]),\n                        ];\n                        return colorList[params.dataIndex];\n                    },\n                },\n            },\n            symbolSize: [10, 5],\n            data: data.cities,\n            zlevel: 1,\n        }, {\n            name: '地点',\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            showEffectOn: 'render',\n            zlevel: 1,\n            rippleEffect: {\n                period: 15,\n                scale: 4,\n                brushType: 'fill'\n            },\n            hoverAnimation: true,\n            symbolSize: 12,\n            data: data.cities\n        }, {\n            name: '线路',\n            type: 'lines',\n            zlevel: 2,\n            effect: {\n                show: true,\n                period: 4, //箭头指向速度，值越小速度越快\n                trailLength: 0.4, //特效尾迹长度[0,1]值越大，尾迹越长重\n                symbol: 'arrow', //箭头图标\n                symbolSize: 7, //图标大小\n            },\n            data: data.moveLines\n        }]\n    };\n    myChart.setOption(option);\n    window.addEventListener('resize', function () {\n        myChart.resize();\n    });\n}\n\nonMounted(async () => {\n    const chinaData = await fetch(\"/assets/json/china.json\", {\n        mode: 'no-cors',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    const draftChartJsonData = await fetch(\"/assets/json/points.json\", {\n        mode: 'no-cors',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    const chinaJson = await chinaData.json();\n    const draftChartJson = await draftChartJsonData.json();\n    nextTick(() => {\n        initChart(draftChartJson, chinaJson);\n    })\n})\n</script>\n\n<style scoped>\n.chart-container {\n    height: 100vh;\n    width: 100vw;\n}\n\n.chart {\n    margin: 0 auto;\n    height: 100%;\n    width: 100%;\n}\n</style>\n"],"names":["chart","ref","myChart","initChart","draftChartJson","china","data","list","fromCity","toCity","toIndex","echarts.registerMap","echarts.init","option","echarts.graphic.LinearGradient","params","onMounted","chinaData","draftChartJsonData","chinaJson","nextTick","_hoisted_1","_openBlock","_createElementBlock","_createElementVNode","_hoisted_2"],"mappings":"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"}