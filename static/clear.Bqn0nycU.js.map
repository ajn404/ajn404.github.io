{"version":3,"file":"clear.Bqn0nycU.js","sources":["../../src/components/react/webgl/mdn/clear.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport default () => {\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const bRef = useRef(255); // 使用 ref 来存储 b 的值\n\n  useEffect(() => {\n    const gl = canvas.current?.getContext(\"webgl\");\n    if (!gl) return;\n    let id = 0; // 用来记录帧数\n\n    const render = () => {\n      // 更新 b 的值,循环变化\n      bRef.current = bRef.current <= 0 ? 255 : bRef.current - 5; // 逐渐减小 b 的值\n      let g = 255 - bRef.current;\n      let r = bRef.current <= 0 ? 255 : bRef.current - 1;\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.clearColor(r / 255, g / 255, bRef.current / 255, 1); // 将 b 的值归一化到 [0, 1]\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      id = requestAnimationFrame(render); // 请求下一帧\n    };\n    render(); // 开始渲染\n    return () => {\n      // 清理工作（如果有需要的话）\n      cancelAnimationFrame(id); // 取消动画帧\n    };\n  }, []); // 只在组件挂载时执行一次\n\n  return (\n    <>\n      <canvas ref={canvas} className=\"bg-black\"></canvas>\n    </>\n  );\n};\n"],"names":["clear","canvas","useRef","bRef","useEffect","gl","id","render","g","r","jsx"],"mappings":"4gBAEA,MAAAA,EAAe,IAAM,CACb,MAAAC,EAASC,SAA0B,IAAI,EACvCC,EAAOD,SAAO,GAAG,EAEvBE,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAKJ,EAAO,SAAS,WAAW,OAAO,EAC7C,GAAI,CAACI,EAAI,OACT,IAAIC,EAAK,EAET,MAAMC,EAAS,IAAM,CAEnBJ,EAAK,QAAUA,EAAK,SAAW,EAAI,IAAMA,EAAK,QAAU,EACpD,IAAAK,EAAI,IAAML,EAAK,QACfM,EAAIN,EAAK,SAAW,EAAI,IAAMA,EAAK,QAAU,EACjDE,EAAG,SAAS,EAAG,EAAGA,EAAG,mBAAoBA,EAAG,mBAAmB,EAC5DA,EAAA,WAAWI,EAAI,IAAKD,EAAI,IAAKL,EAAK,QAAU,IAAK,CAAC,EAClDE,EAAA,MAAMA,EAAG,gBAAgB,EAC5BC,EAAK,sBAAsBC,CAAM,CACnC,EACO,OAAAA,EAAA,EACA,IAAM,CAEX,qBAAqBD,CAAE,CACzB,CACF,EAAG,EAAE,oBAID,SAACI,EAAAA,IAAA,SAAA,CAAO,IAAKT,EAAQ,UAAU,WAAW,CAC5C,CAAA,CAEJ"}