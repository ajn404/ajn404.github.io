{"version":3,"file":"trackline.mvomJEMM.js","sources":["../../src/components/react/cesium/work/trackline.tsx"],"sourcesContent":["import { Cartesian3, Color, Entity, PointGraphics } from \"cesium\";\nimport { useCesium } from \"../hooks/useCesium\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"cesium/Build/Cesium/Widgets/widgets.css\";\nimport { Button } from \"@components/react/shadcn/ui/button\";\n\nexport default () => {\n  const { cesiumContainerRef, viewer } = useCesium();\n  const [currentEntity, setCurrentEntity] = useState<Entity>(); // 存储位置实体\n  const [watchId, setWatchId] = useState<number>(null);\n\n  type CurrentLocation = {\n    latitude?: number;\n    longitude?: number;\n  };\n\n  const [currentLocation, setCurrentLocation] = useState<CurrentLocation>({\n    latitude: 39,\n    longitude: 116,\n  });\n\n  // 初始化时检查地理位置权限\n  useEffect(() => {\n    if (!navigator.geolocation) {\n      alert(\"浏览器不支持地理位置功能\");\n      return;\n    }\n\n    navigator.permissions\n      .query({ name: \"geolocation\" })\n      .then(permissionStatus => {\n        if (permissionStatus.state === \"denied\") {\n          alert(\"请允许地理位置权限以使用此功能\");\n        }\n      });\n  }, []);\n\n  // 更新地图上的位置标记\n  const updatePositionMarker = useCallback(\n    (longitude: number, latitude: number) => {\n      if (!viewer.current) return;\n\n      // 移除旧实体\n      if (currentEntity) {\n        viewer.current.entities.remove(currentEntity);\n      }\n\n      // 创建新实体\n      const newEntity = viewer.current.entities.add({\n        position: Cartesian3.fromDegrees(longitude, latitude),\n        point: new PointGraphics({\n          color: Color.RED,\n          pixelSize: 10,\n          outlineColor: Color.WHITE,\n          outlineWidth: 2,\n        }),\n        model: {\n          uri: \"/assets/models/gltf/Cesium_Man.glb\",\n          scale: 2,\n        },\n      });\n\n      setCurrentEntity(newEntity);\n\n      // 移动视角到当前位置\n      viewer.current.camera.flyTo({\n        destination: Cartesian3.fromDegrees(longitude, latitude, 1000),\n        orientation: {\n          heading: 0,\n          roll: 0,\n        },\n      });\n    },\n    [viewer.current, currentEntity]\n  );\n\n  // 监听位置变化\n  const watchCurrentLocation = useCallback(() => {\n    const id = navigator.geolocation.watchPosition(\n      position => {\n        const { latitude, longitude } = position.coords;\n        setCurrentLocation({ latitude, longitude });\n        updatePositionMarker(longitude, latitude);\n      },\n      error => {\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            alert(\"用户拒绝了地理位置请求\");\n            break;\n          case error.POSITION_UNAVAILABLE:\n            alert(\"无法获取位置信息\");\n            break;\n          case error.TIMEOUT:\n            alert(\"请求超时\");\n            break;\n          default:\n            alert(\"未知错误\");\n        }\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0,\n      }\n    );\n    setWatchId(id);\n  }, [updatePositionMarker]);\n\n  // 清理\n  useEffect(() => {\n    return () => {\n      if (watchId) navigator.geolocation.clearWatch(watchId);\n      if (currentEntity && viewer.current) {\n        viewer.current.entities.remove(currentEntity);\n      }\n    };\n  }, [watchId, currentEntity]);\n\n  return (\n    <>\n      <div\n        ref={cesiumContainerRef}\n        style={{\n          width: \"100%\",\n          height: \"500px\",\n          userSelect: \"none\",\n          position: \"relative\",\n          zIndex: 0,\n        }}\n      />\n      <Button onClick={watchCurrentLocation}>开始实时定位</Button>\n\n      <div className=\"position-info\">\n        当前坐标: {currentLocation.latitude?.toFixed(5)},{\" \"}\n        {currentLocation.longitude?.toFixed(5)}\n      </div>\n    </>\n  );\n};\n"],"names":["trackline","cesiumContainerRef","viewer","useCesium","currentEntity","setCurrentEntity","useState","watchId","setWatchId","currentLocation","setCurrentLocation","useEffect","permissionStatus","updatePositionMarker","useCallback","longitude","latitude","newEntity","Cartesian3","PointGraphics","Color","watchCurrentLocation","id","position","error","jsxs","Fragment","jsx","Button"],"mappings":"wxBAMA,MAAAA,EAAe,IAAM,CACnB,KAAM,CAAE,mBAAAC,EAAoB,OAAAC,CAAO,EAAIC,EAAU,EAC3C,CAACC,EAAeC,CAAgB,EAAIC,WAAiB,EACrD,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAiB,IAAI,EAO7C,CAACG,EAAiBC,CAAkB,EAAIJ,WAA0B,CACtE,SAAU,GACV,UAAW,GAAA,CACZ,EAGDK,EAAAA,UAAU,IAAM,CACV,GAAA,CAAC,UAAU,YAAa,CAC1B,MAAM,cAAc,EACpB,MAAA,CAGQ,UAAA,YACP,MAAM,CAAE,KAAM,cAAe,EAC7B,KAAyBC,GAAA,CACpBA,EAAiB,QAAU,UAC7B,MAAM,iBAAiB,CACzB,CACD,CACL,EAAG,EAAE,EAGL,MAAMC,EAAuBC,EAAA,YAC3B,CAACC,EAAmBC,IAAqB,CACnC,GAAA,CAACd,EAAO,QAAS,OAGjBE,GACKF,EAAA,QAAQ,SAAS,OAAOE,CAAa,EAI9C,MAAMa,EAAYf,EAAO,QAAQ,SAAS,IAAI,CAC5C,SAAUgB,EAAW,YAAYH,EAAWC,CAAQ,EACpD,MAAO,IAAIG,EAAc,CACvB,MAAOC,EAAM,IACb,UAAW,GACX,aAAcA,EAAM,MACpB,aAAc,CAAA,CACf,EACD,MAAO,CACL,IAAK,qCACL,MAAO,CAAA,CACT,CACD,EAEDf,EAAiBY,CAAS,EAGnBf,EAAA,QAAQ,OAAO,MAAM,CAC1B,YAAagB,EAAW,YAAYH,EAAWC,EAAU,GAAI,EAC7D,YAAa,CACX,QAAS,EACT,KAAM,CAAA,CACR,CACD,CACH,EACA,CAACd,EAAO,QAASE,CAAa,CAChC,EAGMiB,EAAuBP,EAAAA,YAAY,IAAM,CACvC,MAAAQ,EAAK,UAAU,YAAY,cACnBC,GAAA,CACV,KAAM,CAAE,SAAAP,EAAU,UAAAD,CAAU,EAAIQ,EAAS,OACtBb,EAAA,CAAE,SAAAM,EAAU,UAAAD,EAAW,EAC1CF,EAAqBE,EAAWC,CAAQ,CAC1C,EACSQ,GAAA,CACP,OAAQA,EAAM,KAAM,CAClB,KAAKA,EAAM,kBACT,MAAM,aAAa,EACnB,MACF,KAAKA,EAAM,qBACT,MAAM,UAAU,EAChB,MACF,KAAKA,EAAM,QACT,MAAM,MAAM,EACZ,MACF,QACE,MAAM,MAAM,CAAA,CAElB,EACA,CACE,mBAAoB,GACpB,QAAS,IACT,WAAY,CAAA,CAEhB,EACAhB,EAAWc,CAAE,CAAA,EACZ,CAACT,CAAoB,CAAC,EAGzBF,OAAAA,EAAAA,UAAU,IACD,IAAM,CACPJ,GAAS,UAAU,YAAY,WAAWA,CAAO,EACjDH,GAAiBF,EAAO,SACnBA,EAAA,QAAQ,SAAS,OAAOE,CAAa,CAEhD,EACC,CAACG,EAASH,CAAa,CAAC,EAIvBqB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,IAAK1B,EACL,MAAO,CACL,MAAO,OACP,OAAQ,QACR,WAAY,OACZ,SAAU,WACV,OAAQ,CAAA,CACV,CACF,EACC0B,EAAA,IAAAC,EAAA,CAAO,QAASP,EAAsB,SAAM,SAAA,EAE7CI,EAAAA,KAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,CAAA,SACtBhB,EAAgB,UAAU,QAAQ,CAAC,EAAE,IAAE,IAC7CA,EAAgB,WAAW,QAAQ,CAAC,CAAA,CACvC,CAAA,CAAA,EACF,CAEJ"}