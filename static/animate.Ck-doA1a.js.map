{"version":3,"file":"animate.Ck-doA1a.js","sources":["../../src/components/react/d3/practice/animate.tsx"],"sourcesContent":["import * as d3 from \"d3\";\nimport { useEffect, useRef } from \"react\";\n\nconst Template = () => {\n  const ref = useRef<SVGSVGElement | null>(null);\n  useEffect(() => {\n    const octahedronSize = 100;\n    const sphereRadius = 50;\n    const width = window.innerWidth;\n    const height = 200;\n    const svg = d3\n      .select(ref.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    function drawShapes(time) {\n      svg.selectAll(\"*\").remove(); // 清空之前的图形\n\n      const d = -Math.sin(time / 1000) * 25 + 50; // 动态调整八面体的位置\n\n      // 绘制八面体\n      svg\n        .append(\"polygon\")\n        .attr(\n          \"points\",\n          [\n            `${width / 2},${height / 2 - octahedronSize}`,\n            `${width / 2 - octahedronSize},${height / 2}`,\n            `${width / 2},${height / 2 + octahedronSize}`,\n            `${width / 2 + octahedronSize},${height / 2}`,\n          ].join(\" \")\n        )\n        .attr(\"fill\", \"rgba(0, 0, 255, 0.5)\") // 半透明的蓝色\n        .attr(\"stroke\", \"blue\")\n        .attr(\"stroke-width\", 2);\n\n      // 绘制球体\n      svg\n        .append(\"circle\")\n        .attr(\"cx\", width / 2 + d)\n        .attr(\"cy\", height / 2)\n        .attr(\"r\", sphereRadius)\n        .attr(\"fill\", \"rgba(255, 255, 0, 0.5)\") // 半透明的黄色\n        .attr(\"stroke\", \"yellow\")\n        .attr(\"stroke-width\", 2);\n\n      // 计算融合效果\n      const overlapX = Math.abs(d) < octahedronSize + sphereRadius ? d : 0;\n      const overlapY =\n        Math.abs(d) < octahedronSize + sphereRadius ? height / 2 : 0;\n\n      // 绘制融合区域\n      svg\n        .append(\"circle\")\n        .attr(\"cx\", width / 2 + overlapX)\n        .attr(\"cy\", overlapY)\n        .attr(\"r\", Math.min(sphereRadius, octahedronSize) * 0.5) // 融合区域的半径\n        .attr(\"fill\", \"rgba(128, 128, 255, 0.5)\"); // 混合颜色\n\n      requestAnimationFrame(drawShapes);\n    }\n\n    drawShapes(0); // 启动动画\n    return () => {\n      svg.remove();\n    };\n  });\n\n  return <svg ref={ref}></svg>;\n};\n\nexport default Template;\n"],"names":["Template","ref","useRef","useEffect","width","height","svg","d3.select","drawShapes","time","d","overlapX","overlapY","jsx"],"mappings":"wjBAGA,MAAMA,EAAW,IAAM,CACf,MAAAC,EAAMC,SAA6B,IAAI,EAC7CC,OAAAA,EAAAA,UAAU,IAAM,CAGd,MAAMC,EAAQ,OAAO,WACfC,EAAS,IACTC,EAAMC,EACFN,EAAI,OAAO,EAClB,KAAK,QAASG,CAAK,EACnB,KAAK,SAAUC,CAAM,EACxB,SAASG,EAAWC,EAAM,CACpBH,EAAA,UAAU,GAAG,EAAE,OAAO,EAE1B,MAAMI,EAAI,CAAC,KAAK,IAAID,EAAO,GAAI,EAAI,GAAK,GAIrCH,EAAA,OAAO,SAAS,EAChB,KACC,SACA,CACE,GAAGF,EAAQ,CAAC,IAAIC,EAAS,EAAI,GAAc,GAC3C,GAAGD,EAAQ,EAAI,GAAc,IAAIC,EAAS,CAAC,GAC3C,GAAGD,EAAQ,CAAC,IAAIC,EAAS,EAAI,GAAc,GAC3C,GAAGD,EAAQ,EAAI,GAAc,IAAIC,EAAS,CAAC,EAC7C,EAAE,KAAK,GAAG,CACZ,EACC,KAAK,OAAQ,sBAAsB,EACnC,KAAK,SAAU,MAAM,EACrB,KAAK,eAAgB,CAAC,EAGzBC,EACG,OAAO,QAAQ,EACf,KAAK,KAAMF,EAAQ,EAAIM,CAAC,EACxB,KAAK,KAAML,EAAS,CAAC,EACrB,KAAK,IAAK,EAAY,EACtB,KAAK,OAAQ,wBAAwB,EACrC,KAAK,SAAU,QAAQ,EACvB,KAAK,eAAgB,CAAC,EAGzB,MAAMM,EAAW,KAAK,IAAID,CAAC,EAAI,IAAgCA,EAAI,EAC7DE,EACJ,KAAK,IAAIF,CAAC,EAAI,IAAgCL,EAAS,EAAI,EAI1DC,EAAA,OAAO,QAAQ,EACf,KAAK,KAAMF,EAAQ,EAAIO,CAAQ,EAC/B,KAAK,KAAMC,CAAQ,EACnB,KAAK,IAAK,KAAK,IAAI,GAAc,GAAc,EAAI,EAAG,EACtD,KAAK,OAAQ,0BAA0B,EAE1C,sBAAsBJ,CAAU,CAAA,CAGlC,OAAAA,EAAW,CAAC,EACL,IAAM,CACXF,EAAI,OAAO,CACb,CAAA,CACD,EAEMO,MAAC,OAAI,IAAAZ,EAAU,CACxB"}