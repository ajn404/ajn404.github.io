{"version":3,"file":"placeholders-and-vanish-input.BE3ZKgsh.js","sources":["../../src/components/react/aceternity/ui/placeholders-and-vanish-input.tsx","../../src/components/react/aceternity/demo/placeholders-and-vanish-input.tsx"],"sourcesContent":["import { AnimatePresence, motion } from \"framer-motion\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { cn } from \"@utils/utils\";\n\nexport function PlaceholdersAndVanishInput({\n  placeholders,\n  onChange,\n  onSubmit,\n}: {\n  placeholders: string[];\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n}) {\n  const [currentPlaceholder, setCurrentPlaceholder] = useState(0);\n\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const startAnimation = () => {\n    intervalRef.current = setInterval(() => {\n      setCurrentPlaceholder(prev => (prev + 1) % placeholders.length);\n    }, 3000);\n  };\n  const handleVisibilityChange = () => {\n    if (document.visibilityState !== \"visible\" && intervalRef.current) {\n      clearInterval(intervalRef.current); // Clear the interval when the tab is not visible\n      intervalRef.current = null;\n    } else if (document.visibilityState === \"visible\") {\n      startAnimation(); // Restart the interval when the tab becomes visible\n    }\n  };\n\n  useEffect(() => {\n    startAnimation();\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, [placeholders]);\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const newDataRef = useRef<any[]>([]);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [value, setValue] = useState(\"\");\n  const [animating, setAnimating] = useState(false);\n\n  const draw = useCallback(() => {\n    if (!inputRef.current) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    canvas.width = 800;\n    canvas.height = 800;\n    ctx.clearRect(0, 0, 800, 800);\n    const computedStyles = getComputedStyle(inputRef.current);\n\n    const fontSize = parseFloat(computedStyles.getPropertyValue(\"font-size\"));\n    ctx.font = `${fontSize * 2}px ${computedStyles.fontFamily}`;\n    ctx.fillStyle = \"#FFF\";\n    ctx.fillText(value, 16, 40);\n\n    const imageData = ctx.getImageData(0, 0, 800, 800);\n    const pixelData = imageData.data;\n    const newData: any[] = [];\n\n    for (let t = 0; t < 800; t++) {\n      let i = 4 * t * 800;\n      for (let n = 0; n < 800; n++) {\n        let e = i + 4 * n;\n        if (\n          pixelData[e] !== 0 &&\n          pixelData[e + 1] !== 0 &&\n          pixelData[e + 2] !== 0\n        ) {\n          newData.push({\n            x: n,\n            y: t,\n            color: [\n              pixelData[e],\n              pixelData[e + 1],\n              pixelData[e + 2],\n              pixelData[e + 3],\n            ],\n          });\n        }\n      }\n    }\n\n    newDataRef.current = newData.map(({ x, y, color }) => ({\n      x,\n      y,\n      r: 1,\n      color: `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`,\n    }));\n  }, [value]);\n\n  useEffect(() => {\n    draw();\n  }, [value, draw]);\n\n  const animate = (start: number) => {\n    const animateFrame = (pos: number = 0) => {\n      requestAnimationFrame(() => {\n        const newArr = [];\n        for (let i = 0; i < newDataRef.current.length; i++) {\n          const current = newDataRef.current[i];\n          if (current.x < pos) {\n            newArr.push(current);\n          } else {\n            if (current.r <= 0) {\n              current.r = 0;\n              continue;\n            }\n            current.x += Math.random() > 0.5 ? 1 : -1;\n            current.y += Math.random() > 0.5 ? 1 : -1;\n            current.r -= 0.05 * Math.random();\n            newArr.push(current);\n          }\n        }\n        newDataRef.current = newArr;\n        const ctx = canvasRef.current?.getContext(\"2d\");\n        if (ctx) {\n          ctx.clearRect(pos, 0, 800, 800);\n          newDataRef.current.forEach(t => {\n            const { x: n, y: i, r: s, color: color } = t;\n            if (n > pos) {\n              ctx.beginPath();\n              ctx.rect(n, i, s, s);\n              ctx.fillStyle = color;\n              ctx.strokeStyle = color;\n              ctx.stroke();\n            }\n          });\n        }\n        if (newDataRef.current.length > 0) {\n          animateFrame(pos - 8);\n        } else {\n          setValue(\"\");\n          setAnimating(false);\n        }\n      });\n    };\n    animateFrame(start);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\" && !animating) {\n      vanishAndSubmit();\n    }\n  };\n\n  const vanishAndSubmit = () => {\n    setAnimating(true);\n    draw();\n\n    const value = inputRef.current?.value || \"\";\n    if (value && inputRef.current) {\n      const maxX = newDataRef.current.reduce(\n        (prev, current) => (current.x > prev ? current.x : prev),\n        0\n      );\n      animate(maxX);\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    vanishAndSubmit();\n    onSubmit && onSubmit(e);\n  };\n  return (\n    <form\n      className={cn(\n        \"w-full relative max-w-xl mx-auto bg-white dark:bg-zinc-800 h-12 rounded-full overflow-hidden shadow-[0px_2px_3px_-1px_rgba(0,0,0,0.1),_0px_1px_0px_0px_rgba(25,28,33,0.02),_0px_0px_0px_1px_rgba(25,28,33,0.08)] transition duration-200\",\n        value && \"bg-gray-50\"\n      )}\n      onSubmit={handleSubmit}\n    >\n      <canvas\n        className={cn(\n          \"absolute pointer-events-none  text-base transform scale-50 top-[20%] left-2 sm:left-8 origin-top-left filter invert dark:invert-0 pr-20\",\n          !animating ? \"opacity-0\" : \"opacity-100\"\n        )}\n        ref={canvasRef}\n      />\n      <input\n        onChange={e => {\n          if (!animating) {\n            setValue(e.target.value);\n            onChange && onChange(e);\n          }\n        }}\n        onKeyDown={handleKeyDown}\n        ref={inputRef}\n        value={value}\n        type=\"text\"\n        className={cn(\n          \"w-full relative text-sm sm:text-base z-50 border-none dark:text-white bg-transparent text-black h-full rounded-full focus:outline-none focus:ring-0 pl-4 sm:pl-10 pr-20\",\n          animating && \"text-transparent dark:text-transparent\"\n        )}\n      />\n\n      <button\n        disabled={!value}\n        type=\"submit\"\n        className=\"absolute right-2 top-1/2 z-50 -translate-y-1/2 h-8 w-8 rounded-full disabled:bg-gray-100 bg-black dark:bg-zinc-900 dark:disabled:bg-zinc-800 transition duration-200 flex items-center justify-center\"\n      >\n        <motion.svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"text-gray-300 h-4 w-4\"\n        >\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <motion.path\n            d=\"M5 12l14 0\"\n            initial={{\n              strokeDasharray: \"50%\",\n              strokeDashoffset: \"50%\",\n            }}\n            animate={{\n              strokeDashoffset: value ? 0 : \"50%\",\n            }}\n            transition={{\n              duration: 0.3,\n              ease: \"linear\",\n            }}\n          />\n          <path d=\"M13 18l6 -6\" />\n          <path d=\"M13 6l6 6\" />\n        </motion.svg>\n      </button>\n\n      <div className=\"absolute inset-0 flex items-center rounded-full pointer-events-none\">\n        <AnimatePresence mode=\"wait\">\n          {!value && (\n            <motion.p\n              initial={{\n                y: 5,\n                opacity: 0,\n              }}\n              key={`current-placeholder-${currentPlaceholder}`}\n              animate={{\n                y: 0,\n                opacity: 1,\n              }}\n              exit={{\n                y: -15,\n                opacity: 0,\n              }}\n              transition={{\n                duration: 0.3,\n                ease: \"linear\",\n              }}\n              className=\"dark:text-zinc-500 text-sm sm:text-base font-normal text-neutral-500 pl-4 sm:pl-12 text-left w-[calc(100%-2rem)] truncate\"\n            >\n              {placeholders[currentPlaceholder]}\n            </motion.p>\n          )}\n        </AnimatePresence>\n      </div>\n    </form>\n  );\n}\n","import { PlaceholdersAndVanishInput } from \"../ui/placeholders-and-vanish-input\";\n\nexport default () => {\n  const placeholders = [\n    \"今天吃什么\",\n    \"明天股票会涨吗\",\n    \"前端写腻了吗\",\n    \"glsl怎么这么难啊\",\n    \"感觉自己该健身了\",\n  ];\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(e.target.value);\n  };\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n  };\n  return (\n    <div className=\"m-auto flex flex-col justify-center  items-center px-4\">\n      <PlaceholdersAndVanishInput\n        placeholders={placeholders}\n        onChange={handleChange}\n        onSubmit={onSubmit}\n      />\n    </div>\n  );\n};\n"],"names":["PlaceholdersAndVanishInput","placeholders","onChange","onSubmit","currentPlaceholder","setCurrentPlaceholder","useState","intervalRef","useRef","startAnimation","prev","handleVisibilityChange","useEffect","canvasRef","newDataRef","inputRef","value","setValue","animating","setAnimating","draw","useCallback","canvas","ctx","computedStyles","fontSize","pixelData","newData","t","i","n","e","x","y","color","animate","start","animateFrame","pos","newArr","current","s","handleKeyDown","vanishAndSubmit","maxX","handleSubmit","jsxs","cn","jsx","motion","AnimatePresence","placeholdersAndVanishInput","handleChange"],"mappings":"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"}