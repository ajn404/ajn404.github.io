{"version":3,"file":"index.B81Z-UaN.js","sources":["../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/count.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/each.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/find.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/sum.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/sort.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/path.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/descendants.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/leaves.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/links.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/iterator.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/index.js"],"sourcesContent":["function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n"],"names":["count","node","sum","children","node_count","node_each","callback","that","index","node_eachBefore","nodes","i","node_eachAfter","next","n","node_find","node_sum","value","node_sort","compare","node_path","end","start","ancestor","leastCommonAncestor","k","a","b","aNodes","bNodes","c","node_ancestors","node_descendants","node_leaves","leaves","node_links","root","links","node_iterator","current","hierarchy","data","mapChildren","objectChildren","Node","child","childs","computeHeight","node_copy","copyData","d","height"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}