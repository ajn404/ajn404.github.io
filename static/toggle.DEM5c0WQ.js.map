{"version":3,"file":"toggle.DEM5c0WQ.js","sources":["../../src/components/vue/challenge/toggle.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, type Ref } from \"vue\";\n\n/**\n * Implement a composable function that toggles the state\n * Make the function work correctly\n */\nfunction useToggle(initValue: boolean): [Ref<Boolean>, () => void] {\n  const state = ref(initValue);\n  return [\n    state,\n    function () {\n      state.value = !state.value;\n    },\n  ];\n}\n\nconst [state, toggle] = useToggle(false);\n</script>\n\n<template>\n  <p>State: {{ state ? \"ON\" : \"OFF\" }}</p>\n  <p @click=\"toggle\" class=\"tw-button select-none\">Toggle state</p>\n</template>\n"],"names":["useToggle","initValue","state","ref","toggle","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_toDisplayString","$setup","_cache","args"],"mappings":"mmBAOA,SAASA,EAAUC,EAAgD,CAC3DC,MAAAA,EAAQC,EAAIF,CAAS,EACpB,MAAA,CACLC,EACA,UAAY,CACVA,EAAM,MAAQ,CAACA,EAAM,KAAA,CAEzB,CAAA,CAGF,KAAM,CAACA,EAAOE,CAAM,EAAIJ,EAAU,EAAK,2IAjBvC,OAAAK,EAAA,EAAAC,EAAAC,EAAA,KAAA,CAqBEC,EAAwC,IAAA,KAArC,UAAOC,EAAGC,EAAK,MAAA,KAAA,KAAA,EAAA,CAAA,EAClBF,EAAiE,IAAA,CAA7D,QAAKG,EAAE,CAAA,IAAAA,EAAA,CAAA,EAAA,IAAAC,IAAAF,EAAA,QAAAA,EAAA,OAAA,GAAAE,CAAA,GAAQ,MAAM,uBAAA,EAAwB,cAAY,CAAA,EAAA,EAAA"}